name: Test and publish

on:
  push:
     branches: [ master ]
  pull_request:

jobs:
  test:
    strategy:
      matrix:
        os:
        - ubuntu-latest
        - macos-latest
      fail-fast: false
    runs-on: ${{ matrix.os }}
    env:
      SSH_KEY_FOR_NIXBUILD: ${{ secrets.SSH_KEY_FOR_NIXBUILD }}
    steps:
    - uses: actions/checkout@v2
    - if: matrix.os == 'macos-latest'
      uses: cachix/install-nix-action@v16
    - if: matrix.os == 'ubuntu-latest'
      uses: nixbuild/nix-quick-install-action@v13
      with:
        nix_conf: experimental-features = nix-command
    - if: matrix.os == 'ubuntu-latest' && env.SSH_KEY_FOR_NIXBUILD != ''
      uses: nixbuild/nixbuild-action@v10
      with:
        nixbuild_ssh_key: ${{ secrets.SSH_KEY_FOR_NIXBUILD }}
    - run: nix-env -iA nix-build-uncached -f nix/
    - uses: cachix/cachix-action@v10
      with:
        name: ic-hs-test
        authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'
    # until https://github.com/cachix/cachix-action/issues/86 is fixed:
    - run: cachix watch-store ic-hs-test &

    # run a few targets explicitly, to get easier signal in the CI view
    - run: nix-build-uncached -A universal-canister
    - run: nix-build-uncached -A ic-hs
    - run: nix-build-uncached -A ic-hs-coverage
    - run: nix-build-uncached -A coverage
    - run: nix-build-uncached -A check-generated
    - run: nix-build-uncached -A ic-ref-dist
    - run: nix-build-uncached -A ic-ref-test
    - run: nix-build-uncached -A ic-hs-shell
    - run: nix-build-uncached -A check-cabal-freeze
    # now the rest
    - run: nix-build-uncached
    - name: Prepare artifact
      id: buildit
      run: |
        out_path="$(nix-build -A ic-ref-dist)"
        echo "::set-output name=out::$out_path"
        tar -C "$out_path/bin" -czvf ic-ref-$SYSTEM.tar.gz .
      env:
        SYSTEM: ${{ matrix.nix-system }}
    - name: Upload artifact
      uses: actions/upload-artifact@v3
      with:
        name: assetstorage
        path: ${{ github.workspace }}/ic-ref-$SYSTEM.tar.gz
      env:
        SYSTEM: ${{ matrix.nix-system }}


  release:
    if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/master' }}
    needs: test
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            nix-system: x86_64-linux
          - os: macos-latest
            nix-system: x86_64-darwin
    runs-on: ${{ matrix.os }}
    env:
      SSH_KEY_FOR_NIXBUILD: ${{ secrets.SSH_KEY_FOR_NIXBUILD }}
    steps:
    - uses: actions/checkout@v2
    - if: matrix.os == 'macos-latest'
      uses: cachix/install-nix-action@v16
    - if: matrix.os == 'ubuntu-latest'
      uses: nixbuild/nix-quick-install-action@v13
      with:
        nix_conf: experimental-features = nix-command
    - if: matrix.os == 'ubuntu-latest' && env.SSH_KEY_FOR_NIXBUILD != ''
      uses: nixbuild/nixbuild-action@v10
      with:
        nixbuild_ssh_key: ${{ secrets.SSH_KEY_FOR_NIXBUILD }}
    - uses: cachix/cachix-action@v10
      with:
        name: ic-hs-test
        authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'

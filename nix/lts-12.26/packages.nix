# Generated by stackage2nix 0.7.2 from "/nix/store/6nhazjk3wgalhgrzicf1my2y4sk5311z-source/lts-12.26.yaml"
{ pkgs, stdenv, callPackage }:

self: {
  "ALUT" = callPackage
    ({ mkDerivation, base, freealut, OpenAL, StateVar, transformers }:
     mkDerivation {
       pname = "ALUT";
       version = "2.4.0.2";
       sha256 = "11sb715z6rkmwf9n7l9q32g81qiv2ld8a9z42dfxiwgmh2ilsdmq";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [ base OpenAL StateVar transformers ];
       librarySystemDepends = [ freealut ];
       homepage = "https://github.com/haskell-openal/ALUT";
       description = "A binding for the OpenAL Utility Toolkit";
       license = stdenv.lib.licenses.bsd3;
     }) {inherit (pkgs) freealut;};
  "ANum" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "ANum";
       version = "0.2.0.2";
       sha256 = "06mvkp9b0hxlp1w2yp7bb6340l88mzs15azx7nma401icqdhvbpn";
       libraryHaskellDepends = [ base ];
       testHaskellDepends = [ base ];
       homepage = "https://github.com/DanBurton/ANum#readme";
       description = "Num instance for Applicatives provided via the ANum newtype";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "Agda" = callPackage
    ({ mkDerivation, alex, array, async, base, binary, blaze-html
     , boxes, bytestring, Cabal, containers, data-hash, deepseq
     , directory, EdisonCore, edit-distance, emacs, equivalence
     , filemanip, filepath, geniplate-mirror, gitrev, happy, hashable
     , hashtables, haskeline, ieee754, mtl, murmur-hash, pretty, process
     , regex-tdfa, stm, strict, template-haskell, text, time
     , transformers, unordered-containers, uri-encode, zlib
     }:
     mkDerivation {
       pname = "Agda";
       version = "2.5.4.2";
       sha256 = "07wvawpfjhx3gw2w53v27ncv1bl0kkx08wkm6wzxldbslkcasign";
       isLibrary = true;
       isExecutable = true;
       enableSeparateDataOutput = true;
       setupHaskellDepends = [ base Cabal filemanip filepath process ];
       libraryHaskellDepends = [
         array async base binary blaze-html boxes bytestring containers
         data-hash deepseq directory EdisonCore edit-distance equivalence
         filepath geniplate-mirror gitrev hashable hashtables haskeline
         ieee754 mtl murmur-hash pretty process regex-tdfa stm strict
         template-haskell text time transformers unordered-containers
         uri-encode zlib
       ];
       libraryToolDepends = [ alex happy ];
       executableHaskellDepends = [ base directory filepath process ];
       executableToolDepends = [ emacs ];
       postInstall = ''
         files=("$data/share/ghc-"*"/"*"-ghc-"*"/Agda-"*"/lib/prim/Agda/"{Primitive.agda,Builtin"/"*.agda})
         for f in "''${files[@]}" ; do
           $out/bin/agda $f
         done
         for f in "''${files[@]}" ; do
           $out/bin/agda -c --no-main $f
         done
         $out/bin/agda-mode compile
       '';
       homepage = "http://wiki.portal.chalmers.se/agda/";
       description = "A dependently typed functional programming language and proof assistant";
       license = "unknown";
       hydraPlatforms = stdenv.lib.platforms.none;
     }) {inherit (pkgs) emacs;};
  "Allure" = callPackage
    ({ mkDerivation, async, base, containers, enummapset, filepath
     , LambdaHack, optparse-applicative, random, template-haskell, text
     , transformers, zlib
     }:
     mkDerivation {
       pname = "Allure";
       version = "0.8.3.0";
       sha256 = "1yzqiidc8qbjlpgs2d3jkikzggyd7ajq7i7l1dgwqv6sh4r030vb";
       isLibrary = false;
       isExecutable = true;
       enableSeparateDataOutput = true;
       executableHaskellDepends = [
         async base containers enummapset filepath LambdaHack
         optparse-applicative random template-haskell text transformers zlib
       ];
       testHaskellDepends = [
         base containers enummapset filepath LambdaHack optparse-applicative
         random template-haskell text transformers zlib
       ];
       doHaddock = false;
       homepage = "http://allureofthestars.com";
       description = "Near-future Sci-Fi roguelike and tactical squad game";
       license = "unknown";
       hydraPlatforms = stdenv.lib.platforms.none;
     }) {};
  "BiobaseNewick" = callPackage
    ({ mkDerivation, aeson, attoparsec, base, binary, cereal
     , cereal-text, cmdargs, containers, fgl, ForestStructures
     , QuickCheck, test-framework, test-framework-quickcheck2
     , test-framework-th, text, text-binary, vector
     }:
     mkDerivation {
       pname = "BiobaseNewick";
       version = "0.0.0.2";
       sha256 = "1g8kdmraxv0qf3nzm7hi36nhw0j8kyjmjlwslp7a5n2zly2gcck4";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         aeson attoparsec base binary cereal cereal-text containers fgl
         ForestStructures QuickCheck text text-binary vector
       ];
       executableHaskellDepends = [
         base cmdargs ForestStructures text vector
       ];
       testHaskellDepends = [
         aeson base binary cereal QuickCheck test-framework
         test-framework-quickcheck2 test-framework-th
       ];
       homepage = "https://github.com/choener/BiobaseNewick";
       description = "Newick file format parser";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "Boolean" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "Boolean";
       version = "0.2.4";
       sha256 = "1y7f8lqx86m06ccq1bjym2hywc7r17s2bvx16jswb2ibn09n08b7";
       libraryHaskellDepends = [ base ];
       description = "Generalized booleans and numbers";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "BoundedChan" = callPackage
    ({ mkDerivation, array, base }:
     mkDerivation {
       pname = "BoundedChan";
       version = "1.0.3.0";
       sha256 = "0vf4mlw08n056g5256cf46m5xsijng5gvjx7ccm4r132gznyl72k";
       libraryHaskellDepends = [ array base ];
       description = "Implementation of bounded channels";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "Cabal" = callPackage
    ({ mkDerivation, array, base, binary, bytestring, containers
     , deepseq, directory, filepath, mtl, parsec, pretty, process, text
     , time, transformers, unix
     }:
     mkDerivation {
       pname = "Cabal";
       version = "2.2.0.1";
       sha256 = "0yqa6fm9jvr0ka6b1mf17bf43092dc1bai6mqyiwwwyz0h9k1d82";
       setupHaskellDepends = [ mtl parsec ];
       libraryHaskellDepends = [
         array base binary bytestring containers deepseq directory filepath
         mtl parsec pretty process text time transformers unix
       ];
       doCheck = false;
       homepage = "http://www.haskell.org/cabal/";
       description = "A framework for packaging Haskell software";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "ChannelT" = callPackage
    ({ mkDerivation, base, free, mmorph, mtl, transformers-base }:
     mkDerivation {
       pname = "ChannelT";
       version = "0.0.0.7";
       sha256 = "183pghm74vk1vdcn0mdn6g5q284sncpl1cc49lpczz1wbr15s89y";
       libraryHaskellDepends = [ base free mmorph mtl transformers-base ];
       homepage = "https://github.com/pthariensflame/ChannelT";
       description = "Generalized stream processors";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "ChasingBottoms" = callPackage
    ({ mkDerivation, array, base, containers, mtl, QuickCheck, random
     , syb
     }:
     mkDerivation {
       pname = "ChasingBottoms";
       version = "1.3.1.5";
       sha256 = "0hfk2cb9da5fvr96x8lzij93yl3rvax2id9a8gihd5j5aq4kxx30";
       libraryHaskellDepends = [
         base containers mtl QuickCheck random syb
       ];
       testHaskellDepends = [
         array base containers mtl QuickCheck random syb
       ];
       description = "For testing partial and infinite values";
       license = stdenv.lib.licenses.mit;
     }) {};
  "Clipboard" = callPackage
    ({ mkDerivation, base, directory, unix, utf8-string, X11 }:
     mkDerivation {
       pname = "Clipboard";
       version = "2.3.2.0";
       sha256 = "1dr5ifmy5azib140bri9rzlq69jic430v9cv372jb42r78cci0iz";
       libraryHaskellDepends = [ base directory unix utf8-string X11 ];
       homepage = "http://haskell.org/haskellwiki/Clipboard";
       description = "System clipboard interface";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "ClustalParser" = callPackage
    ({ mkDerivation, base, cmdargs, either-unwrap, hspec
     , hspec-discover, parsec, text, vector
     }:
     mkDerivation {
       pname = "ClustalParser";
       version = "1.2.3";
       sha256 = "0wjs6bsbyykrm0hjdybnap86zsnhjjifampm08dqg7fqp7f7pmpy";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [ base parsec text vector ];
       executableHaskellDepends = [ base cmdargs either-unwrap ];
       testHaskellDepends = [ base hspec hspec-discover parsec text ];
       testToolDepends = [ hspec-discover ];
       description = "Libary for parsing Clustal tools output";
       license = stdenv.lib.licenses.gpl3;
     }) {};
  "DAV" = callPackage
    ({ mkDerivation, base, bytestring, case-insensitive, containers
     , data-default, exceptions, haskeline, http-client, http-client-tls
     , http-types, lens, mtl, network, network-uri, optparse-applicative
     , transformers, transformers-base, transformers-compat, utf8-string
     , xml-conduit, xml-hamlet
     }:
     mkDerivation {
       pname = "DAV";
       version = "1.3.3";
       sha256 = "149rdrbjx59a2rbx2r6fzhmyl3f35a2gbh4sarbpffv0pmirrx14";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         base bytestring case-insensitive containers data-default exceptions
         http-client http-client-tls http-types lens mtl transformers
         transformers-base transformers-compat utf8-string xml-conduit
         xml-hamlet
       ];
       executableHaskellDepends = [
         base bytestring case-insensitive containers data-default exceptions
         haskeline http-client http-client-tls http-types lens mtl network
         network-uri optparse-applicative transformers transformers-base
         transformers-compat utf8-string xml-conduit xml-hamlet
       ];
       homepage = "http://floss.scru.org/hDAV";
       description = "RFC 4918 WebDAV support";
       license = stdenv.lib.licenses.gpl3;
     }) {};
  "DRBG" = callPackage
    ({ mkDerivation, base, binary, bytestring, cereal, cipher-aes128
     , crypto-api, crypto-api-tests, cryptohash-cryptoapi, entropy
     , HUnit, mtl, parallel, prettyclass, QuickCheck, tagged
     , test-framework, test-framework-hunit
     }:
     mkDerivation {
       pname = "DRBG";
       version = "0.5.5";
       sha256 = "1z9vqc1nw0mf2sqgddcipmlkz6mckq9wnrzqqdy3rj3c90135pr1";
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [
         base bytestring cereal cipher-aes128 crypto-api
         cryptohash-cryptoapi entropy mtl parallel prettyclass tagged
       ];
       testHaskellDepends = [
         base binary bytestring cereal cipher-aes128 crypto-api
         crypto-api-tests cryptohash-cryptoapi entropy HUnit mtl parallel
         prettyclass QuickCheck tagged test-framework test-framework-hunit
       ];
       doCheck = false;
       description = "Deterministic random bit generator (aka RNG, PRNG) based HMACs, Hashes, and Ciphers";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "Decimal" = callPackage
    ({ mkDerivation, base, deepseq, HUnit, QuickCheck, test-framework
     , test-framework-hunit, test-framework-quickcheck2
     }:
     mkDerivation {
       pname = "Decimal";
       version = "0.5.1";
       sha256 = "0k7kh05mr2f54w1lpgq1nln0h8k6s6h99dyp5jzsb9cfbb3aap2p";
       libraryHaskellDepends = [ base deepseq ];
       testHaskellDepends = [
         base deepseq HUnit QuickCheck test-framework test-framework-hunit
         test-framework-quickcheck2
       ];
       homepage = "https://github.com/PaulJohnson/Haskell-Decimal";
       description = "Decimal numbers with variable precision";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "Diff" = callPackage
    ({ mkDerivation, array, base, directory, pretty, process
     , QuickCheck, test-framework, test-framework-quickcheck2
     }:
     mkDerivation {
       pname = "Diff";
       version = "0.3.4";
       sha256 = "0bqcdvhxx8dmqc3793m6axg813wv9ldz2j37f1wygbbrbbndmdvp";
       libraryHaskellDepends = [ array base pretty ];
       testHaskellDepends = [
         array base directory pretty process QuickCheck test-framework
         test-framework-quickcheck2
       ];
       description = "O(ND) diff algorithm in haskell";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "Earley" = callPackage
    ({ mkDerivation, base, criterion, deepseq, ListLike, parsec
     , QuickCheck, tasty, tasty-hunit, tasty-quickcheck
     }:
     mkDerivation {
       pname = "Earley";
       version = "0.12.1.0";
       sha256 = "07dxsl2cvb40z2z41a263xpg5mhplaqj9p2qjhaw6q5rkjz9653k";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [ base ListLike ];
       testHaskellDepends = [
         base QuickCheck tasty tasty-hunit tasty-quickcheck
       ];
       benchmarkHaskellDepends = [
         base criterion deepseq ListLike parsec
       ];
       description = "Parsing all context-free grammars using Earley's algorithm";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "Ebnf2ps" = callPackage
    ({ mkDerivation, array, base, containers, directory, happy
     , old-time, unix
     }:
     mkDerivation {
       pname = "Ebnf2ps";
       version = "1.0.15";
       sha256 = "0jrbxanhp81n3nabdw5s1gh8a78hy4bgnv5slqzrkj6n47bygk0f";
       isLibrary = false;
       isExecutable = true;
       executableHaskellDepends = [
         array base containers directory old-time unix
       ];
       executableToolDepends = [ happy ];
       doHaddock = false;
       homepage = "https://github.com/FranklinChen/Ebnf2ps";
       description = "Peter's Syntax Diagram Drawing Tool";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "EdisonAPI" = callPackage
    ({ mkDerivation, base, mtl }:
     mkDerivation {
       pname = "EdisonAPI";
       version = "1.3.1";
       sha256 = "0vmmlsj8ggbpwx6fkf5fvb6jp0zpx6iba6b28m80lllr2p8bi8wm";
       libraryHaskellDepends = [ base mtl ];
       homepage = "http://rwd.rdockins.name/edison/home/";
       description = "A library of efficient, purely-functional data structures (API)";
       license = stdenv.lib.licenses.mit;
     }) {};
  "EdisonCore" = callPackage
    ({ mkDerivation, array, base, containers, EdisonAPI, mtl
     , QuickCheck
     }:
     mkDerivation {
       pname = "EdisonCore";
       version = "1.3.2.1";
       sha256 = "0fgj5iwiv3v2gdgx7kjcr15dcs4x1kvmjspp3p99wyhh0x6h3ikk";
       libraryHaskellDepends = [
         array base containers EdisonAPI mtl QuickCheck
       ];
       homepage = "http://rwd.rdockins.name/edison/home/";
       description = "A library of efficient, purely-functional data structures (Core Implementations)";
       license = stdenv.lib.licenses.mit;
     }) {};
  "FenwickTree" = callPackage
    ({ mkDerivation, base, QuickCheck, template-haskell }:
     mkDerivation {
       pname = "FenwickTree";
       version = "0.1.2.1";
       sha256 = "0g7hhkim16wsjf8l79hqkiv1lain6jm8wpiml1iycra3n9i2s5ww";
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [ base QuickCheck template-haskell ];
       testHaskellDepends = [ base QuickCheck template-haskell ];
       homepage = "https://github.com/mgajda/FenwickTree";
       description = "Data structure for fast query and update of cumulative sums";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "Fin" = callPackage
    ({ mkDerivation, alg, base, foldable1, natural-induction, peano
     , universe-base
     }:
     mkDerivation {
       pname = "Fin";
       version = "0.2.7.0";
       sha256 = "0w29dc2mdy0q3y5v6mkc0m51vp1bmbx8bswvr1khby63vb5zwcf3";
       libraryHaskellDepends = [
         alg base foldable1 natural-induction peano universe-base
       ];
       description = "Finite totally-ordered sets";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "FindBin" = callPackage
    ({ mkDerivation, base, directory, filepath }:
     mkDerivation {
       pname = "FindBin";
       version = "0.0.5";
       sha256 = "197xvn05yysmibm1p5wzxfa256lvpbknr5d1l2ws6g40w1kpk717";
       libraryHaskellDepends = [ base directory filepath ];
       homepage = "https://github.com/audreyt/findbin";
       description = "Locate directory of original program";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "FloatingHex" = callPackage
    ({ mkDerivation, base, template-haskell }:
     mkDerivation {
       pname = "FloatingHex";
       version = "0.4";
       sha256 = "0k524ms0hwws5q1vqkf4vrba1q6b33r8c5c3wdifqbcdni6haxxj";
       libraryHaskellDepends = [ base template-haskell ];
       description = "Read and write hexadecimal floating point numbers";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "FontyFruity" = callPackage
    ({ mkDerivation, base, binary, bytestring, containers, deepseq
     , directory, filepath, text, vector, xml
     }:
     mkDerivation {
       pname = "FontyFruity";
       version = "0.5.3.4";
       sha256 = "0gavpjv83vg5q2x254d3zi3kw5aprl6z8ifcn0vs6hymaj0qgls3";
       libraryHaskellDepends = [
         base binary bytestring containers deepseq directory filepath text
         vector xml
       ];
       description = "A true type file format loader";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "ForestStructures" = callPackage
    ({ mkDerivation, base, containers, criterion, fgl, QuickCheck
     , tasty, tasty-quickcheck, tasty-th, unordered-containers, vector
     , vector-th-unbox
     }:
     mkDerivation {
       pname = "ForestStructures";
       version = "0.0.0.2";
       sha256 = "0gv9hvwbql015k28xvphx4dllpfp5dgi36l3bkg48630xrzhcx7y";
       libraryHaskellDepends = [
         base containers fgl QuickCheck unordered-containers vector
         vector-th-unbox
       ];
       testHaskellDepends = [
         base containers QuickCheck tasty tasty-quickcheck tasty-th vector
       ];
       benchmarkHaskellDepends = [ base criterion ];
       homepage = "https://github.com/choener/ForestStructures";
       description = "Tree- and forest structures";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "GLFW-b" = callPackage
    ({ mkDerivation, base, bindings-GLFW, deepseq, HUnit
     , test-framework, test-framework-hunit
     }:
     mkDerivation {
       pname = "GLFW-b";
       version = "3.2.1.0";
       sha256 = "19mngkprzlm322pfyljvm4lyk1j7j8ss50m5kzzmkwk3mph25h1i";
       revision = "2";
       editedCabalFile = "0xlby7483dv33c13f44kkvmai186g72jhxmcq8749s1hyxi6fqnb";
       libraryHaskellDepends = [ base bindings-GLFW deepseq ];
       testHaskellDepends = [
         base bindings-GLFW deepseq HUnit test-framework
         test-framework-hunit
       ];
       doCheck = false;
       description = "Bindings to GLFW OpenGL library";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "GLURaw" = callPackage
    ({ mkDerivation, base, libGL, libGLU, OpenGLRaw, transformers }:
     mkDerivation {
       pname = "GLURaw";
       version = "2.0.0.4";
       sha256 = "1i2xi35n5z0d372px9mh6cyhgg1m0cfaiy3fnspkf6kbn9fgsqxq";
       libraryHaskellDepends = [ base OpenGLRaw transformers ];
       librarySystemDepends = [ libGL libGLU ];
       homepage = "http://www.haskell.org/haskellwiki/Opengl";
       description = "A raw binding for the OpenGL graphics system";
       license = stdenv.lib.licenses.bsd3;
     }) {inherit (pkgs) libGL; inherit (pkgs) libGLU;};
  "GLUT" = callPackage
    ({ mkDerivation, array, base, containers, OpenGL, StateVar
     , transformers
     }:
     mkDerivation {
       pname = "GLUT";
       version = "2.7.0.14";
       sha256 = "01i162fly4q1751fp60lgkzlb8kr0qqbvmxj74zc6skb19qggy2w";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         array base containers OpenGL StateVar transformers
       ];
       homepage = "http://www.haskell.org/haskellwiki/Opengl";
       description = "A binding for the OpenGL Utility Toolkit";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "GenericPretty" = callPackage
    ({ mkDerivation, base, ghc-prim, pretty }:
     mkDerivation {
       pname = "GenericPretty";
       version = "1.2.2";
       sha256 = "0g5frpzq8hr2wqbf91cxcyxqqsw06p1w9f1sm3k6v1hz13kpmspf";
       libraryHaskellDepends = [ base ghc-prim pretty ];
       homepage = "https://github.com/RazvanRanca/GenericPretty";
       description = "A generic, derivable, haskell pretty printer";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "Glob" = callPackage
    ({ mkDerivation, base, containers, directory, dlist, filepath
     , HUnit, QuickCheck, test-framework, test-framework-hunit
     , test-framework-quickcheck2, transformers, transformers-compat
     }:
     mkDerivation {
       pname = "Glob";
       version = "0.9.3";
       sha256 = "1s69lk3ic6zlkikhvb78ly9wl3g70a1h1m6ndhsca01pp8z8axrs";
       libraryHaskellDepends = [
         base containers directory dlist filepath transformers
         transformers-compat
       ];
       testHaskellDepends = [
         base containers directory dlist filepath HUnit QuickCheck
         test-framework test-framework-hunit test-framework-quickcheck2
         transformers transformers-compat
       ];
       homepage = "http://iki.fi/matti.niemenmaa/glob/";
       description = "Globbing library";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "HCodecs" = callPackage
    ({ mkDerivation, array, base, bytestring, QuickCheck, random
     , semigroups
     }:
     mkDerivation {
       pname = "HCodecs";
       version = "0.5.1";
       sha256 = "0hrib81nw4g7qgka3brypb8k1mg7l37m8gywc7bc44mcg5mn2957";
       libraryHaskellDepends = [
         array base bytestring QuickCheck random semigroups
       ];
       testHaskellDepends = [
         array base bytestring QuickCheck random semigroups
       ];
       homepage = "http://www-db.informatik.uni-tuebingen.de/team/giorgidze";
       description = "A library to read, write and manipulate MIDI, WAVE, and SoundFont2 files";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "HDBC" = callPackage
    ({ mkDerivation, base, bytestring, containers, convertible, mtl
     , old-time, text, time, utf8-string
     }:
     mkDerivation {
       pname = "HDBC";
       version = "2.4.0.2";
       sha256 = "0nnvfyivmw5pykbna953yb6z4al1ak5vsd308lpsyv2bczymf1v7";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         base bytestring containers convertible mtl old-time text time
         utf8-string
       ];
       homepage = "https://github.com/hdbc/hdbc";
       description = "Haskell Database Connectivity";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "HDBC-mysql" = callPackage
    ({ mkDerivation, base, bytestring, Cabal, HDBC, mysqlclient
     , openssl, time, utf8-string, zlib
     }:
     mkDerivation {
       pname = "HDBC-mysql";
       version = "0.7.1.0";
       sha256 = "1kx73pgh1mjg0526i2szk1kbm6d7bhbv64ml1y9nbja3lba8bjc1";
       setupHaskellDepends = [ base Cabal ];
       libraryHaskellDepends = [ base bytestring HDBC time utf8-string ];
       librarySystemDepends = [ mysqlclient openssl zlib ];
       homepage = "http://github.com/ryantm/hdbc-mysql";
       description = "MySQL driver for HDBC";
       license = "LGPL";
     }) {mysqlclient = null; inherit (pkgs) openssl;
         inherit (pkgs) zlib;};
  "HDBC-session" = callPackage
    ({ mkDerivation, base, HDBC }:
     mkDerivation {
       pname = "HDBC-session";
       version = "0.1.2.0";
       sha256 = "1qwnqb62zgmm4dy5qlcj04aczja6yn16c92jc63zkln9pcc7y1da";
       libraryHaskellDepends = [ base HDBC ];
       homepage = "http://khibino.github.io/haskell-relational-record/";
       description = "Bracketed connection for HDBC";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "HPDF" = callPackage
    ({ mkDerivation, array, base, base64-bytestring, binary, bytestring
     , containers, errors, HTF, mtl, random, vector, zlib
     }:
     mkDerivation {
       pname = "HPDF";
       version = "1.4.10";
       sha256 = "1m072rc03yx5y4djmvj87kn6n23d9378v3ipl8lj3vzfjgfzsayy";
       libraryHaskellDepends = [
         array base base64-bytestring binary bytestring containers errors
         mtl random vector zlib
       ];
       testHaskellDepends = [ base HTF ];
       homepage = "http://www.alpheccar.org";
       description = "Generation of PDF documents";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "HSet" = callPackage
    ({ mkDerivation, base, containers, hashable, hashtables }:
     mkDerivation {
       pname = "HSet";
       version = "0.0.1";
       sha256 = "0snix2qdj1d66v6qj6fl0zizl617kjzbmxiswdd5i0b5lzjkpagb";
       libraryHaskellDepends = [ base containers hashable hashtables ];
       description = "Faux heterogeneous sets";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "HSlippyMap" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "HSlippyMap";
       version = "3.0.1";
       sha256 = "03gb5dd59mirwb11b98vbg60w2zwfsbr8akk7qbq01z7n7rkgsr7";
       libraryHaskellDepends = [ base ];
       homepage = "https://github.com/apeyroux/HSlippyMap";
       description = "OpenStreetMap Slippy Map";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "HStringTemplate" = callPackage
    ({ mkDerivation, array, base, blaze-builder, bytestring, containers
     , deepseq, directory, filepath, mtl, old-locale, parsec, pretty
     , semigroups, syb, template-haskell, text, time, void
     }:
     mkDerivation {
       pname = "HStringTemplate";
       version = "0.8.7";
       sha256 = "03kbmyh0713j3qhhrl7jqbmsvyq1q82h2yxq45cc9rs55sma8kjg";
       libraryHaskellDepends = [
         array base blaze-builder bytestring containers deepseq directory
         filepath mtl old-locale parsec pretty semigroups syb
         template-haskell text time void
       ];
       description = "StringTemplate implementation in Haskell";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "HSvm" = callPackage
    ({ mkDerivation, base, containers }:
     mkDerivation {
       pname = "HSvm";
       version = "0.1.0.3.22";
       sha256 = "015b1l2grjx79rvn17nmjnzdc5zh30v30f21svr7a9kn7ic8mb4d";
       libraryHaskellDepends = [ base containers ];
       description = "Haskell Bindings for libsvm";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "HTF" = callPackage
    ({ mkDerivation, aeson, aeson-pretty, array, base
     , base64-bytestring, bytestring, containers, cpphs, Diff, directory
     , filepath, haskell-src, HUnit, lifted-base, monad-control, mtl
     , old-time, pretty, process, QuickCheck, random, regex-compat
     , template-haskell, temporary, text, time, unix
     , unordered-containers, vector, xmlgen
     }:
     mkDerivation {
       pname = "HTF";
       version = "0.13.2.5";
       sha256 = "1kmf95y4vijdiih27xa35acl02dsxqnd9qa56z1waki5qqiz6nin";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         aeson array base base64-bytestring bytestring containers cpphs Diff
         directory haskell-src HUnit lifted-base monad-control mtl old-time
         pretty process QuickCheck random regex-compat text time unix vector
         xmlgen
       ];
       executableHaskellDepends = [
         array base cpphs directory HUnit mtl old-time random text
       ];
       testHaskellDepends = [
         aeson aeson-pretty base bytestring directory filepath HUnit mtl
         process random regex-compat template-haskell temporary text
         unordered-containers
       ];
       doCheck = false;
       homepage = "https://github.com/skogsbaer/HTF/";
       description = "The Haskell Test Framework";
       license = stdenv.lib.licenses.lgpl21;
     }) {};
  "HTTP" = callPackage
    ({ mkDerivation, array, base, bytestring, case-insensitive, conduit
     , conduit-extra, deepseq, http-types, httpd-shed, HUnit, mtl
     , network, network-uri, parsec, pureMD5, split, test-framework
     , test-framework-hunit, time, wai, warp
     }:
     mkDerivation {
       pname = "HTTP";
       version = "4000.3.12";
       sha256 = "140r6qy1ay25piv0z3hih11zhigyi08nkwc32097j43pjff6mzx3";
       revision = "2";
       editedCabalFile = "1gw6xzp1n4gsqwnbfr29ds8v4wpk78b2bha8i108dqav97viwm8c";
       libraryHaskellDepends = [
         array base bytestring mtl network network-uri parsec time
       ];
       testHaskellDepends = [
         base bytestring case-insensitive conduit conduit-extra deepseq
         http-types httpd-shed HUnit mtl network network-uri pureMD5 split
         test-framework test-framework-hunit wai warp
       ];
       doCheck = false;
       homepage = "https://github.com/haskell/HTTP";
       description = "A library for client-side HTTP";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "HUnit" = callPackage
    ({ mkDerivation, base, call-stack, deepseq, filepath }:
     mkDerivation {
       pname = "HUnit";
       version = "1.6.0.0";
       sha256 = "1pnhwqq5v8h48gbp3ibv3skfj25mf4zs5svxcavq93p9cswycj3l";
       libraryHaskellDepends = [ base call-stack deepseq ];
       testHaskellDepends = [ base call-stack deepseq filepath ];
       homepage = "https://github.com/hspec/HUnit#readme";
       description = "A unit testing framework for Haskell";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "HUnit-approx" = callPackage
    ({ mkDerivation, base, call-stack, HUnit }:
     mkDerivation {
       pname = "HUnit-approx";
       version = "1.1.1.1";
       sha256 = "1brblqpz002jzql9wgzxk5zlfglmkv91s8gcfd6992xv539jfhsa";
       libraryHaskellDepends = [ base call-stack HUnit ];
       testHaskellDepends = [ base call-stack HUnit ];
       homepage = "https://github.com/goldfirere/HUnit-approx";
       description = "Approximate equality for floating point numbers with HUnit";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "HaTeX" = callPackage
    ({ mkDerivation, base, bytestring, containers, hashable, matrix
     , parsec, QuickCheck, tasty, tasty-quickcheck, text, transformers
     , wl-pprint-extras
     }:
     mkDerivation {
       pname = "HaTeX";
       version = "3.19.0.0";
       sha256 = "0ja7w9l1pnf4pgbggr8cmsq0234cvsn75b9jzvd64jplhajpgn8z";
       libraryHaskellDepends = [
         base bytestring containers hashable matrix parsec QuickCheck text
         transformers wl-pprint-extras
       ];
       testHaskellDepends = [
         base parsec QuickCheck tasty tasty-quickcheck text
       ];
       homepage = "https://github.com/Daniel-Diaz/HaTeX/blob/master/README.md";
       description = "The Haskell LaTeX library";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "HandsomeSoup" = callPackage
    ({ mkDerivation, base, containers, hspec, HTTP, hxt, hxt-http, mtl
     , network, network-uri, parsec, transformers
     }:
     mkDerivation {
       pname = "HandsomeSoup";
       version = "0.4.2";
       sha256 = "1yzfrvivvxwlaiqwbjx27rxwq9mmnnpb512vwklzw7nyzg9xmqha";
       isLibrary = true;
       isExecutable = true;
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [
         base containers HTTP hxt hxt-http mtl network network-uri parsec
         transformers
       ];
       testHaskellDepends = [ base hspec hxt ];
       homepage = "https://github.com/egonSchiele/HandsomeSoup";
       description = "Work with HTML more easily in HXT";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "HaskellNet" = callPackage
    ({ mkDerivation, array, base, base64-string, bytestring, cryptohash
     , mime-mail, mtl, network, old-time, pretty, text
     }:
     mkDerivation {
       pname = "HaskellNet";
       version = "0.5.1";
       sha256 = "0f581izyh6bdk85i0g07xdp3fdzdfdfjiqpnl89r17vgswdd6i9j";
       libraryHaskellDepends = [
         array base base64-string bytestring cryptohash mime-mail mtl
         network old-time pretty text
       ];
       homepage = "https://github.com/jtdaugherty/HaskellNet";
       description = "Client support for POP3, SMTP, and IMAP";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "HaskellNet-SSL" = callPackage
    ({ mkDerivation, base, bytestring, connection, data-default
     , HaskellNet, network, tls
     }:
     mkDerivation {
       pname = "HaskellNet-SSL";
       version = "0.3.4.0";
       sha256 = "03q48g4gzmhjl4a5wwn0q3man8s44pn028a0fidjpmfmgxa95bl3";
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [
         base bytestring connection data-default HaskellNet network tls
       ];
       homepage = "https://github.com/dpwright/HaskellNet-SSL";
       description = "Helpers to connect to SSL/TLS mail servers with HaskellNet";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "Hoed" = callPackage
    ({ mkDerivation, array, base, bytestring, cereal, cereal-text
     , cereal-vector, clock, containers, deepseq, directory, hashable
     , libgraph, open-browser, primitive, process, QuickCheck
     , regex-tdfa, regex-tdfa-text, semigroups, strict, template-haskell
     , terminal-size, text, transformers, uniplate, unordered-containers
     , vector, vector-th-unbox
     }:
     mkDerivation {
       pname = "Hoed";
       version = "0.5.1";
       sha256 = "1rzlqd1sha6p1cw5w0gpf1w7qsmc6088sjnq1kq44mp12ybxrxm8";
       libraryHaskellDepends = [
         array base bytestring cereal cereal-text cereal-vector clock
         containers deepseq directory hashable libgraph open-browser
         primitive process QuickCheck regex-tdfa regex-tdfa-text semigroups
         strict template-haskell terminal-size text transformers uniplate
         unordered-containers vector vector-th-unbox
       ];
       testHaskellDepends = [ base process QuickCheck ];
       homepage = "https://github.com/MaartenFaddegon/Hoed";
       description = "Lightweight algorithmic debugging";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "HsOpenSSL" = callPackage
    ({ mkDerivation, base, bytestring, Cabal, network, openssl, time }:
     mkDerivation {
       pname = "HsOpenSSL";
       version = "0.11.4.15";
       sha256 = "0idmak6d8mpbxphyq9hkxkmby2wnzhc1phywlgm0zw6q47pwxgff";
       configureFlags = [ "-f-fast-bignum" ];
       setupHaskellDepends = [ base Cabal ];
       libraryHaskellDepends = [ base bytestring network time ];
       librarySystemDepends = [ openssl ];
       testHaskellDepends = [ base bytestring ];
       homepage = "https://github.com/vshabanov/HsOpenSSL";
       description = "Partial OpenSSL binding for Haskell";
       license = stdenv.lib.licenses.publicDomain;
     }) {inherit (pkgs) openssl;};
  "HsOpenSSL-x509-system" = callPackage
    ({ mkDerivation, base, bytestring, HsOpenSSL, unix }:
     mkDerivation {
       pname = "HsOpenSSL-x509-system";
       version = "0.1.0.3";
       sha256 = "14hzjdpv8ld3nw5fcx451w49vq0s8fhs1zh984vpm85b5ypbgp2v";
       libraryHaskellDepends = [ base bytestring HsOpenSSL unix ];
       homepage = "https://github.com/redneb/HsOpenSSL-x509-system";
       description = "Use the system's native CA certificate store with HsOpenSSL";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "IPv6Addr" = callPackage
    ({ mkDerivation, aeson, attoparsec, base, HUnit, iproute, network
     , network-info, random, test-framework, test-framework-hunit, text
     }:
     mkDerivation {
       pname = "IPv6Addr";
       version = "1.1.1";
       sha256 = "0l2yfn46xyv0ib30k0kmhw3vl4vfmziqinhbynpi4yrmy6lmj29v";
       libraryHaskellDepends = [
         aeson attoparsec base iproute network network-info random text
       ];
       testHaskellDepends = [
         base HUnit test-framework test-framework-hunit text
       ];
       homepage = "https://github.com/MichelBoucey/IPv6Addr";
       description = "Library to deal with IPv6 address text representations";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "IPv6DB" = callPackage
    ({ mkDerivation, aeson, attoparsec, base, bytestring, fast-logger
     , hedis, hspec, http-client, http-types, IPv6Addr, mtl
     , optparse-applicative, text, unordered-containers, vector, wai
     , wai-logger, warp
     }:
     mkDerivation {
       pname = "IPv6DB";
       version = "0.3.1";
       sha256 = "06240z3nbjkf0rgwhvajjw28lckgpsfz5nbzzdqyfzgyg2r4wdcn";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         aeson attoparsec base bytestring hedis http-types IPv6Addr mtl text
         unordered-containers vector
       ];
       executableHaskellDepends = [
         aeson base bytestring fast-logger hedis http-types IPv6Addr mtl
         optparse-applicative text unordered-containers vector wai
         wai-logger warp
       ];
       testHaskellDepends = [
         aeson base hspec http-client http-types vector
       ];
       doCheck = false;
       homepage = "http://ipv6db.cybervisible.com";
       description = "A RESTful microService for IPv6-related data";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "Imlib" = callPackage
    ({ mkDerivation, array, base, imlib2, X11 }:
     mkDerivation {
       pname = "Imlib";
       version = "0.1.2";
       sha256 = "075x1vcrxdwknzbad05l08i5c79svf714yvv6990ffvsfykiilry";
       libraryHaskellDepends = [ array base X11 ];
       librarySystemDepends = [ imlib2 ];
       license = stdenv.lib.licenses.bsd3;
     }) {inherit (pkgs) imlib2;};
  "IntervalMap" = callPackage
    ({ mkDerivation, base, Cabal, containers, criterion, deepseq
     , fingertree, QuickCheck, random, SegmentTree, weigh
     }:
     mkDerivation {
       pname = "IntervalMap";
       version = "0.6.1.0";
       sha256 = "0g47mf4m0vwbibk8hi9k78xwbgdaa4zvypgbpzcvj20hw2wpcdhk";
       libraryHaskellDepends = [ base containers deepseq ];
       testHaskellDepends = [ base Cabal containers deepseq QuickCheck ];
       benchmarkHaskellDepends = [
         base containers criterion deepseq fingertree random SegmentTree
         weigh
       ];
       homepage = "http://www.chr-breitkopf.de/comp/IntervalMap";
       description = "Containers for intervals, with efficient search";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "JuicyPixels" = callPackage
    ({ mkDerivation, base, binary, bytestring, containers, deepseq, mtl
     , primitive, transformers, vector, zlib
     }:
     mkDerivation {
       pname = "JuicyPixels";
       version = "3.2.9.5";
       sha256 = "0mf3ihr0xy2wc2wzb9a17g0n3p60x7pvm8akwpvhdy8klvs6r744";
       libraryHaskellDepends = [
         base binary bytestring containers deepseq mtl primitive
         transformers vector zlib
       ];
       homepage = "https://github.com/Twinside/Juicy.Pixels";
       description = "Picture loading/serialization (in png, jpeg, bitmap, gif, tga, tiff and radiance)";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "JuicyPixels-blp" = callPackage
    ({ mkDerivation, attoparsec, base, binary, bytestring, directory
     , filepath, hashable, JuicyPixels, optparse-simple, text-show
     , unordered-containers, vector
     }:
     mkDerivation {
       pname = "JuicyPixels-blp";
       version = "0.1.1.0";
       sha256 = "0vccx98n9bjnz2clpww4gqns7mc2cmzgpzmj2mx6mwhgb12rwbvx";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         attoparsec base binary bytestring hashable JuicyPixels text-show
         vector
       ];
       executableHaskellDepends = [
         base bytestring directory filepath JuicyPixels optparse-simple
         text-show unordered-containers
       ];
       homepage = "http://github.com/NCrashed/JuicyPixels-blp#readme";
       description = "BLP format decoder/encoder over JuicyPixels library";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "JuicyPixels-extra" = callPackage
    ({ mkDerivation, base, criterion, hspec, JuicyPixels }:
     mkDerivation {
       pname = "JuicyPixels-extra";
       version = "0.3.0";
       sha256 = "08hf3dklz3zaczbffq11z1yjk3hqf53rnz3g9n989ndw8ybkm865";
       revision = "3";
       editedCabalFile = "1xr4vjhzjw3ynibb6693dhcz2jbvbx4yg2bir8w2s98n37gwsxd7";
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [ base JuicyPixels ];
       testHaskellDepends = [ base hspec JuicyPixels ];
       benchmarkHaskellDepends = [ base criterion JuicyPixels ];
       homepage = "https://github.com/mrkkrp/JuicyPixels-extra";
       description = "Efficiently scale, crop, flip images with JuicyPixels";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "JuicyPixels-scale-dct" = callPackage
    ({ mkDerivation, base, base-compat, carray, fft, JuicyPixels, time
     }:
     mkDerivation {
       pname = "JuicyPixels-scale-dct";
       version = "0.1.2";
       sha256 = "04rhrmjnh12hh2nz04k245avgdcwqfyjnsbpcrz8j9328j41nf7p";
       revision = "2";
       editedCabalFile = "0pp67ygrd3m6q8ry5229m1b2rhy401gb74368h09bqc6wa3g7ygv";
       libraryHaskellDepends = [
         base base-compat carray fft JuicyPixels
       ];
       testHaskellDepends = [
         base base-compat carray fft JuicyPixels time
       ];
       homepage = "https://github.com/phadej/JuicyPixels-scale-dct#readme";
       description = "Scale JuicyPixels images with DCT";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "LambdaHack" = callPackage
    ({ mkDerivation, assert-failure, async, base, base-compat, binary
     , bytestring, containers, deepseq, directory, enummapset, filepath
     , ghc-prim, hashable, hsini, keys, miniutter, optparse-applicative
     , pretty-show, random, sdl2, sdl2-ttf, stm, template-haskell, text
     , time, transformers, unordered-containers, vector
     , vector-binary-instances, zlib
     }:
     mkDerivation {
       pname = "LambdaHack";
       version = "0.8.3.0";
       sha256 = "0v07c8v7l8yg111fysl735scsbsl9l6q3vzigy7rv05sjfl276ss";
       isLibrary = true;
       isExecutable = true;
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [
         assert-failure async base base-compat binary bytestring containers
         deepseq directory enummapset filepath ghc-prim hashable hsini keys
         miniutter optparse-applicative pretty-show random sdl2 sdl2-ttf stm
         text time transformers unordered-containers vector
         vector-binary-instances zlib
       ];
       executableHaskellDepends = [
         assert-failure async base base-compat binary bytestring containers
         deepseq directory enummapset filepath ghc-prim hashable hsini keys
         miniutter optparse-applicative pretty-show random stm
         template-haskell text time transformers unordered-containers vector
         vector-binary-instances zlib
       ];
       testHaskellDepends = [
         assert-failure async base base-compat binary bytestring containers
         deepseq directory enummapset filepath ghc-prim hashable hsini keys
         miniutter optparse-applicative pretty-show random stm
         template-haskell text time transformers unordered-containers vector
         vector-binary-instances zlib
       ];
       homepage = "https://lambdahack.github.io";
       description = "A game engine library for tactical squad ASCII roguelike dungeon crawlers";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "LibZip" = callPackage
    ({ mkDerivation, base, bindings-libzip, bytestring, directory
     , filepath, HUnit, mtl, time, utf8-string
     }:
     mkDerivation {
       pname = "LibZip";
       version = "1.0.1";
       sha256 = "0ps2psza80jz566c9k377cqn536g6jcbs558jkc60gra5lhf0dm6";
       libraryHaskellDepends = [
         base bindings-libzip bytestring filepath mtl time utf8-string
       ];
       testHaskellDepends = [
         base bindings-libzip bytestring directory filepath HUnit mtl time
         utf8-string
       ];
       homepage = "http://bitbucket.org/astanin/hs-libzip/";
       description = "Bindings to libzip, a library for manipulating zip archives";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "List" = callPackage
    ({ mkDerivation, base, transformers }:
     mkDerivation {
       pname = "List";
       version = "0.6.2";
       sha256 = "0y5qk6pzpcha01pa9133qgmmk9nkgjqxaxlg04993i9g43hjpff4";
       revision = "1";
       editedCabalFile = "11ws93cdzz7k4nvcld2d74155mdgcvyi6f6an7gpf9z4k523c11n";
       libraryHaskellDepends = [ base transformers ];
       homepage = "http://github.com/yairchu/generator";
       description = "List monad transformer and class";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "ListLike" = callPackage
    ({ mkDerivation, array, base, bytestring, containers, deepseq
     , dlist, fmlist, HUnit, QuickCheck, random, text, utf8-string
     , vector
     }:
     mkDerivation {
       pname = "ListLike";
       version = "4.6";
       sha256 = "16jsj979mzjrgmpa20pls9ganym3wsps49paks1sb1gmlmwyrkf1";
       revision = "2";
       editedCabalFile = "1mca2r4gjznqdh4kck5cjkn53isgkhvkf3ri09qsn7nsssvgki0g";
       libraryHaskellDepends = [
         array base bytestring containers deepseq dlist fmlist text
         utf8-string vector
       ];
       testHaskellDepends = [
         array base bytestring containers dlist fmlist HUnit QuickCheck
         random text utf8-string vector
       ];
       doCheck = false;
       homepage = "http://github.com/JohnLato/listlike";
       description = "Generic support for list-like structures";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "MemoTrie" = callPackage
    ({ mkDerivation, base, newtype-generics }:
     mkDerivation {
       pname = "MemoTrie";
       version = "0.6.9";
       sha256 = "157p0pi6rrq74a35mq6zkkycv4ah7xhkbrcmnkb9xf7pznw4aq0x";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [ base newtype-generics ];
       doHaddock = false;
       homepage = "https://github.com/conal/MemoTrie";
       description = "Trie-based memo functions";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "MissingH" = callPackage
    ({ mkDerivation, array, base, containers, directory, filepath
     , hslogger, HUnit, mtl, network, old-locale, old-time, parsec
     , process, random, regex-compat, time, unix
     }:
     mkDerivation {
       pname = "MissingH";
       version = "1.4.1.0";
       sha256 = "1jp0vk6w9a7fzrbxfhx773105jp2s1n50klq9ak6spfl7bgx5v29";
       libraryHaskellDepends = [
         array base containers directory filepath hslogger HUnit mtl network
         old-locale old-time parsec process random regex-compat time unix
       ];
       doCheck = false;
       homepage = "http://software.complete.org/missingh";
       description = "Large utility library";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "MonadPrompt" = callPackage
    ({ mkDerivation, base, mtl }:
     mkDerivation {
       pname = "MonadPrompt";
       version = "1.0.0.5";
       sha256 = "1nmy7dfzrkd8yfv5i9vlmjq9khnyi76ayvkzgcf783v5hfzcn4mh";
       libraryHaskellDepends = [ base mtl ];
       description = "MonadPrompt, implementation & examples";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "MonadRandom" = callPackage
    ({ mkDerivation, base, mtl, primitive, random, transformers
     , transformers-compat
     }:
     mkDerivation {
       pname = "MonadRandom";
       version = "0.5.1.1";
       sha256 = "0w44jl1n3kqvqaflh82l1wj3xxbhzfs3kf4m8rk7w6fgg8llmnmb";
       libraryHaskellDepends = [
         base mtl primitive random transformers transformers-compat
       ];
       description = "Random-number generation monad";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "MusicBrainz" = callPackage
    ({ mkDerivation, aeson, base, bytestring, conduit, conduit-extra
     , HTTP, http-conduit, http-types, monad-control, resourcet, text
     , time, time-locale-compat, transformers, unliftio-core, vector
     , xml-conduit, xml-types
     }:
     mkDerivation {
       pname = "MusicBrainz";
       version = "0.4.1";
       sha256 = "0mydq3bjf15ksfrh4lf947ka43i3978q58y2aij3aqd763v2jb16";
       libraryHaskellDepends = [
         aeson base bytestring conduit conduit-extra HTTP http-conduit
         http-types monad-control resourcet text time time-locale-compat
         transformers unliftio-core vector xml-conduit xml-types
       ];
       homepage = "http://floss.scru.org/hMusicBrainz";
       description = "interface to MusicBrainz XML2 and JSON web services";
       license = stdenv.lib.licenses.gpl3;
     }) {};
  "Network-NineP" = callPackage
    ({ mkDerivation, base, binary, bytestring, containers, convertible
     , exceptions, hslogger, monad-loops, monad-peel, mstate, mtl
     , network, NineP, regex-posix, stateref, transformers
     }:
     mkDerivation {
       pname = "Network-NineP";
       version = "0.4.4";
       sha256 = "119v9iimpgd5cym5q7az0gg70irja9034r2mhvq2k4ygmmz0lazy";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         base binary bytestring containers convertible exceptions hslogger
         monad-loops monad-peel mstate mtl network NineP regex-posix
         stateref transformers
       ];
       description = "High-level abstraction over 9P protocol";
       license = "unknown";
       hydraPlatforms = stdenv.lib.platforms.none;
     }) {};
  "NineP" = callPackage
    ({ mkDerivation, base, binary, bytestring }:
     mkDerivation {
       pname = "NineP";
       version = "0.0.2.1";
       sha256 = "1k6qdp4zmqjl2f6cqy1zzzl6ncb2m9r0qgh4c24i2h5kkxmm3cab";
       configureFlags = [ "-f-bytestring-in-base" ];
       libraryHaskellDepends = [ base binary bytestring ];
       homepage = "http://9ph.googlecode.com";
       description = "9P2000 in pure Haskell";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "NoHoed" = callPackage
    ({ mkDerivation, base, template-haskell }:
     mkDerivation {
       pname = "NoHoed";
       version = "0.1.1";
       sha256 = "0g9vqkpcmn66922z2yqp29h4kp2n2xnz1rva294h0kh39hiklrlv";
       libraryHaskellDepends = [ base template-haskell ];
       homepage = "https://github.com/pepeiborra/NoHoed";
       description = "Placeholder package to preserve debug ability via conditional builds";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "NumInstances" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "NumInstances";
       version = "1.4";
       sha256 = "0ycnwn09izajv330l7a31mc0alifqmxjsn9qmfswwnbg6i4jmnyb";
       libraryHaskellDepends = [ base ];
       homepage = "https://github.com/conal/NumInstances";
       description = "Instances of numeric classes for functions and tuples";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "ObjectName" = callPackage
    ({ mkDerivation, base, transformers }:
     mkDerivation {
       pname = "ObjectName";
       version = "1.1.0.1";
       sha256 = "046jm94rmm46cicd31pl54vdvfjvhd9ffbfycy2lxzc0fliyznvj";
       libraryHaskellDepends = [ base transformers ];
       homepage = "https://github.com/svenpanne/ObjectName";
       description = "Explicitly handled object names";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "OneTuple" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "OneTuple";
       version = "0.2.2";
       sha256 = "1p14cvjk3rgfc0xxcn7ffaajd2ii1ljnlayil2yyzgdwhlj70bnq";
       revision = "1";
       editedCabalFile = "07jd23glblzmnlw7sn565sk9gm7vj9h459j46bkbcrrxnp0n0myq";
       libraryHaskellDepends = [ base ];
       description = "Singleton Tuple";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "Only" = callPackage
    ({ mkDerivation, base, deepseq }:
     mkDerivation {
       pname = "Only";
       version = "0.1";
       sha256 = "0rdj3a629fk2vp121jq8mf2smkblrz5w3cxhlsyx6my2x29s2ymb";
       revision = "1";
       editedCabalFile = "1ahk7p34kmh041mz7lyc10nhcxgv2i4z8nvzxvqm2x34gslmsbzr";
       libraryHaskellDepends = [ base deepseq ];
       description = "The 1-tuple type or single-value \"collection\"";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "OpenAL" = callPackage
    ({ mkDerivation, base, ObjectName, openal, OpenGL, StateVar
     , transformers
     }:
     mkDerivation {
       pname = "OpenAL";
       version = "1.7.0.4";
       sha256 = "067in6qb2i0xwy6bnkxfhzbn7gq88cf03p8421al6y23zv2gd29r";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         base ObjectName OpenGL StateVar transformers
       ];
       librarySystemDepends = [ openal ];
       homepage = "https://github.com/haskell-openal/ALUT";
       description = "A binding to the OpenAL cross-platform 3D audio API";
       license = stdenv.lib.licenses.bsd3;
     }) {inherit (pkgs) openal;};
  "OpenGL" = callPackage
    ({ mkDerivation, base, bytestring, containers, GLURaw, ObjectName
     , OpenGLRaw, StateVar, text, transformers
     }:
     mkDerivation {
       pname = "OpenGL";
       version = "3.0.2.2";
       sha256 = "19vxwvx2n8zq2klj176l25n2b64ybp0b8mhm4p46gvpcivz41fjc";
       libraryHaskellDepends = [
         base bytestring containers GLURaw ObjectName OpenGLRaw StateVar
         text transformers
       ];
       homepage = "http://www.haskell.org/haskellwiki/Opengl";
       description = "A binding for the OpenGL graphics system";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "OpenGLRaw" = callPackage
    ({ mkDerivation, base, bytestring, containers, fixed, half, libGL
     , text, transformers
     }:
     mkDerivation {
       pname = "OpenGLRaw";
       version = "3.3.1.0";
       sha256 = "1x8w3x308jldj2c1xqcq3a3sc2jc06pdpgqkgjsmixi1skv4a1vb";
       libraryHaskellDepends = [
         base bytestring containers fixed half text transformers
       ];
       librarySystemDepends = [ libGL ];
       homepage = "http://www.haskell.org/haskellwiki/Opengl";
       description = "A raw binding for the OpenGL graphics system";
       license = stdenv.lib.licenses.bsd3;
     }) {inherit (pkgs) libGL;};
  "ParsecTools" = callPackage
    ({ mkDerivation, base, parsec }:
     mkDerivation {
       pname = "ParsecTools";
       version = "0.0.2.0";
       sha256 = "11vshnbxfl8p38aix4h2b0vms8j58agwxbmhd9pkxai764sl6j7g";
       libraryHaskellDepends = [ base parsec ];
       description = "Parsec combinators for more complex objects";
       license = stdenv.lib.licenses.gpl3;
     }) {};
  "QuasiText" = callPackage
    ({ mkDerivation, attoparsec, base, haskell-src-meta
     , template-haskell, text, th-lift-instances
     }:
     mkDerivation {
       pname = "QuasiText";
       version = "0.1.2.6";
       sha256 = "06giw0q5lynx05c4h45zwnlcifg91w291h3gwrg68qsjw9lx40g8";
       libraryHaskellDepends = [
         attoparsec base haskell-src-meta template-haskell text
         th-lift-instances
       ];
       homepage = "https://github.com/mikeplus64/QuasiText";
       description = "A QuasiQuoter for Text";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "QuickCheck" = callPackage
    ({ mkDerivation, base, containers, deepseq, random
     , template-haskell, tf-random, transformers
     }:
     mkDerivation {
       pname = "QuickCheck";
       version = "2.11.3";
       sha256 = "0xhqk35fkzlbjcqbabg6962jkv8d688nzmz7ng4bm84x2d95d328";
       libraryHaskellDepends = [
         base containers deepseq random template-haskell tf-random
         transformers
       ];
       testHaskellDepends = [ base ];
       homepage = "https://github.com/nick8325/quickcheck";
       description = "Automatic testing of Haskell programs";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "RSA" = callPackage
    ({ mkDerivation, base, binary, bytestring, crypto-api
     , crypto-pubkey-types, DRBG, QuickCheck, SHA, tagged
     , test-framework, test-framework-quickcheck2
     }:
     mkDerivation {
       pname = "RSA";
       version = "2.3.0";
       sha256 = "0csk933gb2ayijxx6ar110lmsbvgyn7p5bqln3g2qbfxz73nvrzf";
       libraryHaskellDepends = [
         base binary bytestring crypto-api crypto-pubkey-types SHA
       ];
       testHaskellDepends = [
         base binary bytestring crypto-api crypto-pubkey-types DRBG
         QuickCheck SHA tagged test-framework test-framework-quickcheck2
       ];
       description = "Implementation of RSA, using the padding schemes of PKCS#1 v2.1.";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "Rasterific" = callPackage
    ({ mkDerivation, base, bytestring, containers, dlist, FontyFruity
     , free, JuicyPixels, mtl, primitive, transformers, vector
     , vector-algorithms
     }:
     mkDerivation {
       pname = "Rasterific";
       version = "0.7.4";
       sha256 = "13f5ay9wmva9k15a6pk4imxz6rj80gwc1f16906m7a6rm9vgwvlq";
       libraryHaskellDepends = [
         base bytestring containers dlist FontyFruity free JuicyPixels mtl
         primitive transformers vector vector-algorithms
       ];
       description = "A pure haskell drawing engine";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "RefSerialize" = callPackage
    ({ mkDerivation, base, binary, bytestring, containers, hashtables
     , stringsearch
     }:
     mkDerivation {
       pname = "RefSerialize";
       version = "0.4.0";
       sha256 = "1cmvab3yakazhgij3x8s871r9wf8ixkwmb52k88rcgclmfqmxch5";
       libraryHaskellDepends = [
         base binary bytestring containers hashtables stringsearch
       ];
       description = "Write to and read from ByteStrings maintaining internal memory references";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "SCalendar" = callPackage
    ({ mkDerivation, base, containers, hspec, QuickCheck, scalendar
     , text, time
     }:
     mkDerivation {
       pname = "SCalendar";
       version = "1.1.0";
       sha256 = "139lggc8f7sw703asdyxqbja0jfcgphx0l5si1046lsryinvywa9";
       libraryHaskellDepends = [ base containers text time ];
       testHaskellDepends = [
         base containers hspec QuickCheck scalendar text time
       ];
       homepage = "https://www.researchgate.net/publication/311582722_Method_of_Managing_Resources_in_a_Telecommunication_Network_or_a_Computing_System";
       description = "This is a library for handling calendars and resource availability based on the \"top-nodes algorithm\" and set operations";
       license = stdenv.lib.licenses.mit;
     }) {};
  "SHA" = callPackage
    ({ mkDerivation, array, base, binary, bytestring, QuickCheck
     , test-framework, test-framework-quickcheck2
     }:
     mkDerivation {
       pname = "SHA";
       version = "1.6.4.4";
       sha256 = "0i4b2wjisivdy72synal711ywhx05mfqfba5n65rk8qidggm1nbb";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [ array base binary bytestring ];
       testHaskellDepends = [
         array base binary bytestring QuickCheck test-framework
         test-framework-quickcheck2
       ];
       description = "Implementations of the SHA suite of message digest functions";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "STMonadTrans" = callPackage
    ({ mkDerivation, array, base, Cabal, mtl }:
     mkDerivation {
       pname = "STMonadTrans";
       version = "0.4.3";
       sha256 = "1nr26fnmi5fdjc6d00w13kjhmfyvb5b837d0006w4dj0yxndaksp";
       revision = "1";
       editedCabalFile = "09kqrv9a4yhsdpix49h9qjw0j2fhxrgkjnfrnyxg1nspmqrvl50m";
       libraryHaskellDepends = [ array base mtl ];
       testHaskellDepends = [ array base Cabal mtl ];
       description = "A monad transformer version of the ST monad";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "SVGFonts" = callPackage
    ({ mkDerivation, attoparsec, base, blaze-markup, blaze-svg
     , bytestring, cereal, cereal-vector, containers, data-default-class
     , diagrams-core, diagrams-lib, directory, parsec, split, text
     , vector, xml
     }:
     mkDerivation {
       pname = "SVGFonts";
       version = "1.7";
       sha256 = "1k9ili7l9pp5a009jh55vigb917wdnsl6iaz0ggp6d4nw1jwsg6s";
       revision = "1";
       editedCabalFile = "1w687f4lk4l07wqgldhpg7ycid0fs099x8vrylcxqdgfrzmm04dg";
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [
         attoparsec base blaze-markup blaze-svg bytestring cereal
         cereal-vector containers data-default-class diagrams-core
         diagrams-lib directory parsec split text vector xml
       ];
       description = "Fonts from the SVG-Font format";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "SafeSemaphore" = callPackage
    ({ mkDerivation, base, containers, HUnit, stm }:
     mkDerivation {
       pname = "SafeSemaphore";
       version = "0.10.1";
       sha256 = "0rpg9j6fy70i0b9dkrip9d6wim0nac0snp7qzbhykjkqlcvvgr91";
       revision = "1";
       editedCabalFile = "1k61gqgfh6n3sj8ni8sfvpcm39nqc2msjfxk2pgmhfabvv48w5hv";
       libraryHaskellDepends = [ base containers stm ];
       testHaskellDepends = [ base HUnit ];
       homepage = "https://github.com/ChrisKuklewicz/SafeSemaphore";
       description = "Much safer replacement for QSemN, QSem, and SampleVar";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "SegmentTree" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "SegmentTree";
       version = "0.3";
       sha256 = "1hagm0y9x2j1wcgk5ibxnlh2slnxfggn79cq20ws0zvd4yqw3231";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [ base ];
       description = "Data structure for querying the set (or count) of intervals covering given point";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "ShellCheck" = callPackage
    ({ mkDerivation, aeson, base, bytestring, Cabal, containers
     , directory, mtl, parsec, process, QuickCheck, regex-tdfa
     }:
     mkDerivation {
       pname = "ShellCheck";
       version = "0.5.0";
       sha256 = "0z1hscbr11hwkq8k1v0vaa947hb9m6k4cm831jk1gpj8dxrk151b";
       isLibrary = true;
       isExecutable = true;
       setupHaskellDepends = [ base Cabal process ];
       libraryHaskellDepends = [
         aeson base bytestring containers directory mtl parsec process
         QuickCheck regex-tdfa
       ];
       executableHaskellDepends = [
         aeson base bytestring containers directory mtl parsec QuickCheck
         regex-tdfa
       ];
       testHaskellDepends = [
         aeson base bytestring containers directory mtl parsec QuickCheck
         regex-tdfa
       ];
       homepage = "https://www.shellcheck.net/";
       description = "Shell script analysis tool";
       license = stdenv.lib.licenses.gpl3;
     }) {};
  "Spintax" = callPackage
    ({ mkDerivation, attoparsec, base, extra, mtl, mwc-random, text }:
     mkDerivation {
       pname = "Spintax";
       version = "0.3.3";
       sha256 = "04vb07r26p4rxgsym5zhqsnyx4sr2a112sa31mdda5hjpy9j3pr1";
       libraryHaskellDepends = [
         attoparsec base extra mtl mwc-random text
       ];
       homepage = "https://github.com/MichelBoucey/spintax";
       description = "Random text generation based on spintax";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "Spock" = callPackage
    ({ mkDerivation, base, base64-bytestring, bytestring, containers
     , cryptonite, focus, hashable, hspec, hspec-wai, http-types, hvect
     , list-t, monad-control, mtl, reroute, resource-pool, resourcet
     , Spock-core, stm, stm-containers, text, time, transformers
     , transformers-base, unordered-containers, vault, wai, wai-extra
     }:
     mkDerivation {
       pname = "Spock";
       version = "0.13.0.0";
       sha256 = "1l0sff6xq99hvcmr2fnsr2x6lbzcpynyjl7n21ycv0l9xgfs6wwa";
       libraryHaskellDepends = [
         base base64-bytestring bytestring containers cryptonite focus
         hashable http-types hvect list-t monad-control mtl reroute
         resource-pool resourcet Spock-core stm stm-containers text time
         transformers transformers-base unordered-containers vault wai
       ];
       testHaskellDepends = [
         base bytestring hspec hspec-wai Spock-core stm text time
         unordered-containers vault wai wai-extra
       ];
       homepage = "https://www.spock.li";
       description = "Another Haskell web framework for rapid development";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "Spock-core" = callPackage
    ({ mkDerivation, aeson, base, base64-bytestring, bytestring
     , case-insensitive, containers, cookie, directory, hashable, hspec
     , hspec-wai, http-api-data, http-types, hvect, monad-control, mtl
     , old-locale, reroute, resourcet, stm, superbuffer, text, time
     , transformers, transformers-base, unordered-containers, vault, wai
     , wai-extra, warp
     }:
     mkDerivation {
       pname = "Spock-core";
       version = "0.13.0.0";
       sha256 = "0qjiv0jqs3bsgx6mpflsykr2rpvw5cch5v7r6z5306ccli1bvjjy";
       libraryHaskellDepends = [
         aeson base base64-bytestring bytestring case-insensitive containers
         cookie directory hashable http-api-data http-types hvect
         monad-control mtl old-locale reroute resourcet stm superbuffer text
         time transformers transformers-base unordered-containers vault wai
         wai-extra warp
       ];
       testHaskellDepends = [
         aeson base base64-bytestring bytestring hspec hspec-wai http-types
         monad-control reroute text time transformers transformers-base
         unordered-containers wai
       ];
       homepage = "https://www.spock.li";
       description = "Another Haskell web framework for rapid development";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "StateVar" = callPackage
    ({ mkDerivation, base, stm, transformers }:
     mkDerivation {
       pname = "StateVar";
       version = "1.1.1.1";
       sha256 = "08r2iw0gdmfs4f6wraaq19vfmkjdbics3dbhw39y7mdjd98kcr7b";
       libraryHaskellDepends = [ base stm transformers ];
       homepage = "https://github.com/haskell-opengl/StateVar";
       description = "State variables";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "Strafunski-StrategyLib" = callPackage
    ({ mkDerivation, base, directory, mtl, syb, transformers }:
     mkDerivation {
       pname = "Strafunski-StrategyLib";
       version = "5.0.1.0";
       sha256 = "15d2m7ahb3jwriariaff0yz93mmrhpv579wink9838w9091cf650";
       revision = "1";
       editedCabalFile = "1hngxq1f7fybg6ixkdhmvgsw608mhnxkwbw04ql5zspcfl78v6l2";
       libraryHaskellDepends = [ base directory mtl syb transformers ];
       description = "Library for strategic programming";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "TCache" = callPackage
    ({ mkDerivation, base, bytestring, containers, directory
     , hashtables, mtl, old-time, RefSerialize, stm, text
     }:
     mkDerivation {
       pname = "TCache";
       version = "0.12.1";
       sha256 = "1gdp78v359jf9hzwdkips7z99s9lvi21vw0l88dgl9yirmgv8d7i";
       libraryHaskellDepends = [
         base bytestring containers directory hashtables mtl old-time
         RefSerialize stm text
       ];
       description = "A Transactional cache with user-defined persistence";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "TypeCompose" = callPackage
    ({ mkDerivation, base, base-orphans }:
     mkDerivation {
       pname = "TypeCompose";
       version = "0.9.14";
       sha256 = "0msss17lrya6y5xfvxl41xsqs6yr09iw6m1px4xlwin72xwly0sn";
       revision = "1";
       editedCabalFile = "1pxg6az5vkl0zvs3zdvvvnhxqawd9fkkd44jmzzzyyibppgni6x4";
       libraryHaskellDepends = [ base base-orphans ];
       homepage = "https://github.com/conal/TypeCompose";
       description = "Type composition classes & instances";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "ViennaRNAParser" = callPackage
    ({ mkDerivation, base, hspec, parsec, ParsecTools, process
     , transformers
     }:
     mkDerivation {
       pname = "ViennaRNAParser";
       version = "1.3.3";
       sha256 = "1zmfzdp28g9mz99yp2kv98g745a2p4cls4553izcbc5q0v8l3sby";
       libraryHaskellDepends = [
         base parsec ParsecTools process transformers
       ];
       testHaskellDepends = [ base hspec parsec ];
       description = "Libary for parsing ViennaRNA package output";
       license = stdenv.lib.licenses.gpl3;
     }) {};
  "Win32-notify" = callPackage
    ({ mkDerivation, base, containers, directory, Win32 }:
     mkDerivation {
       pname = "Win32-notify";
       version = "0.3.0.3";
       sha256 = "05j10i83354cqbi8yzq5rgkkd6rmxsvy1b0sbwz3pkmidkhdn88c";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [ base containers directory Win32 ];
       description = "A binding to part of the Win32 library for file notification";
       license = stdenv.lib.licenses.bsd3;
       hydraPlatforms = stdenv.lib.platforms.none;
     }) {Win32 = null;};
  "X11" = callPackage
    ({ mkDerivation, base, data-default, libX11, libXext, libXinerama
     , libXrandr, libXrender, libXScrnSaver
     }:
     mkDerivation {
       pname = "X11";
       version = "1.9";
       sha256 = "1f8dy6ckkyvpcv7zlniyv01cqjb9lgqscm8pml58cvwc7n38w4qh";
       libraryHaskellDepends = [ base data-default ];
       librarySystemDepends = [
         libX11 libXext libXinerama libXrandr libXrender libXScrnSaver
       ];
       homepage = "https://github.com/xmonad/X11";
       description = "A binding to the X11 graphics library";
       license = stdenv.lib.licenses.bsd3;
     }) {inherit (pkgs.xorg) libX11; inherit (pkgs.xorg) libXScrnSaver;
         inherit (pkgs.xorg) libXext; inherit (pkgs.xorg) libXinerama;
         inherit (pkgs.xorg) libXrandr; inherit (pkgs.xorg) libXrender;};
  "X11-xft" = callPackage
    ({ mkDerivation, base, libXft, utf8-string, X11 }:
     mkDerivation {
       pname = "X11-xft";
       version = "0.3.1";
       sha256 = "1lgqb0s2qfwwgbvwxhjbi23rbwamzdi0l0slfr20c3jpcbp3zfjf";
       libraryHaskellDepends = [ base utf8-string X11 ];
       libraryPkgconfigDepends = [ libXft ];
       description = "Bindings to the Xft, X Free Type interface library, and some Xrender parts";
       license = "LGPL";
     }) {inherit (pkgs.xorg) libXft;};
  "Xauth" = callPackage
    ({ mkDerivation, base, libXau }:
     mkDerivation {
       pname = "Xauth";
       version = "0.1";
       sha256 = "1mvflp6y1nz9961gngbwk0b7wr8sx3p6296jfvvb6ln1kvm2scxs";
       libraryHaskellDepends = [ base ];
       libraryPkgconfigDepends = [ libXau ];
       description = "A binding to the X11 authentication library";
       license = stdenv.lib.licenses.bsd3;
     }) {inherit (pkgs.xorg) libXau;};
  "abstract-deque" = callPackage
    ({ mkDerivation, array, base, containers, random, time }:
     mkDerivation {
       pname = "abstract-deque";
       version = "0.3";
       sha256 = "18jwswjxwzc9bjiy4ds6hw2a74ki797jmfcifxd2ga4kh7ri1ah9";
       libraryHaskellDepends = [ array base containers random time ];
       homepage = "https://github.com/rrnewton/haskell-lockfree/wiki";
       description = "Abstract, parameterized interface to mutable Deques";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "abstract-deque-tests" = callPackage
    ({ mkDerivation, abstract-deque, array, base, containers, HUnit
     , random, test-framework, test-framework-hunit, time
     }:
     mkDerivation {
       pname = "abstract-deque-tests";
       version = "0.3";
       sha256 = "19gb5x5z3nvazdra3skm24c2g2byj0i4cjbzfwfghnb5q96gn5sz";
       libraryHaskellDepends = [
         abstract-deque array base containers HUnit random test-framework
         test-framework-hunit time
       ];
       testHaskellDepends = [
         abstract-deque array base containers HUnit random test-framework
         test-framework-hunit time
       ];
       homepage = "https://github.com/rrnewton/haskell-lockfree/wiki";
       description = "A test-suite for any queue or double-ended queue satisfying an interface";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "abstract-par" = callPackage
    ({ mkDerivation, base, deepseq }:
     mkDerivation {
       pname = "abstract-par";
       version = "0.3.3";
       sha256 = "0q6qsniw4wks2pw6wzncb1p1j3k6al5njnvm2v5n494hplwqg2i4";
       libraryHaskellDepends = [ base deepseq ];
       homepage = "https://github.com/simonmar/monad-par";
       description = "Type classes generalizing the functionality of the 'monad-par' library";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "accuerr" = callPackage
    ({ mkDerivation, base, bifunctors, lens, semigroups }:
     mkDerivation {
       pname = "accuerr";
       version = "0.2.0.2";
       sha256 = "0dlszai5bz05algxm98kjhnjwa7mwj620d52vrsc4fxds8q84sjg";
       libraryHaskellDepends = [ base bifunctors lens semigroups ];
       homepage = "http://www.github.com/massysett/accuerr";
       description = "Data type like Either but with accumulating error type";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "ace" = callPackage
    ({ mkDerivation, attoparsec, base, bifunctors, blaze-html
     , blaze-markup, data-default, hspec, HUnit, mtl, parsec, text
     }:
     mkDerivation {
       pname = "ace";
       version = "0.6";
       sha256 = "0f07j2rj9ylvdrijwwlpx66mj503mhjfq1x2mylpxkr6kmjjniyk";
       libraryHaskellDepends = [
         attoparsec base blaze-html blaze-markup data-default parsec text
       ];
       testHaskellDepends = [
         base bifunctors hspec HUnit mtl parsec text
       ];
       description = "Attempto Controlled English parser and printer";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "action-permutations" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "action-permutations";
       version = "0.0.0.1";
       sha256 = "0rhlzpwshixpnqma7sk28f22dkwz39b6lcwnzmd31rcnz5cyw6d4";
       libraryHaskellDepends = [ base ];
       description = "Execute a set of actions (e.g. parsers) in each possible order";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "active" = callPackage
    ({ mkDerivation, base, lens, linear, QuickCheck, semigroupoids
     , semigroups, vector
     }:
     mkDerivation {
       pname = "active";
       version = "0.2.0.13";
       sha256 = "1yw029rh0gb63bhwwjynbv173mny14is4cyjkrlvzvxwb0fi96jx";
       revision = "7";
       editedCabalFile = "0z4l6j1q3y5zq4941bsb6ypkhfg3pyvb5gcmasymh2nj9g952xkd";
       libraryHaskellDepends = [
         base lens linear semigroupoids semigroups vector
       ];
       testHaskellDepends = [
         base lens linear QuickCheck semigroupoids semigroups vector
       ];
       description = "Abstractions for animation";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "ad" = callPackage
    ({ mkDerivation, array, base, Cabal, cabal-doctest, comonad
     , containers, criterion, data-reify, directory, doctest, erf
     , filepath, free, nats, reflection, semigroups, transformers
     }:
     mkDerivation {
       pname = "ad";
       version = "4.3.5";
       sha256 = "0q4dvi02k21jq8xf0ywgmcs5mph4hpx5s3y3pj839y0g3x5paplw";
       revision = "5";
       editedCabalFile = "0yzyfqhsafzaqzj8wmjrj5ghm6jwbxya3wxc9sjl59j9q20jc4nq";
       setupHaskellDepends = [ base Cabal cabal-doctest ];
       libraryHaskellDepends = [
         array base comonad containers data-reify erf free nats reflection
         semigroups transformers
       ];
       testHaskellDepends = [ base directory doctest filepath ];
       benchmarkHaskellDepends = [ base criterion erf ];
       homepage = "http://github.com/ekmett/ad";
       description = "Automatic Differentiation";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "adjunctions" = callPackage
    ({ mkDerivation, array, base, comonad, containers, contravariant
     , distributive, free, generic-deriving, hspec, hspec-discover, mtl
     , profunctors, semigroupoids, semigroups, tagged, transformers
     , transformers-compat, void
     }:
     mkDerivation {
       pname = "adjunctions";
       version = "4.4";
       sha256 = "1sbal7cbhm12crfnfhkk322jnzgx7lhw3jzq0p463bipagsjwz2h";
       revision = "2";
       editedCabalFile = "1yfsjx7dqikg3hvld7i91xfsg5lawmr5980lvfd794sybmgxsf17";
       libraryHaskellDepends = [
         array base comonad containers contravariant distributive free mtl
         profunctors semigroupoids semigroups tagged transformers
         transformers-compat void
       ];
       testHaskellDepends = [ base distributive generic-deriving hspec ];
       testToolDepends = [ hspec-discover ];
       homepage = "http://github.com/ekmett/adjunctions/";
       description = "Adjunctions and representable functors";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "adler32" = callPackage
    ({ mkDerivation, base, bytestring, hspec, zlib }:
     mkDerivation {
       pname = "adler32";
       version = "0.1.2.0";
       sha256 = "1936b05mx842wm8swz3g3jv6m9absa04islq4rwysicz72gkrd16";
       libraryHaskellDepends = [ base bytestring ];
       librarySystemDepends = [ zlib ];
       testHaskellDepends = [ base bytestring hspec ];
       homepage = "https://github.com/redneb/hs-adler32";
       description = "An implementation of Adler-32, supporting rolling checksum operation";
       license = stdenv.lib.licenses.bsd3;
     }) {inherit (pkgs) zlib;};
  "aern2-mp" = callPackage
    ({ mkDerivation, base, convertible, hspec, integer-logarithms, lens
     , mixed-types-num, QuickCheck, regex-tdfa, rounded
     , template-haskell
     }:
     mkDerivation {
       pname = "aern2-mp";
       version = "0.1.3.1";
       sha256 = "1gyicxsdqzdbhs9bss5cfjqx859iksr7z1ilsfm9077jdf2032vm";
       libraryHaskellDepends = [
         base convertible hspec integer-logarithms lens mixed-types-num
         QuickCheck regex-tdfa rounded template-haskell
       ];
       testHaskellDepends = [ base hspec QuickCheck ];
       homepage = "https://github.com/michalkonecny/aern2";
       description = "Multi-precision ball (interval) arithmetic";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "aern2-real" = callPackage
    ({ mkDerivation, aern2-mp, aeson, base, bytestring, containers
     , convertible, hspec, lens, mixed-types-num, QuickCheck, random
     , stm, transformers
     }:
     mkDerivation {
       pname = "aern2-real";
       version = "0.1.1.0";
       sha256 = "1sq2s20vwhm0avdzqg2vb5ck6rj7aw16kcfkdyhda0dl6s2l5q15";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         aern2-mp aeson base bytestring containers convertible hspec lens
         mixed-types-num QuickCheck stm transformers
       ];
       executableHaskellDepends = [
         aern2-mp base mixed-types-num QuickCheck random
       ];
       testHaskellDepends = [ base hspec QuickCheck ];
       homepage = "https://github.com/michalkonecny/aern2";
       description = "Exact real numbers via Cauchy sequences and MPFR";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "aeson" = callPackage
    ({ mkDerivation, attoparsec, base, base-compat, bytestring
     , containers, deepseq, dlist, ghc-prim, hashable, scientific
     , tagged, template-haskell, text, th-abstraction, time
     , time-locale-compat, unordered-containers, uuid-types, vector
     }:
     mkDerivation {
       pname = "aeson";
       version = "1.3.1.1";
       sha256 = "1i1ig840fvsb1lnklcv32zsc0zscirc301lw1mpfxhc6h4pk0gw4";
       libraryHaskellDepends = [
         attoparsec base base-compat bytestring containers deepseq dlist
         ghc-prim hashable scientific tagged template-haskell text
         th-abstraction time time-locale-compat unordered-containers
         uuid-types vector
       ];
       doCheck = false;
       homepage = "https://github.com/bos/aeson";
       description = "Fast JSON parsing and encoding";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "aeson-attoparsec" = callPackage
    ({ mkDerivation, aeson, attoparsec, base }:
     mkDerivation {
       pname = "aeson-attoparsec";
       version = "0.0.0";
       sha256 = "0111qzp381jjhv1iymjg8mr3jslx5x1ll3w2dq4b6f3r8y8871m5";
       libraryHaskellDepends = [ aeson attoparsec base ];
       testHaskellDepends = [ base ];
       homepage = "https://github.com/athanclark/aeson-attoparsec#readme";
       description = "Embed an Attoparsec text parser into an Aeson parser";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "aeson-better-errors" = callPackage
    ({ mkDerivation, aeson, base, bytestring, dlist, mtl, scientific
     , text, transformers, transformers-compat, unordered-containers
     , vector, void
     }:
     mkDerivation {
       pname = "aeson-better-errors";
       version = "0.9.1.0";
       sha256 = "09vkyrhwak3bmpfsqcd2az8hfqqkxyhg468hv5avgisy0nzh3w38";
       libraryHaskellDepends = [
         aeson base bytestring dlist mtl scientific text transformers
         transformers-compat unordered-containers vector void
       ];
       homepage = "https://github.com/hdgarrood/aeson-better-errors";
       description = "Better error messages when decoding JSON values";
       license = stdenv.lib.licenses.mit;
     }) {};
  "aeson-casing" = callPackage
    ({ mkDerivation, aeson, base, tasty, tasty-hunit, tasty-quickcheck
     , tasty-th
     }:
     mkDerivation {
       pname = "aeson-casing";
       version = "0.1.0.5";
       sha256 = "0xq587sqn68gnx1np035wl5j1341v19h26d7b1c06bw2qqymdv6g";
       libraryHaskellDepends = [ aeson base ];
       testHaskellDepends = [
         aeson base tasty tasty-hunit tasty-quickcheck tasty-th
       ];
       description = "Tools to change the formatting of field names in Aeson instances";
       license = stdenv.lib.licenses.mit;
     }) {};
  "aeson-compat" = callPackage
    ({ mkDerivation, aeson, attoparsec, attoparsec-iso8601, base
     , base-compat, bytestring, containers, exceptions, hashable
     , scientific, tagged, text, time, time-locale-compat
     , unordered-containers, vector
     }:
     mkDerivation {
       pname = "aeson-compat";
       version = "0.3.9";
       sha256 = "1j13gykv4ryvmr14w5blz0nnpdb4p0hpa27wahw3mhb1lwdr8hz0";
       libraryHaskellDepends = [
         aeson attoparsec attoparsec-iso8601 base base-compat bytestring
         containers exceptions hashable scientific tagged text time
         time-locale-compat unordered-containers vector
       ];
       doCheck = false;
       homepage = "https://github.com/phadej/aeson-compat#readme";
       description = "Compatibility layer for aeson";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "aeson-diff" = callPackage
    ({ mkDerivation, aeson, base, bytestring, directory, doctest
     , edit-distance-vector, filepath, Glob, hashable, mtl
     , optparse-applicative, QuickCheck, quickcheck-instances
     , scientific, text, unordered-containers, vector
     }:
     mkDerivation {
       pname = "aeson-diff";
       version = "1.1.0.5";
       sha256 = "1kzvqzbl6pp5g49dp4qqc7cbisnkpqz0i18b6nmdb7f1nrhdvnb1";
       revision = "1";
       editedCabalFile = "0a29nph4a1ny365nhsxlm73mk6zgaam4sfx6knzqjy8dxp1gkj48";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         aeson base bytestring edit-distance-vector hashable mtl scientific
         text unordered-containers vector
       ];
       executableHaskellDepends = [
         aeson base bytestring optparse-applicative text
       ];
       testHaskellDepends = [
         aeson base bytestring directory doctest filepath Glob QuickCheck
         quickcheck-instances text unordered-containers vector
       ];
       homepage = "https://github.com/thsutton/aeson-diff";
       description = "Extract and apply patches to JSON documents";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "aeson-extra" = callPackage
    ({ mkDerivation, aeson, aeson-compat, attoparsec
     , attoparsec-iso8601, base, base-compat-batteries, bytestring
     , containers, deepseq, exceptions, hashable, parsec
     , recursion-schemes, scientific, template-haskell, text, these
     , time, unordered-containers, vector
     }:
     mkDerivation {
       pname = "aeson-extra";
       version = "0.4.1.1";
       sha256 = "1y7xss382hdxrv4jzprsm3b7ij7wiw8jgjg9wp49dx6bfvcnb2nl";
       revision = "3";
       editedCabalFile = "0b9ccv529msmqay0gw2xcxm67n08hmv6s45ivyd8vq0rig4wz407";
       libraryHaskellDepends = [
         aeson aeson-compat attoparsec attoparsec-iso8601 base
         base-compat-batteries bytestring containers deepseq exceptions
         hashable parsec recursion-schemes scientific template-haskell text
         these time unordered-containers vector
       ];
       doCheck = false;
       homepage = "https://github.com/phadej/aeson-extra#readme";
       description = "Extra goodies for aeson";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "aeson-generic-compat" = callPackage
    ({ mkDerivation, aeson, base }:
     mkDerivation {
       pname = "aeson-generic-compat";
       version = "0.0.1.3";
       sha256 = "1kr3waa46k3619yvif0zh4lx7s0zhyghlr1c5kkrvg432i8wmdm6";
       libraryHaskellDepends = [ aeson base ];
       description = "Compatible generic class names of Aeson";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "aeson-iproute" = callPackage
    ({ mkDerivation, aeson, base, doctest, iproute, text
     , unordered-containers
     }:
     mkDerivation {
       pname = "aeson-iproute";
       version = "0.2";
       sha256 = "13r6vyyw1pbk5sz32ari5kig23vsg57a5pir037adi7xicrm6kgf";
       libraryHaskellDepends = [
         aeson base iproute text unordered-containers
       ];
       testHaskellDepends = [ base doctest ];
       homepage = "https://github.com/greydot/aeson-iproute";
       description = "Aeson instances for iproute types";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "aeson-picker" = callPackage
    ({ mkDerivation, aeson, base, hspec, lens, lens-aeson, text }:
     mkDerivation {
       pname = "aeson-picker";
       version = "0.1.0.4";
       sha256 = "0ln4qwx7app1sc01irmy5lx7bqsq6wsgdig6zihpnp9rbj8263mj";
       libraryHaskellDepends = [ aeson base lens lens-aeson text ];
       testHaskellDepends = [ base hspec text ];
       homepage = "https://github.com/ozzzzz/aeson-picker#readme";
       description = "Tiny library to get fields from JSON format";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "aeson-pretty" = callPackage
    ({ mkDerivation, aeson, attoparsec, base, base-compat, bytestring
     , cmdargs, scientific, text, unordered-containers, vector
     }:
     mkDerivation {
       pname = "aeson-pretty";
       version = "0.8.7";
       sha256 = "1m977gs0s9gf3lwzlbs5y7bl6ansc5pywmn2qjk09l5bwg2yrhf1";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         aeson base base-compat bytestring scientific text
         unordered-containers vector
       ];
       executableHaskellDepends = [
         aeson attoparsec base bytestring cmdargs
       ];
       homepage = "http://github.com/informatikr/aeson-pretty";
       description = "JSON pretty-printing library and command-line tool";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "aeson-qq" = callPackage
    ({ mkDerivation, aeson, attoparsec, base, base-compat, ghc-prim
     , haskell-src-meta, hspec, parsec, scientific, template-haskell
     , text, vector
     }:
     mkDerivation {
       pname = "aeson-qq";
       version = "0.8.2";
       sha256 = "0ln13jqyfh5726hdrk1rad9a6cgrrj201plmwcfcpvq18v4m5ckd";
       libraryHaskellDepends = [
         aeson attoparsec base base-compat haskell-src-meta parsec
         scientific template-haskell text vector
       ];
       testHaskellDepends = [
         aeson attoparsec base base-compat ghc-prim haskell-src-meta hspec
         parsec scientific template-haskell text vector
       ];
       homepage = "https://github.com/sol/aeson-qq#readme";
       description = "JSON quasiquoter for Haskell";
       license = stdenv.lib.licenses.mit;
     }) {};
  "aeson-typescript" = callPackage
    ({ mkDerivation, aeson, base, bytestring, containers, directory
     , filepath, hspec, interpolate, mtl, process, template-haskell
     , temporary, text, th-abstraction, unordered-containers
     }:
     mkDerivation {
       pname = "aeson-typescript";
       version = "0.1.1.0";
       sha256 = "0sx4gavp0pvnxlxwix1di34vm2bfi5d02mzgzs402grqhh1v38vp";
       libraryHaskellDepends = [
         aeson base containers interpolate mtl template-haskell text
         th-abstraction unordered-containers
       ];
       testHaskellDepends = [
         aeson base bytestring containers directory filepath hspec
         interpolate mtl process template-haskell temporary text
         th-abstraction unordered-containers
       ];
       homepage = "https://github.com/codedownio/aeson-typescript#readme";
       description = "Generate TypeScript definition files from your ADTs";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "aeson-utils" = callPackage
    ({ mkDerivation, aeson, attoparsec, base, bytestring, scientific
     , text
     }:
     mkDerivation {
       pname = "aeson-utils";
       version = "0.3.0.2";
       sha256 = "07sbvmm158yqmw4hri9l66ag4r6l59x230gbjm9r97w4x0dlp0bi";
       revision = "7";
       editedCabalFile = "0lnlmsn5imbapdhbza1175wm04ynn1w75llkhlk1akpanx1dnd15";
       libraryHaskellDepends = [
         aeson attoparsec base bytestring scientific text
       ];
       description = "Utilities for working with Aeson";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "aeson-yak" = callPackage
    ({ mkDerivation, aeson, base }:
     mkDerivation {
       pname = "aeson-yak";
       version = "0.1.1.3";
       sha256 = "0x5a5z0bmiljl9rfapyq6srffp6v3g25qvy0x692a5as66y5ahxg";
       libraryHaskellDepends = [ aeson base ];
       homepage = "https://github.com/tejon/aeson-yak";
       description = "Handle JSON that may or may not be a list, or exist";
       license = stdenv.lib.licenses.mit;
     }) {};
  "al" = callPackage
    ({ mkDerivation, base, c2hs, mtl, openal }:
     mkDerivation {
       pname = "al";
       version = "0.1.4.2";
       sha256 = "1lpcdh2dak1r9lwd6irjs8p56p1fjphq58ixwjwbg9syl2rz7w4b";
       libraryHaskellDepends = [ base mtl ];
       libraryPkgconfigDepends = [ openal ];
       libraryToolDepends = [ c2hs ];
       homepage = "http://github.com/phaazon/al";
       description = "OpenAL 1.1 raw API.";
       license = stdenv.lib.licenses.bsd3;
     }) {inherit (pkgs) openal;};
  "alarmclock" = callPackage
    ({ mkDerivation, async, base, clock, hspec, stm, time
     , unbounded-delays
     }:
     mkDerivation {
       pname = "alarmclock";
       version = "0.5.0.2";
       sha256 = "0k6nfgxbhnsdlxiv1d6q7kgfmfnix8d1z9cpp84kz9m9jw4a6x15";
       libraryHaskellDepends = [
         async base clock stm time unbounded-delays
       ];
       testHaskellDepends = [
         async base clock hspec stm time unbounded-delays
       ];
       homepage = "https://bitbucket.org/davecturner/alarmclock";
       description = "Wake up and perform an action at a certain time";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "alerts" = callPackage
    ({ mkDerivation, base, blaze-html, text }:
     mkDerivation {
       pname = "alerts";
       version = "0.1.0.0";
       sha256 = "0s6af3267qfg18zsy0fb43hfwf3dym2zpr864n05xwgzmg9qwhaj";
       libraryHaskellDepends = [ base blaze-html text ];
       homepage = "https://github.com/alx741/alerts#readme";
       description = "Alert messages for web applications";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "alex" = callPackage
    ({ mkDerivation, array, base, containers, directory, happy, process
     }:
     mkDerivation {
       pname = "alex";
       version = "3.2.4";
       sha256 = "0cpjixgsr0b2x4s6hz4aa6gnmjw9i7xd9nlfi8m37zqlidq4v3nm";
       isLibrary = false;
       isExecutable = true;
       enableSeparateDataOutput = true;
       executableHaskellDepends = [ array base containers directory ];
       executableToolDepends = [ happy ];
       testHaskellDepends = [ base process ];
       doHaddock = false;
       homepage = "http://www.haskell.org/alex/";
       description = "Alex is a tool for generating lexical analysers in Haskell";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "alg" = callPackage
    ({ mkDerivation, base, util }:
     mkDerivation {
       pname = "alg";
       version = "0.2.9.0";
       sha256 = "0w5lxmz52nskh8ms3nliya78v1pb77f7nyn19klqf8yskaalywlq";
       libraryHaskellDepends = [ base util ];
       description = "Algebraic structures";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "algebra" = callPackage
    ({ mkDerivation, adjunctions, array, base, containers, distributive
     , mtl, nats, semigroupoids, semigroups, tagged, transformers, void
     }:
     mkDerivation {
       pname = "algebra";
       version = "4.3.1";
       sha256 = "090jaipyx5pcav2wqcqzds51fwx49l4c9cpp9nnk16bgkf92z615";
       revision = "1";
       editedCabalFile = "1lxxbbibsf1lkm6fv0svfvfbr0dg16jwcm18hcmfgwypzxqdrbdz";
       libraryHaskellDepends = [
         adjunctions array base containers distributive mtl nats
         semigroupoids semigroups tagged transformers void
       ];
       homepage = "http://github.com/ekmett/algebra/";
       description = "Constructive abstract algebra";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "algebraic-graphs" = callPackage
    ({ mkDerivation, array, base, base-compat, base-orphans, containers
     , deepseq, extra, mtl, QuickCheck
     }:
     mkDerivation {
       pname = "algebraic-graphs";
       version = "0.2";
       sha256 = "0rfs58z60nn041ymi7lilc7dyijka30l4hhdznfaz9sfzx4f8yl8";
       libraryHaskellDepends = [
         array base base-compat containers deepseq mtl
       ];
       testHaskellDepends = [
         array base base-compat base-orphans containers extra QuickCheck
       ];
       homepage = "https://github.com/snowleopard/alga";
       description = "A library for algebraic graph construction and transformation";
       license = stdenv.lib.licenses.mit;
     }) {};
  "almost-fix" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "almost-fix";
       version = "0.0.2";
       sha256 = "03x715jcrsxfs2d08hsg3y5f6a4bnlzfxsmhzimvpdp9bw0psn90";
       libraryHaskellDepends = [ base ];
       description = "Recurse while a predicate is satisfied";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "alsa-core" = callPackage
    ({ mkDerivation, alsaLib, base, extensible-exceptions }:
     mkDerivation {
       pname = "alsa-core";
       version = "0.5.0.1";
       sha256 = "1avh4a419h9d2zsslg6j8hm87ppgsgqafz8ll037rk2yy1g4jl7b";
       libraryHaskellDepends = [ base extensible-exceptions ];
       libraryPkgconfigDepends = [ alsaLib ];
       homepage = "http://www.haskell.org/haskellwiki/ALSA";
       description = "Binding to the ALSA Library API (Exceptions)";
       license = stdenv.lib.licenses.bsd3;
       platforms = [ "i686-linux" "x86_64-linux" ];
     }) {inherit (pkgs) alsaLib;};
  "alsa-pcm" = callPackage
    ({ mkDerivation, alsa-core, alsaLib, array, base
     , extensible-exceptions, sample-frame, semigroups, storable-record
     }:
     mkDerivation {
       pname = "alsa-pcm";
       version = "0.6.1.1";
       sha256 = "1mllr9nbm3qb837zgvd6mrpr6f8i272wflv0a45rrpsq50zgcj33";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         alsa-core array base extensible-exceptions sample-frame semigroups
         storable-record
       ];
       libraryPkgconfigDepends = [ alsaLib ];
       homepage = "http://www.haskell.org/haskellwiki/ALSA";
       description = "Binding to the ALSA Library API (PCM audio)";
       license = stdenv.lib.licenses.bsd3;
     }) {inherit (pkgs) alsaLib;};
  "alsa-seq" = callPackage
    ({ mkDerivation, alsa-core, alsaLib, array, base, bytestring
     , data-accessor, enumset, extensible-exceptions, poll, transformers
     , utility-ht
     }:
     mkDerivation {
       pname = "alsa-seq";
       version = "0.6.0.7";
       sha256 = "0y5pw2qsga19l79pmmrxc3m7w60yrw9scl9bb71z1alk97ia3k86";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         alsa-core array base bytestring data-accessor enumset
         extensible-exceptions poll transformers utility-ht
       ];
       libraryPkgconfigDepends = [ alsaLib ];
       homepage = "http://www.haskell.org/haskellwiki/ALSA";
       description = "Binding to the ALSA Library API (MIDI sequencer)";
       license = stdenv.lib.licenses.bsd3;
     }) {inherit (pkgs) alsaLib;};
  "alternative-vector" = callPackage
    ({ mkDerivation, base, vector }:
     mkDerivation {
       pname = "alternative-vector";
       version = "0.0.0";
       sha256 = "1cf7akvr9nac1483chh7rd3xp5i5zk78f245lw9ixj6v133lnis2";
       libraryHaskellDepends = [ base vector ];
       homepage = "https://github.com/athanclark/alternative-vector#readme";
       description = "Use vectors instead of lists for many and some";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "alternators" = callPackage
    ({ mkDerivation, base, lens, mmorph, mtl, newtype-generics, stm
     , transformers
     }:
     mkDerivation {
       pname = "alternators";
       version = "1.0.0.0";
       sha256 = "0ffk7xhx7n7h5mhb43ss6kprm9mzc0jzdnagz5wdsgqr8a5mnfa4";
       libraryHaskellDepends = [
         base lens mmorph mtl newtype-generics stm transformers
       ];
       homepage = "https://github.com/louispan/alternators#readme";
       description = "Handy functions when using transformers";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "amazonka" = callPackage
    ({ mkDerivation, amazonka-core, base, bytestring, conduit
     , conduit-extra, directory, exceptions, http-client, http-conduit
     , http-types, ini, mmorph, monad-control, mtl, resourcet, retry
     , tasty, tasty-hunit, text, time, transformers, transformers-base
     , transformers-compat, void
     }:
     mkDerivation {
       pname = "amazonka";
       version = "1.6.0";
       sha256 = "07647x7lq9kaq6bqh38rvdiajji4ks6s7nvxv2xi4v4lhwn8j89p";
       libraryHaskellDepends = [
         amazonka-core base bytestring conduit conduit-extra directory
         exceptions http-client http-conduit http-types ini mmorph
         monad-control mtl resourcet retry text time transformers
         transformers-base transformers-compat void
       ];
       testHaskellDepends = [ base tasty tasty-hunit ];
       homepage = "https://github.com/brendanhay/amazonka";
       description = "Comprehensive Amazon Web Services SDK";
       license = stdenv.lib.licenses.mpl20;
     }) {};
  "amazonka-apigateway" = callPackage
    ({ mkDerivation, amazonka-core, amazonka-test, base, bytestring
     , tasty, tasty-hunit, text, time, unordered-containers
     }:
     mkDerivation {
       pname = "amazonka-apigateway";
       version = "1.6.0";
       sha256 = "1s2snyx9s23435wsan8hbi1vnql3n3rgh23ffv9d0n43pp7kxrjn";
       libraryHaskellDepends = [ amazonka-core base ];
       testHaskellDepends = [
         amazonka-core amazonka-test base bytestring tasty tasty-hunit text
         time unordered-containers
       ];
       homepage = "https://github.com/brendanhay/amazonka";
       description = "Amazon API Gateway SDK";
       license = stdenv.lib.licenses.mpl20;
     }) {};
  "amazonka-application-autoscaling" = callPackage
    ({ mkDerivation, amazonka-core, amazonka-test, base, bytestring
     , tasty, tasty-hunit, text, time, unordered-containers
     }:
     mkDerivation {
       pname = "amazonka-application-autoscaling";
       version = "1.6.0";
       sha256 = "1xqxlrw02r4w5h348ab04lrwp4cxk3sksx5xhmxr1macqb8sfdjm";
       libraryHaskellDepends = [ amazonka-core base ];
       testHaskellDepends = [
         amazonka-core amazonka-test base bytestring tasty tasty-hunit text
         time unordered-containers
       ];
       homepage = "https://github.com/brendanhay/amazonka";
       description = "Amazon Application Auto Scaling SDK";
       license = stdenv.lib.licenses.mpl20;
     }) {};
  "amazonka-appstream" = callPackage
    ({ mkDerivation, amazonka-core, amazonka-test, base, bytestring
     , tasty, tasty-hunit, text, time, unordered-containers
     }:
     mkDerivation {
       pname = "amazonka-appstream";
       version = "1.6.0";
       sha256 = "1ps76yri9bnfkr4ya1yc9myrzpf44a01nrkd03kw8qidjcmnk47b";
       libraryHaskellDepends = [ amazonka-core base ];
       testHaskellDepends = [
         amazonka-core amazonka-test base bytestring tasty tasty-hunit text
         time unordered-containers
       ];
       homepage = "https://github.com/brendanhay/amazonka";
       description = "Amazon AppStream SDK";
       license = stdenv.lib.licenses.mpl20;
     }) {};
  "amazonka-autoscaling" = callPackage
    ({ mkDerivation, amazonka-core, amazonka-test, base, bytestring
     , tasty, tasty-hunit, text, time, unordered-containers
     }:
     mkDerivation {
       pname = "amazonka-autoscaling";
       version = "1.6.0";
       sha256 = "1lzqsn7bmq2yrdmn2hnic5cghmw7kxfmkvqcs8vrk2gg4cmi6lhv";
       libraryHaskellDepends = [ amazonka-core base ];
       testHaskellDepends = [
         amazonka-core amazonka-test base bytestring tasty tasty-hunit text
         time unordered-containers
       ];
       homepage = "https://github.com/brendanhay/amazonka";
       description = "Amazon Auto Scaling SDK";
       license = stdenv.lib.licenses.mpl20;
     }) {};
  "amazonka-budgets" = callPackage
    ({ mkDerivation, amazonka-core, amazonka-test, base, bytestring
     , tasty, tasty-hunit, text, time, unordered-containers
     }:
     mkDerivation {
       pname = "amazonka-budgets";
       version = "1.6.0";
       sha256 = "1dz4gi6qkkmfhz3yqj0pcjgsac4a2036bpiwayxdyzbzda2r5inc";
       libraryHaskellDepends = [ amazonka-core base ];
       testHaskellDepends = [
         amazonka-core amazonka-test base bytestring tasty tasty-hunit text
         time unordered-containers
       ];
       homepage = "https://github.com/brendanhay/amazonka";
       description = "Amazon Budgets SDK";
       license = stdenv.lib.licenses.mpl20;
     }) {};
  "amazonka-certificatemanager" = callPackage
    ({ mkDerivation, amazonka-core, amazonka-test, base, bytestring
     , tasty, tasty-hunit, text, time, unordered-containers
     }:
     mkDerivation {
       pname = "amazonka-certificatemanager";
       version = "1.6.0";
       sha256 = "0sma4rbylmj7dl0irab5vh32na52l1qb34xpa6l4icx1hp397pqz";
       libraryHaskellDepends = [ amazonka-core base ];
       testHaskellDepends = [
         amazonka-core amazonka-test base bytestring tasty tasty-hunit text
         time unordered-containers
       ];
       homepage = "https://github.com/brendanhay/amazonka";
       description = "Amazon Certificate Manager SDK";
       license = stdenv.lib.licenses.mpl20;
     }) {};
  "amazonka-cloudformation" = callPackage
    ({ mkDerivation, amazonka-core, amazonka-test, base, bytestring
     , tasty, tasty-hunit, text, time, unordered-containers
     }:
     mkDerivation {
       pname = "amazonka-cloudformation";
       version = "1.6.0";
       sha256 = "0dc3zb50vq3kkw65kkmrgz1vyjrzm1bmm3znj39i6slhfhjwiqhm";
       libraryHaskellDepends = [ amazonka-core base ];
       testHaskellDepends = [
         amazonka-core amazonka-test base bytestring tasty tasty-hunit text
         time unordered-containers
       ];
       homepage = "https://github.com/brendanhay/amazonka";
       description = "Amazon CloudFormation SDK";
       license = stdenv.lib.licenses.mpl20;
     }) {};
  "amazonka-cloudfront" = callPackage
    ({ mkDerivation, amazonka-core, amazonka-test, base, bytestring
     , tasty, tasty-hunit, text, time, unordered-containers
     }:
     mkDerivation {
       pname = "amazonka-cloudfront";
       version = "1.6.0";
       sha256 = "18ilsfm3918x3lzwr0v470n7pkc2r1iknlmz8bqbxfgkiyc60slm";
       libraryHaskellDepends = [ amazonka-core base ];
       testHaskellDepends = [
         amazonka-core amazonka-test base bytestring tasty tasty-hunit text
         time unordered-containers
       ];
       homepage = "https://github.com/brendanhay/amazonka";
       description = "Amazon CloudFront SDK";
       license = stdenv.lib.licenses.mpl20;
     }) {};
  "amazonka-cloudhsm" = callPackage
    ({ mkDerivation, amazonka-core, amazonka-test, base, bytestring
     , tasty, tasty-hunit, text, time, unordered-containers
     }:
     mkDerivation {
       pname = "amazonka-cloudhsm";
       version = "1.6.0";
       sha256 = "0pqvliw77nk9c4ac3zhmbszlxcd13ibrg28rj31yi1lllcw708p4";
       libraryHaskellDepends = [ amazonka-core base ];
       testHaskellDepends = [
         amazonka-core amazonka-test base bytestring tasty tasty-hunit text
         time unordered-containers
       ];
       homepage = "https://github.com/brendanhay/amazonka";
       description = "Amazon CloudHSM SDK";
       license = stdenv.lib.licenses.mpl20;
     }) {};
  "amazonka-cloudsearch" = callPackage
    ({ mkDerivation, amazonka-core, amazonka-test, base, bytestring
     , tasty, tasty-hunit, text, time, unordered-containers
     }:
     mkDerivation {
       pname = "amazonka-cloudsearch";
       version = "1.6.0";
       sha256 = "1533ii94iyi7z0nsnldxmf0hgkpx01xz10mgsd7z9n5cfrak85yx";
       libraryHaskellDepends = [ amazonka-core base ];
       testHaskellDepends = [
         amazonka-core amazonka-test base bytestring tasty tasty-hunit text
         time unordered-containers
       ];
       homepage = "https://github.com/brendanhay/amazonka";
       description = "Amazon CloudSearch SDK";
       license = stdenv.lib.licenses.mpl20;
     }) {};
  "amazonka-cloudsearch-domains" = callPackage
    ({ mkDerivation, amazonka-core, amazonka-test, base, bytestring
     , tasty, tasty-hunit, text, time, unordered-containers
     }:
     mkDerivation {
       pname = "amazonka-cloudsearch-domains";
       version = "1.6.0";
       sha256 = "19vwiyrcc591cpaflv0ji8fg7xjx1vba1f4kv0gh9mgfk9px7w14";
       libraryHaskellDepends = [ amazonka-core base ];
       testHaskellDepends = [
         amazonka-core amazonka-test base bytestring tasty tasty-hunit text
         time unordered-containers
       ];
       homepage = "https://github.com/brendanhay/amazonka";
       description = "Amazon CloudSearch Domain SDK";
       license = stdenv.lib.licenses.mpl20;
     }) {};
  "amazonka-cloudtrail" = callPackage
    ({ mkDerivation, amazonka-core, amazonka-test, base, bytestring
     , tasty, tasty-hunit, text, time, unordered-containers
     }:
     mkDerivation {
       pname = "amazonka-cloudtrail";
       version = "1.6.0";
       sha256 = "090w96krmwd2h4l6s4hz04rfwwi4y6bifzfsw0hn7r62dbwrvnfr";
       libraryHaskellDepends = [ amazonka-core base ];
       testHaskellDepends = [
         amazonka-core amazonka-test base bytestring tasty tasty-hunit text
         time unordered-containers
       ];
       homepage = "https://github.com/brendanhay/amazonka";
       description = "Amazon CloudTrail SDK";
       license = stdenv.lib.licenses.mpl20;
     }) {};
  "amazonka-cloudwatch" = callPackage
    ({ mkDerivation, amazonka-core, amazonka-test, base, bytestring
     , tasty, tasty-hunit, text, time, unordered-containers
     }:
     mkDerivation {
       pname = "amazonka-cloudwatch";
       version = "1.6.0";
       sha256 = "0lgfvca9gsqd38ly7f6dvvivi34qbpbqqng3hb89cbdjcjri5j15";
       libraryHaskellDepends = [ amazonka-core base ];
       testHaskellDepends = [
         amazonka-core amazonka-test base bytestring tasty tasty-hunit text
         time unordered-containers
       ];
       homepage = "https://github.com/brendanhay/amazonka";
       description = "Amazon CloudWatch SDK";
       license = stdenv.lib.licenses.mpl20;
     }) {};
  "amazonka-cloudwatch-events" = callPackage
    ({ mkDerivation, amazonka-core, amazonka-test, base, bytestring
     , tasty, tasty-hunit, text, time, unordered-containers
     }:
     mkDerivation {
       pname = "amazonka-cloudwatch-events";
       version = "1.6.0";
       sha256 = "0kgcsbsxi6z84avfzmx9z1111h49yliyyiqww3b39if4dx1mxyqk";
       libraryHaskellDepends = [ amazonka-core base ];
       testHaskellDepends = [
         amazonka-core amazonka-test base bytestring tasty tasty-hunit text
         time unordered-containers
       ];
       homepage = "https://github.com/brendanhay/amazonka";
       description = "Amazon CloudWatch Events SDK";
       license = stdenv.lib.licenses.mpl20;
     }) {};
  "amazonka-cloudwatch-logs" = callPackage
    ({ mkDerivation, amazonka-core, amazonka-test, base, bytestring
     , tasty, tasty-hunit, text, time, unordered-containers
     }:
     mkDerivation {
       pname = "amazonka-cloudwatch-logs";
       version = "1.6.0";
       sha256 = "0zgfhz5646s6hkzw2n686rwhz5g9l1mrakagq3ngaagvy15fgr40";
       libraryHaskellDepends = [ amazonka-core base ];
       testHaskellDepends = [
         amazonka-core amazonka-test base bytestring tasty tasty-hunit text
         time unordered-containers
       ];
       homepage = "https://github.com/brendanhay/amazonka";
       description = "Amazon CloudWatch Logs SDK";
       license = stdenv.lib.licenses.mpl20;
     }) {};
  "amazonka-codebuild" = callPackage
    ({ mkDerivation, amazonka-core, amazonka-test, base, bytestring
     , tasty, tasty-hunit, text, time, unordered-containers
     }:
     mkDerivation {
       pname = "amazonka-codebuild";
       version = "1.6.0";
       sha256 = "1ax0am75zy8xddzkn36sc9dpda1j5d28pbrdddhlr98airbl7gzx";
       libraryHaskellDepends = [ amazonka-core base ];
       testHaskellDepends = [
         amazonka-core amazonka-test base bytestring tasty tasty-hunit text
         time unordered-containers
       ];
       homepage = "https://github.com/brendanhay/amazonka";
       description = "Amazon CodeBuild SDK";
       license = stdenv.lib.licenses.mpl20;
     }) {};
  "amazonka-codecommit" = callPackage
    ({ mkDerivation, amazonka-core, amazonka-test, base, bytestring
     , tasty, tasty-hunit, text, time, unordered-containers
     }:
     mkDerivation {
       pname = "amazonka-codecommit";
       version = "1.6.0";
       sha256 = "0594d3frpxc2d9sw265dhph8q1gvzsx9n6l1vcgwglxbpwq2cbwa";
       libraryHaskellDepends = [ amazonka-core base ];
       testHaskellDepends = [
         amazonka-core amazonka-test base bytestring tasty tasty-hunit text
         time unordered-containers
       ];
       homepage = "https://github.com/brendanhay/amazonka";
       description = "Amazon CodeCommit SDK";
       license = stdenv.lib.licenses.mpl20;
     }) {};
  "amazonka-codedeploy" = callPackage
    ({ mkDerivation, amazonka-core, amazonka-test, base, bytestring
     , tasty, tasty-hunit, text, time, unordered-containers
     }:
     mkDerivation {
       pname = "amazonka-codedeploy";
       version = "1.6.0";
       sha256 = "1py2sfnwgavqhb8z2ngxx6b3gh0f9r3l84r5w5dcn6l5p2dbj59k";
       libraryHaskellDepends = [ amazonka-core base ];
       testHaskellDepends = [
         amazonka-core amazonka-test base bytestring tasty tasty-hunit text
         time unordered-containers
       ];
       homepage = "https://github.com/brendanhay/amazonka";
       description = "Amazon CodeDeploy SDK";
       license = stdenv.lib.licenses.mpl20;
     }) {};
  "amazonka-codepipeline" = callPackage
    ({ mkDerivation, amazonka-core, amazonka-test, base, bytestring
     , tasty, tasty-hunit, text, time, unordered-containers
     }:
     mkDerivation {
       pname = "amazonka-codepipeline";
       version = "1.6.0";
       sha256 = "0hy05s7wl410319z2svppg6aqc00zsix6m4l8gniqq1i34iflvn4";
       libraryHaskellDepends = [ amazonka-core base ];
       testHaskellDepends = [
         amazonka-core amazonka-test base bytestring tasty tasty-hunit text
         time unordered-containers
       ];
       homepage = "https://github.com/brendanhay/amazonka";
       description = "Amazon CodePipeline SDK";
       license = stdenv.lib.licenses.mpl20;
     }) {};
  "amazonka-cognito-identity" = callPackage
    ({ mkDerivation, amazonka-core, amazonka-test, base, bytestring
     , tasty, tasty-hunit, text, time, unordered-containers
     }:
     mkDerivation {
       pname = "amazonka-cognito-identity";
       version = "1.6.0";
       sha256 = "1mdnr66nq86ndh80ymgvh12crdqyqv212qkb2r2hzz6k23i31b1s";
       libraryHaskellDepends = [ amazonka-core base ];
       testHaskellDepends = [
         amazonka-core amazonka-test base bytestring tasty tasty-hunit text
         time unordered-containers
       ];
       homepage = "https://github.com/brendanhay/amazonka";
       description = "Amazon Cognito Identity SDK";
       license = stdenv.lib.licenses.mpl20;
     }) {};
  "amazonka-cognito-idp" = callPackage
    ({ mkDerivation, amazonka-core, amazonka-test, base, bytestring
     , tasty, tasty-hunit, text, time, unordered-containers
     }:
     mkDerivation {
       pname = "amazonka-cognito-idp";
       version = "1.6.0";
       sha256 = "1zqzx0l3g7kb22synk0hsy48zz320j906y7jnj7r7fqhrb48k2d9";
       libraryHaskellDepends = [ amazonka-core base ];
       testHaskellDepends = [
         amazonka-core amazonka-test base bytestring tasty tasty-hunit text
         time unordered-containers
       ];
       homepage = "https://github.com/brendanhay/amazonka";
       description = "Amazon Cognito Identity Provider SDK";
       license = stdenv.lib.licenses.mpl20;
     }) {};
  "amazonka-cognito-sync" = callPackage
    ({ mkDerivation, amazonka-core, amazonka-test, base, bytestring
     , tasty, tasty-hunit, text, time, unordered-containers
     }:
     mkDerivation {
       pname = "amazonka-cognito-sync";
       version = "1.6.0";
       sha256 = "0dgldjisp3sxq3csnn7ffsh0bn1r2w32vlyz6dj6f7pkw7c11pjz";
       libraryHaskellDepends = [ amazonka-core base ];
       testHaskellDepends = [
         amazonka-core amazonka-test base bytestring tasty tasty-hunit text
         time unordered-containers
       ];
       homepage = "https://github.com/brendanhay/amazonka";
       description = "Amazon Cognito Sync SDK";
       license = stdenv.lib.licenses.mpl20;
     }) {};
  "amazonka-config" = callPackage
    ({ mkDerivation, amazonka-core, amazonka-test, base, bytestring
     , tasty, tasty-hunit, text, time, unordered-containers
     }:
     mkDerivation {
       pname = "amazonka-config";
       version = "1.6.0";
       sha256 = "1kf98bz7jikj3xh2k49lpf04i0p9y046x4mb93xwrywy0jy3xc2w";
       libraryHaskellDepends = [ amazonka-core base ];
       testHaskellDepends = [
         amazonka-core amazonka-test base bytestring tasty tasty-hunit text
         time unordered-containers
       ];
       homepage = "https://github.com/brendanhay/amazonka";
       description = "Amazon Config SDK";
       license = stdenv.lib.licenses.mpl20;
     }) {};
  "amazonka-core" = callPackage
    ({ mkDerivation, aeson, attoparsec, base, bifunctors, bytestring
     , case-insensitive, conduit, conduit-extra, cryptonite
     , data-ordlist, deepseq, exceptions, hashable, http-client
     , http-conduit, http-types, lens, memory, mtl, QuickCheck
     , quickcheck-unicode, resourcet, scientific, semigroups, tagged
     , tasty, tasty-hunit, tasty-quickcheck, template-haskell, text
     , time, transformers, transformers-compat, unordered-containers
     , xml-conduit, xml-types
     }:
     mkDerivation {
       pname = "amazonka-core";
       version = "1.6.0";
       sha256 = "1j9x17zhyxrg4ds5pdxfjdb4z7hpzn42cydx34j25h5d9avwbqdg";
       libraryHaskellDepends = [
         aeson attoparsec base bifunctors bytestring case-insensitive
         conduit conduit-extra cryptonite deepseq exceptions hashable
         http-client http-conduit http-types lens memory mtl resourcet
         scientific semigroups tagged text time transformers
         transformers-compat unordered-containers xml-conduit xml-types
       ];
       testHaskellDepends = [
         aeson base bytestring case-insensitive conduit data-ordlist
         http-conduit http-types lens QuickCheck quickcheck-unicode tasty
         tasty-hunit tasty-quickcheck template-haskell text time
       ];
       doCheck = false;
       homepage = "https://github.com/brendanhay/amazonka";
       description = "Core data types and functionality for Amazonka libraries";
       license = stdenv.lib.licenses.mpl20;
     }) {};
  "amazonka-datapipeline" = callPackage
    ({ mkDerivation, amazonka-core, amazonka-test, base, bytestring
     , tasty, tasty-hunit, text, time, unordered-containers
     }:
     mkDerivation {
       pname = "amazonka-datapipeline";
       version = "1.6.0";
       sha256 = "1r9sbzc6z5md9z1yzb3sr41ih3kfjg5dx9z38p61rvv413bjs88v";
       libraryHaskellDepends = [ amazonka-core base ];
       testHaskellDepends = [
         amazonka-core amazonka-test base bytestring tasty tasty-hunit text
         time unordered-containers
       ];
       homepage = "https://github.com/brendanhay/amazonka";
       description = "Amazon Data Pipeline SDK";
       license = stdenv.lib.licenses.mpl20;
     }) {};
  "amazonka-devicefarm" = callPackage
    ({ mkDerivation, amazonka-core, amazonka-test, base, bytestring
     , tasty, tasty-hunit, text, time, unordered-containers
     }:
     mkDerivation {
       pname = "amazonka-devicefarm";
       version = "1.6.0";
       sha256 = "0sf56mzd6kbyhq927wys8ayp9mvr0rpisjs6rs3s8m62n2w786yq";
       libraryHaskellDepends = [ amazonka-core base ];
       testHaskellDepends = [
         amazonka-core amazonka-test base bytestring tasty tasty-hunit text
         time unordered-containers
       ];
       homepage = "https://github.com/brendanhay/amazonka";
       description = "Amazon Device Farm SDK";
       license = stdenv.lib.licenses.mpl20;
     }) {};
  "amazonka-directconnect" = callPackage
    ({ mkDerivation, amazonka-core, amazonka-test, base, bytestring
     , tasty, tasty-hunit, text, time, unordered-containers
     }:
     mkDerivation {
       pname = "amazonka-directconnect";
       version = "1.6.0";
       sha256 = "0ciqadw5kam6b51irx45kc3g03qh50pdp8d321v83b2yhv7bk1cd";
       libraryHaskellDepends = [ amazonka-core base ];
       testHaskellDepends = [
         amazonka-core amazonka-test base bytestring tasty tasty-hunit text
         time unordered-containers
       ];
       homepage = "https://github.com/brendanhay/amazonka";
       description = "Amazon Direct Connect SDK";
       license = stdenv.lib.licenses.mpl20;
     }) {};
  "amazonka-discovery" = callPackage
    ({ mkDerivation, amazonka-core, amazonka-test, base, bytestring
     , tasty, tasty-hunit, text, time, unordered-containers
     }:
     mkDerivation {
       pname = "amazonka-discovery";
       version = "1.6.0";
       sha256 = "04wj34lm7amxjcg9bm77nsfjgx76n9b4scj8pspc44qldgbpmikv";
       libraryHaskellDepends = [ amazonka-core base ];
       testHaskellDepends = [
         amazonka-core amazonka-test base bytestring tasty tasty-hunit text
         time unordered-containers
       ];
       homepage = "https://github.com/brendanhay/amazonka";
       description = "Amazon Application Discovery Service SDK";
       license = stdenv.lib.licenses.mpl20;
     }) {};
  "amazonka-dms" = callPackage
    ({ mkDerivation, amazonka-core, amazonka-test, base, bytestring
     , tasty, tasty-hunit, text, time, unordered-containers
     }:
     mkDerivation {
       pname = "amazonka-dms";
       version = "1.6.0";
       sha256 = "1ww0l7xi9ia6danlm4mdh5d3y38jv56g4dd1jw588hkn5bf1jpx7";
       libraryHaskellDepends = [ amazonka-core base ];
       testHaskellDepends = [
         amazonka-core amazonka-test base bytestring tasty tasty-hunit text
         time unordered-containers
       ];
       homepage = "https://github.com/brendanhay/amazonka";
       description = "Amazon Database Migration Service SDK";
       license = stdenv.lib.licenses.mpl20;
     }) {};
  "amazonka-ds" = callPackage
    ({ mkDerivation, amazonka-core, amazonka-test, base, bytestring
     , tasty, tasty-hunit, text, time, unordered-containers
     }:
     mkDerivation {
       pname = "amazonka-ds";
       version = "1.6.0";
       sha256 = "12fkcqhckmrkmh5prfrjdc6dq5cm0g3wsm9pz60jzrmf724k7yh6";
       libraryHaskellDepends = [ amazonka-core base ];
       testHaskellDepends = [
         amazonka-core amazonka-test base bytestring tasty tasty-hunit text
         time unordered-containers
       ];
       homepage = "https://github.com/brendanhay/amazonka";
       description = "Amazon Directory Service SDK";
       license = stdenv.lib.licenses.mpl20;
     }) {};
  "amazonka-dynamodb" = callPackage
    ({ mkDerivation, amazonka-core, amazonka-test, base, bytestring
     , tasty, tasty-hunit, text, time, unordered-containers
     }:
     mkDerivation {
       pname = "amazonka-dynamodb";
       version = "1.6.0";
       sha256 = "0gwsgyjvqzyhzkfn73854s6hr55va6l6a3m074ajz5wqz3j4xx9k";
       libraryHaskellDepends = [ amazonka-core base ];
       testHaskellDepends = [
         amazonka-core amazonka-test base bytestring tasty tasty-hunit text
         time unordered-containers
       ];
       homepage = "https://github.com/brendanhay/amazonka";
       description = "Amazon DynamoDB SDK";
       license = stdenv.lib.licenses.mpl20;
     }) {};
  "amazonka-dynamodb-streams" = callPackage
    ({ mkDerivation, amazonka-core, amazonka-test, base, bytestring
     , tasty, tasty-hunit, text, time, unordered-containers
     }:
     mkDerivation {
       pname = "amazonka-dynamodb-streams";
       version = "1.6.0";
       sha256 = "0zz590xdpjabic8m7if6a4pcfrdafqr66wcxnwn2758fyzfk5y5k";
       libraryHaskellDepends = [ amazonka-core base ];
       testHaskellDepends = [
         amazonka-core amazonka-test base bytestring tasty tasty-hunit text
         time unordered-containers
       ];
       homepage = "https://github.com/brendanhay/amazonka";
       description = "Amazon DynamoDB Streams SDK";
       license = stdenv.lib.licenses.mpl20;
     }) {};
  "amazonka-ec2" = callPackage
    ({ mkDerivation, amazonka-core, amazonka-test, base, bytestring
     , tasty, tasty-hunit, text, time, unordered-containers
     }:
     mkDerivation {
       pname = "amazonka-ec2";
       version = "1.6.0";
       sha256 = "1k2mm5ypkwr07iwc76b15q823sv5rq5jxfz4r7qckal8w72c4892";
       libraryHaskellDepends = [ amazonka-core base ];
       testHaskellDepends = [
         amazonka-core amazonka-test base bytestring tasty tasty-hunit text
         time unordered-containers
       ];
       homepage = "https://github.com/brendanhay/amazonka";
       description = "Amazon Elastic Compute Cloud SDK";
       license = stdenv.lib.licenses.mpl20;
     }) {};
  "amazonka-ecr" = callPackage
    ({ mkDerivation, amazonka-core, amazonka-test, base, bytestring
     , tasty, tasty-hunit, text, time, unordered-containers
     }:
     mkDerivation {
       pname = "amazonka-ecr";
       version = "1.6.0";
       sha256 = "0l44xxify9k87imc09wvn56xnmvgf3n2ydvs4s3iph6lnka8l222";
       libraryHaskellDepends = [ amazonka-core base ];
       testHaskellDepends = [
         amazonka-core amazonka-test base bytestring tasty tasty-hunit text
         time unordered-containers
       ];
       homepage = "https://github.com/brendanhay/amazonka";
       description = "Amazon EC2 Container Registry SDK";
       license = stdenv.lib.licenses.mpl20;
     }) {};
  "amazonka-ecs" = callPackage
    ({ mkDerivation, amazonka-core, amazonka-test, base, bytestring
     , tasty, tasty-hunit, text, time, unordered-containers
     }:
     mkDerivation {
       pname = "amazonka-ecs";
       version = "1.6.0";
       sha256 = "0gyy9iglv8744p3h249j0mdd5n4f756ci2048frpb51mx2mkb59h";
       libraryHaskellDepends = [ amazonka-core base ];
       testHaskellDepends = [
         amazonka-core amazonka-test base bytestring tasty tasty-hunit text
         time unordered-containers
       ];
       homepage = "https://github.com/brendanhay/amazonka";
       description = "Amazon EC2 Container Service SDK";
       license = stdenv.lib.licenses.mpl20;
     }) {};
  "amazonka-efs" = callPackage
    ({ mkDerivation, amazonka-core, amazonka-test, base, bytestring
     , tasty, tasty-hunit, text, time, unordered-containers
     }:
     mkDerivation {
       pname = "amazonka-efs";
       version = "1.6.0";
       sha256 = "1fxg86zzjyv5lvlmn2f2iph5rwcfmwk740i2jjs3xmh68hlmd116";
       libraryHaskellDepends = [ amazonka-core base ];
       testHaskellDepends = [
         amazonka-core amazonka-test base bytestring tasty tasty-hunit text
         time unordered-containers
       ];
       homepage = "https://github.com/brendanhay/amazonka";
       description = "Amazon Elastic File System SDK";
       license = stdenv.lib.licenses.mpl20;
     }) {};
  "amazonka-elasticache" = callPackage
    ({ mkDerivation, amazonka-core, amazonka-test, base, bytestring
     , tasty, tasty-hunit, text, time, unordered-containers
     }:
     mkDerivation {
       pname = "amazonka-elasticache";
       version = "1.6.0";
       sha256 = "0s9rfrv128dsir497g9r6pp68xgfl34rshlcfgyk95fqw8n4m9z4";
       libraryHaskellDepends = [ amazonka-core base ];
       testHaskellDepends = [
         amazonka-core amazonka-test base bytestring tasty tasty-hunit text
         time unordered-containers
       ];
       homepage = "https://github.com/brendanhay/amazonka";
       description = "Amazon ElastiCache SDK";
       license = stdenv.lib.licenses.mpl20;
     }) {};
  "amazonka-elasticbeanstalk" = callPackage
    ({ mkDerivation, amazonka-core, amazonka-test, base, bytestring
     , tasty, tasty-hunit, text, time, unordered-containers
     }:
     mkDerivation {
       pname = "amazonka-elasticbeanstalk";
       version = "1.6.0";
       sha256 = "0siqna1fcxwpbdvjicyv09l2wcfddda8c47nmdd70ns7cdbhdp61";
       libraryHaskellDepends = [ amazonka-core base ];
       testHaskellDepends = [
         amazonka-core amazonka-test base bytestring tasty tasty-hunit text
         time unordered-containers
       ];
       homepage = "https://github.com/brendanhay/amazonka";
       description = "Amazon Elastic Beanstalk SDK";
       license = stdenv.lib.licenses.mpl20;
     }) {};
  "amazonka-elasticsearch" = callPackage
    ({ mkDerivation, amazonka-core, amazonka-test, base, bytestring
     , tasty, tasty-hunit, text, time, unordered-containers
     }:
     mkDerivation {
       pname = "amazonka-elasticsearch";
       version = "1.6.0";
       sha256 = "10rhbwic050ncinjklllygg3jnv169smkwdcr2xmxv3g3jpgqa9l";
       libraryHaskellDepends = [ amazonka-core base ];
       testHaskellDepends = [
         amazonka-core amazonka-test base bytestring tasty tasty-hunit text
         time unordered-containers
       ];
       homepage = "https://github.com/brendanhay/amazonka";
       description = "Amazon Elasticsearch Service SDK";
       license = stdenv.lib.licenses.mpl20;
     }) {};
  "amazonka-elastictranscoder" = callPackage
    ({ mkDerivation, amazonka-core, amazonka-test, base, bytestring
     , tasty, tasty-hunit, text, time, unordered-containers
     }:
     mkDerivation {
       pname = "amazonka-elastictranscoder";
       version = "1.6.0";
       sha256 = "02n1yg4vks5sc8mqm5prz2clgf7pyn9yf98mx1h1mk89gv4sf4mb";
       libraryHaskellDepends = [ amazonka-core base ];
       testHaskellDepends = [
         amazonka-core amazonka-test base bytestring tasty tasty-hunit text
         time unordered-containers
       ];
       homepage = "https://github.com/brendanhay/amazonka";
       description = "Amazon Elastic Transcoder SDK";
       license = stdenv.lib.licenses.mpl20;
     }) {};
  "amazonka-elb" = callPackage
    ({ mkDerivation, amazonka-core, amazonka-test, base, bytestring
     , tasty, tasty-hunit, text, time, unordered-containers
     }:
     mkDerivation {
       pname = "amazonka-elb";
       version = "1.6.0";
       sha256 = "0kbyz4czsfjfgfw49wqrkkk2ma4k333kd5xfcz9gf9ick8079jar";
       libraryHaskellDepends = [ amazonka-core base ];
       testHaskellDepends = [
         amazonka-core amazonka-test base bytestring tasty tasty-hunit text
         time unordered-containers
       ];
       homepage = "https://github.com/brendanhay/amazonka";
       description = "Amazon Elastic Load Balancing SDK";
       license = stdenv.lib.licenses.mpl20;
     }) {};
  "amazonka-elbv2" = callPackage
    ({ mkDerivation, amazonka-core, amazonka-test, base, bytestring
     , tasty, tasty-hunit, text, time, unordered-containers
     }:
     mkDerivation {
       pname = "amazonka-elbv2";
       version = "1.6.0";
       sha256 = "1j92qr8sfsidax606pyzv1zn08c2rcij0853c5raq4xn55gd6lra";
       libraryHaskellDepends = [ amazonka-core base ];
       testHaskellDepends = [
         amazonka-core amazonka-test base bytestring tasty tasty-hunit text
         time unordered-containers
       ];
       homepage = "https://github.com/brendanhay/amazonka";
       description = "Amazon Elastic Load Balancing SDK";
       license = stdenv.lib.licenses.mpl20;
     }) {};
  "amazonka-emr" = callPackage
    ({ mkDerivation, amazonka-core, amazonka-test, base, bytestring
     , tasty, tasty-hunit, text, time, unordered-containers
     }:
     mkDerivation {
       pname = "amazonka-emr";
       version = "1.6.0";
       sha256 = "0kvpv655dk619lq2ahkljxdhscj22lyci3z9ybpsvzk1xrc79879";
       libraryHaskellDepends = [ amazonka-core base ];
       testHaskellDepends = [
         amazonka-core amazonka-test base bytestring tasty tasty-hunit text
         time unordered-containers
       ];
       homepage = "https://github.com/brendanhay/amazonka";
       description = "Amazon Elastic MapReduce SDK";
       license = stdenv.lib.licenses.mpl20;
     }) {};
  "amazonka-gamelift" = callPackage
    ({ mkDerivation, amazonka-core, amazonka-test, base, bytestring
     , tasty, tasty-hunit, text, time, unordered-containers
     }:
     mkDerivation {
       pname = "amazonka-gamelift";
       version = "1.6.0";
       sha256 = "1z2zfzpag9v8mb6wa479hfkhdqf84x5jyc6pl302vl688d5bvkgb";
       libraryHaskellDepends = [ amazonka-core base ];
       testHaskellDepends = [
         amazonka-core amazonka-test base bytestring tasty tasty-hunit text
         time unordered-containers
       ];
       homepage = "https://github.com/brendanhay/amazonka";
       description = "Amazon GameLift SDK";
       license = stdenv.lib.licenses.mpl20;
     }) {};
  "amazonka-glacier" = callPackage
    ({ mkDerivation, amazonka-core, amazonka-test, base, bytestring
     , tasty, tasty-hunit, text, time, unordered-containers
     }:
     mkDerivation {
       pname = "amazonka-glacier";
       version = "1.6.0";
       sha256 = "04zrw3rqly4qm5hkwddr0p73xyjx5vm5xsvcnmabmpxx3x6l61sk";
       libraryHaskellDepends = [ amazonka-core base ];
       testHaskellDepends = [
         amazonka-core amazonka-test base bytestring tasty tasty-hunit text
         time unordered-containers
       ];
       homepage = "https://github.com/brendanhay/amazonka";
       description = "Amazon Glacier SDK";
       license = stdenv.lib.licenses.mpl20;
     }) {};
  "amazonka-health" = callPackage
    ({ mkDerivation, amazonka-core, amazonka-test, base, bytestring
     , tasty, tasty-hunit, text, time, unordered-containers
     }:
     mkDerivation {
       pname = "amazonka-health";
       version = "1.6.0";
       sha256 = "0yx6bdhkgf6fgrc8i6abbpwnxlzqdnmw6pqan02gz679jf7b25n2";
       libraryHaskellDepends = [ amazonka-core base ];
       testHaskellDepends = [
         amazonka-core amazonka-test base bytestring tasty tasty-hunit text
         time unordered-containers
       ];
       homepage = "https://github.com/brendanhay/amazonka";
       description = "Amazon Health APIs and Notifications SDK";
       license = stdenv.lib.licenses.mpl20;
     }) {};
  "amazonka-iam" = callPackage
    ({ mkDerivation, amazonka-core, amazonka-test, base, bytestring
     , tasty, tasty-hunit, text, time, unordered-containers
     }:
     mkDerivation {
       pname = "amazonka-iam";
       version = "1.6.0";
       sha256 = "0pchhnrfvry7v6gwn1rxx0hyd8xd2hdlzfcm1d02hgawg4x82dd3";
       libraryHaskellDepends = [ amazonka-core base ];
       testHaskellDepends = [
         amazonka-core amazonka-test base bytestring tasty tasty-hunit text
         time unordered-containers
       ];
       homepage = "https://github.com/brendanhay/amazonka";
       description = "Amazon Identity and Access Management SDK";
       license = stdenv.lib.licenses.mpl20;
     }) {};
  "amazonka-importexport" = callPackage
    ({ mkDerivation, amazonka-core, amazonka-test, base, bytestring
     , tasty, tasty-hunit, text, time, unordered-containers
     }:
     mkDerivation {
       pname = "amazonka-importexport";
       version = "1.6.0";
       sha256 = "016dgp4s2669jd3db1f8ngynhjrkr77l981rmf3wc92fsyyg4l89";
       libraryHaskellDepends = [ amazonka-core base ];
       testHaskellDepends = [
         amazonka-core amazonka-test base bytestring tasty tasty-hunit text
         time unordered-containers
       ];
       homepage = "https://github.com/brendanhay/amazonka";
       description = "Amazon Import/Export SDK";
       license = stdenv.lib.licenses.mpl20;
     }) {};
  "amazonka-inspector" = callPackage
    ({ mkDerivation, amazonka-core, amazonka-test, base, bytestring
     , tasty, tasty-hunit, text, time, unordered-containers
     }:
     mkDerivation {
       pname = "amazonka-inspector";
       version = "1.6.0";
       sha256 = "0gp1rkrm2xv13cdn3shr5824g942yn2dwqvw3ln78fz671g01vxw";
       libraryHaskellDepends = [ amazonka-core base ];
       testHaskellDepends = [
         amazonka-core amazonka-test base bytestring tasty tasty-hunit text
         time unordered-containers
       ];
       homepage = "https://github.com/brendanhay/amazonka";
       description = "Amazon Inspector SDK";
       license = stdenv.lib.licenses.mpl20;
     }) {};
  "amazonka-iot" = callPackage
    ({ mkDerivation, amazonka-core, amazonka-test, base, bytestring
     , tasty, tasty-hunit, text, time, unordered-containers
     }:
     mkDerivation {
       pname = "amazonka-iot";
       version = "1.6.0";
       sha256 = "1l16ib9p6qzs4079a02hg852f0g79yv75k0ky3jj3l3vr5lj22qq";
       libraryHaskellDepends = [ amazonka-core base ];
       testHaskellDepends = [
         amazonka-core amazonka-test base bytestring tasty tasty-hunit text
         time unordered-containers
       ];
       homepage = "https://github.com/brendanhay/amazonka";
       description = "Amazon IoT SDK";
       license = stdenv.lib.licenses.mpl20;
     }) {};
  "amazonka-iot-dataplane" = callPackage
    ({ mkDerivation, amazonka-core, amazonka-test, base, bytestring
     , tasty, tasty-hunit, text, time, unordered-containers
     }:
     mkDerivation {
       pname = "amazonka-iot-dataplane";
       version = "1.6.0";
       sha256 = "0hl7m3s6ck01k5h00q414sc3yzpr41gamj7pfr7wr97cwv03prmf";
       libraryHaskellDepends = [ amazonka-core base ];
       testHaskellDepends = [
         amazonka-core amazonka-test base bytestring tasty tasty-hunit text
         time unordered-containers
       ];
       homepage = "https://github.com/brendanhay/amazonka";
       description = "Amazon IoT Data Plane SDK";
       license = stdenv.lib.licenses.mpl20;
     }) {};
  "amazonka-kinesis" = callPackage
    ({ mkDerivation, amazonka-core, amazonka-test, base, bytestring
     , tasty, tasty-hunit, text, time, unordered-containers
     }:
     mkDerivation {
       pname = "amazonka-kinesis";
       version = "1.6.0";
       sha256 = "0f1gwa92pcdrb1ijxinhq8vjspgigk5kcr37hnj6mzs6kv9437jl";
       libraryHaskellDepends = [ amazonka-core base ];
       testHaskellDepends = [
         amazonka-core amazonka-test base bytestring tasty tasty-hunit text
         time unordered-containers
       ];
       homepage = "https://github.com/brendanhay/amazonka";
       description = "Amazon Kinesis SDK";
       license = stdenv.lib.licenses.mpl20;
     }) {};
  "amazonka-kinesis-analytics" = callPackage
    ({ mkDerivation, amazonka-core, amazonka-test, base, bytestring
     , tasty, tasty-hunit, text, time, unordered-containers
     }:
     mkDerivation {
       pname = "amazonka-kinesis-analytics";
       version = "1.6.0";
       sha256 = "1vl5yski9fqpwv9f4aq3i2zqkjgkmn3lnpm3phg59x3fb4w59yvy";
       libraryHaskellDepends = [ amazonka-core base ];
       testHaskellDepends = [
         amazonka-core amazonka-test base bytestring tasty tasty-hunit text
         time unordered-containers
       ];
       homepage = "https://github.com/brendanhay/amazonka";
       description = "Amazon Kinesis Analytics SDK";
       license = stdenv.lib.licenses.mpl20;
     }) {};
  "amazonka-kinesis-firehose" = callPackage
    ({ mkDerivation, amazonka-core, amazonka-test, base, bytestring
     , tasty, tasty-hunit, text, time, unordered-containers
     }:
     mkDerivation {
       pname = "amazonka-kinesis-firehose";
       version = "1.6.0";
       sha256 = "172ljz8ihcb8cx800xy0wpicdsqip52ng2ig1clk3h48r36la18j";
       libraryHaskellDepends = [ amazonka-core base ];
       testHaskellDepends = [
         amazonka-core amazonka-test base bytestring tasty tasty-hunit text
         time unordered-containers
       ];
       homepage = "https://github.com/brendanhay/amazonka";
       description = "Amazon Kinesis Firehose SDK";
       license = stdenv.lib.licenses.mpl20;
     }) {};
  "amazonka-kms" = callPackage
    ({ mkDerivation, amazonka-core, amazonka-test, base, bytestring
     , tasty, tasty-hunit, text, time, unordered-containers
     }:
     mkDerivation {
       pname = "amazonka-kms";
       version = "1.6.0";
       sha256 = "16cfkvl7n7drx0z6fr5j88lyg9rkg3bfly2zb2jx155lhcsk79bs";
       libraryHaskellDepends = [ amazonka-core base ];
       testHaskellDepends = [
         amazonka-core amazonka-test base bytestring tasty tasty-hunit text
         time unordered-containers
       ];
       homepage = "https://github.com/brendanhay/amazonka";
       description = "Amazon Key Management Service SDK";
       license = stdenv.lib.licenses.mpl20;
     }) {};
  "amazonka-lambda" = callPackage
    ({ mkDerivation, amazonka-core, amazonka-test, base, bytestring
     , tasty, tasty-hunit, text, time, unordered-containers
     }:
     mkDerivation {
       pname = "amazonka-lambda";
       version = "1.6.0";
       sha256 = "01lvr775kakpbr2p7126nw3022dyp5p41s98asf9fwkmda4jd5k4";
       libraryHaskellDepends = [ amazonka-core base ];
       testHaskellDepends = [
         amazonka-core amazonka-test base bytestring tasty tasty-hunit text
         time unordered-containers
       ];
       homepage = "https://github.com/brendanhay/amazonka";
       description = "Amazon Lambda SDK";
       license = stdenv.lib.licenses.mpl20;
     }) {};
  "amazonka-lightsail" = callPackage
    ({ mkDerivation, amazonka-core, amazonka-test, base, bytestring
     , tasty, tasty-hunit, text, time, unordered-containers
     }:
     mkDerivation {
       pname = "amazonka-lightsail";
       version = "1.6.0";
       sha256 = "1sxcc0hbvngxxjg0mg2rb3wkdax8123qbak8k3z0h3igzxm4q6vl";
       libraryHaskellDepends = [ amazonka-core base ];
       testHaskellDepends = [
         amazonka-core amazonka-test base bytestring tasty tasty-hunit text
         time unordered-containers
       ];
       homepage = "https://github.com/brendanhay/amazonka";
       description = "Amazon Lightsail SDK";
       license = stdenv.lib.licenses.mpl20;
     }) {};
  "amazonka-marketplace-analytics" = callPackage
    ({ mkDerivation, amazonka-core, amazonka-test, base, bytestring
     , tasty, tasty-hunit, text, time, unordered-containers
     }:
     mkDerivation {
       pname = "amazonka-marketplace-analytics";
       version = "1.6.0";
       sha256 = "0sjxrnzcrzgd75kd841r9hadpg9zqmxx4g5hqqqm2yy1x6q0sv2d";
       libraryHaskellDepends = [ amazonka-core base ];
       testHaskellDepends = [
         amazonka-core amazonka-test base bytestring tasty tasty-hunit text
         time unordered-containers
       ];
       homepage = "https://github.com/brendanhay/amazonka";
       description = "Amazon Marketplace Commerce Analytics SDK";
       license = stdenv.lib.licenses.mpl20;
     }) {};
  "amazonka-marketplace-metering" = callPackage
    ({ mkDerivation, amazonka-core, amazonka-test, base, bytestring
     , tasty, tasty-hunit, text, time, unordered-containers
     }:
     mkDerivation {
       pname = "amazonka-marketplace-metering";
       version = "1.6.0";
       sha256 = "0xszzcmaz2d5h8cbdqaar1f3am35h31k5w1wihy6fyf5r95f2bb7";
       libraryHaskellDepends = [ amazonka-core base ];
       testHaskellDepends = [
         amazonka-core amazonka-test base bytestring tasty tasty-hunit text
         time unordered-containers
       ];
       homepage = "https://github.com/brendanhay/amazonka";
       description = "Amazon Marketplace Metering SDK";
       license = stdenv.lib.licenses.mpl20;
     }) {};
  "amazonka-ml" = callPackage
    ({ mkDerivation, amazonka-core, amazonka-test, base, bytestring
     , tasty, tasty-hunit, text, time, unordered-containers
     }:
     mkDerivation {
       pname = "amazonka-ml";
       version = "1.6.0";
       sha256 = "1zkdal599npbylic9sgvzpfss15ri9k61pp9xwhafbm7f5xjvhcx";
       libraryHaskellDepends = [ amazonka-core base ];
       testHaskellDepends = [
         amazonka-core amazonka-test base bytestring tasty tasty-hunit text
         time unordered-containers
       ];
       homepage = "https://github.com/brendanhay/amazonka";
       description = "Amazon Machine Learning SDK";
       license = stdenv.lib.licenses.mpl20;
     }) {};
  "amazonka-opsworks" = callPackage
    ({ mkDerivation, amazonka-core, amazonka-test, base, bytestring
     , tasty, tasty-hunit, text, time, unordered-containers
     }:
     mkDerivation {
       pname = "amazonka-opsworks";
       version = "1.6.0";
       sha256 = "066rfarz6cbdcal6l5qn11pi3n2byzxbb6013crmdicfkcrp4hws";
       libraryHaskellDepends = [ amazonka-core base ];
       testHaskellDepends = [
         amazonka-core amazonka-test base bytestring tasty tasty-hunit text
         time unordered-containers
       ];
       homepage = "https://github.com/brendanhay/amazonka";
       description = "Amazon OpsWorks SDK";
       license = stdenv.lib.licenses.mpl20;
     }) {};
  "amazonka-opsworks-cm" = callPackage
    ({ mkDerivation, amazonka-core, amazonka-test, base, bytestring
     , tasty, tasty-hunit, text, time, unordered-containers
     }:
     mkDerivation {
       pname = "amazonka-opsworks-cm";
       version = "1.6.0";
       sha256 = "1x28lxvjz6sdkzlghw94h97yw8ywypz0v3d0rqazvzvhbxsrp7jg";
       libraryHaskellDepends = [ amazonka-core base ];
       testHaskellDepends = [
         amazonka-core amazonka-test base bytestring tasty tasty-hunit text
         time unordered-containers
       ];
       homepage = "https://github.com/brendanhay/amazonka";
       description = "Amazon OpsWorks for Chef Automate SDK";
       license = stdenv.lib.licenses.mpl20;
     }) {};
  "amazonka-pinpoint" = callPackage
    ({ mkDerivation, amazonka-core, amazonka-test, base, bytestring
     , tasty, tasty-hunit, text, time, unordered-containers
     }:
     mkDerivation {
       pname = "amazonka-pinpoint";
       version = "1.6.0";
       sha256 = "01dh2vwigisbx4jrpaq76l1463v7qy1wx6brd1d7sdczpnmcvy5h";
       libraryHaskellDepends = [ amazonka-core base ];
       testHaskellDepends = [
         amazonka-core amazonka-test base bytestring tasty tasty-hunit text
         time unordered-containers
       ];
       homepage = "https://github.com/brendanhay/amazonka";
       description = "Amazon Pinpoint SDK";
       license = stdenv.lib.licenses.mpl20;
     }) {};
  "amazonka-polly" = callPackage
    ({ mkDerivation, amazonka-core, amazonka-test, base, bytestring
     , tasty, tasty-hunit, text, time, unordered-containers
     }:
     mkDerivation {
       pname = "amazonka-polly";
       version = "1.6.0";
       sha256 = "1l4ajm7ca0s4xwzs9brdhbjz1mhw8smmy7wzddhrxjr84vxdqgkp";
       libraryHaskellDepends = [ amazonka-core base ];
       testHaskellDepends = [
         amazonka-core amazonka-test base bytestring tasty tasty-hunit text
         time unordered-containers
       ];
       homepage = "https://github.com/brendanhay/amazonka";
       description = "Amazon Polly SDK";
       license = stdenv.lib.licenses.mpl20;
     }) {};
  "amazonka-rds" = callPackage
    ({ mkDerivation, amazonka-core, amazonka-test, base, bytestring
     , tasty, tasty-hunit, text, time, unordered-containers
     }:
     mkDerivation {
       pname = "amazonka-rds";
       version = "1.6.0";
       sha256 = "0kf23dgv1zirxp35g1czlfnzq9ccwr1a67yvqnl3nfvpacy634y7";
       libraryHaskellDepends = [ amazonka-core base ];
       testHaskellDepends = [
         amazonka-core amazonka-test base bytestring tasty tasty-hunit text
         time unordered-containers
       ];
       homepage = "https://github.com/brendanhay/amazonka";
       description = "Amazon Relational Database Service SDK";
       license = stdenv.lib.licenses.mpl20;
     }) {};
  "amazonka-redshift" = callPackage
    ({ mkDerivation, amazonka-core, amazonka-test, base, bytestring
     , tasty, tasty-hunit, text, time, unordered-containers
     }:
     mkDerivation {
       pname = "amazonka-redshift";
       version = "1.6.0";
       sha256 = "0adkj055f7kb1klxnvl9n1p8l504jgcpdw1ibgc2xm786rlvjsj2";
       libraryHaskellDepends = [ amazonka-core base ];
       testHaskellDepends = [
         amazonka-core amazonka-test base bytestring tasty tasty-hunit text
         time unordered-containers
       ];
       homepage = "https://github.com/brendanhay/amazonka";
       description = "Amazon Redshift SDK";
       license = stdenv.lib.licenses.mpl20;
     }) {};
  "amazonka-rekognition" = callPackage
    ({ mkDerivation, amazonka-core, amazonka-test, base, bytestring
     , tasty, tasty-hunit, text, time, unordered-containers
     }:
     mkDerivation {
       pname = "amazonka-rekognition";
       version = "1.6.0";
       sha256 = "1a1jynpr7bkzd5rs5p4781wrvnf1wivlzfjmn53jfdp545q44bj6";
       libraryHaskellDepends = [ amazonka-core base ];
       testHaskellDepends = [
         amazonka-core amazonka-test base bytestring tasty tasty-hunit text
         time unordered-containers
       ];
       homepage = "https://github.com/brendanhay/amazonka";
       description = "Amazon Rekognition SDK";
       license = stdenv.lib.licenses.mpl20;
     }) {};
  "amazonka-route53" = callPackage
    ({ mkDerivation, amazonka-core, amazonka-test, base, bytestring
     , tasty, tasty-hunit, text, time, unordered-containers
     }:
     mkDerivation {
       pname = "amazonka-route53";
       version = "1.6.0";
       sha256 = "05v3m8fcpxbhhsh8nm0m35c357cx94z6xn36c75jhjy4v4xpgvv8";
       libraryHaskellDepends = [ amazonka-core base text ];
       testHaskellDepends = [
         amazonka-core amazonka-test base bytestring tasty tasty-hunit text
         time unordered-containers
       ];
       homepage = "https://github.com/brendanhay/amazonka";
       description = "Amazon Route 53 SDK";
       license = stdenv.lib.licenses.mpl20;
     }) {};
  "amazonka-route53-domains" = callPackage
    ({ mkDerivation, amazonka-core, amazonka-test, base, bytestring
     , tasty, tasty-hunit, text, time, unordered-containers
     }:
     mkDerivation {
       pname = "amazonka-route53-domains";
       version = "1.6.0";
       sha256 = "1sm5w4r6kb8fl3wikp9n2hda3bxwr83397s729s3dispbwpzwnzp";
       libraryHaskellDepends = [ amazonka-core base ];
       testHaskellDepends = [
         amazonka-core amazonka-test base bytestring tasty tasty-hunit text
         time unordered-containers
       ];
       homepage = "https://github.com/brendanhay/amazonka";
       description = "Amazon Route 53 Domains SDK";
       license = stdenv.lib.licenses.mpl20;
     }) {};
  "amazonka-s3" = callPackage
    ({ mkDerivation, amazonka-core, amazonka-test, base, bytestring
     , lens, tasty, tasty-hunit, text, time, unordered-containers
     }:
     mkDerivation {
       pname = "amazonka-s3";
       version = "1.6.0";
       sha256 = "0irz8vyklapjy3w3qasidpvq4hk2qwkmhrnrd23sf4yzs2xqx8gc";
       libraryHaskellDepends = [ amazonka-core base lens text ];
       testHaskellDepends = [
         amazonka-core amazonka-test base bytestring tasty tasty-hunit text
         time unordered-containers
       ];
       homepage = "https://github.com/brendanhay/amazonka";
       description = "Amazon Simple Storage Service SDK";
       license = stdenv.lib.licenses.mpl20;
     }) {};
  "amazonka-sdb" = callPackage
    ({ mkDerivation, amazonka-core, amazonka-test, base, bytestring
     , tasty, tasty-hunit, text, time, unordered-containers
     }:
     mkDerivation {
       pname = "amazonka-sdb";
       version = "1.6.0";
       sha256 = "1zdxbwzkvj1fi9lay3zyqxbb2vzviwc6h2gfmjh7invg68hqphmr";
       libraryHaskellDepends = [ amazonka-core base ];
       testHaskellDepends = [
         amazonka-core amazonka-test base bytestring tasty tasty-hunit text
         time unordered-containers
       ];
       homepage = "https://github.com/brendanhay/amazonka";
       description = "Amazon SimpleDB SDK";
       license = stdenv.lib.licenses.mpl20;
     }) {};
  "amazonka-servicecatalog" = callPackage
    ({ mkDerivation, amazonka-core, amazonka-test, base, bytestring
     , tasty, tasty-hunit, text, time, unordered-containers
     }:
     mkDerivation {
       pname = "amazonka-servicecatalog";
       version = "1.6.0";
       sha256 = "0r7j8v5mn048hqlp2h2mv7lyld457k22i95mdriyqhrb3cxxzy0i";
       libraryHaskellDepends = [ amazonka-core base ];
       testHaskellDepends = [
         amazonka-core amazonka-test base bytestring tasty tasty-hunit text
         time unordered-containers
       ];
       homepage = "https://github.com/brendanhay/amazonka";
       description = "Amazon Service Catalog SDK";
       license = stdenv.lib.licenses.mpl20;
     }) {};
  "amazonka-ses" = callPackage
    ({ mkDerivation, amazonka-core, amazonka-test, base, bytestring
     , tasty, tasty-hunit, text, time, unordered-containers
     }:
     mkDerivation {
       pname = "amazonka-ses";
       version = "1.6.0";
       sha256 = "00mxab03vhmmb0d5xfa00x4c0qz0vkfnfap1lz8kzbps73kk53bp";
       libraryHaskellDepends = [ amazonka-core base ];
       testHaskellDepends = [
         amazonka-core amazonka-test base bytestring tasty tasty-hunit text
         time unordered-containers
       ];
       homepage = "https://github.com/brendanhay/amazonka";
       description = "Amazon Simple Email Service SDK";
       license = stdenv.lib.licenses.mpl20;
     }) {};
  "amazonka-shield" = callPackage
    ({ mkDerivation, amazonka-core, amazonka-test, base, bytestring
     , tasty, tasty-hunit, text, time, unordered-containers
     }:
     mkDerivation {
       pname = "amazonka-shield";
       version = "1.6.0";
       sha256 = "1x7b8wvv50iqvdxydpnmvncz3yx3026vq4f9rg1pnqas5ddsi0xr";
       libraryHaskellDepends = [ amazonka-core base ];
       testHaskellDepends = [
         amazonka-core amazonka-test base bytestring tasty tasty-hunit text
         time unordered-containers
       ];
       homepage = "https://github.com/brendanhay/amazonka";
       description = "Amazon Shield SDK";
       license = stdenv.lib.licenses.mpl20;
     }) {};
  "amazonka-sms" = callPackage
    ({ mkDerivation, amazonka-core, amazonka-test, base, bytestring
     , tasty, tasty-hunit, text, time, unordered-containers
     }:
     mkDerivation {
       pname = "amazonka-sms";
       version = "1.6.0";
       sha256 = "0zx4rpq5k18lqv5x55hf30s30g8x6yrsbv55h13n1mw856fkakgw";
       libraryHaskellDepends = [ amazonka-core base ];
       testHaskellDepends = [
         amazonka-core amazonka-test base bytestring tasty tasty-hunit text
         time unordered-containers
       ];
       homepage = "https://github.com/brendanhay/amazonka";
       description = "Amazon Server Migration Service SDK";
       license = stdenv.lib.licenses.mpl20;
     }) {};
  "amazonka-snowball" = callPackage
    ({ mkDerivation, amazonka-core, amazonka-test, base, bytestring
     , tasty, tasty-hunit, text, time, unordered-containers
     }:
     mkDerivation {
       pname = "amazonka-snowball";
       version = "1.6.0";
       sha256 = "09gf0balrk7hzmg9ynasz4jf3jywj57lyp0wiggixfh5jbz30jsk";
       libraryHaskellDepends = [ amazonka-core base ];
       testHaskellDepends = [
         amazonka-core amazonka-test base bytestring tasty tasty-hunit text
         time unordered-containers
       ];
       homepage = "https://github.com/brendanhay/amazonka";
       description = "Amazon Import/Export Snowball SDK";
       license = stdenv.lib.licenses.mpl20;
     }) {};
  "amazonka-sns" = callPackage
    ({ mkDerivation, amazonka-core, amazonka-test, base, bytestring
     , tasty, tasty-hunit, text, time, unordered-containers
     }:
     mkDerivation {
       pname = "amazonka-sns";
       version = "1.6.0";
       sha256 = "0wvmwca48rqls0szbvdvfr796iq8i3kp5l8l7dcysn8k0d4ba5hx";
       libraryHaskellDepends = [ amazonka-core base ];
       testHaskellDepends = [
         amazonka-core amazonka-test base bytestring tasty tasty-hunit text
         time unordered-containers
       ];
       homepage = "https://github.com/brendanhay/amazonka";
       description = "Amazon Simple Notification Service SDK";
       license = stdenv.lib.licenses.mpl20;
     }) {};
  "amazonka-sqs" = callPackage
    ({ mkDerivation, amazonka-core, amazonka-test, base, bytestring
     , tasty, tasty-hunit, text, time, unordered-containers
     }:
     mkDerivation {
       pname = "amazonka-sqs";
       version = "1.6.0";
       sha256 = "0cq4j16f12z4lzsi9clh3pzcad7zfpcg5z8af2ap0w18gmq3hf3l";
       libraryHaskellDepends = [ amazonka-core base ];
       testHaskellDepends = [
         amazonka-core amazonka-test base bytestring tasty tasty-hunit text
         time unordered-containers
       ];
       homepage = "https://github.com/brendanhay/amazonka";
       description = "Amazon Simple Queue Service SDK";
       license = stdenv.lib.licenses.mpl20;
     }) {};
  "amazonka-ssm" = callPackage
    ({ mkDerivation, amazonka-core, amazonka-test, base, bytestring
     , tasty, tasty-hunit, text, time, unordered-containers
     }:
     mkDerivation {
       pname = "amazonka-ssm";
       version = "1.6.0";
       sha256 = "06kh3id8l24rq5wvjakfz1w62fr3cyzl2axdsp7hcb8afr4q488i";
       libraryHaskellDepends = [ amazonka-core base ];
       testHaskellDepends = [
         amazonka-core amazonka-test base bytestring tasty tasty-hunit text
         time unordered-containers
       ];
       homepage = "https://github.com/brendanhay/amazonka";
       description = "Amazon Simple Systems Manager (SSM) SDK";
       license = stdenv.lib.licenses.mpl20;
     }) {};
  "amazonka-stepfunctions" = callPackage
    ({ mkDerivation, amazonka-core, amazonka-test, base, bytestring
     , tasty, tasty-hunit, text, time, unordered-containers
     }:
     mkDerivation {
       pname = "amazonka-stepfunctions";
       version = "1.6.0";
       sha256 = "1gxci7x94jc7187wv8mrd8g8vy0ns9r6b8l0w5jxgmr8bma8xb4r";
       libraryHaskellDepends = [ amazonka-core base ];
       testHaskellDepends = [
         amazonka-core amazonka-test base bytestring tasty tasty-hunit text
         time unordered-containers
       ];
       homepage = "https://github.com/brendanhay/amazonka";
       description = "Amazon Step Functions SDK";
       license = stdenv.lib.licenses.mpl20;
     }) {};
  "amazonka-storagegateway" = callPackage
    ({ mkDerivation, amazonka-core, amazonka-test, base, bytestring
     , tasty, tasty-hunit, text, time, unordered-containers
     }:
     mkDerivation {
       pname = "amazonka-storagegateway";
       version = "1.6.0";
       sha256 = "0gdl905h9d5g20npx4ihc0fajgcqn5vjnqiss7mhfcgha1k3f1kg";
       libraryHaskellDepends = [ amazonka-core base ];
       testHaskellDepends = [
         amazonka-core amazonka-test base bytestring tasty tasty-hunit text
         time unordered-containers
       ];
       homepage = "https://github.com/brendanhay/amazonka";
       description = "Amazon Storage Gateway SDK";
       license = stdenv.lib.licenses.mpl20;
     }) {};
  "amazonka-sts" = callPackage
    ({ mkDerivation, amazonka-core, amazonka-test, base, bytestring
     , tasty, tasty-hunit, text, time, unordered-containers
     }:
     mkDerivation {
       pname = "amazonka-sts";
       version = "1.6.0";
       sha256 = "04lsm5wpzrykkq94fcrkj4cwc5slzcwmzqvsgw9mnyprsrknn19n";
       libraryHaskellDepends = [ amazonka-core base ];
       testHaskellDepends = [
         amazonka-core amazonka-test base bytestring tasty tasty-hunit text
         time unordered-containers
       ];
       homepage = "https://github.com/brendanhay/amazonka";
       description = "Amazon Security Token Service SDK";
       license = stdenv.lib.licenses.mpl20;
     }) {};
  "amazonka-support" = callPackage
    ({ mkDerivation, amazonka-core, amazonka-test, base, bytestring
     , tasty, tasty-hunit, text, time, unordered-containers
     }:
     mkDerivation {
       pname = "amazonka-support";
       version = "1.6.0";
       sha256 = "1sakd3r8g9r0ms7mrnvzh679i26pamh1ranpp7a1fa2zjzpllhvz";
       libraryHaskellDepends = [ amazonka-core base ];
       testHaskellDepends = [
         amazonka-core amazonka-test base bytestring tasty tasty-hunit text
         time unordered-containers
       ];
       homepage = "https://github.com/brendanhay/amazonka";
       description = "Amazon Support SDK";
       license = stdenv.lib.licenses.mpl20;
     }) {};
  "amazonka-swf" = callPackage
    ({ mkDerivation, amazonka-core, amazonka-test, base, bytestring
     , tasty, tasty-hunit, text, time, unordered-containers
     }:
     mkDerivation {
       pname = "amazonka-swf";
       version = "1.6.0";
       sha256 = "145aali4pqzra7r34g6ykbizwrqnapj6mwadqr31ylf1m5xl63hz";
       libraryHaskellDepends = [ amazonka-core base ];
       testHaskellDepends = [
         amazonka-core amazonka-test base bytestring tasty tasty-hunit text
         time unordered-containers
       ];
       homepage = "https://github.com/brendanhay/amazonka";
       description = "Amazon Simple Workflow Service SDK";
       license = stdenv.lib.licenses.mpl20;
     }) {};
  "amazonka-test" = callPackage
    ({ mkDerivation, aeson, amazonka-core, base, bifunctors, bytestring
     , case-insensitive, conduit, conduit-extra, groom, http-client
     , http-types, process, resourcet, tasty, tasty-hunit
     , template-haskell, temporary, text, time, unordered-containers
     , yaml
     }:
     mkDerivation {
       pname = "amazonka-test";
       version = "1.6.0";
       sha256 = "0a6xfp97hijhqmhj9nv4aqax08ry8y809jpjhyj2819p01wvga26";
       libraryHaskellDepends = [
         aeson amazonka-core base bifunctors bytestring case-insensitive
         conduit conduit-extra groom http-client http-types process
         resourcet tasty tasty-hunit template-haskell temporary text time
         unordered-containers yaml
       ];
       homepage = "https://github.com/brendanhay/amazonka";
       description = "Common functionality for Amazonka library test-suites";
       license = stdenv.lib.licenses.mpl20;
     }) {};
  "amazonka-waf" = callPackage
    ({ mkDerivation, amazonka-core, amazonka-test, base, bytestring
     , tasty, tasty-hunit, text, time, unordered-containers
     }:
     mkDerivation {
       pname = "amazonka-waf";
       version = "1.6.0";
       sha256 = "105rpfal53qyjavknpkpiglndr8cgcsybl8iaw7zpn725g2rw2w8";
       libraryHaskellDepends = [ amazonka-core base ];
       testHaskellDepends = [
         amazonka-core amazonka-test base bytestring tasty tasty-hunit text
         time unordered-containers
       ];
       homepage = "https://github.com/brendanhay/amazonka";
       description = "Amazon WAF SDK";
       license = stdenv.lib.licenses.mpl20;
     }) {};
  "amazonka-workspaces" = callPackage
    ({ mkDerivation, amazonka-core, amazonka-test, base, bytestring
     , tasty, tasty-hunit, text, time, unordered-containers
     }:
     mkDerivation {
       pname = "amazonka-workspaces";
       version = "1.6.0";
       sha256 = "110wr4ah80lz9yjxsx3yng2mx5r2z361rs4k6sr4v6jiij6k9ksn";
       libraryHaskellDepends = [ amazonka-core base ];
       testHaskellDepends = [
         amazonka-core amazonka-test base bytestring tasty tasty-hunit text
         time unordered-containers
       ];
       homepage = "https://github.com/brendanhay/amazonka";
       description = "Amazon WorkSpaces SDK";
       license = stdenv.lib.licenses.mpl20;
     }) {};
  "amazonka-xray" = callPackage
    ({ mkDerivation, amazonka-core, amazonka-test, base, bytestring
     , tasty, tasty-hunit, text, time, unordered-containers
     }:
     mkDerivation {
       pname = "amazonka-xray";
       version = "1.6.0";
       sha256 = "1w4ham3rzkyz8ns5xrnclyw0gvaswm6kyxjrfz6h19hs6rsh0lcg";
       libraryHaskellDepends = [ amazonka-core base ];
       testHaskellDepends = [
         amazonka-core amazonka-test base bytestring tasty tasty-hunit text
         time unordered-containers
       ];
       homepage = "https://github.com/brendanhay/amazonka";
       description = "Amazon X-Ray SDK";
       license = stdenv.lib.licenses.mpl20;
     }) {};
  "amqp" = callPackage
    ({ mkDerivation, base, binary, bytestring, clock, connection
     , containers, data-binary-ieee754, hspec, hspec-expectations
     , monad-control, network, network-uri, split, stm, text, vector
     , xml
     }:
     mkDerivation {
       pname = "amqp";
       version = "0.18.1";
       sha256 = "0j728d7q013gcqv0m6vpm401hnpbmzzb3i6br8kpxybdjzmy4y26";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         base binary bytestring clock connection containers
         data-binary-ieee754 monad-control network network-uri split stm
         text vector
       ];
       executableHaskellDepends = [ base containers xml ];
       testHaskellDepends = [
         base binary bytestring clock connection containers
         data-binary-ieee754 hspec hspec-expectations network network-uri
         split stm text vector
       ];
       doCheck = false;
       homepage = "https://github.com/hreinhardt/amqp";
       description = "Client library for AMQP servers (currently only RabbitMQ)";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "annotated-wl-pprint" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "annotated-wl-pprint";
       version = "0.7.0";
       sha256 = "061xfz6qany3wf95csl8dcik2pz22cn8iv1qchhm16isw5zjs9hc";
       revision = "1";
       editedCabalFile = "138k24qxvl90l7dwdw1b3w36mpw93n0xi0nljblqg88pxg7jcvjx";
       libraryHaskellDepends = [ base ];
       homepage = "https://github.com/david-christiansen/annotated-wl-pprint";
       description = "The Wadler/Leijen Pretty Printer, with annotation support";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "ansi-terminal" = callPackage
    ({ mkDerivation, base, colour }:
     mkDerivation {
       pname = "ansi-terminal";
       version = "0.8.2";
       sha256 = "147ss9wz03ww6ypbv6yh5vi1wfrfcaqm8r6nxh50vnp7254359wh";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [ base colour ];
       homepage = "https://github.com/feuerbach/ansi-terminal";
       description = "Simple ANSI terminal support, with Windows compatibility";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "ansi-wl-pprint" = callPackage
    ({ mkDerivation, ansi-terminal, base }:
     mkDerivation {
       pname = "ansi-wl-pprint";
       version = "0.6.8.2";
       sha256 = "0gnb4mkqryv08vncxnj0bzwcnd749613yw3cxfzw6y3nsldp4c56";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [ ansi-terminal base ];
       homepage = "http://github.com/ekmett/ansi-wl-pprint";
       description = "The Wadler/Leijen Pretty Printer for colored ANSI terminal output";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "api-field-json-th" = callPackage
    ({ mkDerivation, aeson, base, HUnit, lens, split, template-haskell
     , text
     }:
     mkDerivation {
       pname = "api-field-json-th";
       version = "0.1.0.2";
       sha256 = "097pn19247g73rw0si33m5l1w797s9759ma3ki9h90dwd4w9rm5q";
       libraryHaskellDepends = [
         aeson base lens split template-haskell text
       ];
       testHaskellDepends = [ aeson base HUnit lens ];
       homepage = "https://github.com/nakaji-dayo/api-field-json-th";
       description = "option of aeson's deriveJSON";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "app-settings" = callPackage
    ({ mkDerivation, base, containers, directory, hspec, HUnit, mtl
     , parsec, text
     }:
     mkDerivation {
       pname = "app-settings";
       version = "0.2.0.12";
       sha256 = "1nncn8vmq55m4b6zh77mdmx19d1s7z0af4pmz1v082bpf2wril9b";
       libraryHaskellDepends = [
         base containers directory mtl parsec text
       ];
       testHaskellDepends = [
         base containers directory hspec HUnit mtl parsec text
       ];
       homepage = "https://github.com/emmanueltouzery/app-settings";
       description = "A library to manage application settings (INI file-like)";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "appar" = callPackage
    ({ mkDerivation, base, bytestring }:
     mkDerivation {
       pname = "appar";
       version = "0.1.7";
       sha256 = "07zjgx7xpjgkjqvga0wv542cyrjzh1mszlczg82nbmij2cflzppn";
       libraryHaskellDepends = [ base bytestring ];
       description = "A simple applicative parser";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "apply-refact" = callPackage
    ({ mkDerivation, base, containers, directory, filemanip, filepath
     , ghc, ghc-exactprint, mtl, optparse-applicative, process, refact
     , silently, syb, tasty, tasty-expected-failure, tasty-golden
     , temporary, transformers, unix-compat
     }:
     mkDerivation {
       pname = "apply-refact";
       version = "0.5.0.0";
       sha256 = "1bvlbchpma3vlxfvjbyd01rmzqc9h5q3my9n7v3wal2p7ysvjpqz";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         base containers directory filemanip ghc ghc-exactprint mtl process
         refact syb temporary transformers unix-compat
       ];
       executableHaskellDepends = [
         base containers directory filemanip filepath ghc ghc-exactprint mtl
         optparse-applicative process refact syb temporary transformers
         unix-compat
       ];
       testHaskellDepends = [
         base containers directory filemanip filepath ghc ghc-exactprint mtl
         optparse-applicative process refact silently syb tasty
         tasty-expected-failure tasty-golden temporary transformers
         unix-compat
       ];
       description = "Perform refactorings specified by the refact library";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "apportionment" = callPackage
    ({ mkDerivation, base, containers, utility-ht }:
     mkDerivation {
       pname = "apportionment";
       version = "0.0.0.3";
       sha256 = "062v4a1ip7zy20b03z1jajqy2ylx5fl74p7px54b1vajf6vx0wcg";
       libraryHaskellDepends = [ base containers utility-ht ];
       homepage = "http://hub.darcs.net/thielema/apportionment";
       description = "Round a set of numbers while maintaining its sum";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "approximate" = callPackage
    ({ mkDerivation, base, binary, bytes, Cabal, cabal-doctest, cereal
     , comonad, deepseq, directory, doctest, filepath, ghc-prim
     , hashable, lens, log-domain, pointed, safecopy, semigroupoids
     , semigroups, simple-reflect, vector
     }:
     mkDerivation {
       pname = "approximate";
       version = "0.3.1";
       sha256 = "18ifmp1c2km3ssp51m94vxqzx7yx6c21ychp7ajnhgg7v4bgfdyq";
       setupHaskellDepends = [ base Cabal cabal-doctest ];
       libraryHaskellDepends = [
         base binary bytes cereal comonad deepseq ghc-prim hashable lens
         log-domain pointed safecopy semigroupoids semigroups vector
       ];
       testHaskellDepends = [
         base directory doctest filepath semigroups simple-reflect
       ];
       doHaddock = false;
       homepage = "http://github.com/analytics/approximate/";
       description = "Approximate discrete values and numbers";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "arithmoi" = callPackage
    ({ mkDerivation, array, base, containers, exact-pi, gauge, ghc-prim
     , integer-gmp, integer-logarithms, mtl, QuickCheck, random
     , smallcheck, tasty, tasty-hunit, tasty-quickcheck
     , tasty-smallcheck, transformers, vector
     }:
     mkDerivation {
       pname = "arithmoi";
       version = "0.7.0.0";
       sha256 = "0303bqlbf8abixcq3x3px2ijj01c9hlqadkv8rhls6f64a8h8cwb";
       revision = "3";
       editedCabalFile = "1s0jm2y0jhfrj7af80csckiizkfq5h0v4zb92mkwh1pkfi763fha";
       configureFlags = [ "-f-llvm" ];
       libraryHaskellDepends = [
         array base containers exact-pi ghc-prim integer-gmp
         integer-logarithms mtl random vector
       ];
       testHaskellDepends = [
         base containers integer-gmp QuickCheck smallcheck tasty tasty-hunit
         tasty-quickcheck tasty-smallcheck transformers vector
       ];
       benchmarkHaskellDepends = [
         base containers gauge integer-logarithms random vector
       ];
       homepage = "https://github.com/cartazio/arithmoi";
       description = "Efficient basic number-theoretic functions";
       license = stdenv.lib.licenses.mit;
     }) {};
  "array-memoize" = callPackage
    ({ mkDerivation, array, base }:
     mkDerivation {
       pname = "array-memoize";
       version = "0.6.0";
       sha256 = "1p05vg8mdyad03aa7s1nrgw5xqgl80f6l7v0llhmi1q4xnrqrj3n";
       libraryHaskellDepends = [ array base ];
       description = "Memoization combinators using arrays for finite sub-domains of functions";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "arrow-extras" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "arrow-extras";
       version = "0.1.0.1";
       sha256 = "0v3ab3h3rg38dvmyqqfsysgfpib8i81s87wr965cf7lxhfx3lg61";
       libraryHaskellDepends = [ base ];
       homepage = "https://github.com/louispan/arrow-extras#readme";
       description = "Extra functions for Control.Arrow";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "arrow-list" = callPackage
    ({ mkDerivation, base, containers, mtl }:
     mkDerivation {
       pname = "arrow-list";
       version = "0.7";
       sha256 = "1n6m77hdkpjd12r0b8fwxiz3jz0j86cplgsk27m2raj86vr3dy1k";
       libraryHaskellDepends = [ base containers mtl ];
       homepage = "https://github.com/silkapp/arrow-list";
       description = "List arrows for Haskell";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "ascii-progress" = callPackage
    ({ mkDerivation, async, base, concurrent-output, data-default
     , hspec, QuickCheck, time
     }:
     mkDerivation {
       pname = "ascii-progress";
       version = "0.3.3.0";
       sha256 = "0glixkmqk7zz4g88sfrqfrdxd4na0krlwr50m2dkra091jwacgvy";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         async base concurrent-output data-default time
       ];
       testHaskellDepends = [
         async base concurrent-output data-default hspec QuickCheck time
       ];
       homepage = "https://github.com/yamadapc/haskell-ascii-progress";
       description = "A simple progress bar for the console";
       license = stdenv.lib.licenses.mit;
     }) {};
  "asn1-encoding" = callPackage
    ({ mkDerivation, asn1-types, base, bytestring, hourglass, mtl
     , tasty, tasty-quickcheck, text
     }:
     mkDerivation {
       pname = "asn1-encoding";
       version = "0.9.5";
       sha256 = "0adgbamyq0mj1l1hdq4zyyllay714bac1wl0rih3fv1z6vykp1hy";
       libraryHaskellDepends = [ asn1-types base bytestring hourglass ];
       testHaskellDepends = [
         asn1-types base bytestring hourglass mtl tasty tasty-quickcheck
         text
       ];
       homepage = "http://github.com/vincenthz/hs-asn1";
       description = "ASN1 data reader and writer in RAW, BER and DER forms";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "asn1-parse" = callPackage
    ({ mkDerivation, asn1-encoding, asn1-types, base, bytestring }:
     mkDerivation {
       pname = "asn1-parse";
       version = "0.9.4";
       sha256 = "025prsihk5g6rdv9xlfmj0zpa0wa3qjzj5i4ilzvg7f6f3sji8y6";
       libraryHaskellDepends = [
         asn1-encoding asn1-types base bytestring
       ];
       homepage = "https://github.com/vincenthz/hs-asn1";
       description = "Simple monadic parser for ASN1 stream types";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "asn1-types" = callPackage
    ({ mkDerivation, base, bytestring, hourglass, memory }:
     mkDerivation {
       pname = "asn1-types";
       version = "0.3.2";
       sha256 = "05vjchyqiy9n275cygffhn0ma7fz7jx52j0dcdm9qm8h9bziymqc";
       libraryHaskellDepends = [ base bytestring hourglass memory ];
       homepage = "http://github.com/vincenthz/hs-asn1-types";
       description = "ASN.1 types";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "assert-failure" = callPackage
    ({ mkDerivation, base, pretty-show, text }:
     mkDerivation {
       pname = "assert-failure";
       version = "0.1.2.2";
       sha256 = "17aapnal893awjwfjw8lfk1n688sfkpckpvfb0rnjkvvabyid57n";
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [ base pretty-show text ];
       homepage = "https://github.com/Mikolaj/assert-failure";
       description = "Syntactic sugar improving 'assert' and 'error'";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "astro" = callPackage
    ({ mkDerivation, base, HUnit, matrix, QuickCheck, test-framework
     , test-framework-hunit, test-framework-quickcheck2, time
     }:
     mkDerivation {
       pname = "astro";
       version = "0.4.2.1";
       sha256 = "0agy9a91n1sy6rgdgwvdz354x452j2lg7nr3by7z9r22rwdxwpfs";
       libraryHaskellDepends = [ base matrix time ];
       testHaskellDepends = [
         base HUnit QuickCheck test-framework test-framework-hunit
         test-framework-quickcheck2 time
       ];
       homepage = "https://github.com/aligusnet/astro";
       description = "Amateur astronomical computations";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "async" = callPackage
    ({ mkDerivation, base, hashable, HUnit, stm, test-framework
     , test-framework-hunit
     }:
     mkDerivation {
       pname = "async";
       version = "2.2.1";
       sha256 = "09whscli1q5z7lzyq9rfk0bq1ydplh6pjmc6qv0x668k5818c2wg";
       revision = "1";
       editedCabalFile = "0lg8c3iixm7vjjq2nydkqswj78i4iyx2k83hgs12z829yj196y31";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [ base hashable stm ];
       testHaskellDepends = [
         base HUnit stm test-framework test-framework-hunit
       ];
       homepage = "https://github.com/simonmar/async";
       description = "Run IO operations asynchronously and wait for their results";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "async-extra" = callPackage
    ({ mkDerivation, async, base, deepseq, split }:
     mkDerivation {
       pname = "async-extra";
       version = "0.2.0.0";
       sha256 = "0hyc27mphjpc7m9khs47ch0q6j6hy2hmibk82vzrfmc3rfjxa1hd";
       libraryHaskellDepends = [ async base deepseq split ];
       homepage = "https://github.com/agrafix/async-extra#readme";
       description = "Useful concurrent combinators";
       license = stdenv.lib.licenses.mit;
     }) {};
  "async-refresh" = callPackage
    ({ mkDerivation, base, criterion, formatting, HUnit, lifted-async
     , microlens, microlens-th, monad-logger, safe-exceptions, stm
     , test-framework, test-framework-hunit, text, unliftio
     , unliftio-core
     }:
     mkDerivation {
       pname = "async-refresh";
       version = "0.3.0.0";
       sha256 = "1j9llc84f93srw80pyldcglzmssl0l961bzlwsrvbaa84ldhcs6s";
       libraryHaskellDepends = [
         base formatting lifted-async microlens microlens-th monad-logger
         safe-exceptions stm text unliftio unliftio-core
       ];
       testHaskellDepends = [
         base criterion HUnit monad-logger stm test-framework
         test-framework-hunit text
       ];
       homepage = "https://github.com/mtesseract/async-refresh";
       description = "Package implementing core logic for refreshing of expiring data";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "async-refresh-tokens" = callPackage
    ({ mkDerivation, async-refresh, base, bytestring, criterion
     , formatting, HUnit, microlens, microlens-th, monad-logger
     , safe-exceptions, test-framework, test-framework-hunit, text
     , unliftio, unliftio-core
     }:
     mkDerivation {
       pname = "async-refresh-tokens";
       version = "0.4.0.0";
       sha256 = "1py7ips87gbwdhxdfv0xh4hkgw0my4nkkz4w1vwcb3s296a439v7";
       libraryHaskellDepends = [
         async-refresh base bytestring formatting microlens microlens-th
         monad-logger safe-exceptions text unliftio unliftio-core
       ];
       testHaskellDepends = [
         base criterion HUnit monad-logger test-framework
         test-framework-hunit unliftio
       ];
       homepage = "https://github.com/mtesseract/async-refresh-tokens#readme";
       description = "Package implementing core logic for refreshing of expiring access tokens";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "async-timer" = callPackage
    ({ mkDerivation, async, base, containers, criterion
     , safe-exceptions, tasty, tasty-hunit, unliftio, unliftio-core
     }:
     mkDerivation {
       pname = "async-timer";
       version = "0.2.0.0";
       sha256 = "1q6f0ig8m1ij1yz07b36799gavppb7dkwyvlc724gaj1q72bych6";
       libraryHaskellDepends = [
         async base safe-exceptions unliftio unliftio-core
       ];
       testHaskellDepends = [
         async base containers criterion tasty tasty-hunit
       ];
       homepage = "https://github.com/mtesseract/async-timer#readme";
       description = "Provides API for timer based execution of IO actions";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "atom-basic" = callPackage
    ({ mkDerivation, base, base64-bytestring, bytestring, network
     , network-uri, text, time
     }:
     mkDerivation {
       pname = "atom-basic";
       version = "0.2.5";
       sha256 = "1vkm5wfsgprs42qjzxchgrpxj3xalpg2zd79n9isvlxsp1krdgi4";
       libraryHaskellDepends = [
         base base64-bytestring bytestring network network-uri text time
       ];
       description = "Basic Atom feed construction";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "atom-conduit" = callPackage
    ({ mkDerivation, base, blaze-builder, conduit, conduit-combinators
     , data-default, lens-simple, mono-traversable, parsers
     , quickcheck-instances, resourcet, safe-exceptions, tasty
     , tasty-hunit, tasty-quickcheck, text, time, timerep
     , uri-bytestring, xml-conduit, xml-types
     }:
     mkDerivation {
       pname = "atom-conduit";
       version = "0.5.0.1";
       sha256 = "1k9ix1br0vfajjqnprlnhzidvkx9a1pmkyiv2rb3nxb7fp3wb24c";
       libraryHaskellDepends = [
         base blaze-builder conduit conduit-combinators lens-simple
         mono-traversable parsers safe-exceptions text time timerep
         uri-bytestring xml-conduit xml-types
       ];
       testHaskellDepends = [
         base blaze-builder conduit conduit-combinators data-default
         lens-simple mono-traversable parsers quickcheck-instances resourcet
         safe-exceptions tasty tasty-hunit tasty-quickcheck text time
         uri-bytestring xml-conduit xml-types
       ];
       description = "Streaming parser/renderer for the Atom 1.0 standard (RFC 4287).";
       license = stdenv.lib.licenses.publicDomain;
     }) {};
  "atomic-primops" = callPackage
    ({ mkDerivation, base, ghc-prim, primitive }:
     mkDerivation {
       pname = "atomic-primops";
       version = "0.8.2";
       sha256 = "0cyr2x6xqz6s233znrz9rnrfj56m9bmnawwnka0lsqqy1hp8gy37";
       revision = "1";
       editedCabalFile = "0gdcd84x2s4jiry0was74rzv9l53an1q6ad8jiaj37fr4fim0wcc";
       libraryHaskellDepends = [ base ghc-prim primitive ];
       homepage = "https://github.com/rrnewton/haskell-lockfree/wiki";
       description = "A safe approach to CAS and other atomic ops in Haskell";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "atomic-write" = callPackage
    ({ mkDerivation, base, bytestring, directory, filepath, hspec
     , temporary, text, unix-compat
     }:
     mkDerivation {
       pname = "atomic-write";
       version = "0.2.0.6";
       sha256 = "1xs3shwnlj8hmnm3q6jc8nv78z0481i5n4hrqqdmbpx8grvlnqyl";
       libraryHaskellDepends = [
         base bytestring directory filepath temporary text unix-compat
       ];
       testHaskellDepends = [
         base bytestring filepath hspec temporary text unix-compat
       ];
       homepage = "https://github.com/stackbuilders/atomic-write";
       description = "Atomically write to a file";
       license = stdenv.lib.licenses.mit;
     }) {};
  "attoparsec" = callPackage
    ({ mkDerivation, array, base, bytestring, case-insensitive
     , containers, criterion, deepseq, directory, filepath, ghc-prim
     , http-types, parsec, scientific, text, transformers
     , unordered-containers, vector
     }:
     mkDerivation {
       pname = "attoparsec";
       version = "0.13.2.2";
       sha256 = "0j6qcwd146yzlkc9mcvzvnixsyl65n2a68l28322q5v9p4g4g4yx";
       revision = "2";
       editedCabalFile = "1j06na26rsahrbkzrs71nl7ym8fk390pnvh577wlxs4ik6hsn2va";
       libraryHaskellDepends = [
         array base bytestring containers deepseq scientific text
         transformers
       ];
       benchmarkHaskellDepends = [
         array base bytestring case-insensitive containers criterion deepseq
         directory filepath ghc-prim http-types parsec scientific text
         transformers unordered-containers vector
       ];
       doCheck = false;
       homepage = "https://github.com/bos/attoparsec";
       description = "Fast combinator parsing for bytestrings and text";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "attoparsec-base64" = callPackage
    ({ mkDerivation, attoparsec, base, bytestring, text, word8 }:
     mkDerivation {
       pname = "attoparsec-base64";
       version = "0.0.0";
       sha256 = "1rvkc7kaya42a8djkyj642r5dq952gwkhinif9r22ijaic656cq8";
       libraryHaskellDepends = [ attoparsec base bytestring text word8 ];
       homepage = "https://github.com/athanclark/attoparsec-base64#readme";
       description = "Fetch only base64 characters, erroring in the attoparsec monad on failure";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "attoparsec-binary" = callPackage
    ({ mkDerivation, attoparsec, base, bytestring }:
     mkDerivation {
       pname = "attoparsec-binary";
       version = "0.2";
       sha256 = "02vswxsgayw50xli7mbacsjmk1diifzkfgnyfn9ck5mk41dl9rh5";
       libraryHaskellDepends = [ attoparsec base bytestring ];
       description = "Binary processing extensions to Attoparsec";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "attoparsec-expr" = callPackage
    ({ mkDerivation, attoparsec, base }:
     mkDerivation {
       pname = "attoparsec-expr";
       version = "0.1.1.2";
       sha256 = "0z25pc3rq98ysk92jclr90n35982a566sxri51yh1s9c24vd8k4d";
       libraryHaskellDepends = [ attoparsec base ];
       description = "Port of parsec's expression parser to attoparsec";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "attoparsec-ip" = callPackage
    ({ mkDerivation, attoparsec, base, ip }:
     mkDerivation {
       pname = "attoparsec-ip";
       version = "0.0.1";
       sha256 = "0aananvfa7h9d73yf1c69zw5b3s3m67qhfmfrzdbifw3wj5cm9cd";
       libraryHaskellDepends = [ attoparsec base ip ];
       testHaskellDepends = [ base ];
       homepage = "https://github.com/athanclark/attoparsec-ip#readme";
       description = "Parse IP data types with attoparsec";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "attoparsec-iso8601" = callPackage
    ({ mkDerivation, attoparsec, base, base-compat, text, time }:
     mkDerivation {
       pname = "attoparsec-iso8601";
       version = "1.0.1.0";
       sha256 = "0hj10w15qp2z5bz2v4xahhmbgzclpyfi5l2sv97wqycysg9gp7s9";
       libraryHaskellDepends = [ attoparsec base base-compat text time ];
       homepage = "https://github.com/bos/aeson";
       description = "Parsing of ISO 8601 dates, originally from aeson";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "attoparsec-path" = callPackage
    ({ mkDerivation, attoparsec, base, path, QuickCheck
     , quickcheck-instances, text
     }:
     mkDerivation {
       pname = "attoparsec-path";
       version = "0.0.0.1";
       sha256 = "035n430iwqkfkxpphgn8xjd3h5qav8dwd1gm4a3v3z8h49i2cwfh";
       libraryHaskellDepends = [ attoparsec base path text ];
       testHaskellDepends = [
         attoparsec base QuickCheck quickcheck-instances text
       ];
       homepage = "https://github.com/athanclark/attoparsec-path#readme";
       description = "Convenience bindings between path and attoparsec";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "attoparsec-uri" = callPackage
    ({ mkDerivation, attoparsec, attoparsec-ip, base, bytedump, ip
     , strict, text, vector
     }:
     mkDerivation {
       pname = "attoparsec-uri";
       version = "0.0.4";
       sha256 = "1wzisb9xnykaxnp1jp0a3lvh1m2swynk2r2mg6nfv5jzlv52q0sf";
       libraryHaskellDepends = [
         attoparsec attoparsec-ip base bytedump ip strict text vector
       ];
       homepage = "https://github.com/athanclark/attoparsec-uri#readme";
       description = "URI parser / printer using attoparsec";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "audacity" = callPackage
    ({ mkDerivation, base, bytestring, deepseq, directory
     , explicit-exception, filepath, non-empty, semigroups
     , storable-record, storablevector, tagchup, transformers
     , utility-ht, xml-basic
     }:
     mkDerivation {
       pname = "audacity";
       version = "0.0.2";
       sha256 = "1916phnj3m12apyjarmda48xr2bq19rfn7sn6nskkbg6qjqxzlnr";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         base bytestring deepseq directory explicit-exception filepath
         non-empty semigroups storable-record storablevector tagchup
         transformers utility-ht xml-basic
       ];
       homepage = "http://hub.darcs.net/thielema/audacity";
       description = "Interchange with the Audacity sound signal editor";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "authenticate" = callPackage
    ({ mkDerivation, aeson, attoparsec, base, blaze-builder, bytestring
     , case-insensitive, conduit, containers, http-conduit, http-types
     , network-uri, resourcet, tagstream-conduit, text, transformers
     , unordered-containers, xml-conduit
     }:
     mkDerivation {
       pname = "authenticate";
       version = "1.3.4";
       sha256 = "1f1gjggfq114h3nrlzg2svm0j5ghp6n9zlgb3fnq2pgpzpdndm9z";
       libraryHaskellDepends = [
         aeson attoparsec base blaze-builder bytestring case-insensitive
         conduit containers http-conduit http-types network-uri resourcet
         tagstream-conduit text transformers unordered-containers
         xml-conduit
       ];
       homepage = "http://github.com/yesodweb/authenticate";
       description = "Authentication methods for Haskell web applications";
       license = stdenv.lib.licenses.mit;
     }) {};
  "authenticate-oauth" = callPackage
    ({ mkDerivation, base, base64-bytestring, blaze-builder, bytestring
     , crypto-pubkey-types, data-default, http-client, http-types
     , random, RSA, SHA, time, transformers, transformers-compat
     }:
     mkDerivation {
       pname = "authenticate-oauth";
       version = "1.6";
       sha256 = "0xc37yql79r9idjfdhzg85syrwwgaxggcv86myi6zq2pzl89yvfj";
       revision = "1";
       editedCabalFile = "1fxwn8bn6qs8dhxq0q04psq7zp1qvw1b6g3vmsclgyj9p7kr77ms";
       libraryHaskellDepends = [
         base base64-bytestring blaze-builder bytestring crypto-pubkey-types
         data-default http-client http-types random RSA SHA time
         transformers transformers-compat
       ];
       homepage = "http://github.com/yesodweb/authenticate";
       description = "Library to authenticate with OAuth for Haskell web applications";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "auto" = callPackage
    ({ mkDerivation, base, base-orphans, bytestring, cereal, containers
     , deepseq, MonadRandom, profunctors, random, semigroups
     , transformers
     }:
     mkDerivation {
       pname = "auto";
       version = "0.4.3.1";
       sha256 = "0h9vrljhq9nlmi2j9wszpay0yli4n4r993mwamg69qqppcf6vqn6";
       libraryHaskellDepends = [
         base base-orphans bytestring cereal containers deepseq MonadRandom
         profunctors random semigroups transformers
       ];
       homepage = "https://github.com/mstksg/auto";
       description = "Denotative, locally stateful programming DSL & platform";
       license = stdenv.lib.licenses.mit;
     }) {};
  "auto-update" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "auto-update";
       version = "0.1.4";
       sha256 = "09dlh2alsx2mw5kvj931yhbj0aw7jmly2cm9xbscm2sf098w35jy";
       libraryHaskellDepends = [ base ];
       homepage = "https://github.com/yesodweb/wai";
       description = "Efficiently run periodic, on-demand actions";
       license = stdenv.lib.licenses.mit;
     }) {};
  "autoexporter" = callPackage
    ({ mkDerivation, base, Cabal, directory, filepath }:
     mkDerivation {
       pname = "autoexporter";
       version = "1.1.13";
       sha256 = "05mgvif7wiq0vplk92kp8qn4a5wfma1gwdihqlz5lspmczszpdkv";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [ base Cabal directory filepath ];
       executableHaskellDepends = [ base Cabal directory filepath ];
       homepage = "https://github.com/tfausak/autoexporter#readme";
       description = "Automatically re-export modules";
       license = stdenv.lib.licenses.mit;
     }) {};
  "avro" = callPackage
    ({ mkDerivation, aeson, array, base, base16-bytestring, binary
     , bytestring, containers, data-binary-ieee754, directory, entropy
     , extra, fail, hashable, hspec, lens, lens-aeson, mtl, pure-zlib
     , QuickCheck, scientific, semigroups, tagged, template-haskell
     , text, transformers, unordered-containers, vector
     }:
     mkDerivation {
       pname = "avro";
       version = "0.3.5.1";
       sha256 = "147w9a30z2vxjf8lsmf4vy0p9dvc8c3lla45b42sinr9916m61f8";
       libraryHaskellDepends = [
         aeson array base base16-bytestring binary bytestring containers
         data-binary-ieee754 entropy fail hashable mtl pure-zlib scientific
         semigroups tagged template-haskell text unordered-containers vector
       ];
       testHaskellDepends = [
         aeson array base base16-bytestring binary bytestring containers
         directory entropy extra fail hashable hspec lens lens-aeson mtl
         pure-zlib QuickCheck scientific semigroups tagged template-haskell
         text transformers unordered-containers vector
       ];
       homepage = "https://github.com/GaloisInc/avro#readme";
       description = "Avro serialization support for Haskell";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "avwx" = callPackage
    ({ mkDerivation, attoparsec, base, HTTP, lens, optparse-applicative
     , parsers, pretty-show, text
     }:
     mkDerivation {
       pname = "avwx";
       version = "0.3.0.2";
       sha256 = "02pvh2i1f96k3pyrmdb3jv2ia7mcp8q5pw067psr8k2sw329qadl";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [ attoparsec base HTTP lens parsers text ];
       executableHaskellDepends = [
         base optparse-applicative pretty-show text
       ];
       testHaskellDepends = [ attoparsec base lens pretty-show text ];
       homepage = "https://www.hcesperer.org/posts/2016-09-20-avwx.html";
       description = "Parse aviation weather reports";
       license = stdenv.lib.licenses.mit;
     }) {};
  "backprop" = callPackage
    ({ mkDerivation, base, containers, criterion, deepseq, directory
     , hmatrix, microlens, microlens-th, mwc-random, primitive
     , reflection, simple-reflect, time, transformers, vector, vinyl
     }:
     mkDerivation {
       pname = "backprop";
       version = "0.2.5.0";
       sha256 = "1xbbmv6cp9n21x2bqpr0p4cls994mchxp7hd7k6ib83avr0vwbda";
       libraryHaskellDepends = [
         base containers deepseq microlens primitive reflection
         simple-reflect transformers vector vinyl
       ];
       benchmarkHaskellDepends = [
         base criterion deepseq directory hmatrix microlens microlens-th
         mwc-random time vector
       ];
       homepage = "https://backprop.jle.im";
       description = "Heterogeneous automatic differentation";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "bank-holidays-england" = callPackage
    ({ mkDerivation, base, containers, hspec, QuickCheck, time }:
     mkDerivation {
       pname = "bank-holidays-england";
       version = "0.1.0.8";
       sha256 = "0ak7m4xaymbh3cyhddj45p0pcazf79lnp63wvh4kh2f4fwh4f69j";
       libraryHaskellDepends = [ base containers time ];
       testHaskellDepends = [ base containers hspec QuickCheck time ];
       homepage = "https://bitbucket.org/davecturner/bank-holidays-england";
       description = "Calculation of bank holidays in England and Wales";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "barrier" = callPackage
    ({ mkDerivation, base, blaze-svg, bytestring, template-haskell
     , text, unordered-containers
     }:
     mkDerivation {
       pname = "barrier";
       version = "0.1.1";
       sha256 = "1n8yx66lvyn90ixyvpjafrmhpgnznnqj9il5rixlr651xq0xm5b3";
       revision = "1";
       editedCabalFile = "167akvi72l47gcqbq5609m24469pq0xmv0kjbmivnrxs796gh890";
       isLibrary = true;
       isExecutable = true;
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [
         base blaze-svg bytestring template-haskell text
         unordered-containers
       ];
       doCheck = false;
       homepage = "https://github.com/philopon/barrier";
       description = "Shields.io style badge generator";
       license = stdenv.lib.licenses.mit;
     }) {};
  "base-compat" = callPackage
    ({ mkDerivation, base, unix }:
     mkDerivation {
       pname = "base-compat";
       version = "0.10.5";
       sha256 = "0hgvlqcr852hfp52jp99snhbj550mvxxpi8qn15d8ml9aqhyl2lr";
       libraryHaskellDepends = [ base unix ];
       description = "A compatibility layer for base";
       license = stdenv.lib.licenses.mit;
     }) {};
  "base-compat-batteries" = callPackage
    ({ mkDerivation, base, base-compat, hspec, hspec-discover
     , QuickCheck
     }:
     mkDerivation {
       pname = "base-compat-batteries";
       version = "0.10.1";
       sha256 = "1j8ky6241mj1ymbwm9scvyvbknj7n2r56cnkg9y1zf2xwjpqnmqm";
       libraryHaskellDepends = [ base base-compat ];
       testHaskellDepends = [ base hspec QuickCheck ];
       testToolDepends = [ hspec-discover ];
       description = "base-compat with extra batteries";
       license = stdenv.lib.licenses.mit;
     }) {};
  "base-orphans" = callPackage
    ({ mkDerivation, base, ghc-prim, hspec, hspec-discover, QuickCheck
     }:
     mkDerivation {
       pname = "base-orphans";
       version = "0.7";
       sha256 = "057f9npnqk71ccfh95djfkpd54dzazphj06grwxa3fyhwcwxrb8a";
       libraryHaskellDepends = [ base ghc-prim ];
       testHaskellDepends = [ base hspec QuickCheck ];
       testToolDepends = [ hspec-discover ];
       homepage = "https://github.com/haskell-compat/base-orphans#readme";
       description = "Backwards-compatible orphan instances for base";
       license = stdenv.lib.licenses.mit;
     }) {};
  "base-prelude" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "base-prelude";
       version = "1.3";
       sha256 = "1zk728sd09hh2r4xwz4lazsrrgg5cshydn64932sm0vckplndk73";
       libraryHaskellDepends = [ base ];
       doCheck = false;
       homepage = "https://github.com/nikita-volkov/base-prelude";
       description = "The most complete prelude formed solely from the \"base\" package";
       license = stdenv.lib.licenses.mit;
     }) {};
  "base-unicode-symbols" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "base-unicode-symbols";
       version = "0.2.2.4";
       sha256 = "1afc5pchd3vw33bmjbjygkd0l5zh7glbsx4bfyxfscpc1x1l3y52";
       libraryHaskellDepends = [ base ];
       homepage = "http://haskell.org/haskellwiki/Unicode-symbols";
       description = "Unicode alternatives for common functions and operators";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "base16-bytestring" = callPackage
    ({ mkDerivation, base, bytestring, ghc-prim }:
     mkDerivation {
       pname = "base16-bytestring";
       version = "0.1.1.6";
       sha256 = "0jf40m3yijqw6wd1rwwvviww46fasphaay9m9rgqyhf5aahnbzjs";
       libraryHaskellDepends = [ base bytestring ghc-prim ];
       homepage = "http://github.com/bos/base16-bytestring";
       description = "Fast base16 (hex) encoding and decoding for ByteStrings";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "base32string" = callPackage
    ({ mkDerivation, aeson, base, binary, bytestring, hspec, text }:
     mkDerivation {
       pname = "base32string";
       version = "0.9.1";
       sha256 = "0cpa6bvam4zd2l2hb3sdngj0dx482c9rkz4jj87n6pxsmq9id4wy";
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [ aeson base binary bytestring text ];
       testHaskellDepends = [ base binary bytestring hspec text ];
       homepage = "http://www.leonmergen.com/opensource.html";
       description = "Fast and safe representation of a Base-32 string";
       license = stdenv.lib.licenses.mit;
     }) {};
  "base58string" = callPackage
    ({ mkDerivation, aeson, base, binary, bytestring, hspec, text }:
     mkDerivation {
       pname = "base58string";
       version = "0.10.0";
       sha256 = "1260x4bkrizvnmylm237gpi92wazh31md9nf982sac3fsxyn0wiv";
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [ aeson base binary bytestring text ];
       testHaskellDepends = [ base binary bytestring hspec text ];
       homepage = "http://www.leonmergen.com/opensource.html";
       description = "Fast and safe representation of a Base-58 string";
       license = stdenv.lib.licenses.mit;
     }) {};
  "base64-bytestring" = callPackage
    ({ mkDerivation, base, bytestring, containers, criterion, deepseq
     , HUnit, QuickCheck, split, test-framework, test-framework-hunit
     , test-framework-quickcheck2
     }:
     mkDerivation {
       pname = "base64-bytestring";
       version = "1.0.0.2";
       sha256 = "13305brzlac24pifiqd5a2z10c6k6amhpdy9cc0z5ryrkgnm8dhr";
       libraryHaskellDepends = [ base bytestring ];
       testHaskellDepends = [
         base bytestring containers HUnit QuickCheck split test-framework
         test-framework-hunit test-framework-quickcheck2
       ];
       benchmarkHaskellDepends = [
         base bytestring containers criterion deepseq
       ];
       homepage = "https://github.com/haskell/base64-bytestring";
       description = "Fast base64 encoding and decoding for ByteStrings";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "base64-bytestring-type" = callPackage
    ({ mkDerivation, aeson, base, base-compat, base64-bytestring
     , binary, bytestring, cereal, deepseq, hashable, QuickCheck, text
     }:
     mkDerivation {
       pname = "base64-bytestring-type";
       version = "1";
       sha256 = "0h74c0qhf4n0pamrl29ha5hgf940bay0dhl8rifaw4l03z8rn0bl";
       revision = "4";
       editedCabalFile = "0yfhy4a9n67l9w3amqrzzy79q47yyj6qbv5i5lqym5z7ygwmlzn6";
       libraryHaskellDepends = [
         aeson base base-compat base64-bytestring binary bytestring cereal
         deepseq hashable QuickCheck text
       ];
       doCheck = false;
       homepage = "https://github.com/futurice/haskell-base64-bytestring-type#readme";
       description = "A newtype around ByteString, for base64 encoding";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "base64-string" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "base64-string";
       version = "0.2";
       sha256 = "0pkhrimabacsjalzq0y3a197fqfbspsbv8xszzg4vbb1fb59dj1y";
       libraryHaskellDepends = [ base ];
       homepage = "http://urchin.earth.li/~ian/cabal/base64-string/";
       description = "Base64 implementation for String's";
       license = "unknown";
       hydraPlatforms = stdenv.lib.platforms.none;
     }) {};
  "basement" = callPackage
    ({ mkDerivation, base, ghc-prim }:
     mkDerivation {
       pname = "basement";
       version = "0.0.8";
       sha256 = "194jw567di4q2758943q9rrwkbf9gl261my7qc21i9xhyabipx67";
       revision = "1";
       editedCabalFile = "005w4d6bkx6xq1whgwna4rqmxc36vgjbvb8q35sh1z2s76l89ajy";
       libraryHaskellDepends = [ base ghc-prim ];
       homepage = "https://github.com/haskell-foundation/foundation#readme";
       description = "Foundation scrap box of array & string";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "basic-prelude" = callPackage
    ({ mkDerivation, base, bytestring, containers, filepath, hashable
     , text, transformers, unordered-containers, vector
     }:
     mkDerivation {
       pname = "basic-prelude";
       version = "0.7.0";
       sha256 = "0yckmnvm6i4vw0mykj4fzl4ldsf67v8d2h0vp1bakyj84n4myx8h";
       libraryHaskellDepends = [
         base bytestring containers filepath hashable text transformers
         unordered-containers vector
       ];
       homepage = "https://github.com/snoyberg/basic-prelude#readme";
       description = "An enhanced core prelude; a common foundation for alternate preludes";
       license = stdenv.lib.licenses.mit;
     }) {};
  "bbdb" = callPackage
    ({ mkDerivation, base, hspec, parsec }:
     mkDerivation {
       pname = "bbdb";
       version = "0.8";
       sha256 = "0p1aphzp55h4zlh3h8xnm6mxvsxyrab98ms8f07iqvp4p267kryw";
       libraryHaskellDepends = [ base parsec ];
       testHaskellDepends = [ base hspec parsec ];
       homepage = "https://github.com/henrylaxen/bbdb";
       description = "Ability to read, write, and modify BBDB files";
       license = stdenv.lib.licenses.gpl3;
     }) {};
  "bcrypt" = callPackage
    ({ mkDerivation, base, bytestring, data-default, entropy, memory }:
     mkDerivation {
       pname = "bcrypt";
       version = "0.0.11";
       sha256 = "1vzwf9g6mvn4v1cn1m0axjyi2l0glnvv8c49v1j51dm7xn41fcz4";
       libraryHaskellDepends = [
         base bytestring data-default entropy memory
       ];
       description = "Haskell bindings to the bcrypt password hash";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "beam-core" = callPackage
    ({ mkDerivation, aeson, base, bytestring, containers, dlist, free
     , ghc-prim, hashable, microlens, mtl, network-uri, tagged, tasty
     , tasty-hunit, text, time, vector-sized
     }:
     mkDerivation {
       pname = "beam-core";
       version = "0.7.2.2";
       sha256 = "160ga0w0i1l4nbag6jg8wn3a3csid93x6fdd4j4pah2zk7dswc8j";
       revision = "1";
       editedCabalFile = "1fvds5arsm0h81fw4rf5fsg5sa9jfqn350amhhc247f0hhjy3csf";
       libraryHaskellDepends = [
         aeson base bytestring containers dlist free ghc-prim hashable
         microlens mtl network-uri tagged text time vector-sized
       ];
       testHaskellDepends = [
         base bytestring tasty tasty-hunit text time
       ];
       homepage = "http://travis.athougies.net/projects/beam.html";
       description = "Type-safe, feature-complete SQL query and manipulation interface for Haskell";
       license = stdenv.lib.licenses.mit;
     }) {};
  "beam-migrate" = callPackage
    ({ mkDerivation, aeson, base, beam-core, bytestring, containers
     , deepseq, dependent-map, dependent-sum, free, ghc-prim, hashable
     , haskell-src-exts, mtl, parallel, pqueue, pretty, scientific, text
     , time, unordered-containers, uuid-types, vector
     }:
     mkDerivation {
       pname = "beam-migrate";
       version = "0.3.2.1";
       sha256 = "0wwkyg87wf3qcj8c5j3ammdkmjacgzw35pgxbq75bvfkx8k5j69d";
       revision = "1";
       editedCabalFile = "1ghg6n0dj63i0am7wh0cg95hwyf29gnkm0llrw3wb5pj8f7937gv";
       libraryHaskellDepends = [
         aeson base beam-core bytestring containers deepseq dependent-map
         dependent-sum free ghc-prim hashable haskell-src-exts mtl parallel
         pqueue pretty scientific text time unordered-containers uuid-types
         vector
       ];
       homepage = "https://travis.athougies.net/projects/beam.html";
       description = "SQL DDL support and migrations support library for Beam";
       license = stdenv.lib.licenses.mit;
     }) {};
  "bench" = callPackage
    ({ mkDerivation, base, criterion, optparse-applicative, process
     , silently, text, turtle
     }:
     mkDerivation {
       pname = "bench";
       version = "1.0.12";
       sha256 = "1sy97qpv6paar2d5syppk6lc06wjx6qyz5aidsmh30jq853nydx6";
       isLibrary = false;
       isExecutable = true;
       executableHaskellDepends = [
         base criterion optparse-applicative process silently text turtle
       ];
       doHaddock = false;
       homepage = "https://github.com/Gabriel439/bench";
       description = "Command-line benchmark tool";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "bencode" = callPackage
    ({ mkDerivation, base, binary, bytestring, containers, parsec }:
     mkDerivation {
       pname = "bencode";
       version = "0.6.0.0";
       sha256 = "12pnh598k30ggs54f0pic19j7ji8f4xn7fydkdnlig79rvzgv3iv";
       libraryHaskellDepends = [
         base binary bytestring containers parsec
       ];
       description = "Parser and printer for bencoded data";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "between" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "between";
       version = "0.11.0.0";
       sha256 = "0pa6f7vadslvff0hlm939r2h8k130f16l2sjnzci79n54q9kadw3";
       libraryHaskellDepends = [ base ];
       homepage = "https://github.com/trskop/between";
       description = "Function combinator \"between\" and derived combinators";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "bhoogle" = callPackage
    ({ mkDerivation, base, brick, bytestring, containers, directory
     , filepath, hoogle, lens, process, protolude, text, time
     , typed-process, vector, vty
     }:
     mkDerivation {
       pname = "bhoogle";
       version = "0.1.3.5";
       sha256 = "1gig9w1k1w2kw6y3wx6ckmc7kamwwzzq7mbaxil0rmb5ms0p1rf9";
       revision = "2";
       editedCabalFile = "0jwfw2xa55ysfxyzp5n2pf2vq753iagpmvg9xnj69nv6ly9whfp7";
       isLibrary = false;
       isExecutable = true;
       executableHaskellDepends = [
         base brick bytestring containers directory filepath hoogle lens
         process protolude text time typed-process vector vty
       ];
       doHaddock = false;
       homepage = "https://github.com/andrevdm/bhoogle#readme";
       description = "Simple terminal GUI for local hoogle";
       license = "(BSD-3-Clause OR Apache-2.0)";
     }) {};
  "bibtex" = callPackage
    ({ mkDerivation, base, latex, parsec, utility-ht }:
     mkDerivation {
       pname = "bibtex";
       version = "0.1.0.6";
       sha256 = "012zxvrlkl5vdjl1nmabhyi160xak0c8s3gn5ffxz2rqi6akn2h9";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [ base latex parsec utility-ht ];
       homepage = "http://www.haskell.org/haskellwiki/BibTeX";
       description = "Parse, format and processing BibTeX files";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "bifunctors" = callPackage
    ({ mkDerivation, base, base-orphans, comonad, containers, hspec
     , hspec-discover, QuickCheck, semigroups, tagged, template-haskell
     , th-abstraction, transformers, transformers-compat
     }:
     mkDerivation {
       pname = "bifunctors";
       version = "5.5.3";
       sha256 = "1jn9rxg643xnlhrknmjz88nblcpsr45xwjkwwnn5nxpasa7m4d6l";
       libraryHaskellDepends = [
         base base-orphans comonad containers semigroups tagged
         template-haskell th-abstraction transformers
       ];
       testHaskellDepends = [
         base hspec QuickCheck template-haskell transformers
         transformers-compat
       ];
       testToolDepends = [ hspec-discover ];
       homepage = "http://github.com/ekmett/bifunctors/";
       description = "Bifunctors";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "bimap" = callPackage
    ({ mkDerivation, base, containers, exceptions, QuickCheck
     , template-haskell
     }:
     mkDerivation {
       pname = "bimap";
       version = "0.3.3";
       sha256 = "1lca7bdw4bh8xj88g0h05dq43dis9ah858r2pbnkxgdwqxar70kk";
       libraryHaskellDepends = [ base containers exceptions ];
       testHaskellDepends = [
         base containers exceptions QuickCheck template-haskell
       ];
       homepage = "https://github.com/joelwilliamson/bimap";
       description = "Bidirectional mapping between two key types";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "bimap-server" = callPackage
    ({ mkDerivation, aeson, base, bimap, binary, directory, http-types
     , unix, wai, warp
     }:
     mkDerivation {
       pname = "bimap-server";
       version = "0.1.0.1";
       sha256 = "0dgmiv1pzzrq22778a2l46knxfk5rh2vw331gcqhxx0jb23d3pq9";
       libraryHaskellDepends = [
         aeson base bimap binary directory http-types unix wai warp
       ];
       description = "Two-column database server";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "binary-bits" = callPackage
    ({ mkDerivation, base, binary, bytestring, QuickCheck, random
     , test-framework, test-framework-quickcheck2
     }:
     mkDerivation {
       pname = "binary-bits";
       version = "0.5";
       sha256 = "1577bd5q4lhw024v4hfil10iyx7v4cf72ldhxb8xhm27i80lllqn";
       libraryHaskellDepends = [ base binary bytestring ];
       testHaskellDepends = [
         base binary bytestring QuickCheck random test-framework
         test-framework-quickcheck2
       ];
       description = "Bit parsing/writing on top of binary";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "binary-conduit" = callPackage
    ({ mkDerivation, base, binary, bytestring, conduit, exceptions
     , hspec, QuickCheck, quickcheck-assertions, resourcet, vector
     }:
     mkDerivation {
       pname = "binary-conduit";
       version = "1.3.1";
       sha256 = "17yj8rn6fwzbv0z6lczrddv7mkr8906xg2pf2dlvmnwb97zw7004";
       libraryHaskellDepends = [
         base binary bytestring conduit exceptions vector
       ];
       testHaskellDepends = [
         base binary bytestring conduit hspec QuickCheck
         quickcheck-assertions resourcet
       ];
       homepage = "http://github.com/qnikst/binary-conduit/";
       description = "data serialization/deserialization conduit library";
       license = stdenv.lib.licenses.mit;
     }) {};
  "binary-ext" = callPackage
    ({ mkDerivation, attoparsec, base, binary, bytestring, conduit
     , conduit-combinators, data-binary-ieee754, errors, exceptions
     , HUnit, monad-control, monad-loops, mono-traversable, mtl
     , scientific, text, transformers, transformers-base
     }:
     mkDerivation {
       pname = "binary-ext";
       version = "2.0.4";
       sha256 = "026y58an12p6cmpxhs3qrwl6w4q3i6i47svcj5qz5mi6vsdy2n3f";
       libraryHaskellDepends = [
         attoparsec base binary bytestring conduit conduit-combinators
         data-binary-ieee754 errors exceptions monad-control monad-loops
         mono-traversable mtl scientific text transformers transformers-base
       ];
       testHaskellDepends = [
         attoparsec base binary bytestring conduit conduit-combinators
         data-binary-ieee754 errors exceptions HUnit monad-control
         monad-loops mono-traversable mtl scientific text transformers
         transformers-base
       ];
       homepage = "https://github.com/A1-Triard/binary-ext#readme";
       description = "An alternate with strong-typed errors for `Data.Binary.Get` monad from `binary` package.";
       license = stdenv.lib.licenses.asl20;
     }) {};
  "binary-ieee754" = callPackage
    ({ mkDerivation, array, base, binary }:
     mkDerivation {
       pname = "binary-ieee754";
       version = "0.1.0.0";
       sha256 = "0m2dxr5a4rb18jh1xj5yxjpjybn6bz5pjxd2cx06nd6dif4qki0m";
       libraryHaskellDepends = [ array base binary ];
       homepage = "https://github.com/winterland1989/binary-ieee754";
       description = "Backport ieee754 float double combinators to older binary";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "binary-list" = callPackage
    ({ mkDerivation, base, binary, bytestring, criterion, deepseq
     , phantom-state, transformers
     }:
     mkDerivation {
       pname = "binary-list";
       version = "1.1.1.2";
       sha256 = "0y0qvlqb9c9ym0q2s9yjhbmgq56w3pxjva94rdr9a6q9lj7fa8bb";
       libraryHaskellDepends = [
         base binary bytestring deepseq phantom-state transformers
       ];
       benchmarkHaskellDepends = [ base criterion ];
       description = "Lists of length a power of two";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "binary-orphans" = callPackage
    ({ mkDerivation, aeson, base, binary, case-insensitive, hashable
     , scientific, tagged, text, text-binary, time, unordered-containers
     , vector, vector-binary-instances
     }:
     mkDerivation {
       pname = "binary-orphans";
       version = "0.1.8.0";
       sha256 = "1k6067wn9zki7xvbslvxx8cq1wrmz3kjb3q3x8mxycc9v765fxgi";
       revision = "5";
       editedCabalFile = "1dny1jvwwcyrbzhqvymmn6n7ib48bpy0nasbrcrdrpzjypkmg500";
       libraryHaskellDepends = [
         aeson base binary case-insensitive hashable scientific tagged text
         text-binary time unordered-containers vector
         vector-binary-instances
       ];
       doCheck = false;
       homepage = "https://github.com/phadej/binary-orphans#readme";
       description = "Orphan instances for binary";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "binary-parser" = callPackage
    ({ mkDerivation, base, base-prelude, bytestring, mtl, text
     , transformers
     }:
     mkDerivation {
       pname = "binary-parser";
       version = "0.5.5";
       sha256 = "1cs3zrhgnng2h84xnnvqcy6yrdm0xay1494dsa612y590s773aqx";
       revision = "3";
       editedCabalFile = "14n41yazmks2qw0v4krxcqw3ac0wdy2z53d0qz0rdjcd94fpghjf";
       libraryHaskellDepends = [
         base base-prelude bytestring mtl text transformers
       ];
       doCheck = false;
       homepage = "https://github.com/nikita-volkov/binary-parser";
       description = "A highly-efficient but limited parser API specialised for bytestrings";
       license = stdenv.lib.licenses.mit;
     }) {};
  "binary-parsers" = callPackage
    ({ mkDerivation, base, binary, bytestring, bytestring-lexing
     , scientific
     }:
     mkDerivation {
       pname = "binary-parsers";
       version = "0.2.3.0";
       sha256 = "0yi13cf36w5ilh1cyd7rvyagibbbgbjdym7gp6zgq3lm7d4raqdw";
       revision = "1";
       editedCabalFile = "09ag18yr1m26fl3w7ab1d5q5j201ygbw7qsbsy41bwd6iq87rq15";
       libraryHaskellDepends = [
         base binary bytestring bytestring-lexing scientific
       ];
       doCheck = false;
       homepage = "https://github.com/winterland1989/binary-parsers";
       description = "Extends binary with parsec/attoparsec style parsing combinators";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "binary-search" = callPackage
    ({ mkDerivation, base, containers, transformers }:
     mkDerivation {
       pname = "binary-search";
       version = "1.0.0.3";
       sha256 = "1ypn2i2c3mxd1zhpj515zf15y9sgz10akbyngg2ymp7ddbs2vqxh";
       libraryHaskellDepends = [ base containers transformers ];
       doCheck = false;
       description = "Binary and exponential searches";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "binary-shared" = callPackage
    ({ mkDerivation, base, binary, bytestring, containers, mtl }:
     mkDerivation {
       pname = "binary-shared";
       version = "0.8.3";
       sha256 = "1clqq0rqjw1v7y6glkjnfyga5gxh768flyw617g47z0qa181c0c3";
       libraryHaskellDepends = [ base binary bytestring containers mtl ];
       homepage = "http://www.leksah.org";
       description = "Sharing for the binary package";
       license = "GPL";
     }) {};
  "binary-tagged" = callPackage
    ({ mkDerivation, aeson, array, base, base16-bytestring, bifunctors
     , binary, binary-orphans, bytestring, containers, criterion
     , deepseq, generics-sop, hashable, nats, quickcheck-instances
     , scientific, semigroups, SHA, tagged, tasty, tasty-quickcheck
     , text, time, unordered-containers, vector
     }:
     mkDerivation {
       pname = "binary-tagged";
       version = "0.1.5.1";
       sha256 = "196msm7v0r41d7gx8aghl0c1gvir60sf0w9sfpcz2dq9akzqzjvh";
       revision = "1";
       editedCabalFile = "1z612d3wbrlywcx96lc52svi9b2s6nskdnwnwm3d5mylcqaqckcx";
       libraryHaskellDepends = [
         aeson array base base16-bytestring binary bytestring containers
         generics-sop hashable scientific SHA tagged text time
         unordered-containers vector
       ];
       testHaskellDepends = [
         aeson array base base16-bytestring bifunctors binary binary-orphans
         bytestring containers generics-sop hashable quickcheck-instances
         scientific SHA tagged tasty tasty-quickcheck text time
         unordered-containers vector
       ];
       benchmarkHaskellDepends = [
         aeson array base base16-bytestring binary binary-orphans bytestring
         containers criterion deepseq generics-sop hashable nats scientific
         semigroups SHA tagged text time unordered-containers vector
       ];
       homepage = "https://github.com/phadej/binary-tagged#readme";
       description = "Tagged binary serialisation";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "bindings-DSL" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "bindings-DSL";
       version = "1.0.25";
       sha256 = "0kqrd78nspl3lk4a0fqn47d8dirjg3b24dkvkigcrlb81hw35pk3";
       libraryHaskellDepends = [ base ];
       homepage = "https://github.com/jwiegley/bindings-dsl/wiki";
       description = "FFI domain specific language, on top of hsc2hs";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "bindings-GLFW" = callPackage
    ({ mkDerivation, base, bindings-DSL, HUnit, libGL, libX11
     , libXcursor, libXext, libXfixes, libXi, libXinerama, libXrandr
     , libXxf86vm, test-framework, test-framework-hunit
     }:
     mkDerivation {
       pname = "bindings-GLFW";
       version = "3.2.1.1";
       sha256 = "03hn12bdqypwd6x9hxa7685bm6w86nsf6cmcwkr8zzgb41mwc93b";
       libraryHaskellDepends = [ base bindings-DSL ];
       librarySystemDepends = [
         libGL libX11 libXcursor libXext libXfixes libXi libXinerama
         libXrandr libXxf86vm
       ];
       testHaskellDepends = [
         base HUnit test-framework test-framework-hunit
       ];
       doCheck = false;
       description = "Low-level bindings to GLFW OpenGL library";
       license = stdenv.lib.licenses.bsd3;
     }) {inherit (pkgs) libGL; inherit (pkgs.xorg) libX11;
         inherit (pkgs.xorg) libXcursor; inherit (pkgs.xorg) libXext;
         inherit (pkgs.xorg) libXfixes; inherit (pkgs.xorg) libXi;
         inherit (pkgs.xorg) libXinerama; inherit (pkgs.xorg) libXrandr;
         inherit (pkgs.xorg) libXxf86vm;};
  "bindings-libzip" = callPackage
    ({ mkDerivation, base, bindings-DSL, libzip }:
     mkDerivation {
       pname = "bindings-libzip";
       version = "1.0.1";
       sha256 = "1v52rms8xghj7ip3mmzmpa45mqywl4lfl3a0v6qp8sfnc01hd3ch";
       libraryHaskellDepends = [ base bindings-DSL ];
       libraryPkgconfigDepends = [ libzip ];
       homepage = "http://bitbucket.org/astanin/hs-libzip/";
       description = "Low level bindings to libzip";
       license = stdenv.lib.licenses.bsd3;
     }) {inherit (pkgs) libzip;};
  "bindings-uname" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "bindings-uname";
       version = "0.1";
       sha256 = "1lsw4dh5vgmfvrx62ns5kmngzlmjzbxkx43x5i2k5qlmzp1pa3hk";
       libraryHaskellDepends = [ base ];
       description = "Low-level binding to POSIX uname(3)";
       license = stdenv.lib.licenses.publicDomain;
     }) {};
  "bit-stream" = callPackage
    ({ mkDerivation, base, criterion, ghc-prim, QuickCheck, tasty
     , tasty-hunit, tasty-quickcheck, tasty-smallcheck, vector
     }:
     mkDerivation {
       pname = "bit-stream";
       version = "0.1.0.2";
       sha256 = "1x4vcg2y2il540syqdzk2wdixs8g672lhzjm46y40x4299yjw7w1";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [ base ghc-prim vector ];
       testHaskellDepends = [
         base QuickCheck tasty tasty-hunit tasty-quickcheck tasty-smallcheck
         vector
       ];
       benchmarkHaskellDepends = [ base criterion ];
       homepage = "https://github.com/Bodigrim/bit-stream#readme";
       description = "Lazy, infinite, compact stream of Bool with O(1) indexing";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "bitarray" = callPackage
    ({ mkDerivation, array, base }:
     mkDerivation {
       pname = "bitarray";
       version = "0.0.1.1";
       sha256 = "00nqd62cbh42qqqvcl6iv1i9kbv0f0mkiygv4j70wfh5cl86yzxj";
       revision = "1";
       editedCabalFile = "10fk92v9afjqk43zi621jxl0n8kci0xjj32lz3vqa9xbh67zjz45";
       libraryHaskellDepends = [ array base ];
       homepage = "http://code.haskell.org/~bkomuves/";
       description = "Mutable and immutable bit arrays";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "bitcoin-api" = callPackage
    ({ mkDerivation, aeson, base, base58string, binary, bitcoin-block
     , bitcoin-script, bitcoin-tx, bitcoin-types, bytestring, hexstring
     , hspec, http-client, lens, lens-aeson, text, unordered-containers
     , wreq
     }:
     mkDerivation {
       pname = "bitcoin-api";
       version = "0.12.1";
       sha256 = "0c1ydggik4k3vj93bqk53privyblkwhd32jizw25qk5j34axwy69";
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [
         aeson base base58string binary bitcoin-block bitcoin-script
         bitcoin-tx bitcoin-types bytestring hexstring lens lens-aeson text
         unordered-containers wreq
       ];
       testHaskellDepends = [
         base base58string bitcoin-script bitcoin-tx bytestring hspec
         http-client lens text wreq
       ];
       doCheck = false;
       homepage = "http://www.leonmergen.com/opensource.html";
       description = "Provides access to the RPC API of Bitcoin Core";
       license = stdenv.lib.licenses.mit;
     }) {};
  "bitcoin-api-extra" = callPackage
    ({ mkDerivation, base, binary, bitcoin-api, bitcoin-block
     , bitcoin-tx, bytestring, conduit, hspec, http-client, lens, stm
     , stm-chans, stm-conduit, text, transformers, wreq
     }:
     mkDerivation {
       pname = "bitcoin-api-extra";
       version = "0.9.1";
       sha256 = "1z6pppjgq6sy4q78k176pnr6y3lq369brqf0pg90v0qggl0cc8y4";
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [
         base binary bitcoin-api bitcoin-block bitcoin-tx bytestring conduit
         lens stm stm-chans stm-conduit text transformers
       ];
       testHaskellDepends = [
         base bitcoin-api bitcoin-tx bytestring conduit hspec http-client
         lens text wreq
       ];
       doCheck = false;
       homepage = "http://www.leonmergen.com/opensource.html";
       description = "Higher level constructs on top of the bitcoin-api package";
       license = stdenv.lib.licenses.mit;
     }) {};
  "bitcoin-block" = callPackage
    ({ mkDerivation, base, binary, bitcoin-tx, bitcoin-types
     , bytestring, cryptohash, hexstring, hspec, largeword, lens
     }:
     mkDerivation {
       pname = "bitcoin-block";
       version = "0.13.1";
       sha256 = "0nkx86fwv65x9vz6ni6qgz61afnvcifw2g92bnwdli8hww7prxfp";
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [
         base binary bitcoin-tx bitcoin-types bytestring cryptohash
         hexstring largeword lens
       ];
       testHaskellDepends = [
         base bitcoin-tx bitcoin-types bytestring hexstring hspec
       ];
       homepage = "http://www.leonmergen.com/opensource.html";
       description = "Utility functions for manipulating bitcoin blocks";
       license = stdenv.lib.licenses.mit;
     }) {};
  "bitcoin-script" = callPackage
    ({ mkDerivation, base, base16-bytestring, binary, bytestring, hspec
     , text
     }:
     mkDerivation {
       pname = "bitcoin-script";
       version = "0.11.1";
       sha256 = "0k3v35p6qpgh88gc5rqpcmh202xrn2rind9641dinwqqx631v31r";
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [
         base base16-bytestring binary bytestring text
       ];
       testHaskellDepends = [ base bytestring hspec ];
       homepage = "http://www.leonmergen.com/opensource.html";
       description = "Compilation, manipulation and decompilation of Bitcoin scripts";
       license = stdenv.lib.licenses.mit;
     }) {};
  "bitcoin-tx" = callPackage
    ({ mkDerivation, base, binary, bitcoin-script, bitcoin-types
     , bytestring, cryptohash, hexstring, hspec, lens
     }:
     mkDerivation {
       pname = "bitcoin-tx";
       version = "0.13.1";
       sha256 = "006c55l6q6cknxw0k0kzr8vkv8azapfb4mkax6ac6rih6mjq5f1v";
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [
         base binary bitcoin-script bitcoin-types bytestring cryptohash
         hexstring lens
       ];
       testHaskellDepends = [
         base bitcoin-script bytestring hexstring hspec
       ];
       homepage = "http://www.leonmergen.com/opensource.html";
       description = "Utility functions for manipulating bitcoin transactions";
       license = stdenv.lib.licenses.mit;
     }) {};
  "bitcoin-types" = callPackage
    ({ mkDerivation, base, base58string, binary, bytestring, hexstring
     , hspec, text
     }:
     mkDerivation {
       pname = "bitcoin-types";
       version = "0.9.2";
       sha256 = "02y4svhcsml37p78g4cm97kyigcakgf4hds4bxnp0r4ba1498bxp";
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [
         base base58string binary bytestring hexstring text
       ];
       testHaskellDepends = [
         base base58string bytestring hexstring hspec
       ];
       homepage = "http://www.leonmergen.com/opensource.html";
       description = "Provides consistent low-level types used commonly among Bitcoin implementations";
       license = stdenv.lib.licenses.mit;
     }) {};
  "bits" = callPackage
    ({ mkDerivation, base, bytes, Cabal, cabal-doctest, doctest, mtl
     , transformers
     }:
     mkDerivation {
       pname = "bits";
       version = "0.5.1";
       sha256 = "14ww8zcyis6kfli28bb9i5dmmj7k1j1dlzpwnfrkzd8kp5xmazk5";
       revision = "5";
       editedCabalFile = "012qycmsfz5l6y82d3zgjmp1k3pgvhlpjdk6rwlpc1wlfbpdqiaw";
       setupHaskellDepends = [ base Cabal cabal-doctest ];
       libraryHaskellDepends = [ base bytes mtl transformers ];
       testHaskellDepends = [ base doctest ];
       homepage = "http://github.com/ekmett/bits";
       description = "Various bit twiddling and bitwise serialization primitives";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "bits-extra" = callPackage
    ({ mkDerivation, base, criterion, ghc-prim, hedgehog, hspec
     , hspec-discover, hw-hedgehog, hw-hspec-hedgehog, vector
     }:
     mkDerivation {
       pname = "bits-extra";
       version = "0.0.1.3";
       sha256 = "1vdgj5zz5q7y4n11bsn4v53x5yi0fckj13vbfyrgb454x6rhhav9";
       libraryHaskellDepends = [ base ghc-prim vector ];
       testHaskellDepends = [
         base ghc-prim hedgehog hspec hw-hedgehog hw-hspec-hedgehog
       ];
       testToolDepends = [ hspec-discover ];
       benchmarkHaskellDepends = [ base criterion ghc-prim vector ];
       homepage = "https://github.com/haskell-works/bits-extra#readme";
       description = "Useful bitwise operations";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "bitset-word8" = callPackage
    ({ mkDerivation, base, bytestring, containers, criterion, deepseq
     , hspec, QuickCheck, template-haskell, th-lift-instances, vector
     }:
     mkDerivation {
       pname = "bitset-word8";
       version = "0.1.1.1";
       sha256 = "1pjjpqfqjnylfs5npnh7w75h9xk5gpkwzaqx0a972wa9h18gih7z";
       libraryHaskellDepends = [
         base containers template-haskell th-lift-instances
       ];
       testHaskellDepends = [
         base containers hspec QuickCheck template-haskell th-lift-instances
       ];
       benchmarkHaskellDepends = [
         base bytestring containers criterion deepseq template-haskell
         th-lift-instances vector
       ];
       homepage = "https://github.com/nshimaza/bitset-word8#readme";
       description = "Space efficient set of Word8 and some pre-canned sets useful for parsing HTTP";
       license = stdenv.lib.licenses.mit;
     }) {};
  "bitx-bitcoin" = callPackage
    ({ mkDerivation, aeson, base, bytestring, deepseq, directory
     , doctest, exceptions, hspec, http-client, http-client-tls
     , http-types, microlens, microlens-th, network, QuickCheck, safe
     , scientific, split, text, time
     }:
     mkDerivation {
       pname = "bitx-bitcoin";
       version = "0.12.0.0";
       sha256 = "0wf86pkpm5vlcv5cci2sn6by0ajmq44b3azxc41zivqdpf5kkwii";
       libraryHaskellDepends = [
         aeson base bytestring deepseq exceptions http-client
         http-client-tls http-types microlens microlens-th network
         QuickCheck scientific split text time
       ];
       testHaskellDepends = [
         aeson base bytestring directory doctest hspec http-client
         http-types microlens safe text time
       ];
       doCheck = false;
       homepage = "https://github.com/tebello-thejane/bitx.hs";
       description = "A Haskell library for working with the BitX bitcoin exchange";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "blake2" = callPackage
    ({ mkDerivation, base, base16-bytestring, bytestring, criterion
     , hlint, QuickCheck, tasty, tasty-quickcheck
     }:
     mkDerivation {
       pname = "blake2";
       version = "0.2.0";
       sha256 = "1z1c70l2lmaj7d4wffsikf2w61i5ypjxnlwxddd8zsf6ypii1n87";
       libraryHaskellDepends = [ base bytestring ];
       testHaskellDepends = [
         base base16-bytestring bytestring hlint QuickCheck tasty
         tasty-quickcheck
       ];
       benchmarkHaskellDepends = [ base bytestring criterion ];
       homepage = "https://github.com/centromere/blake2";
       description = "A library providing BLAKE2";
       license = stdenv.lib.licenses.publicDomain;
     }) {};
  "blank-canvas" = callPackage
    ({ mkDerivation, aeson, base, base-compat-batteries
     , base64-bytestring, bytestring, colour, containers
     , data-default-class, http-types, kansas-comet, mime-types, scotty
     , semigroups, stm, text, text-show, transformers, vector, wai
     , wai-extra, warp
     }:
     mkDerivation {
       pname = "blank-canvas";
       version = "0.6.3";
       sha256 = "1d10ngvsgi2hz6xick59rkq1wzfbsgckply2jmg6gz9mf3zj97bk";
       revision = "2";
       editedCabalFile = "0sybv2swx9gwpkjh704xfmilm9jhdb66jqc296agpzp85s2s75zz";
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [
         aeson base base-compat-batteries base64-bytestring bytestring
         colour containers data-default-class http-types kansas-comet
         mime-types scotty semigroups stm text text-show transformers vector
         wai wai-extra warp
       ];
       doCheck = false;
       homepage = "https://github.com/ku-fpg/blank-canvas/wiki";
       description = "HTML5 Canvas Graphics Library";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "blas-carray" = callPackage
    ({ mkDerivation, base, blas-ffi, carray, netlib-carray, netlib-ffi
     , storable-complex, transformers
     }:
     mkDerivation {
       pname = "blas-carray";
       version = "0.0.1.1";
       sha256 = "0ijzcdrbfb9w3vs4g96p30h7ilh9s05ij8n0prinmr1ngmvipbdx";
       libraryHaskellDepends = [
         base blas-ffi carray netlib-carray netlib-ffi storable-complex
         transformers
       ];
       homepage = "http://hub.darcs.net/thielema/blas-carray/";
       description = "Auto-generated interface to Fortran BLAS via CArrays";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "blas-ffi" = callPackage
    ({ mkDerivation, base, blas, netlib-ffi }:
     mkDerivation {
       pname = "blas-ffi";
       version = "0.0.2";
       sha256 = "047qal272s1hc3pp7xy8vyq4dm80nvqin34zvl7wz09c0qrnnvyc";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [ base netlib-ffi ];
       libraryPkgconfigDepends = [ blas ];
       homepage = "http://hub.darcs.net/thielema/blas-ffi/";
       description = "Auto-generated interface to Fortran BLAS";
       license = stdenv.lib.licenses.bsd3;
     }) {inherit (pkgs) blas;};
  "blas-hs" = callPackage
    ({ mkDerivation, base, blas, storable-complex, vector }:
     mkDerivation {
       pname = "blas-hs";
       version = "0.1.1.0";
       sha256 = "11mhjvqjnap4lj70f6lxjrjrdlkw8gnmd1lz4cfkjawq4w4npq40";
       libraryHaskellDepends = [ base storable-complex ];
       librarySystemDepends = [ blas ];
       testHaskellDepends = [ base vector ];
       homepage = "https://github.com/Rufflewind/blas-hs";
       description = "Low-level Haskell bindings to Blas";
       license = stdenv.lib.licenses.mit;
     }) {inherit (pkgs) blas;};
  "blaze-bootstrap" = callPackage
    ({ mkDerivation, base, blaze-html, text }:
     mkDerivation {
       pname = "blaze-bootstrap";
       version = "0.1.0.1";
       sha256 = "0qsis1hwd8sqcciibxwy8p6irszwa2fy5m75qxp46ymfal5lrdak";
       libraryHaskellDepends = [ base blaze-html text ];
       homepage = "http://github.com/agrafix/blaze-bootstrap";
       description = "Blaze helper functions for bootstrap pages";
       license = stdenv.lib.licenses.mit;
     }) {};
  "blaze-builder" = callPackage
    ({ mkDerivation, base, bytestring, deepseq, HUnit, QuickCheck
     , test-framework, test-framework-hunit, test-framework-quickcheck2
     , text, utf8-string
     }:
     mkDerivation {
       pname = "blaze-builder";
       version = "0.4.1.0";
       sha256 = "05681dih2d8s96an945wkbwl05w8ddbcfx8n3r3ck79ydyb8pz4i";
       libraryHaskellDepends = [ base bytestring deepseq text ];
       testHaskellDepends = [
         base bytestring HUnit QuickCheck test-framework
         test-framework-hunit test-framework-quickcheck2 text utf8-string
       ];
       homepage = "http://github.com/lpsmith/blaze-builder";
       description = "Efficient buffered output";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "blaze-colonnade" = callPackage
    ({ mkDerivation, base, blaze-html, blaze-markup, colonnade, doctest
     , text
     }:
     mkDerivation {
       pname = "blaze-colonnade";
       version = "1.2.2";
       sha256 = "0k51iqfr2dvc445q6jzvf4mb3q3x4z0vvf9p8fhd4npazwb72bqz";
       libraryHaskellDepends = [
         base blaze-html blaze-markup colonnade text
       ];
       testHaskellDepends = [ base colonnade doctest ];
       homepage = "https://github.com/andrewthad/colonnade#readme";
       description = "Helper functions for using blaze-html with colonnade";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "blaze-html" = callPackage
    ({ mkDerivation, base, blaze-builder, blaze-markup, bytestring
     , text
     }:
     mkDerivation {
       pname = "blaze-html";
       version = "0.9.1.1";
       sha256 = "06xv8fqhclfjj61z74cgggn4lmx1s7diakxg84mnkgfvk11983pa";
       libraryHaskellDepends = [
         base blaze-builder blaze-markup bytestring text
       ];
       doCheck = false;
       homepage = "http://jaspervdj.be/blaze";
       description = "A blazingly fast HTML combinator library for Haskell";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "blaze-markup" = callPackage
    ({ mkDerivation, base, blaze-builder, bytestring, text }:
     mkDerivation {
       pname = "blaze-markup";
       version = "0.8.2.2";
       sha256 = "1qc2mn2zb2sdj3xvv73asibqnb11l7b5l30ff05qrfh7sy7wzw66";
       revision = "1";
       editedCabalFile = "0ivspcxz0b2r7kcas5hlw0fh92883r8ghwz9lck7nyqn6wn5i8zx";
       libraryHaskellDepends = [ base blaze-builder bytestring text ];
       doCheck = false;
       homepage = "http://jaspervdj.be/blaze";
       description = "A blazingly fast markup combinator library for Haskell";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "blaze-svg" = callPackage
    ({ mkDerivation, base, blaze-markup, mtl }:
     mkDerivation {
       pname = "blaze-svg";
       version = "0.3.6.1";
       sha256 = "0q5a4wam0sidng0cfsivwkyph9snyilk7rsdx4vb6wz9l6xz397n";
       libraryHaskellDepends = [ base blaze-markup mtl ];
       homepage = "https://github.com/deepakjois/blaze-svg";
       description = "SVG combinator library";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "blaze-textual" = callPackage
    ({ mkDerivation, base, blaze-builder, bytestring, double-conversion
     , ghc-prim, integer-gmp, old-locale, QuickCheck, test-framework
     , test-framework-quickcheck2, text, time, vector
     }:
     mkDerivation {
       pname = "blaze-textual";
       version = "0.2.1.0";
       sha256 = "0bbcykkrlgdb6jaz72njriq9if6bzsx52jn26k093f5sn1d7jhhh";
       libraryHaskellDepends = [
         base blaze-builder bytestring ghc-prim integer-gmp old-locale text
         time vector
       ];
       testHaskellDepends = [
         base blaze-builder bytestring double-conversion QuickCheck
         test-framework test-framework-quickcheck2
       ];
       homepage = "http://github.com/bos/blaze-textual";
       description = "Fast rendering of common datatypes";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "bmp" = callPackage
    ({ mkDerivation, base, binary, bytestring }:
     mkDerivation {
       pname = "bmp";
       version = "1.2.6.3";
       sha256 = "1k6s5z520dadj38y7ja0m4syrg094gyq14c63i6wx2701zj3viiw";
       libraryHaskellDepends = [ base binary bytestring ];
       homepage = "https://github.com/benl23x5/bmp";
       description = "Read and write uncompressed BMP image files";
       license = stdenv.lib.licenses.mit;
     }) {};
  "bno055-haskell" = callPackage
    ({ mkDerivation, base, bytestring, cereal, h2c, mtl, resourcet }:
     mkDerivation {
       pname = "bno055-haskell";
       version = "0.1.0";
       sha256 = "1n4s0ljlgf1qrlyzaj161nbx7sa162v26p0i2i17n12m8zwjkp3s";
       libraryHaskellDepends = [
         base bytestring cereal h2c mtl resourcet
       ];
       homepage = "https://bitbucket.org/fmapE/bno055-haskell";
       description = "Library for communication with the Bosch BNO055 orientation sensor";
       license = stdenv.lib.licenses.mit;
     }) {};
  "boltzmann-samplers" = callPackage
    ({ mkDerivation, ad, base, containers, hashable, hmatrix, ieee754
     , MonadRandom, mtl, QuickCheck, transformers, unordered-containers
     , vector
     }:
     mkDerivation {
       pname = "boltzmann-samplers";
       version = "0.1.1.0";
       sha256 = "13l7ml35hm0i2rgw419n7xp2zp58pafm6gmmik3jgbmhfwgkwz6y";
       libraryHaskellDepends = [
         ad base containers hashable hmatrix ieee754 MonadRandom mtl
         QuickCheck transformers unordered-containers vector
       ];
       homepage = "https://github.com/Lysxia/boltzmann-samplers#readme";
       description = "Uniform random generators";
       license = stdenv.lib.licenses.mit;
     }) {};
  "boolean-like" = callPackage
    ({ mkDerivation, attoparsec, base, bytestring, containers
     , semigroups, text, vector
     }:
     mkDerivation {
       pname = "boolean-like";
       version = "0.1.1.0";
       sha256 = "1f2qjqjz13w6gq80qymq57917k5aknhxbx4lzpnn30frlqhpp93c";
       libraryHaskellDepends = [
         attoparsec base bytestring containers semigroups text vector
       ];
       homepage = "http://github.com/Shou/boolean-like";
       description = "Logical combinatory operations dealing with datatypes representing booleans by their constructors";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "boolsimplifier" = callPackage
    ({ mkDerivation, base, containers }:
     mkDerivation {
       pname = "boolsimplifier";
       version = "0.1.8";
       sha256 = "13w2i7b2g9w5kzqnbjjdzf3r2dm7a4xxags02khhwlj1f8vsjvq9";
       revision = "1";
       editedCabalFile = "0xqm0vn9i49b75fnvnvcnr9m4zwvhqynrkcjdxghrsxayg420lnh";
       libraryHaskellDepends = [ base containers ];
       description = "Simplification tools for simple propositional formulas";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "bordacount" = callPackage
    ({ mkDerivation, base, containers, hspec, QuickCheck }:
     mkDerivation {
       pname = "bordacount";
       version = "0.1.0.0";
       sha256 = "1kpx8q50j5k49mbrm1kpcd34jgvx4rfmw3bm4qbjrp48ysai0sfb";
       libraryHaskellDepends = [ base containers ];
       testHaskellDepends = [ base hspec QuickCheck ];
       homepage = "https://github.com/hverr/bordacount#readme";
       description = "Implementation of the Borda count election method";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "boring" = callPackage
    ({ mkDerivation, adjunctions, base, base-compat, constraints, fin
     , generics-sop, streams, tagged, transformers, transformers-compat
     , vec
     }:
     mkDerivation {
       pname = "boring";
       version = "0.1";
       sha256 = "0r263cc8bdwsaw33x96fgd8npsma9a2ffv6mfz9z72d7qclhimkk";
       revision = "2";
       editedCabalFile = "1jxaby4cagbhii194x9x0j75ms1v5bm14sx7d19zz3844mh9qyci";
       libraryHaskellDepends = [
         adjunctions base base-compat constraints fin generics-sop streams
         tagged transformers transformers-compat vec
       ];
       homepage = "https://github.com/phadej/boring";
       description = "Boring and Absurd types";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "both" = callPackage
    ({ mkDerivation, base, semigroups, zero }:
     mkDerivation {
       pname = "both";
       version = "0.1.1.0";
       sha256 = "13hf6j8qfaqw446ifyx0y60j9kvlvm0yj3r4h910bcszfjvyhkkg";
       libraryHaskellDepends = [ base semigroups zero ];
       homepage = "https://github.com/barrucadu/both";
       description = "Like Maybe, but with a different Monoid instance";
       license = stdenv.lib.licenses.mit;
     }) {};
  "bound" = callPackage
    ({ mkDerivation, base, bifunctors, binary, bytes, Cabal
     , cabal-doctest, cereal, comonad, deepseq, deriving-compat, doctest
     , functor-classes-compat, hashable, mmorph, profunctors
     , template-haskell, transformers, transformers-compat, vector, void
     }:
     mkDerivation {
       pname = "bound";
       version = "2.0.1";
       sha256 = "0xmvkwambzmji1czxipl9cms5l3v98765b9spmb3wn5n6dpj0ji9";
       revision = "6";
       editedCabalFile = "18fqzxy3f8r09jwcsfzjlrpvnlz711jq5gcjp4dal1pvsbbw6i09";
       setupHaskellDepends = [ base Cabal cabal-doctest ];
       libraryHaskellDepends = [
         base bifunctors binary bytes cereal comonad deepseq hashable mmorph
         profunctors template-haskell transformers transformers-compat
       ];
       testHaskellDepends = [
         base deriving-compat doctest functor-classes-compat transformers
         transformers-compat vector void
       ];
       homepage = "http://github.com/ekmett/bound/";
       description = "Making de Bruijn Succ Less";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "boundingboxes" = callPackage
    ({ mkDerivation, base, lens }:
     mkDerivation {
       pname = "boundingboxes";
       version = "0.2.3";
       sha256 = "0r3mffqxqadn8qklq3kr0ggirkficfj8ic1fxgki2zrc5jm4f2g8";
       libraryHaskellDepends = [ base lens ];
       homepage = "https://github.com/fumieval/boundingboxes";
       description = "A generic boundingbox for an arbitrary vector";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "bower-json" = callPackage
    ({ mkDerivation, aeson, aeson-better-errors, base, bytestring
     , deepseq, ghc-prim, mtl, scientific, tasty, tasty-hunit, text
     , transformers, unordered-containers, vector
     }:
     mkDerivation {
       pname = "bower-json";
       version = "1.0.0.1";
       sha256 = "0wvygg3rdbxzrmr61a9w6ddv9pfric85ih8hnxyk0ydzn7i59abs";
       libraryHaskellDepends = [
         aeson aeson-better-errors base bytestring deepseq ghc-prim mtl
         scientific text transformers unordered-containers vector
       ];
       testHaskellDepends = [
         aeson base bytestring tasty tasty-hunit text unordered-containers
       ];
       homepage = "https://github.com/hdgarrood/bower-json";
       description = "Read bower.json from Haskell";
       license = stdenv.lib.licenses.mit;
     }) {};
  "boxes" = callPackage
    ({ mkDerivation, base, QuickCheck, split }:
     mkDerivation {
       pname = "boxes";
       version = "0.1.5";
       sha256 = "1hsnmw95i58d4bkpxby3ddsj1cawypw4mdyb18m393s5i8p7iq9q";
       libraryHaskellDepends = [ base split ];
       testHaskellDepends = [ base QuickCheck split ];
       description = "2D text pretty-printing library";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "brick" = callPackage
    ({ mkDerivation, base, config-ini, containers, contravariant
     , data-clist, deepseq, dlist, microlens, microlens-mtl
     , microlens-th, QuickCheck, stm, template-haskell, text
     , text-zipper, transformers, vector, vty, word-wrap
     }:
     mkDerivation {
       pname = "brick";
       version = "0.37.2";
       sha256 = "176rq7xpwww1c3h7hm6n6z7sxbd3wc2zhxvnk65llk9lipc6rf3w";
       revision = "1";
       editedCabalFile = "0cj98cjlr400yf47lg50syj5zpvh6q9mm1hp4blns6ndz2xys5rz";
       configureFlags = [ "-fdemos" ];
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         base config-ini containers contravariant data-clist deepseq dlist
         microlens microlens-mtl microlens-th stm template-haskell text
         text-zipper transformers vector vty word-wrap
       ];
       executableHaskellDepends = [
         base microlens microlens-th text text-zipper vector vty word-wrap
       ];
       testHaskellDepends = [ base containers QuickCheck ];
       homepage = "https://github.com/jtdaugherty/brick/";
       description = "A declarative terminal user interface library";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "brittany" = callPackage
    ({ mkDerivation, aeson, base, butcher, bytestring, cmdargs
     , containers, czipwith, data-tree-print, deepseq, directory, extra
     , filepath, ghc, ghc-boot-th, ghc-exactprint, ghc-paths, hspec
     , monad-memo, mtl, multistate, neat-interpolation, parsec, pretty
     , random, safe, semigroups, strict, syb, text, transformers
     , uniplate, unsafe, yaml
     }:
     mkDerivation {
       pname = "brittany";
       version = "0.11.0.0";
       sha256 = "1fgcim4q5y7csk8c038rm97w6b8bgynmi6h1dwyr2hsmzw9hxa26";
       revision = "2";
       editedCabalFile = "1f20w6zzbygnpa7f6xbaqxx34l62r53ikywg2snn0zkfizf3lcgx";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         aeson base butcher bytestring cmdargs containers czipwith
         data-tree-print deepseq directory extra filepath ghc ghc-boot-th
         ghc-exactprint ghc-paths monad-memo mtl multistate
         neat-interpolation pretty random safe semigroups strict syb text
         transformers uniplate unsafe yaml
       ];
       executableHaskellDepends = [
         aeson base butcher bytestring cmdargs containers czipwith
         data-tree-print deepseq directory extra filepath ghc ghc-boot-th
         ghc-exactprint ghc-paths monad-memo mtl multistate
         neat-interpolation pretty safe semigroups strict syb text
         transformers uniplate unsafe yaml
       ];
       testHaskellDepends = [
         aeson base butcher bytestring cmdargs containers czipwith
         data-tree-print deepseq directory extra filepath ghc ghc-boot-th
         ghc-exactprint ghc-paths hspec monad-memo mtl multistate
         neat-interpolation parsec pretty safe semigroups strict syb text
         transformers uniplate unsafe yaml
       ];
       homepage = "https://github.com/lspitzner/brittany/";
       description = "Haskell source code formatter";
       license = stdenv.lib.licenses.agpl3;
     }) {};
  "broadcast-chan" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "broadcast-chan";
       version = "0.1.1";
       sha256 = "1wl5x7qi00z7q9k6rbmzszzbrqycfcpg04a1ikrnvzqs61ddcnxd";
       revision = "1";
       editedCabalFile = "03bmddz9bryh3viskh2nldj4hbzl5b9xkkx2pml73vq9bn2aq5s4";
       libraryHaskellDepends = [ base ];
       homepage = "https://github.com/merijn/broadcast-chan";
       description = "Broadcast channel type that avoids 0 reader space leaks";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "bsb-http-chunked" = callPackage
    ({ mkDerivation, attoparsec, base, blaze-builder, bytestring
     , deepseq, doctest, gauge, hedgehog, semigroups, tasty
     , tasty-hedgehog, tasty-hunit
     }:
     mkDerivation {
       pname = "bsb-http-chunked";
       version = "0.0.0.4";
       sha256 = "0z0f18yc6zlwh29c6175ivfcin325lvi4irpvv0n3cmq7vi0k0ql";
       libraryHaskellDepends = [ base bytestring ];
       testHaskellDepends = [
         attoparsec base blaze-builder bytestring doctest hedgehog tasty
         tasty-hedgehog tasty-hunit
       ];
       benchmarkHaskellDepends = [
         base blaze-builder bytestring deepseq gauge semigroups
       ];
       homepage = "http://github.com/sjakobi/bsb-http-chunked";
       description = "Chunked HTTP transfer encoding for bytestring builders";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "bson" = callPackage
    ({ mkDerivation, base, binary, bytestring, cryptohash
     , data-binary-ieee754, mtl, network, QuickCheck, test-framework
     , test-framework-quickcheck2, text, time
     }:
     mkDerivation {
       pname = "bson";
       version = "0.3.2.7";
       sha256 = "0avzr3aa3mbr9hcjwd0nr0pnpiym7s35qw7nghz51mrzb76rsci7";
       libraryHaskellDepends = [
         base binary bytestring cryptohash data-binary-ieee754 mtl network
         text time
       ];
       testHaskellDepends = [
         base binary bytestring cryptohash data-binary-ieee754 mtl network
         QuickCheck test-framework test-framework-quickcheck2 text time
       ];
       homepage = "http://github.com/mongodb-haskell/bson";
       description = "BSON documents are JSON-like objects with a standard binary encoding";
       license = stdenv.lib.licenses.asl20;
     }) {};
  "bson-lens" = callPackage
    ({ mkDerivation, base, bson, lens, text }:
     mkDerivation {
       pname = "bson-lens";
       version = "0.1.1";
       sha256 = "0q5ixrfgybf80q0x2p80qjy1kqarm2129hmzzqgcpn7jvqbv8fyp";
       libraryHaskellDepends = [ base bson lens text ];
       homepage = "https://github.com/jb55/bson-lens";
       description = "BSON lenses";
       license = stdenv.lib.licenses.mit;
     }) {};
  "btrfs" = callPackage
    ({ mkDerivation, base, bytestring, time, unix }:
     mkDerivation {
       pname = "btrfs";
       version = "0.1.2.3";
       sha256 = "13dq5xdzny1c0yih67r3yhnsr9vxxim8kbqbj5hcygb2cmf0pz3y";
       revision = "1";
       editedCabalFile = "1py88k9sjmx9x41l0wmp19a52ng9fdf66rmd0n9404gxxbqd5jxv";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [ base bytestring time unix ];
       homepage = "https://github.com/redneb/hs-btrfs";
       description = "Bindings to the btrfs API";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "buffer-builder" = callPackage
    ({ mkDerivation, aeson, attoparsec, base, bytestring, criterion
     , deepseq, HTF, mtl, quickcheck-instances, text
     , unordered-containers, vector
     }:
     mkDerivation {
       pname = "buffer-builder";
       version = "0.2.4.7";
       sha256 = "0n1zb12zm86rm3jqpdh7j15w6dd1mii0fmaihkdqm0b1rv2zm2dk";
       libraryHaskellDepends = [
         base bytestring mtl text unordered-containers vector
       ];
       testHaskellDepends = [
         aeson attoparsec base bytestring criterion deepseq HTF
         quickcheck-instances text vector
       ];
       homepage = "https://github.com/chadaustin/buffer-builder";
       description = "Library for efficiently building up buffers, one piece at a time";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "buffer-pipe" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "buffer-pipe";
       version = "0.0";
       sha256 = "1kywa95mq6s8ldjkvy9j8yalbm83ms9a1lg9s8h0xxw837jbcx88";
       isLibrary = false;
       isExecutable = true;
       executableHaskellDepends = [ base ];
       doHaddock = false;
       description = "Read from stdin and write to stdout in large blocks";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "butcher" = callPackage
    ({ mkDerivation, base, bifunctors, containers, deque, extra, free
     , hspec, microlens, microlens-th, mtl, multistate, pretty
     , transformers, unsafe, void
     }:
     mkDerivation {
       pname = "butcher";
       version = "1.3.2.0";
       sha256 = "06pas8iq0qvvraidjid9m85z7wx8cy017xhyqralxz67alirmchc";
       revision = "1";
       editedCabalFile = "1r4v2biwd0hp6v1jgx7zngh0hqlsk8ia3bvggbxxn5sp5x7ika1m";
       libraryHaskellDepends = [
         base bifunctors containers deque extra free microlens microlens-th
         mtl multistate pretty transformers unsafe void
       ];
       testHaskellDepends = [
         base containers deque extra free hspec microlens microlens-th mtl
         multistate pretty transformers unsafe
       ];
       homepage = "https://github.com/lspitzner/butcher/";
       description = "Chops a command or program invocation into digestable pieces";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "butter" = callPackage
    ({ mkDerivation, aeson, base, bytestring, containers
     , forkable-monad, free, HUnit, network-simple, stm
     , template-haskell, text, transformers
     }:
     mkDerivation {
       pname = "butter";
       version = "0.1.0.6";
       sha256 = "0r215qycck6w6286w0y69ghpzmcp1bl23j44arabrh2p39lb4h46";
       libraryHaskellDepends = [
         aeson base bytestring containers forkable-monad free HUnit
         network-simple stm template-haskell text transformers
       ];
       testHaskellDepends = [
         aeson base bytestring containers forkable-monad free HUnit
         network-simple stm template-haskell text transformers
       ];
       homepage = "https://github.com/System-Indystress/Butter#readme";
       description = "Monad Transformer for Asyncronous Message Passing";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "bv" = callPackage
    ({ mkDerivation, base, ghc-prim, integer-gmp }:
     mkDerivation {
       pname = "bv";
       version = "0.5";
       sha256 = "1nkvqwqcjl57p6ir0sllb54vbj6q0l3s3w7z3z2svxjq2ymqk884";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [ base ghc-prim integer-gmp ];
       homepage = "https://github.com/iagoabal/haskell-bv";
       description = "Bit-vector arithmetic library";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "bv-little" = callPackage
    ({ mkDerivation, base, criterion, deepseq, hashable, integer-gmp
     , mono-traversable, primitive, QuickCheck, tasty, tasty-hunit
     , tasty-quickcheck
     }:
     mkDerivation {
       pname = "bv-little";
       version = "0.1.2";
       sha256 = "0xscq4qjwisqiykdhiirxc58gsrmabvxmxwxw80f2m6ia103k3cc";
       libraryHaskellDepends = [
         base deepseq hashable integer-gmp mono-traversable primitive
         QuickCheck
       ];
       testHaskellDepends = [
         base deepseq hashable mono-traversable QuickCheck tasty tasty-hunit
         tasty-quickcheck
       ];
       benchmarkHaskellDepends = [ base criterion deepseq hashable ];
       homepage = "https://github.com/recursion-ninja/bv-little";
       description = "Efficient little-endian bit vector library";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "byteable" = callPackage
    ({ mkDerivation, base, bytestring }:
     mkDerivation {
       pname = "byteable";
       version = "0.1.1";
       sha256 = "1qizg0kxxjqnd3cbrjhhidk5pbbciz0pb3z5kzikjjxnnnhk8fr4";
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [ base bytestring ];
       homepage = "http://github.com/vincenthz/hs-byteable";
       description = "Type class for sequence of bytes";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "bytedump" = callPackage
    ({ mkDerivation, base, bytestring }:
     mkDerivation {
       pname = "bytedump";
       version = "1.0";
       sha256 = "1pf01mna3isx3i7m50yz3pw5ygz5sg8i8pshjb3yw8q41w2ba5xf";
       isLibrary = true;
       isExecutable = true;
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [ base bytestring ];
       homepage = "http://github.com/vincenthz/hs-bytedump";
       description = "Flexible byte dump helpers for human readers";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "byteorder" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "byteorder";
       version = "1.0.4";
       sha256 = "06995paxbxk8lldvarqpb3ygcjbg4v8dk4scib1rjzwlhssvn85x";
       libraryHaskellDepends = [ base ];
       homepage = "http://community.haskell.org/~aslatter/code/byteorder";
       description = "Exposes the native endianness or byte ordering of the system";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "bytes" = callPackage
    ({ mkDerivation, base, binary, bytestring, Cabal, cabal-doctest
     , cereal, containers, directory, doctest, filepath, hashable, mtl
     , scientific, text, time, transformers, transformers-compat
     , unordered-containers, void
     }:
     mkDerivation {
       pname = "bytes";
       version = "0.15.5";
       sha256 = "063il2vrn0p88r9gzndh4ijs0mxj37khkc9ym9bqdsv7ngk3b683";
       setupHaskellDepends = [ base Cabal cabal-doctest ];
       libraryHaskellDepends = [
         base binary bytestring cereal containers hashable mtl scientific
         text time transformers transformers-compat unordered-containers
         void
       ];
       testHaskellDepends = [ base directory doctest filepath ];
       homepage = "https://github.com/ekmett/bytes";
       description = "Sharing code for serialization between binary and cereal";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "byteset" = callPackage
    ({ mkDerivation, base, binary }:
     mkDerivation {
       pname = "byteset";
       version = "0.1.1.0";
       sha256 = "18dg863wbbjh95yial4gy6vi5spwygp0l7dfx6bj00lz4xdrqj8k";
       revision = "1";
       editedCabalFile = "1lgxxxrmw4g32pa861n6qbfpzwv14wfjrlp4hv5zd9hygy6v6q2p";
       libraryHaskellDepends = [ base binary ];
       description = "Set of bytes";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "bytestring-builder" = callPackage
    ({ mkDerivation, base, bytestring, deepseq }:
     mkDerivation {
       pname = "bytestring-builder";
       version = "0.10.8.2.0";
       sha256 = "0grcrgwwwcvwrs9az7l4d3kf0lsqfa9qpmjzf6iyanvwn9nyzyi7";
       libraryHaskellDepends = [ base bytestring deepseq ];
       doHaddock = false;
       description = "The new bytestring builder, packaged outside of GHC";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "bytestring-conversion" = callPackage
    ({ mkDerivation, attoparsec, base, bytestring, case-insensitive
     , criterion, double-conversion, QuickCheck, tasty, tasty-quickcheck
     , text, transformers
     }:
     mkDerivation {
       pname = "bytestring-conversion";
       version = "0.3.1";
       sha256 = "1y2fhwz632sp7n0iw87lz2g8vks4jgxz2kw99kysgivxfd4fmdqk";
       revision = "2";
       editedCabalFile = "1x8c42cfzb6fdvgkxxdxcpdf16csimlzsgahb1axnplmr6b3ba63";
       libraryHaskellDepends = [
         attoparsec base bytestring case-insensitive double-conversion text
       ];
       testHaskellDepends = [
         base bytestring QuickCheck tasty tasty-quickcheck
       ];
       benchmarkHaskellDepends = [
         base bytestring criterion text transformers
       ];
       homepage = "https://github.com/twittner/bytestring-conversion/";
       description = "Type-classes to convert values to and from ByteString";
       license = stdenv.lib.licenses.mpl20;
     }) {};
  "bytestring-lexing" = callPackage
    ({ mkDerivation, base, bytestring }:
     mkDerivation {
       pname = "bytestring-lexing";
       version = "0.5.0.2";
       sha256 = "0wrzniawhgpphc6yx1v972gyqxdbv0pizaz9bafahrshyb9svy81";
       libraryHaskellDepends = [ base bytestring ];
       homepage = "http://code.haskell.org/~wren/";
       description = "Parse and produce literals efficiently from strict or lazy bytestrings";
       license = stdenv.lib.licenses.bsd2;
     }) {};
  "bytestring-strict-builder" = callPackage
    ({ mkDerivation, base, base-prelude, bytestring, semigroups }:
     mkDerivation {
       pname = "bytestring-strict-builder";
       version = "0.4.5.1";
       sha256 = "17n6ll8k26312fgxbhws1yrswvy5dbsgyf57qksnj0akdssysy8q";
       revision = "1";
       editedCabalFile = "1snn8qb17maa76zji75i4yfz9x8ci16xp6zwg6kgwb33lf06imnd";
       libraryHaskellDepends = [
         base base-prelude bytestring semigroups
       ];
       doCheck = false;
       homepage = "https://github.com/nikita-volkov/bytestring-strict-builder";
       description = "An efficient strict bytestring builder";
       license = stdenv.lib.licenses.mit;
     }) {};
  "bytestring-tree-builder" = callPackage
    ({ mkDerivation, base, base-prelude, bytestring, semigroups, text
     }:
     mkDerivation {
       pname = "bytestring-tree-builder";
       version = "0.2.7.2";
       sha256 = "03h2nmhyrr63gw4xmflsrmwf80gvayhs32wnpg3k9aqfjzpz4bd1";
       libraryHaskellDepends = [
         base base-prelude bytestring semigroups text
       ];
       doCheck = false;
       homepage = "https://github.com/nikita-volkov/bytestring-tree-builder";
       description = "A very efficient ByteString builder implementation based on the binary tree";
       license = stdenv.lib.licenses.mit;
     }) {};
  "bzlib" = callPackage
    ({ mkDerivation, base, bytestring, bzip2 }:
     mkDerivation {
       pname = "bzlib";
       version = "0.5.0.5";
       sha256 = "0zh130vw719a8d11q5qzc3ilzgv8cqyc2a7r1a131cv1fjnd1rwy";
       libraryHaskellDepends = [ base bytestring ];
       librarySystemDepends = [ bzip2 ];
       description = "Compression and decompression in the bzip2 format";
       license = stdenv.lib.licenses.bsd3;
     }) {inherit (pkgs) bzip2;};
  "bzlib-conduit" = callPackage
    ({ mkDerivation, base, bindings-DSL, bytestring, bzip2, conduit
     , data-default-class, hspec, mtl, random, resourcet
     }:
     mkDerivation {
       pname = "bzlib-conduit";
       version = "0.3.0.1";
       sha256 = "0fd2hnr782s7qgipazg2yxwia9qqhkvm9bcm90773c3zkxa13n23";
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [
         base bindings-DSL bytestring conduit data-default-class mtl
         resourcet
       ];
       librarySystemDepends = [ bzip2 ];
       testHaskellDepends = [
         base bindings-DSL bytestring conduit data-default-class hspec mtl
         random resourcet
       ];
       benchmarkHaskellDepends = [
         base bindings-DSL bytestring conduit data-default-class mtl
         resourcet
       ];
       homepage = "https://github.com/snoyberg/bzlib-conduit#readme";
       description = "Streaming compression/decompression via conduits";
       license = stdenv.lib.licenses.bsd3;
     }) {inherit (pkgs) bzip2;};
  "c2hs" = callPackage
    ({ mkDerivation, array, base, bytestring, containers, directory
     , dlist, filepath, HUnit, language-c, pretty, process, shelly
     , test-framework, test-framework-hunit, text, transformers
     }:
     mkDerivation {
       pname = "c2hs";
       version = "0.28.6";
       sha256 = "1nplgxfin139x12sb656f5870rpdclrhzi8mq8pry035qld15pci";
       isLibrary = false;
       isExecutable = true;
       enableSeparateDataOutput = true;
       executableHaskellDepends = [
         array base bytestring containers directory dlist filepath
         language-c pretty process
       ];
       testHaskellDepends = [
         base filepath HUnit shelly test-framework test-framework-hunit text
         transformers
       ];
       doHaddock = false;
       homepage = "https://github.com/haskell/c2hs";
       description = "C->Haskell FFI tool that gives some cross-language type safety";
       license = stdenv.lib.licenses.gpl2;
     }) {};
  "cabal-doctest" = callPackage
    ({ mkDerivation, base, Cabal, directory, filepath }:
     mkDerivation {
       pname = "cabal-doctest";
       version = "1.0.6";
       sha256 = "0bgd4jdmzxq5y465r4sf4jv2ix73yvblnr4c9wyazazafddamjny";
       revision = "2";
       editedCabalFile = "1kbiwqm4fxrsdpcqijdq98h8wzmxydcvxd03f1z8dliqzyqsbd60";
       libraryHaskellDepends = [ base Cabal directory filepath ];
       homepage = "https://github.com/phadej/cabal-doctest";
       description = "A Setup.hs helper for doctests running";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "cabal-install" = callPackage
    ({ mkDerivation, array, async, base, base16-bytestring, binary
     , bytestring, Cabal, containers, cryptohash-sha256, deepseq
     , directory, echo, edit-distance, filepath, hackage-security
     , hashable, HTTP, mtl, network, network-uri, pretty, process
     , random, stm, tar, time, unix, zlib
     }:
     mkDerivation {
       pname = "cabal-install";
       version = "2.2.0.0";
       sha256 = "1nd3ch7qr4dpfxhgkcq2lnhvszx2kjgnn1kwb44vk9y5jgfs4mn8";
       revision = "1";
       editedCabalFile = "0f1svlhh4cpj3p5fs9bcjpv15qp291lnvlaxxcw7aib8a1gn3wim";
       configureFlags = [ "-flib" "-f-native-dns" ];
       isLibrary = true;
       isExecutable = true;
       setupHaskellDepends = [ base Cabal filepath process ];
       libraryHaskellDepends = [
         array async base base16-bytestring binary bytestring Cabal
         containers cryptohash-sha256 deepseq directory echo edit-distance
         filepath hackage-security hashable HTTP mtl network network-uri
         pretty process random stm tar time unix zlib
       ];
       executableHaskellDepends = [ base Cabal directory filepath ];
       doCheck = false;
       postInstall = ''
         mkdir $out/etc
         mv bash-completion $out/etc/bash_completion.d
       '';
       homepage = "http://www.haskell.org/cabal/";
       description = "The command-line interface for Cabal and Hackage";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "cabal-rpm" = callPackage
    ({ mkDerivation, base, bytestring, Cabal, directory, filepath
     , http-client, http-client-tls, http-conduit, process, simple-cmd
     , time, unix
     }:
     mkDerivation {
       pname = "cabal-rpm";
       version = "0.12.6";
       sha256 = "1k602v7v87w6xcd9a5m8n5grnjbkyn79rdi9azl7djna0rs129ns";
       configureFlags = [ "-f-old-locale" ];
       isLibrary = false;
       isExecutable = true;
       executableHaskellDepends = [
         base bytestring Cabal directory filepath http-client
         http-client-tls http-conduit process simple-cmd time unix
       ];
       doHaddock = false;
       homepage = "https://github.com/juhp/cabal-rpm";
       description = "RPM packaging tool for Haskell Cabal-based packages";
       license = stdenv.lib.licenses.gpl3;
     }) {};
  "cabal2nix" = callPackage
    ({ mkDerivation, aeson, ansi-wl-pprint, base, bytestring, Cabal
     , containers, deepseq, directory, distribution-nixpkgs, filepath
     , hackage-db, hopenssl, hpack, language-nix, lens, monad-par
     , monad-par-extras, mtl, optparse-applicative, pretty, process
     , split, tasty, tasty-golden, text, time, transformers, yaml
     }:
     mkDerivation {
       pname = "cabal2nix";
       version = "2.9.3";
       sha256 = "10l1k8rilf032v6pchwhxaq53mr0d08h6xkllidc3c7wfkzcx7qj";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         aeson ansi-wl-pprint base bytestring Cabal containers deepseq
         directory distribution-nixpkgs filepath hackage-db hopenssl hpack
         language-nix lens optparse-applicative pretty process split text
         time transformers yaml
       ];
       executableHaskellDepends = [
         aeson base bytestring Cabal containers directory
         distribution-nixpkgs filepath hopenssl language-nix lens monad-par
         monad-par-extras mtl optparse-applicative pretty
       ];
       testHaskellDepends = [
         base Cabal containers directory filepath language-nix lens pretty
         process tasty tasty-golden
       ];
       preCheck = ''
         export PATH="$PWD/dist/build/cabal2nix:$PATH"
         export HOME="$TMPDIR/home"
       '';
       homepage = "https://github.com/nixos/cabal2nix#readme";
       description = "Convert Cabal files into Nix build instructions";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "cabal2spec" = callPackage
    ({ mkDerivation, base, Cabal, filepath, optparse-applicative, tasty
     , tasty-golden, time
     }:
     mkDerivation {
       pname = "cabal2spec";
       version = "2.1.1";
       sha256 = "1fm9vi7iyxcpvvivy973njlmsp7ia7cl4jijhf43h8wq60skh1md";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [ base Cabal filepath time ];
       executableHaskellDepends = [
         base Cabal filepath optparse-applicative
       ];
       testHaskellDepends = [ base Cabal filepath tasty tasty-golden ];
       homepage = "https://github.com/peti/cabal2spec";
       description = "Convert Cabal files into rpm spec files";
       license = stdenv.lib.licenses.gpl3;
     }) {};
  "cache" = callPackage
    ({ mkDerivation, base, clock, hashable, hspec, stm, transformers
     , unordered-containers
     }:
     mkDerivation {
       pname = "cache";
       version = "0.1.1.1";
       sha256 = "04azn2g1rndfpf6zl3sachzz471hhxykxh4clrz0vl5da8frja8h";
       libraryHaskellDepends = [
         base clock hashable stm transformers unordered-containers
       ];
       testHaskellDepends = [ base clock hspec stm transformers ];
       homepage = "https://github.com/hverr/haskell-cache#readme";
       description = "An in-memory key/value store with expiration support";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "cachix" = callPackage
    ({ mkDerivation, async, base, base16-bytestring, base64-bytestring
     , bifunctors, bytestring, cachix-api, conduit, conduit-extra
     , cookie, cryptonite, data-default, dhall, directory, ed25519
     , filepath, fsnotify, here, hspec, hspec-discover, http-client
     , http-client-tls, http-conduit, http-types, lzma-conduit
     , megaparsec, memory, mmorph, optparse-applicative, process
     , protolude, resourcet, retry, safe-exceptions, servant
     , servant-auth, servant-auth-client, servant-client
     , servant-client-core, servant-streaming-client, streaming, text
     , unix, uri-bytestring, versions
     }:
     mkDerivation {
       pname = "cachix";
       version = "0.1.3";
       sha256 = "0vhgkdrrj8wmnzqsjwyrhflwprnizjibgjwcwn5771mjv38amyx0";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         async base base16-bytestring base64-bytestring bifunctors
         bytestring cachix-api conduit conduit-extra cookie cryptonite
         data-default dhall directory ed25519 filepath fsnotify here
         http-client http-client-tls http-conduit http-types lzma-conduit
         megaparsec memory mmorph optparse-applicative process protolude
         resourcet retry safe-exceptions servant servant-auth
         servant-auth-client servant-client servant-client-core
         servant-streaming-client streaming text unix uri-bytestring
         versions
       ];
       executableHaskellDepends = [ base cachix-api ];
       executableToolDepends = [ hspec-discover ];
       testHaskellDepends = [ base cachix-api here hspec protolude ];
       homepage = "https://github.com/cachix/cachix#readme";
       description = "Command line client for Nix binary cache hosting https://cachix.org";
       license = stdenv.lib.licenses.asl20;
     }) {};
  "cachix-api" = callPackage
    ({ mkDerivation, aeson, amazonka, base, base16-bytestring
     , bytestring, conduit, cookie, cryptonite, hspec, hspec-discover
     , http-api-data, http-media, lens, memory, protolude, servant
     , servant-auth, servant-auth-server, servant-auth-swagger
     , servant-streaming, servant-swagger, servant-swagger-ui-core
     , string-conv, swagger2, text, transformers
     }:
     mkDerivation {
       pname = "cachix-api";
       version = "0.1.0.3";
       sha256 = "00j5m3pqnlwwvbj4669lpng6awsn5xzz67c6qq5dmc5q7ii2vzdf";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         aeson amazonka base base16-bytestring bytestring conduit cookie
         cryptonite http-api-data http-media lens memory servant
         servant-auth servant-auth-server servant-auth-swagger
         servant-streaming servant-swagger servant-swagger-ui-core
         string-conv swagger2 text transformers
       ];
       executableHaskellDepends = [ aeson base ];
       testHaskellDepends = [
         aeson amazonka base base16-bytestring bytestring conduit cookie
         cryptonite hspec http-api-data http-media lens memory protolude
         servant servant-auth servant-auth-server servant-auth-swagger
         servant-streaming servant-swagger servant-swagger-ui-core
         string-conv swagger2 text transformers
       ];
       testToolDepends = [ hspec-discover ];
       homepage = "https://github.com/cachix/cachix#readme";
       description = "Servant HTTP API specification for https://cachix.org";
       license = stdenv.lib.licenses.asl20;
     }) {};
  "cairo" = callPackage
    ({ mkDerivation, array, base, bytestring, Cabal, cairo
     , gtk2hs-buildtools, mtl, text, utf8-string
     }:
     mkDerivation {
       pname = "cairo";
       version = "0.13.5.0";
       sha256 = "1wxylv4d8120ri0vgar168ikqa9m6533ipdwi38qlmxmw20ws2j2";
       enableSeparateDataOutput = true;
       setupHaskellDepends = [ base Cabal gtk2hs-buildtools ];
       libraryHaskellDepends = [
         array base bytestring mtl text utf8-string
       ];
       libraryPkgconfigDepends = [ cairo ];
       homepage = "http://projects.haskell.org/gtk2hs/";
       description = "Binding to the Cairo library";
       license = stdenv.lib.licenses.bsd3;
     }) {inherit (pkgs) cairo;};
  "calendar-recycling" = callPackage
    ({ mkDerivation, base, containers, html, old-time, utility-ht }:
     mkDerivation {
       pname = "calendar-recycling";
       version = "0.0.0.1";
       sha256 = "0afmnii65axpqk3x50wj1d17942m1kyhwka3bn78ylxy9z7rrlwc";
       isLibrary = false;
       isExecutable = true;
       executableHaskellDepends = [
         base containers html old-time utility-ht
       ];
       doHaddock = false;
       homepage = "http://hub.darcs.net/thielema/calendar-recycling";
       description = "List years with the same calendars";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "call-stack" = callPackage
    ({ mkDerivation, base, nanospec }:
     mkDerivation {
       pname = "call-stack";
       version = "0.1.0";
       sha256 = "1qmihf5jafmc79sk52l6gpx75f5bnla2lp62kh3p34x3j84mwpzj";
       libraryHaskellDepends = [ base ];
       testHaskellDepends = [ base nanospec ];
       homepage = "https://github.com/sol/call-stack#readme";
       description = "Use GHC call-stacks in a backward compatible way";
       license = stdenv.lib.licenses.mit;
     }) {};
  "capataz" = callPackage
    ({ mkDerivation, async, base, bytestring, pretty-show
     , prettyprinter, rio, tasty, tasty-hunit, tasty-smallcheck
     , teardown, time, uuid
     }:
     mkDerivation {
       pname = "capataz";
       version = "0.2.0.0";
       sha256 = "0b026vbp9xkwfis5xr1z4svi5z5b4dpj5c3w28133fr4rl6cdpx4";
       libraryHaskellDepends = [
         async base bytestring pretty-show prettyprinter rio teardown time
         uuid
       ];
       testHaskellDepends = [
         async base bytestring pretty-show prettyprinter rio tasty
         tasty-hunit tasty-smallcheck teardown time uuid
       ];
       doCheck = false;
       homepage = "https://github.com/roman/Haskell-capataz#readme";
       description = "OTP-like supervision trees in Haskell";
       license = stdenv.lib.licenses.mit;
     }) {};
  "carray" = callPackage
    ({ mkDerivation, array, base, binary, bytestring, ix-shapable
     , QuickCheck, syb
     }:
     mkDerivation {
       pname = "carray";
       version = "0.1.6.8";
       sha256 = "04qny61gcjblqjrz761wp4bdkxk6zbm31xn6h426iybw9kanf6cg";
       libraryHaskellDepends = [
         array base binary bytestring ix-shapable QuickCheck syb
       ];
       testHaskellDepends = [ array base ix-shapable QuickCheck ];
       benchmarkHaskellDepends = [ array base ];
       description = "A C-compatible array library";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "case-insensitive" = callPackage
    ({ mkDerivation, base, bytestring, criterion, deepseq, hashable
     , HUnit, test-framework, test-framework-hunit, text
     }:
     mkDerivation {
       pname = "case-insensitive";
       version = "1.2.0.11";
       sha256 = "1qrpxfirsxckg7jv28f5ah2qc8lh95hp7rnqkbqs1ahcwlbnvkm7";
       libraryHaskellDepends = [ base bytestring deepseq hashable text ];
       testHaskellDepends = [
         base bytestring HUnit test-framework test-framework-hunit text
       ];
       benchmarkHaskellDepends = [ base bytestring criterion deepseq ];
       homepage = "https://github.com/basvandijk/case-insensitive";
       description = "Case insensitive string comparison";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "cased" = callPackage
    ({ mkDerivation, base, text }:
     mkDerivation {
       pname = "cased";
       version = "0.1.0.0";
       sha256 = "08xdc0mpp6b6inaxh6cr6ni08sy2ahfcbq8xbs3m4cfqbrqfd543";
       libraryHaskellDepends = [ base text ];
       homepage = "https://github.com/jb55/cased";
       description = "Track string casing in its type";
       license = stdenv.lib.licenses.mit;
     }) {};
  "cases" = callPackage
    ({ mkDerivation, attoparsec, base-prelude, loch-th, text }:
     mkDerivation {
       pname = "cases";
       version = "0.1.3.2";
       sha256 = "1ad8b4rvz6lnnhdk63xm5rpk2dwj97whfd69gvnw5ajifwpn7kwy";
       libraryHaskellDepends = [ attoparsec base-prelude loch-th text ];
       doCheck = false;
       homepage = "https://github.com/nikita-volkov/cases";
       description = "A converter for spinal, snake and camel cases";
       license = stdenv.lib.licenses.mit;
     }) {};
  "casing" = callPackage
    ({ mkDerivation, base, split, tasty, tasty-hunit }:
     mkDerivation {
       pname = "casing";
       version = "0.1.4.0";
       sha256 = "1mznhlbg8qd2yrjg23rq7s77bijn92nrfx7bvx9sw8sqxwqkd2lf";
       libraryHaskellDepends = [ base split ];
       testHaskellDepends = [ base tasty tasty-hunit ];
       description = "Convert between various source code casing conventions";
       license = stdenv.lib.licenses.mit;
     }) {};
  "cassava" = callPackage
    ({ mkDerivation, array, attoparsec, base, bytestring, containers
     , deepseq, hashable, Only, scientific, text, text-short
     , unordered-containers, vector
     }:
     mkDerivation {
       pname = "cassava";
       version = "0.5.1.0";
       sha256 = "0xs2c5lpy0g5lsmp2cx0dm5lnxij7cgry6xd5gsn3bfdlap8lb3n";
       revision = "1";
       editedCabalFile = "1brz20js95synh0yw942ihy4y9y6nk4xnsqcjqi9580y24zcigkl";
       configureFlags = [ "-f-bytestring--lt-0_10_4" ];
       libraryHaskellDepends = [
         array attoparsec base bytestring containers deepseq hashable Only
         scientific text text-short unordered-containers vector
       ];
       doCheck = false;
       homepage = "https://github.com/hvr/cassava";
       description = "A CSV parsing and encoding library";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "cassava-conduit" = callPackage
    ({ mkDerivation, array, base, bifunctors, bytestring, cassava
     , conduit, containers, criterion, mtl, QuickCheck, text
     }:
     mkDerivation {
       pname = "cassava-conduit";
       version = "0.5.0";
       sha256 = "0xj8hxyijkajgrg6g52lxfbg83d8gp01b2x35z0mqia2k6whlihr";
       libraryHaskellDepends = [
         array base bifunctors bytestring cassava conduit containers mtl
         text
       ];
       testHaskellDepends = [
         base bytestring cassava conduit QuickCheck text
       ];
       benchmarkHaskellDepends = [ base criterion ];
       homepage = "https://github.com/domdere/cassava-conduit";
       description = "Conduit interface for cassava package";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "cassava-records" = callPackage
    ({ mkDerivation, attoparsec, base, bytestring, cassava, containers
     , foldl, HUnit, QuickCheck, tasty, tasty-hunit, tasty-quickcheck
     , template-haskell, text, unordered-containers, vector
     }:
     mkDerivation {
       pname = "cassava-records";
       version = "0.1.0.4";
       sha256 = "13dgcqrlvcqifgisfk80f9siwzzbk96jhhbrnmrpmg95270k5y0i";
       libraryHaskellDepends = [
         attoparsec base bytestring cassava foldl template-haskell text
         unordered-containers vector
       ];
       testHaskellDepends = [
         attoparsec base bytestring cassava containers foldl HUnit
         QuickCheck tasty tasty-hunit tasty-quickcheck template-haskell text
         unordered-containers vector
       ];
       homepage = "https://github.com/gdevanla/cassava-records#readme";
       description = "Auto-generation of records data type";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "cast" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "cast";
       version = "0.1.0.2";
       sha256 = "14dwsy80v1k0d9ksxb83h5lrz311d3nsgzcxxvivcdj4jzjlbm94";
       libraryHaskellDepends = [ base ];
       homepage = "https://github.com/haskell-patterns/cast#readme";
       description = "Abstact cast pattern";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "category" = callPackage
    ({ mkDerivation, alg, base }:
     mkDerivation {
       pname = "category";
       version = "0.2.1.0";
       sha256 = "1nsx8wdry3nd75almvvf70x8sy5a5q1h744rgz7w6ilfkpb57rxh";
       libraryHaskellDepends = [ alg base ];
       description = "Categorical types and classes";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "cayley-client" = callPackage
    ({ mkDerivation, aeson, attoparsec, base, binary, bytestring
     , exceptions, hspec, http-client, http-conduit, lens, lens-aeson
     , mtl, text, transformers, unordered-containers, vector
     }:
     mkDerivation {
       pname = "cayley-client";
       version = "0.4.8";
       sha256 = "09hrq1k8s8w7rawyn78hjagirs3yrkp79nn7p5w1l8amp27k5cdi";
       libraryHaskellDepends = [
         aeson attoparsec base binary bytestring exceptions http-client
         http-conduit lens lens-aeson mtl text transformers
         unordered-containers vector
       ];
       testHaskellDepends = [ aeson base hspec unordered-containers ];
       doCheck = false;
       homepage = "https://github.com/MichelBoucey/cayley-client";
       description = "A Haskell client for the Cayley graph database";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "cborg" = callPackage
    ({ mkDerivation, aeson, array, base, base16-bytestring
     , base64-bytestring, bytestring, containers, deepseq, fail
     , ghc-prim, half, integer-gmp, primitive, QuickCheck, scientific
     , tasty, tasty-hunit, tasty-quickcheck, text, vector
     }:
     mkDerivation {
       pname = "cborg";
       version = "0.2.1.0";
       sha256 = "10vlv5mwg9625rmir7mi0zj5ygs3j3vlhm2h8lilkbj5frgp764i";
       libraryHaskellDepends = [
         array base bytestring containers deepseq ghc-prim half integer-gmp
         primitive text
       ];
       testHaskellDepends = [
         aeson array base base16-bytestring base64-bytestring bytestring
         deepseq fail half QuickCheck scientific tasty tasty-hunit
         tasty-quickcheck text vector
       ];
       description = "Concise Binary Object Representation";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "cereal" = callPackage
    ({ mkDerivation, array, base, bytestring, containers, ghc-prim
     , QuickCheck, test-framework, test-framework-quickcheck2
     }:
     mkDerivation {
       pname = "cereal";
       version = "0.5.7.0";
       sha256 = "1j7imh2mzqcljld7sx0av69699955rpy3hzivi5723i6a9nszgbs";
       libraryHaskellDepends = [
         array base bytestring containers ghc-prim
       ];
       testHaskellDepends = [
         base bytestring QuickCheck test-framework
         test-framework-quickcheck2
       ];
       homepage = "https://github.com/GaloisInc/cereal";
       description = "A binary serialization library";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "cereal-conduit" = callPackage
    ({ mkDerivation, base, bytestring, cereal, conduit, HUnit, mtl
     , resourcet, transformers
     }:
     mkDerivation {
       pname = "cereal-conduit";
       version = "0.8.0";
       sha256 = "1srr7agvgfw78q5s1npjq5sgynvhjgllpihiv37ylkwqm4c4ap6r";
       revision = "1";
       editedCabalFile = "1imyl3g2bni8bc6kajr857xh94fscphksj3286pxfpa8yp9vqqpc";
       libraryHaskellDepends = [
         base bytestring cereal conduit resourcet transformers
       ];
       testHaskellDepends = [
         base bytestring cereal conduit HUnit mtl transformers
       ];
       homepage = "https://github.com/snoyberg/conduit";
       description = "Turn Data.Serialize Gets and Puts into Sources, Sinks, and Conduits";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "cereal-text" = callPackage
    ({ mkDerivation, base, cereal, text }:
     mkDerivation {
       pname = "cereal-text";
       version = "0.1.0.2";
       sha256 = "0k1ml0z5rksvrhz15i9afld7bybgylqmy5nmvik3p98zd3s1ayiw";
       libraryHaskellDepends = [ base cereal text ];
       homepage = "https://github.com/ulikoehler/cereal-text";
       description = "Data.Text instances for the cereal serialization library";
       license = stdenv.lib.licenses.asl20;
     }) {};
  "cereal-time" = callPackage
    ({ mkDerivation, base, cereal, hspec, QuickCheck, time }:
     mkDerivation {
       pname = "cereal-time";
       version = "0.1.0.0";
       sha256 = "1ciwlkgpacc2yy5pfj0xpc0z2x7mjpv4rni550jfwny47q8dbimy";
       libraryHaskellDepends = [ base cereal time ];
       testHaskellDepends = [ base cereal hspec QuickCheck time ];
       description = "Serialize instances for types from `time` package";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "cereal-vector" = callPackage
    ({ mkDerivation, base, bytestring, cereal, QuickCheck, vector }:
     mkDerivation {
       pname = "cereal-vector";
       version = "0.2.0.1";
       sha256 = "0czrb4l1n73cfxxlzbcqfa34qa3gw0m5w5mlz0rawylyqfk8a1pz";
       libraryHaskellDepends = [ base bytestring cereal vector ];
       testHaskellDepends = [ base cereal QuickCheck vector ];
       homepage = "https://github.com/acfoltzer/cereal-vector";
       description = "Serialize instances for Data.Vector types.";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "cfenv" = callPackage
    ({ mkDerivation, aeson, base, bytestring, containers, hspec
     , raw-strings-qq
     }:
     mkDerivation {
       pname = "cfenv";
       version = "0.1.0.0";
       sha256 = "0zklgqkm33n8a2pq8h313xij4nvrv0brh7v4q024bglyam1ndscc";
       libraryHaskellDepends = [ aeson base bytestring containers ];
       testHaskellDepends = [
         aeson base containers hspec raw-strings-qq
       ];
       homepage = "https://github.com/tomphp/haskell-cfenv#readme";
       description = "A library getting the environment when running on Cloud Foundry";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "chan" = callPackage
    ({ mkDerivation, async, base, stm }:
     mkDerivation {
       pname = "chan";
       version = "0.0.4.1";
       sha256 = "1ks74njh8fj9dh8qhydwjyqdx8lrdj5fif455cxfshvdbwhcnvwj";
       libraryHaskellDepends = [ async base stm ];
       testHaskellDepends = [ async base stm ];
       doCheck = false;
       homepage = "https://github.com/athanclark/chan#readme";
       description = "Some extra kit for Chans";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "charset" = callPackage
    ({ mkDerivation, array, base, bytestring, containers, semigroups
     , unordered-containers
     }:
     mkDerivation {
       pname = "charset";
       version = "0.3.7.1";
       sha256 = "1gn0m96qpjww8hpp2g1as5yy0wcwy4iq73h3kz6g0yxxhcl5sh9x";
       revision = "1";
       editedCabalFile = "1z6nxw2g9vgsjq0g159sk8mwj68lwzxzi5iv5ynha0h85jcqxszy";
       libraryHaskellDepends = [
         array base bytestring containers semigroups unordered-containers
       ];
       homepage = "http://github.com/ekmett/charset";
       description = "Fast unicode character sets based on complemented PATRICIA tries";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "charsetdetect-ae" = callPackage
    ({ mkDerivation, base, bytestring }:
     mkDerivation {
       pname = "charsetdetect-ae";
       version = "1.1.0.4";
       sha256 = "0321j2kmlvf88bhlbi8ddnzgbckq37sfb7nm7r0dvar6626s9flv";
       libraryHaskellDepends = [ base bytestring ];
       homepage = "http://github.com/aelve/charsetdetect-ae";
       description = "Character set detection using Mozilla's Universal Character Set Detector";
       license = "LGPL";
     }) {};
  "chart-unit" = callPackage
    ({ mkDerivation, base, colour, data-default, diagrams-lib
     , diagrams-svg, doctest, foldl, formatting, generic-lens, lens
     , linear, numhask, numhask-prelude, numhask-range, palette
     , protolude, scientific, svg-builder, SVGFonts, tasty, tasty-hspec
     , text, time
     }:
     mkDerivation {
       pname = "chart-unit";
       version = "0.7.0.0";
       sha256 = "03mjp806mw0qw3wc9fx5x04cj17cdznr22fki8yzk37jm7rr7y4p";
       libraryHaskellDepends = [
         base colour data-default diagrams-lib diagrams-svg foldl formatting
         generic-lens lens linear numhask numhask-prelude numhask-range
         palette protolude scientific svg-builder SVGFonts text time
       ];
       testHaskellDepends = [
         base doctest numhask numhask-prelude numhask-range tasty
         tasty-hspec
       ];
       homepage = "https://github.com/tonyday567/chart-unit#readme";
       description = "Native haskell charts";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "chaselev-deque" = callPackage
    ({ mkDerivation, abstract-deque, abstract-deque-tests, array
     , atomic-primops, base, containers, ghc-prim, HUnit, test-framework
     , test-framework-hunit, transformers, vector
     }:
     mkDerivation {
       pname = "chaselev-deque";
       version = "0.5.0.5";
       sha256 = "1x2301faqkchkzrvbnganly341jilvg1fmx6lazgbs98cbazhn2d";
       libraryHaskellDepends = [
         abstract-deque array atomic-primops base ghc-prim transformers
         vector
       ];
       testHaskellDepends = [
         abstract-deque abstract-deque-tests array atomic-primops base
         containers ghc-prim HUnit test-framework test-framework-hunit
         vector
       ];
       homepage = "https://github.com/rrnewton/haskell-lockfree/wiki";
       description = "Chase & Lev work-stealing lock-free double-ended queues (deques)";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "chatwork" = callPackage
    ({ mkDerivation, aeson, aeson-casing, base, bytestring, connection
     , data-default-class, http-api-data, http-client, http-client-tls
     , http-types, req, text
     }:
     mkDerivation {
       pname = "chatwork";
       version = "0.1.3.5";
       sha256 = "0nb9xhzf8apllbl75883nd3bz50mvfpf5zzkpwjw7lyg7mk82pkm";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         aeson aeson-casing base bytestring connection data-default-class
         http-api-data http-client http-client-tls http-types req text
       ];
       executableHaskellDepends = [
         aeson aeson-casing base bytestring connection data-default-class
         http-api-data http-client http-client-tls http-types req text
       ];
       doCheck = false;
       homepage = "https://github.com/matsubara0507/chatwork#readme";
       description = "The ChatWork API in Haskell";
       license = stdenv.lib.licenses.mit;
     }) {};
  "cheapskate" = callPackage
    ({ mkDerivation, base, blaze-html, bytestring, containers
     , data-default, deepseq, mtl, syb, text, uniplate, xss-sanitize
     }:
     mkDerivation {
       pname = "cheapskate";
       version = "0.1.1.1";
       sha256 = "0qnyd8bni2rby6b02ff4bvfdhm1hwc8vzpmnms84jgrlg1lly3fm";
       revision = "1";
       editedCabalFile = "0mf6qdpgh56n0ynyy272vhkk2bjrdhppks2vrw79gk0kzn29fggh";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         base blaze-html containers data-default deepseq mtl syb text
         uniplate xss-sanitize
       ];
       executableHaskellDepends = [ base blaze-html bytestring text ];
       homepage = "http://github.com/jgm/cheapskate";
       description = "Experimental markdown processor";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "cheapskate-highlight" = callPackage
    ({ mkDerivation, base, blaze-html, cheapskate, highlighting-kate
     , text
     }:
     mkDerivation {
       pname = "cheapskate-highlight";
       version = "0.1.0.0";
       sha256 = "0w6k694gmnx7h8ix79z8scsdl65zbilxni1vjr90ka2fdfrazxss";
       revision = "1";
       editedCabalFile = "1c8kxqdqf0j962xjdrrjfcbjsl0c1kax31rjykymv7w16d6hmlj4";
       libraryHaskellDepends = [
         base blaze-html cheapskate highlighting-kate text
       ];
       homepage = "http://github.com/aelve/cheapskate-highlight";
       description = "Code highlighting for cheapskate";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "cheapskate-lucid" = callPackage
    ({ mkDerivation, base, blaze-html, cheapskate, lucid }:
     mkDerivation {
       pname = "cheapskate-lucid";
       version = "0.1.0.0";
       sha256 = "0ibjfy5dbkizg8cw4avhwl62xpk735a1a7bc0nkhf9zxpq9fb0pm";
       revision = "1";
       editedCabalFile = "197nx95xw21i7zyvgzcgnr36ab6vrk17c66iz8ndwz61vp1jf6hc";
       libraryHaskellDepends = [ base blaze-html cheapskate lucid ];
       homepage = "http://github.com/aelve/cheapskate-lucid";
       description = "Use cheapskate with Lucid";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "check-email" = callPackage
    ({ mkDerivation, base, bytestring, email-validate, resolv }:
     mkDerivation {
       pname = "check-email";
       version = "1.0.2";
       sha256 = "09wkz853ikr4yns2z12rnzprb98q4b8li1n6lmx5v6m0vgx1a9hw";
       libraryHaskellDepends = [ base bytestring email-validate ];
       librarySystemDepends = [ resolv ];
       homepage = "https://github.com/qoelet/check-email#readme";
       description = "Confirm whether an email is valid and probably existant";
       license = stdenv.lib.licenses.bsd3;
     }) {resolv = null;};
  "checkers" = callPackage
    ({ mkDerivation, array, base, QuickCheck, random, semigroupoids }:
     mkDerivation {
       pname = "checkers";
       version = "0.4.11";
       sha256 = "0f1dhiymdihrnpz9h9p4mi8iica07qv3wm47acvdkhxrc4sjsq6h";
       libraryHaskellDepends = [
         array base QuickCheck random semigroupoids
       ];
       homepage = "https://github.com/conal/checkers";
       description = "Check properties on standard classes and data structures";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "checksum" = callPackage
    ({ mkDerivation, base, explicit-exception, utility-ht }:
     mkDerivation {
       pname = "checksum";
       version = "0.0";
       sha256 = "0327lihvibnhs2c0gnmm13g6iaw53ka3w2j1rng4d1vnrxphyyik";
       libraryHaskellDepends = [ base explicit-exception utility-ht ];
       homepage = "http://hub.darcs.net/thielema/checksum";
       description = "Compute and verify checksums of ISBN, IBAN, etc";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "choice" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "choice";
       version = "0.2.2";
       sha256 = "0qcyf6nqi0nyhbf3xwyib95y29j5ir94d5vg449mkpr92crf8ryk";
       libraryHaskellDepends = [ base ];
       homepage = "https://github.com/mboes/choice#readme";
       description = "A solution to boolean blindness";
       license = stdenv.lib.licenses.publicDomain;
     }) {};
  "chronologique" = callPackage
    ({ mkDerivation, aeson, base, bytestring, hourglass, hspec
     , QuickCheck, text, time, vector
     }:
     mkDerivation {
       pname = "chronologique";
       version = "0.3.1.1";
       sha256 = "05ly96mdm4nxmn7yz04wq9kgzlq8biaaaxs1mvsc3f8wgcpbqf65";
       libraryHaskellDepends = [ aeson base hourglass text time vector ];
       testHaskellDepends = [
         aeson base bytestring hourglass hspec QuickCheck vector
       ];
       homepage = "https://github.com/afcowie/chronologique/";
       description = "Time to manipulate time";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "chunked-data" = callPackage
    ({ mkDerivation, base, bytestring, containers, semigroups, text
     , transformers, vector
     }:
     mkDerivation {
       pname = "chunked-data";
       version = "0.3.1";
       sha256 = "16m7y7fwrirbjbqqcsfmr4yxa9qvfax6r7pw0zl9ky71ms0wa47p";
       libraryHaskellDepends = [
         base bytestring containers semigroups text transformers vector
       ];
       homepage = "https://github.com/snoyberg/mono-traversable#readme";
       description = "Typeclasses for dealing with various chunked data representations";
       license = stdenv.lib.licenses.mit;
     }) {};
  "cipher-aes" = callPackage
    ({ mkDerivation, base, byteable, bytestring, crypto-cipher-tests
     , crypto-cipher-types, QuickCheck, securemem, test-framework
     , test-framework-quickcheck2
     }:
     mkDerivation {
       pname = "cipher-aes";
       version = "0.2.11";
       sha256 = "05ahz6kjq0fl1w66gpiqy0vndli5yx1pbsbw9ni3viwqas4p3cfk";
       libraryHaskellDepends = [
         base byteable bytestring crypto-cipher-types securemem
       ];
       testHaskellDepends = [
         base byteable bytestring crypto-cipher-tests crypto-cipher-types
         QuickCheck test-framework test-framework-quickcheck2
       ];
       homepage = "https://github.com/vincenthz/hs-cipher-aes";
       description = "Fast AES cipher implementation with advanced mode of operations";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "cipher-aes128" = callPackage
    ({ mkDerivation, base, bytestring, Cabal, cereal, criterion
     , crypto-api, entropy, process, tagged
     }:
     mkDerivation {
       pname = "cipher-aes128";
       version = "0.7.0.4";
       sha256 = "1182s7984zjxz53nnjyki5afhfq8h5wjfmg6cqy9z0x1q63qk3fd";
       isLibrary = true;
       isExecutable = true;
       setupHaskellDepends = [ base Cabal process ];
       libraryHaskellDepends = [
         base bytestring cereal crypto-api tagged
       ];
       benchmarkHaskellDepends = [
         base bytestring cereal criterion crypto-api entropy tagged
       ];
       homepage = "https://github.com/TomMD/cipher-aes128";
       description = "AES and common modes using AES-NI when available";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "cipher-blowfish" = callPackage
    ({ mkDerivation, base, byteable, bytestring, crypto-cipher-tests
     , crypto-cipher-types, QuickCheck, securemem, test-framework
     , test-framework-quickcheck2, vector
     }:
     mkDerivation {
       pname = "cipher-blowfish";
       version = "0.0.3";
       sha256 = "0hb67gmiyqrknynz5am8nada1b1v47rqla87dw5nvfhxhl51fhcg";
       libraryHaskellDepends = [
         base byteable bytestring crypto-cipher-types securemem vector
       ];
       testHaskellDepends = [
         base byteable bytestring crypto-cipher-tests crypto-cipher-types
         QuickCheck test-framework test-framework-quickcheck2
       ];
       homepage = "http://github.com/vincenthz/hs-crypto-cipher";
       description = "Blowfish cipher";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "cipher-camellia" = callPackage
    ({ mkDerivation, base, byteable, bytestring, crypto-cipher-tests
     , crypto-cipher-types, QuickCheck, securemem, test-framework
     , test-framework-quickcheck2, vector
     }:
     mkDerivation {
       pname = "cipher-camellia";
       version = "0.0.2";
       sha256 = "19z2mi1rvp8fsqjdbmrm1hdlxmx61yr55fyknmmn945qrlvx234d";
       libraryHaskellDepends = [
         base byteable bytestring crypto-cipher-types securemem vector
       ];
       testHaskellDepends = [
         base byteable bytestring crypto-cipher-tests crypto-cipher-types
         QuickCheck test-framework test-framework-quickcheck2
       ];
       homepage = "http://github.com/vincenthz/hs-crypto-cipher";
       description = "Camellia block cipher primitives";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "cipher-des" = callPackage
    ({ mkDerivation, base, byteable, bytestring, crypto-cipher-tests
     , crypto-cipher-types, QuickCheck, securemem, test-framework
     , test-framework-quickcheck2
     }:
     mkDerivation {
       pname = "cipher-des";
       version = "0.0.6";
       sha256 = "1isazxa2nr1y13y0danfk7wghy34rfpn3f43rw714nk2xk6vrwc5";
       libraryHaskellDepends = [
         base byteable bytestring crypto-cipher-types securemem
       ];
       testHaskellDepends = [
         base byteable bytestring crypto-cipher-tests crypto-cipher-types
         QuickCheck test-framework test-framework-quickcheck2
       ];
       homepage = "http://github.com/vincenthz/hs-crypto-cipher";
       description = "DES and 3DES primitives";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "cipher-rc4" = callPackage
    ({ mkDerivation, base, byteable, bytestring, crypto-cipher-tests
     , crypto-cipher-types, QuickCheck, test-framework
     , test-framework-quickcheck2
     }:
     mkDerivation {
       pname = "cipher-rc4";
       version = "0.1.4";
       sha256 = "0k9qf0cn5yxc4qlqikcm5yyrnkkvr6g3v7306cp8iwz7r4dp6zn6";
       libraryHaskellDepends = [
         base byteable bytestring crypto-cipher-types
       ];
       testHaskellDepends = [
         base bytestring crypto-cipher-tests crypto-cipher-types QuickCheck
         test-framework test-framework-quickcheck2
       ];
       homepage = "http://github.com/vincenthz/hs-cipher-rc4";
       description = "Fast RC4 cipher implementation";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "circle-packing" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "circle-packing";
       version = "0.1.0.6";
       sha256 = "06z8irwrjxxgk5xqlpy6a9mjl44kp9pgx2xpslhgxrd31nll9vk4";
       revision = "2";
       editedCabalFile = "1ag213lv6yfzxdc4ghbywy165qblnqx5b3j9d23kc6fcyf19nfyk";
       libraryHaskellDepends = [ base ];
       description = "Simple heuristic for packing discs of varying radii in a circle";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "cisco-spark-api" = callPackage
    ({ mkDerivation, aeson, async, attoparsec, base, bitset-word8
     , bytestring, conduit, data-default, hspec, http-conduit
     , http-types, network-uri, optparse-applicative, text, utf8-string
     , wai, warp
     }:
     mkDerivation {
       pname = "cisco-spark-api";
       version = "0.1.0.4";
       sha256 = "0i528c0lbk3k30q53p3qy01fq3mdpv0664q49lfvzcxkkjchwmbg";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         aeson attoparsec base bitset-word8 bytestring conduit data-default
         http-conduit network-uri text
       ];
       executableHaskellDepends = [
         aeson base bytestring conduit data-default http-conduit
         optparse-applicative text utf8-string
       ];
       testHaskellDepends = [
         aeson async attoparsec base bytestring conduit data-default hspec
         http-conduit http-types network-uri text wai warp
       ];
       homepage = "https://github.com/nshimaza/webex-teams-api#readme";
       description = "DEPRECATED in favor of webex-teams-api";
       license = stdenv.lib.licenses.mit;
     }) {};
  "clang-compilation-database" = callPackage
    ({ mkDerivation, aeson, base, bytestring, text }:
     mkDerivation {
       pname = "clang-compilation-database";
       version = "0.1.0.1";
       sha256 = "1a0wvk82k65b5lscsvg5p41shpz98rahq44d5vyf8wclfshh2ihi";
       libraryHaskellDepends = [ aeson base bytestring text ];
       testHaskellDepends = [ aeson base bytestring ];
       homepage = "https://github.com/lambdageek/clang-compilation-database";
       description = "JSON Compilation Database Format encoding and decoding";
       license = stdenv.lib.licenses.mit;
     }) {};
  "clash-ghc" = callPackage
    ({ mkDerivation, array, base, bifunctors, bytestring, clash-lib
     , clash-prelude, concurrent-supply, containers, deepseq, directory
     , filepath, ghc, ghc-boot, ghc-prim, ghc-typelits-extra
     , ghc-typelits-knownnat, ghc-typelits-natnormalise, ghci, hashable
     , haskeline, integer-gmp, lens, mtl, primitive, process, reflection
     , text, time, transformers, unbound-generics, uniplate, unix
     , unordered-containers, vector
     }:
     mkDerivation {
       pname = "clash-ghc";
       version = "0.99.3";
       sha256 = "0gjbvh6w2yc8pk38h8pw2jqfbyjzadizszy7v24a851m2cg0yiw9";
       revision = "1";
       editedCabalFile = "0r86409nh73wcychmwh2j3qnbbjk9z2yxr5amx7gpc8gar4qb3qi";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         array base bifunctors bytestring clash-lib clash-prelude
         concurrent-supply containers deepseq directory filepath ghc
         ghc-boot ghc-prim ghc-typelits-extra ghc-typelits-knownnat
         ghc-typelits-natnormalise ghci hashable haskeline integer-gmp lens
         mtl primitive process reflection text time transformers
         unbound-generics uniplate unix unordered-containers vector
       ];
       executableHaskellDepends = [ base ];
       homepage = "http://www.clash-lang.org/";
       description = "CAES Language for Synchronous Hardware";
       license = stdenv.lib.licenses.bsd2;
     }) {};
  "clash-lib" = callPackage
    ({ mkDerivation, aeson, ansi-wl-pprint, attoparsec, base
     , bytestring, clash-prelude, concurrent-supply, containers
     , data-binary-ieee754, deepseq, directory, errors, fgl, filepath
     , ghc, hashable, integer-gmp, lens, mtl, parsers, prettyprinter
     , primitive, process, reducers, template-haskell, text, time
     , transformers, trifecta, unbound-generics, unordered-containers
     , vector
     }:
     mkDerivation {
       pname = "clash-lib";
       version = "0.99.3";
       sha256 = "1fnsffp2qr608sq7z243a772qisyqbndxmprwd43lbvg2v00yssm";
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [
         aeson ansi-wl-pprint attoparsec base bytestring clash-prelude
         concurrent-supply containers data-binary-ieee754 deepseq directory
         errors fgl filepath ghc hashable integer-gmp lens mtl parsers
         prettyprinter primitive process reducers template-haskell text time
         transformers trifecta unbound-generics unordered-containers vector
       ];
       homepage = "http://www.clash-lang.org/";
       description = "CAES Language for Synchronous Hardware - As a Library";
       license = stdenv.lib.licenses.bsd2;
     }) {};
  "clash-prelude" = callPackage
    ({ mkDerivation, array, base, bifunctors, constraints, criterion
     , data-binary-ieee754, data-default, deepseq, doctest, ghc-prim
     , ghc-typelits-extra, ghc-typelits-knownnat
     , ghc-typelits-natnormalise, half, integer-gmp, lens, QuickCheck
     , reflection, singletons, template-haskell, transformers, vector
     }:
     mkDerivation {
       pname = "clash-prelude";
       version = "0.99.3";
       sha256 = "1g3pidjpcpzhkgyxw1w58ck0ihpla58nxx3xgkrcfz903xkjhipg";
       libraryHaskellDepends = [
         array base bifunctors constraints data-binary-ieee754 data-default
         deepseq ghc-prim ghc-typelits-extra ghc-typelits-knownnat
         ghc-typelits-natnormalise half integer-gmp lens QuickCheck
         reflection singletons template-haskell transformers vector
       ];
       testHaskellDepends = [ base doctest ];
       benchmarkHaskellDepends = [
         base criterion deepseq template-haskell
       ];
       homepage = "http://www.clash-lang.org/";
       description = "CAES Language for Synchronous Hardware - Prelude library";
       license = stdenv.lib.licenses.bsd2;
     }) {};
  "classy-prelude" = callPackage
    ({ mkDerivation, async, base, basic-prelude, bifunctors, bytestring
     , chunked-data, containers, deepseq, dlist, ghc-prim, hashable
     , hspec, mono-traversable, mono-traversable-instances, mtl
     , mutable-containers, primitive, QuickCheck, say, semigroups, stm
     , stm-chans, text, time, transformers, unliftio
     , unordered-containers, vector, vector-instances
     }:
     mkDerivation {
       pname = "classy-prelude";
       version = "1.4.0";
       sha256 = "1q7r4lnrxjsh7rj5nr0cs22ddp9m6maa7bzbkarxw3xbfrb2afrb";
       revision = "1";
       editedCabalFile = "1gf615lz0bfsn09vrjgj63d8zcpsmz1cgvdv8px3h0b4jrwdij6v";
       libraryHaskellDepends = [
         async base basic-prelude bifunctors bytestring chunked-data
         containers deepseq dlist ghc-prim hashable mono-traversable
         mono-traversable-instances mtl mutable-containers primitive say
         semigroups stm stm-chans text time transformers unliftio
         unordered-containers vector vector-instances
       ];
       testHaskellDepends = [
         base containers hspec QuickCheck transformers unordered-containers
       ];
       homepage = "https://github.com/snoyberg/mono-traversable#readme";
       description = "A typeclass-based Prelude";
       license = stdenv.lib.licenses.mit;
     }) {};
  "classy-prelude-conduit" = callPackage
    ({ mkDerivation, base, bytestring, classy-prelude, conduit, hspec
     , monad-control, QuickCheck, resourcet, transformers, void
     }:
     mkDerivation {
       pname = "classy-prelude-conduit";
       version = "1.4.0";
       sha256 = "096466cyyxxmg3jpq705xjjc4r7v9b607hgbys8vybjlldkjbvrr";
       libraryHaskellDepends = [
         base bytestring classy-prelude conduit monad-control resourcet
         transformers void
       ];
       testHaskellDepends = [
         base bytestring conduit hspec QuickCheck transformers
       ];
       homepage = "https://github.com/snoyberg/mono-traversable#readme";
       description = "classy-prelude together with conduit functions";
       license = stdenv.lib.licenses.mit;
     }) {};
  "classy-prelude-yesod" = callPackage
    ({ mkDerivation, aeson, base, classy-prelude
     , classy-prelude-conduit, data-default, http-conduit, http-types
     , persistent, yesod, yesod-newsfeed, yesod-static
     }:
     mkDerivation {
       pname = "classy-prelude-yesod";
       version = "1.4.0";
       sha256 = "0a4y9fipcikndzqqna5694f1wcwwin5ir076pjj1nm638a7silhc";
       libraryHaskellDepends = [
         aeson base classy-prelude classy-prelude-conduit data-default
         http-conduit http-types persistent yesod yesod-newsfeed
         yesod-static
       ];
       doHaddock = false;
       homepage = "https://github.com/snoyberg/mono-traversable#readme";
       description = "Provide a classy prelude including common Yesod functionality";
       license = stdenv.lib.licenses.mit;
     }) {};
  "classyplate" = callPackage
    ({ mkDerivation, base, criterion, parallel, template-haskell
     , uniplate
     }:
     mkDerivation {
       pname = "classyplate";
       version = "0.3.2.0";
       sha256 = "0yjja83y7ccnhvy0jarwm297jnz44wmdi0krbrp2vnbgdfzfybki";
       libraryHaskellDepends = [ base template-haskell ];
       benchmarkHaskellDepends = [ base criterion parallel uniplate ];
       description = "Fuseable type-class based generics";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "clay" = callPackage
    ({ mkDerivation, base, hspec, hspec-discover, mtl, text }:
     mkDerivation {
       pname = "clay";
       version = "0.13.1";
       sha256 = "18r8lgzyscxnw6xdxg0jxvp2977i02fjh3n5p89fnd8qrh0r2kl4";
       libraryHaskellDepends = [ base mtl text ];
       testHaskellDepends = [ base hspec hspec-discover mtl text ];
       testToolDepends = [ hspec-discover ];
       homepage = "http://fvisser.nl/clay";
       description = "CSS preprocessor as embedded Haskell";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "clientsession" = callPackage
    ({ mkDerivation, base, base64-bytestring, bytestring, cereal
     , cipher-aes, containers, cprng-aes, crypto-api, crypto-random
     , directory, entropy, hspec, HUnit, QuickCheck, setenv, skein
     , tagged, transformers
     }:
     mkDerivation {
       pname = "clientsession";
       version = "0.9.1.2";
       sha256 = "0s6h4ykj16mpf7nlw2iqn2ji0p8g1fn5ni0s7yqaili6vv2as5ar";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         base base64-bytestring bytestring cereal cipher-aes cprng-aes
         crypto-api crypto-random directory entropy setenv skein tagged
       ];
       executableHaskellDepends = [ base ];
       testHaskellDepends = [
         base bytestring cereal containers hspec HUnit QuickCheck
         transformers
       ];
       homepage = "http://github.com/yesodweb/clientsession/tree/master";
       description = "Securely store session data in a client-side cookie";
       license = stdenv.lib.licenses.mit;
     }) {};
  "clock" = callPackage
    ({ mkDerivation, base, tasty, tasty-quickcheck }:
     mkDerivation {
       pname = "clock";
       version = "0.7.2";
       sha256 = "07v91s20halsqjmziqb1sqjp2sjpckl9by7y28aaklwqi2bh2rl8";
       libraryHaskellDepends = [ base ];
       testHaskellDepends = [ base tasty tasty-quickcheck ];
       homepage = "https://github.com/corsis/clock";
       description = "High-resolution clock functions: monotonic, realtime, cputime";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "clock-extras" = callPackage
    ({ mkDerivation, base, clock, hspec }:
     mkDerivation {
       pname = "clock-extras";
       version = "0.1.0.2";
       sha256 = "0nfsxm1apd4gk7yd8b95w849n927wdkmzg2mlp3572ylm5x0kvd9";
       libraryHaskellDepends = [ base clock ];
       testHaskellDepends = [ base hspec ];
       description = "A couple functions that probably should be in the 'clock' package";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "closed" = callPackage
    ({ mkDerivation, aeson, base, cassava, deepseq, hashable, hspec
     , markdown-unlit, persistent, QuickCheck, text, vector
     }:
     mkDerivation {
       pname = "closed";
       version = "0.2.0";
       sha256 = "0762acn2dik98hp4bvlyvwfy1jfzb4i6ri9pnxa07risain1qc3s";
       libraryHaskellDepends = [
         aeson base cassava deepseq hashable persistent QuickCheck text
       ];
       testHaskellDepends = [
         aeson base cassava deepseq hashable hspec markdown-unlit persistent
         QuickCheck text vector
       ];
       testToolDepends = [ markdown-unlit ];
       homepage = "https://github.com/frontrowed/closed#readme";
       description = "Integers bounded by a closed interval";
       license = stdenv.lib.licenses.mit;
     }) {};
  "clr-host" = callPackage
    ({ mkDerivation, base, bytestring, Cabal, clr-marshal, directory
     , file-embed, filepath, glib, mono, text, transformers
     }:
     mkDerivation {
       pname = "clr-host";
       version = "0.2.1.0";
       sha256 = "192yzi7xx2hrk2q0i4qzq0plam2b0xgg9r5s3kjzcvf9hq1vyapy";
       setupHaskellDepends = [
         base Cabal directory filepath transformers
       ];
       libraryHaskellDepends = [
         base bytestring clr-marshal file-embed text
       ];
       librarySystemDepends = [ glib mono ];
       testHaskellDepends = [ base ];
       homepage = "https://gitlab.com/tim-m89/clr-haskell/tree/master/libs/clr-host";
       description = "Hosting the Common Language Runtime";
       license = stdenv.lib.licenses.bsd3;
     }) {inherit (pkgs) glib; inherit (pkgs) mono;};
  "clr-marshal" = callPackage
    ({ mkDerivation, base, text }:
     mkDerivation {
       pname = "clr-marshal";
       version = "0.2.0.0";
       sha256 = "1mnwxfmhz548bb1g17bddhmvd6lzl66bfi1a7f0j3phh7lgna4s1";
       libraryHaskellDepends = [ base text ];
       homepage = "https://gitlab.com/tim-m89/clr-haskell/tree/master/libs/clr-marshal";
       description = "Marshaling for the clr";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "clumpiness" = callPackage
    ({ mkDerivation, base, containers, tree-fun }:
     mkDerivation {
       pname = "clumpiness";
       version = "0.17.0.0";
       sha256 = "15f4js9rnn2rpkrvr9lphh624hkf4m15rdlvfwn29bvf40yk0jzx";
       libraryHaskellDepends = [ base containers tree-fun ];
       description = "Calculate the clumpiness of leaf properties in a tree";
       license = stdenv.lib.licenses.gpl3;
     }) {};
  "cmark-gfm" = callPackage
    ({ mkDerivation, base, blaze-html, bytestring, cheapskate
     , criterion, discount, HUnit, markdown, sundown, text
     }:
     mkDerivation {
       pname = "cmark-gfm";
       version = "0.1.6";
       sha256 = "0s39djd1j0rq63g4sy0cnras14m263anr56nvijcbcy9zg41dyf8";
       libraryHaskellDepends = [ base bytestring text ];
       testHaskellDepends = [ base HUnit text ];
       benchmarkHaskellDepends = [
         base blaze-html cheapskate criterion discount markdown sundown text
       ];
       homepage = "https://github.com/kivikakk/cmark-gfm-hs";
       description = "Fast, accurate GitHub Flavored Markdown parser and renderer";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "cmdargs" = callPackage
    ({ mkDerivation, base, filepath, process, template-haskell
     , transformers
     }:
     mkDerivation {
       pname = "cmdargs";
       version = "0.10.20";
       sha256 = "0cbkmgrcnwgigg6z88y3c09gm7g6dwm7gzbgr53h8k1xik29s9hf";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         base filepath process template-haskell transformers
       ];
       homepage = "https://github.com/ndmitchell/cmdargs#readme";
       description = "Command line argument processing";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "code-builder" = callPackage
    ({ mkDerivation, base, containers }:
     mkDerivation {
       pname = "code-builder";
       version = "0.1.3";
       sha256 = "1ax4c19xkszahcxvwc1wa1hrgk6ajck5sbprbplsi1gc9jj4g7jm";
       libraryHaskellDepends = [ base containers ];
       description = "Simple system for generating code";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "code-page" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "code-page";
       version = "0.1.3";
       sha256 = "1491frk4jx6dlhifky9dvcxbsbcfssrz979a5hp5zn061rh8cp76";
       libraryHaskellDepends = [ base ];
       testHaskellDepends = [ base ];
       homepage = "https://github.com/RyanGlScott/code-page";
       description = "Windows code page library for Haskell";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "codec" = callPackage
    ({ mkDerivation, aeson, base, binary, binary-bits, bytestring
     , generic-arbitrary, mtl, profunctors, tasty, tasty-quickcheck
     , template-haskell, text, transformers, unordered-containers
     , vector
     }:
     mkDerivation {
       pname = "codec";
       version = "0.2.1";
       sha256 = "0a2vqaislh9jwqb5jr59s448456iawc4cs0b1c6dkhq8h6sn3hpz";
       libraryHaskellDepends = [
         aeson base binary binary-bits bytestring mtl profunctors
         template-haskell text transformers unordered-containers vector
       ];
       testHaskellDepends = [
         aeson base binary bytestring generic-arbitrary tasty
         tasty-quickcheck
       ];
       homepage = "https://github.com/chpatrick/codec";
       description = "Simple bidirectional serialization";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "codec-beam" = callPackage
    ({ mkDerivation, base, bytestring, containers, filepath, process
     , text, zlib
     }:
     mkDerivation {
       pname = "codec-beam";
       version = "0.2.0";
       sha256 = "0rg398vh36fb5bkb0anq0iv7g5z55avchswpkwjcjzilbx765sv1";
       libraryHaskellDepends = [ base bytestring containers text zlib ];
       testHaskellDepends = [ base bytestring filepath process text ];
       homepage = "https://github.com/hkgumbs/codec-beam#readme";
       description = "Erlang VM byte code assembler";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "codec-rpm" = callPackage
    ({ mkDerivation, attoparsec, attoparsec-binary, base, bytestring
     , conduit, conduit-extra, cpio-conduit, exceptions, hspec
     , hspec-attoparsec, HUnit, lzma-conduit, mtl, parsec, pretty
     , resourcet, text
     }:
     mkDerivation {
       pname = "codec-rpm";
       version = "0.2.2";
       sha256 = "15sbxns2p3fcc5gc8kf2jmjich6rnrimfl9rdjshi6y7ilvqhjx3";
       libraryHaskellDepends = [
         attoparsec attoparsec-binary base bytestring conduit conduit-extra
         cpio-conduit exceptions lzma-conduit mtl parsec pretty resourcet
         text
       ];
       testHaskellDepends = [
         attoparsec attoparsec-binary base bytestring hspec hspec-attoparsec
         HUnit parsec pretty text
       ];
       homepage = "https://github.com/weldr/codec-rpm";
       description = "A library for manipulating RPM files";
       license = stdenv.lib.licenses.lgpl21;
     }) {};
  "codo-notation" = callPackage
    ({ mkDerivation, base, comonad, haskell-src-meta, parsec
     , template-haskell, uniplate
     }:
     mkDerivation {
       pname = "codo-notation";
       version = "0.5.2";
       sha256 = "1bwfjg0bzph0vka1rx8m6f505l9dmj8nn6al9kmjkva18l05gsvq";
       libraryHaskellDepends = [
         base comonad haskell-src-meta parsec template-haskell uniplate
       ];
       description = "A notation for comonads, analogous to the do-notation for monads";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "coercible-utils" = callPackage
    ({ mkDerivation, base, gauge }:
     mkDerivation {
       pname = "coercible-utils";
       version = "0.0.0";
       sha256 = "164cn0cs7fjfm599v2z8wsgsz599f97wky4h7vycf460rn34jqia";
       libraryHaskellDepends = [ base ];
       testHaskellDepends = [ base ];
       benchmarkHaskellDepends = [ base gauge ];
       homepage = "https://github.com/sjakobi/coercible-utils";
       description = "Utility functions for Coercible types";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "colonnade" = callPackage
    ({ mkDerivation, base, bytestring, contravariant, doctest
     , profunctors, text, vector
     }:
     mkDerivation {
       pname = "colonnade";
       version = "1.2.0.1";
       sha256 = "12ryrg42qgg1hnflz757fik1lrg51l9bg4145bb678y9c1ixisrj";
       libraryHaskellDepends = [
         base bytestring contravariant profunctors text vector
       ];
       testHaskellDepends = [ base doctest ];
       homepage = "https://github.com/andrewthad/colonnade#readme";
       description = "Generic types and functions for columnar encoding and decoding";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "colorful-monoids" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "colorful-monoids";
       version = "0.2.1.2";
       sha256 = "0y35f21n8xh1xq8i0anbfx034m5wnwhp2ka47vvi3w0iw13zyhhb";
       libraryHaskellDepends = [ base ];
       testHaskellDepends = [ base ];
       homepage = "https://github.com/minad/colorful-monoids#readme";
       description = "Styled console text output using ANSI escape sequences";
       license = stdenv.lib.licenses.mit;
     }) {};
  "colorize-haskell" = callPackage
    ({ mkDerivation, ansi-terminal, base, haskell-lexer }:
     mkDerivation {
       pname = "colorize-haskell";
       version = "1.0.1";
       sha256 = "1v4spa6vw9igjpd1dr595z5raz5fr8f485q5w9imrv8spms46xh3";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [ ansi-terminal base haskell-lexer ];
       executableHaskellDepends = [ ansi-terminal base haskell-lexer ];
       homepage = "http://github.com/yav/colorize-haskell";
       description = "Highligt Haskell source";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "colour" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "colour";
       version = "2.3.4";
       sha256 = "1sy51nz096sv91nxqk6yk7b92b5a40axv9183xakvki2nc09yhqg";
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [ base ];
       doCheck = false;
       homepage = "http://www.haskell.org/haskellwiki/Colour";
       description = "A model for human colour/color perception";
       license = stdenv.lib.licenses.mit;
     }) {};
  "combinatorial" = callPackage
    ({ mkDerivation, array, base, containers, QuickCheck, transformers
     , utility-ht
     }:
     mkDerivation {
       pname = "combinatorial";
       version = "0.1.0.1";
       sha256 = "0w6vjs2pg2dffbq1dbs1dygnxk8nppzhkq3bgrg3ydfdzra7imn4";
       libraryHaskellDepends = [
         array base containers transformers utility-ht
       ];
       testHaskellDepends = [
         array base containers QuickCheck transformers utility-ht
       ];
       homepage = "http://hub.darcs.net/thielema/combinatorial/";
       description = "Count, enumerate, rank and unrank combinatorial objects";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "comfort-graph" = callPackage
    ({ mkDerivation, base, containers, QuickCheck, semigroups
     , transformers, utility-ht
     }:
     mkDerivation {
       pname = "comfort-graph";
       version = "0.0.3.1";
       sha256 = "0qmmz3z9dgjb41rj6g81ppxaj4jswqnnb8bqn2s1dd6hf6cih9n9";
       libraryHaskellDepends = [
         base containers QuickCheck semigroups transformers utility-ht
       ];
       testHaskellDepends = [
         base containers QuickCheck transformers utility-ht
       ];
       homepage = "http://hub.darcs.net/thielema/comfort-graph";
       description = "Graph structure with type parameters for nodes and edges";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "commutative" = callPackage
    ({ mkDerivation, base, QuickCheck, quickcheck-instances, random
     , semigroups, tasty, tasty-hunit, tasty-quickcheck, vector
     }:
     mkDerivation {
       pname = "commutative";
       version = "0.0.2";
       sha256 = "0scrc0bwa3ggvhmhmj0pvi7q7sbm495nc8m30jjjcp5wbd26mg6c";
       libraryHaskellDepends = [ base random semigroups vector ];
       testHaskellDepends = [
         base QuickCheck quickcheck-instances random semigroups tasty
         tasty-hunit tasty-quickcheck vector
       ];
       doCheck = false;
       homepage = "https://github.com/athanclark/commutative#readme";
       description = "Commutative binary operations";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "comonad" = callPackage
    ({ mkDerivation, base, Cabal, cabal-doctest, containers
     , contravariant, distributive, doctest, semigroups, tagged
     , transformers, transformers-compat
     }:
     mkDerivation {
       pname = "comonad";
       version = "5.0.4";
       sha256 = "09g870c4flp4k3fgbibsd0mmfjani1qcpbcl685v8x89kxzrva3q";
       setupHaskellDepends = [ base Cabal cabal-doctest ];
       libraryHaskellDepends = [
         base containers contravariant distributive semigroups tagged
         transformers transformers-compat
       ];
       testHaskellDepends = [ base doctest ];
       homepage = "http://github.com/ekmett/comonad/";
       description = "Comonads";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "compactmap" = callPackage
    ({ mkDerivation, base, containers, hspec, QuickCheck, vector }:
     mkDerivation {
       pname = "compactmap";
       version = "0.1.4.2.1";
       sha256 = "0x7ps0pnjnyfr2pyjk839z7dwidizkcqwi29zxy2pgvq5856w5i2";
       libraryHaskellDepends = [ base vector ];
       testHaskellDepends = [ base containers hspec QuickCheck ];
       description = "A read-only memory-efficient key-value store";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "compensated" = callPackage
    ({ mkDerivation, base, bifunctors, binary, bytes, Cabal
     , cabal-doctest, cereal, comonad, deepseq, distributive, doctest
     , generic-deriving, hashable, lens, log-domain, safecopy
     , semigroupoids, semigroups, simple-reflect, vector
     }:
     mkDerivation {
       pname = "compensated";
       version = "0.7.2";
       sha256 = "1qna4g1zcc89r1ambswrq65pql6k6g3dv0ivlgnhswl6lm3vzyf7";
       setupHaskellDepends = [ base Cabal cabal-doctest ];
       libraryHaskellDepends = [
         base bifunctors binary bytes cereal comonad deepseq distributive
         hashable lens log-domain safecopy semigroupoids semigroups vector
       ];
       testHaskellDepends = [
         base doctest generic-deriving semigroups simple-reflect
       ];
       homepage = "http://github.com/analytics/compensated/";
       description = "Compensated floating-point arithmetic";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "compiler-warnings" = callPackage
    ({ mkDerivation, base, binary, parsec, tasty, tasty-hunit
     , tasty-quickcheck, tasty-th, text
     }:
     mkDerivation {
       pname = "compiler-warnings";
       version = "0.1.0";
       sha256 = "1qswbwi2i8xqv61gjnx77w3j53ybyblsdyk974bb2qad3dzcbx4c";
       libraryHaskellDepends = [ base binary parsec text ];
       testHaskellDepends = [
         base binary parsec tasty tasty-hunit tasty-quickcheck tasty-th text
       ];
       homepage = "https://github.com/yi-editor/compiler-warnings#readme";
       description = "Parser for common compiler warning formats";
       license = stdenv.lib.licenses.bsd2;
     }) {};
  "componentm" = callPackage
    ({ mkDerivation, base, containers, deepseq, exceptions, pretty-show
     , prettyprinter, rio, tasty, tasty-hunit, teardown
     }:
     mkDerivation {
       pname = "componentm";
       version = "0.0.0.2";
       sha256 = "19xnav3xiw5v8sdmw6a90wdhxxkjlkvpkwrf0pjsxlisgn93vqpg";
       libraryHaskellDepends = [
         base containers deepseq exceptions pretty-show prettyprinter rio
         teardown
       ];
       testHaskellDepends = [
         base containers pretty-show prettyprinter rio tasty tasty-hunit
         teardown
       ];
       homepage = "https://github.com/roman/Haskell-componentm#readme";
       description = "Monad for allocation and cleanup of application resources";
       license = stdenv.lib.licenses.mit;
     }) {};
  "componentm-devel" = callPackage
    ({ mkDerivation, base, componentm, foreign-store, rio, teardown }:
     mkDerivation {
       pname = "componentm-devel";
       version = "0.0.0.2";
       sha256 = "02jvv2f5akl47jg66xwcgj0s5wif0wckp2d0y6x4imr6kcy31mrd";
       libraryHaskellDepends = [
         base componentm foreign-store rio teardown
       ];
       homepage = "https://github.com/roman/Haskell-componentm#readme";
       description = "Easy REPL driven development using ComponentM";
       license = stdenv.lib.licenses.mit;
     }) {};
  "composable-associations" = callPackage
    ({ mkDerivation, base, lens, tasty, tasty-hunit }:
     mkDerivation {
       pname = "composable-associations";
       version = "0.1.0.0";
       sha256 = "03l056yb6k8x5xrfdszsn4w2739zyiqzrl6q3ci19dg1gsy106lx";
       libraryHaskellDepends = [ base ];
       testHaskellDepends = [ base lens tasty tasty-hunit ];
       homepage = "https://github.com/SamProtas/composable-associations#readme";
       description = "Types and helpers for composing types into a single larger key-value type";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "composable-associations-aeson" = callPackage
    ({ mkDerivation, aeson, base, bytestring, composable-associations
     , doctest, tasty, tasty-hunit, tasty-quickcheck, text
     , unordered-containers
     }:
     mkDerivation {
       pname = "composable-associations-aeson";
       version = "0.1.0.0";
       sha256 = "0kragi8wfd30yxrndxka5p3bivj1qi8svljcdkqnji32dpnm9myv";
       libraryHaskellDepends = [
         aeson base composable-associations text unordered-containers
       ];
       testHaskellDepends = [
         aeson base bytestring doctest tasty tasty-hunit tasty-quickcheck
       ];
       homepage = "https://github.com/SamProtas/composable-associations#readme";
       description = "Aeson ToJSON/FromJSON implementation for the types of composable-associations";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "composition" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "composition";
       version = "1.0.2.1";
       sha256 = "0smdyzcnfwiab1wnazmk4szali1ckh7dqcdp9vn7qnnabq7k08vi";
       description = "Combinators for unorthodox function composition";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "composition-extra" = callPackage
    ({ mkDerivation, base, composition, contravariant }:
     mkDerivation {
       pname = "composition-extra";
       version = "2.0.0";
       sha256 = "0abipab6bx138rynpkh4daj53bv5yqbw94zfswysyq6iix529669";
       libraryHaskellDepends = [ base composition contravariant ];
       description = "Combinators for unorthodox structure composition";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "composition-prelude" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "composition-prelude";
       version = "1.5.3.1";
       sha256 = "0dq4znxr3qy2avmv68lzw4xrbfccap19ri2hxmlkl6r8p2850k7d";
       libraryHaskellDepends = [ base ];
       description = "Higher-order function combinators";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "compressed" = callPackage
    ({ mkDerivation, base, comonad, containers, fingertree, hashable
     , keys, pointed, reducers, semigroupoids, semigroups
     , unordered-containers
     }:
     mkDerivation {
       pname = "compressed";
       version = "3.11";
       sha256 = "0gfxmfyzgpa176igsby50jpfhpfvd078d7nyvwwg2cjx8hpvyyyp";
       revision = "1";
       editedCabalFile = "0h3kfr2kdn74vk0mam5mwk6phclrcm79khd8yz2pp8j9zv1v8q3r";
       libraryHaskellDepends = [
         base comonad containers fingertree hashable keys pointed reducers
         semigroupoids semigroups unordered-containers
       ];
       homepage = "http://github.com/ekmett/compressed/";
       description = "Compressed containers and reducers";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "concise" = callPackage
    ({ mkDerivation, base, bytestring, lens, QuickCheck
     , quickcheck-instances, tasty, tasty-quickcheck, text
     }:
     mkDerivation {
       pname = "concise";
       version = "0.1.0.1";
       sha256 = "09crgc6gjfidlad6263253xx1di6wfhc9awhira21s0z7rddy9sw";
       libraryHaskellDepends = [ base bytestring lens text ];
       testHaskellDepends = [
         base bytestring lens QuickCheck quickcheck-instances tasty
         tasty-quickcheck text
       ];
       homepage = "https://github.com/frasertweedale/hs-concise";
       description = "Utilities for Control.Lens.Cons";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "concurrency" = callPackage
    ({ mkDerivation, array, atomic-primops, base, exceptions
     , monad-control, mtl, stm, transformers
     }:
     mkDerivation {
       pname = "concurrency";
       version = "1.6.2.0";
       sha256 = "004h1wxdgqpxpk9vcvds759pn5qdp873b4bidakffxgh35nkxr68";
       libraryHaskellDepends = [
         array atomic-primops base exceptions monad-control mtl stm
         transformers
       ];
       homepage = "https://github.com/barrucadu/dejafu";
       description = "Typeclasses, functions, and data types for concurrency and STM";
       license = stdenv.lib.licenses.mit;
     }) {};
  "concurrent-extra" = callPackage
    ({ mkDerivation, async, base, HUnit, random, stm, test-framework
     , test-framework-hunit, unbounded-delays
     }:
     mkDerivation {
       pname = "concurrent-extra";
       version = "0.7.0.12";
       sha256 = "1y8xk460fvnw0idzdiylmm874sjny4q9jxb1js9fjz8lw2wns3h4";
       libraryHaskellDepends = [ base stm unbounded-delays ];
       testHaskellDepends = [
         async base HUnit random stm test-framework test-framework-hunit
         unbounded-delays
       ];
       doCheck = false;
       homepage = "https://github.com/basvandijk/concurrent-extra";
       description = "Extra concurrency primitives";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "concurrent-output" = callPackage
    ({ mkDerivation, ansi-terminal, async, base, directory, exceptions
     , process, stm, terminal-size, text, transformers, unix
     }:
     mkDerivation {
       pname = "concurrent-output";
       version = "1.10.9";
       sha256 = "0mwf155w89nbbkjln7hhbn8k3f8p0ylcvgrg31cm7ijpx4499i4c";
       libraryHaskellDepends = [
         ansi-terminal async base directory exceptions process stm
         terminal-size text transformers unix
       ];
       description = "Ungarble output from several threads or commands";
       license = stdenv.lib.licenses.bsd2;
     }) {};
  "concurrent-split" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "concurrent-split";
       version = "0.0.1.1";
       sha256 = "0i9gak7q3ay8g1kzq7dg0bs36bg88n7kwy3h1r6jrni7mz7jh05f";
       libraryHaskellDepends = [ base ];
       description = "MVars and Channels with distinguished input and output side";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "concurrent-supply" = callPackage
    ({ mkDerivation, base, containers, ghc-prim, hashable }:
     mkDerivation {
       pname = "concurrent-supply";
       version = "0.1.8";
       sha256 = "07zjczcgxwpi8imp0w86vrb78w067b322q5d7zlqla91sbf2gy6c";
       libraryHaskellDepends = [ base ghc-prim hashable ];
       testHaskellDepends = [ base containers ];
       homepage = "http://github.com/ekmett/concurrent-supply/";
       description = "A fast concurrent unique identifier supply with a pure API";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "cond" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "cond";
       version = "0.4.1.1";
       sha256 = "12xcjxli1scd4asr4zc77i5q9qka2100gx97hv3vv12l7gj7d703";
       libraryHaskellDepends = [ base ];
       homepage = "https://github.com/kallisti-dev/cond";
       description = "Basic conditional and boolean operators with monadic variants";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "conduit" = callPackage
    ({ mkDerivation, base, bytestring, containers, deepseq, directory
     , exceptions, filepath, gauge, hspec, kan-extensions
     , mono-traversable, mtl, mwc-random, primitive, QuickCheck
     , resourcet, safe, silently, split, text, transformers, unix
     , unliftio, unliftio-core, vector
     }:
     mkDerivation {
       pname = "conduit";
       version = "1.3.1";
       sha256 = "1mi0ad2ha51lyx1sw15zkzbh2bvv1q7jcfrxd4xc91d7mmk9n4mf";
       libraryHaskellDepends = [
         base bytestring directory exceptions filepath mono-traversable mtl
         primitive resourcet text transformers unix unliftio-core vector
       ];
       testHaskellDepends = [
         base bytestring containers directory exceptions filepath hspec
         mono-traversable mtl QuickCheck resourcet safe silently split text
         transformers unliftio vector
       ];
       benchmarkHaskellDepends = [
         base containers deepseq gauge hspec kan-extensions mwc-random
         transformers vector
       ];
       homepage = "http://github.com/snoyberg/conduit";
       description = "Streaming data processing library";
       license = stdenv.lib.licenses.mit;
     }) {};
  "conduit-algorithms" = callPackage
    ({ mkDerivation, async, base, bytestring, bzlib-conduit, conduit
     , conduit-combinators, conduit-extra, containers, criterion
     , deepseq, directory, exceptions, HUnit, lzma-conduit
     , monad-control, mtl, pqueue, resourcet, stm, stm-conduit
     , streaming-commons, test-framework, test-framework-hunit
     , test-framework-th, transformers, unliftio-core, vector
     }:
     mkDerivation {
       pname = "conduit-algorithms";
       version = "0.0.8.2";
       sha256 = "1s423n2hybxdsady7spi4iy9s5lm07dsl0rjxn400y09faizm5x8";
       libraryHaskellDepends = [
         async base bytestring bzlib-conduit conduit conduit-combinators
         conduit-extra containers deepseq exceptions lzma-conduit
         monad-control mtl pqueue resourcet stm stm-conduit
         streaming-commons transformers unliftio-core vector
       ];
       testHaskellDepends = [
         async base bytestring bzlib-conduit conduit conduit-combinators
         conduit-extra containers deepseq directory exceptions HUnit
         lzma-conduit monad-control mtl pqueue resourcet stm stm-conduit
         streaming-commons test-framework test-framework-hunit
         test-framework-th transformers unliftio-core vector
       ];
       benchmarkHaskellDepends = [
         async base bytestring bzlib-conduit conduit conduit-combinators
         conduit-extra containers criterion deepseq exceptions lzma-conduit
         monad-control mtl pqueue resourcet stm stm-conduit
         streaming-commons transformers unliftio-core vector
       ];
       homepage = "https://github.com/luispedro/conduit-algorithms#readme";
       description = "Conduit-based algorithms";
       license = stdenv.lib.licenses.mit;
     }) {};
  "conduit-combinators" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "conduit-combinators";
       version = "1.3.0";
       sha256 = "1lz70vwp4y4lpsivxl0cshq7aq3968rh48r6rjvpyaj2l0bdj5wp";
       libraryHaskellDepends = [ base ];
       doHaddock = false;
       homepage = "https://github.com/snoyberg/mono-traversable#readme";
       description = "DEPRECATED Functionality merged into the conduit package itself";
       license = stdenv.lib.licenses.mit;
     }) {};
  "conduit-connection" = callPackage
    ({ mkDerivation, base, bytestring, conduit, connection, HUnit
     , network, resourcet, test-framework, test-framework-hunit
     , transformers
     }:
     mkDerivation {
       pname = "conduit-connection";
       version = "0.1.0.4";
       sha256 = "1z11r3rf6hmz5b00w4xymp6x0s00acyvbyw6n99wd3b9ycbl2y2y";
       libraryHaskellDepends = [
         base bytestring conduit connection resourcet transformers
       ];
       testHaskellDepends = [
         base bytestring conduit connection HUnit network resourcet
         test-framework test-framework-hunit transformers
       ];
       homepage = "https://github.com/sdroege/conduit-connection";
       description = "Conduit source and sink for Network.Connection.";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "conduit-extra" = callPackage
    ({ mkDerivation, async, attoparsec, base, bytestring
     , bytestring-builder, conduit, directory, exceptions, filepath
     , gauge, hspec, network, primitive, process, QuickCheck, resourcet
     , stm, streaming-commons, text, transformers, transformers-base
     , typed-process, unliftio-core
     }:
     mkDerivation {
       pname = "conduit-extra";
       version = "1.3.0";
       sha256 = "1bi2b6kdzy5f9glq46jzsk02has95jkxqz0cchpbmnakzhjwjh9c";
       libraryHaskellDepends = [
         async attoparsec base bytestring conduit directory filepath network
         primitive process resourcet stm streaming-commons text transformers
         typed-process unliftio-core
       ];
       testHaskellDepends = [
         async attoparsec base bytestring bytestring-builder conduit
         directory exceptions hspec process QuickCheck resourcet stm
         streaming-commons text transformers transformers-base
       ];
       benchmarkHaskellDepends = [
         base bytestring bytestring-builder conduit gauge transformers
       ];
       homepage = "http://github.com/snoyberg/conduit";
       description = "Batteries included conduit: adapters for common libraries";
       license = stdenv.lib.licenses.mit;
     }) {};
  "conduit-iconv" = callPackage
    ({ mkDerivation, base, bytestring, conduit, criterion, mtl
     , QuickCheck, test-framework, test-framework-quickcheck2, text
     }:
     mkDerivation {
       pname = "conduit-iconv";
       version = "0.1.1.3";
       sha256 = "1dmcsdx0nz0b9sans2fr8lmrii2n0fsjh41jhwlrlng4h93k0w8w";
       libraryHaskellDepends = [ base bytestring conduit ];
       testHaskellDepends = [
         base bytestring conduit mtl QuickCheck test-framework
         test-framework-quickcheck2 text
       ];
       benchmarkHaskellDepends = [
         base bytestring conduit criterion mtl text
       ];
       homepage = "https://github.com/sdroege/conduit-iconv";
       description = "Conduit for character encoding conversion";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "conduit-parse" = callPackage
    ({ mkDerivation, base, conduit, dlist, mtl, parsers, resourcet
     , safe, safe-exceptions, tasty, tasty-hunit, text, transformers
     }:
     mkDerivation {
       pname = "conduit-parse";
       version = "0.2.1.0";
       sha256 = "1qfs61qhbr5gc0ch0mmqcqdm4wvs5pkx2z6rki588fhy1kfdp1dm";
       revision = "1";
       editedCabalFile = "1bgxjn9lbx67584xpwl2k9jrwvlgyqf4vkv0s7vs1nnc1h6qk7qw";
       libraryHaskellDepends = [
         base conduit dlist mtl parsers safe safe-exceptions text
         transformers
       ];
       testHaskellDepends = [
         base conduit mtl parsers resourcet safe-exceptions tasty
         tasty-hunit
       ];
       homepage = "https://github.com/k0ral/conduit-parse";
       description = "Parsing framework based on conduit";
       license = stdenv.lib.licenses.publicDomain;
     }) {};
  "conduit-throttle" = callPackage
    ({ mkDerivation, async, base, conduit, conduit-combinators
     , conduit-extra, HUnit, monad-control, resourcet, stm, stm-chans
     , stm-conduit, test-framework, test-framework-hunit
     , throttle-io-stream, unliftio, unliftio-core
     }:
     mkDerivation {
       pname = "conduit-throttle";
       version = "0.3.1.0";
       sha256 = "0ad3balm1r5jm4jvf26pr1kaiqnzvjznjh5kidk2bknxylbddmld";
       libraryHaskellDepends = [
         async base conduit conduit-combinators conduit-extra monad-control
         resourcet stm stm-chans throttle-io-stream unliftio unliftio-core
       ];
       testHaskellDepends = [
         async base conduit conduit-combinators conduit-extra HUnit
         monad-control resourcet stm stm-chans stm-conduit test-framework
         test-framework-hunit throttle-io-stream unliftio unliftio-core
       ];
       doCheck = false;
       homepage = "https://github.com/mtesseract/conduit-throttle#readme";
       description = "Throttle Conduit Producers";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "config-ini" = callPackage
    ({ mkDerivation, base, containers, directory, hedgehog, ini
     , megaparsec, text, transformers, unordered-containers
     }:
     mkDerivation {
       pname = "config-ini";
       version = "0.2.2.0";
       sha256 = "1820w4y8k0qrlilrizkqckwiyli0x4qcdjmagvcngy5bfsw6fk9n";
       libraryHaskellDepends = [
         base containers megaparsec text transformers unordered-containers
       ];
       testHaskellDepends = [
         base containers directory hedgehog ini text unordered-containers
       ];
       homepage = "https://github.com/aisamanra/config-ini";
       description = "A library for simple INI-based configuration files";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "configuration-tools" = callPackage
    ({ mkDerivation, aeson, ansi-wl-pprint, attoparsec, base
     , base-unicode-symbols, base64-bytestring, bytestring, Cabal
     , case-insensitive, connection, data-default, deepseq, directory
     , dlist, enclosed-exceptions, filepath, http-client
     , http-client-tls, http-types, monad-control, mtl, network-uri
     , optparse-applicative, process, profunctors, semigroups, text, tls
     , transformers, unordered-containers, wai, warp, warp-tls, x509
     , x509-system, x509-validation, yaml
     }:
     mkDerivation {
       pname = "configuration-tools";
       version = "0.3.1";
       sha256 = "0ivfz3vjf81dnxqlzp4ij8snw0bfy227b26r3j1vvhc4n1qpxpz0";
       libraryHaskellDepends = [
         aeson ansi-wl-pprint attoparsec base base-unicode-symbols
         base64-bytestring bytestring Cabal case-insensitive connection
         data-default deepseq directory dlist enclosed-exceptions filepath
         http-client http-client-tls http-types monad-control mtl
         network-uri optparse-applicative process profunctors semigroups
         text tls transformers unordered-containers x509 x509-system
         x509-validation yaml
       ];
       testHaskellDepends = [
         base base-unicode-symbols bytestring Cabal enclosed-exceptions
         http-types monad-control mtl text transformers unordered-containers
         wai warp warp-tls yaml
       ];
       homepage = "https://github.com/alephcloud/hs-configuration-tools";
       description = "Tools for specifying and parsing configurations";
       license = stdenv.lib.licenses.mit;
     }) {};
  "configurator" = callPackage
    ({ mkDerivation, attoparsec, base, bytestring, directory, filepath
     , hashable, HUnit, test-framework, test-framework-hunit, text
     , unix-compat, unordered-containers
     }:
     mkDerivation {
       pname = "configurator";
       version = "0.3.0.0";
       sha256 = "1d1iq1knwiq6ia5g64rw5hqm6dakz912qj13r89737rfcxmrkfbf";
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [
         attoparsec base bytestring directory hashable text unix-compat
         unordered-containers
       ];
       testHaskellDepends = [
         base bytestring directory filepath HUnit test-framework
         test-framework-hunit text
       ];
       homepage = "http://github.com/bos/configurator";
       description = "Configuration management";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "configurator-export" = callPackage
    ({ mkDerivation, base, base-compat, configurator, pretty
     , semigroups, text, unordered-containers
     }:
     mkDerivation {
       pname = "configurator-export";
       version = "0.1.0.1";
       sha256 = "0k42kdzrmci19w2wb6lswkf2g9fzmrwkn6yvvz694xy957pn5gcx";
       libraryHaskellDepends = [
         base base-compat configurator pretty semigroups text
         unordered-containers
       ];
       testHaskellDepends = [ base ];
       homepage = "http://github.com/mstksg/configurator-export";
       description = "Pretty printer and exporter for configurations from the \"configurator\" library";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "connection" = callPackage
    ({ mkDerivation, base, byteable, bytestring, containers
     , data-default-class, network, socks, tls, x509, x509-store
     , x509-system, x509-validation
     }:
     mkDerivation {
       pname = "connection";
       version = "0.2.8";
       sha256 = "1swkb9w5vx9ph7x55y51dc0srj2z27nd9ibgn8c0qcl6hx7g9cbh";
       libraryHaskellDepends = [
         base byteable bytestring containers data-default-class network
         socks tls x509 x509-store x509-system x509-validation
       ];
       homepage = "http://github.com/vincenthz/hs-connection";
       description = "Simple and easy network connections API";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "connection-pool" = callPackage
    ({ mkDerivation, base, between, data-default-class, monad-control
     , network, resource-pool, streaming-commons, time
     , transformers-base
     }:
     mkDerivation {
       pname = "connection-pool";
       version = "0.2.2";
       sha256 = "0lvkcsd042s936fj5c9y5gg4iiq09n42adkv8q2rnwcbd6vl7kzj";
       libraryHaskellDepends = [
         base between data-default-class monad-control network resource-pool
         streaming-commons time transformers-base
       ];
       homepage = "https://github.com/trskop/connection-pool";
       description = "Connection pool built on top of resource-pool and streaming-commons";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "console-style" = callPackage
    ({ mkDerivation, base, mtl, transformers }:
     mkDerivation {
       pname = "console-style";
       version = "0.0.2.1";
       sha256 = "0zxxs59bzgf81d3ww285znmmciij3rswfgyc89ngxb6p86l8x0bd";
       libraryHaskellDepends = [ base mtl transformers ];
       homepage = "https://github.com/minad/console-style#readme";
       description = "Styled console text output using ANSI escape sequences";
       license = stdenv.lib.licenses.mit;
     }) {};
  "constraint" = callPackage
    ({ mkDerivation, base, category }:
     mkDerivation {
       pname = "constraint";
       version = "0.1.1.1";
       sha256 = "0iyz3n8qplp892cw2k2z5pp4pv54p5qaqrcjgpiwfm9jkri0v012";
       libraryHaskellDepends = [ base category ];
       description = "Reified constraints";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "constraints" = callPackage
    ({ mkDerivation, base, binary, deepseq, ghc-prim, hashable, hspec
     , hspec-discover, mtl, semigroups, transformers
     , transformers-compat
     }:
     mkDerivation {
       pname = "constraints";
       version = "0.10.1";
       sha256 = "1xy3vv78jxc17hm0z7qqspxjwv7l2jbcbj670yrl2f053qkfr02q";
       libraryHaskellDepends = [
         base binary deepseq ghc-prim hashable mtl semigroups transformers
         transformers-compat
       ];
       testHaskellDepends = [ base hspec ];
       testToolDepends = [ hspec-discover ];
       homepage = "http://github.com/ekmett/constraints/";
       description = "Constraint manipulation";
       license = stdenv.lib.licenses.bsd2;
     }) {};
  "consul-haskell" = callPackage
    ({ mkDerivation, aeson, base, base64-bytestring, bytestring
     , connection, either, exceptions, http-client, http-client-tls
     , http-types, HUnit, lifted-async, lifted-base, monad-control
     , network, random, retry, stm, tasty, tasty-hunit, text
     , transformers, unordered-containers, uuid, vector
     }:
     mkDerivation {
       pname = "consul-haskell";
       version = "0.4.2";
       sha256 = "02nq60nm49pj00ydd6rhxnbzr9igz9qxlgpjz4vp1kpv1nvi425i";
       libraryHaskellDepends = [
         aeson base base64-bytestring bytestring connection either
         exceptions http-client http-client-tls http-types lifted-async
         lifted-base monad-control network retry stm text transformers
         unordered-containers vector
       ];
       testHaskellDepends = [
         base http-client HUnit network random tasty tasty-hunit text
         transformers uuid
       ];
       doCheck = false;
       homepage = "https://github.com/alphaHeavy/consul-haskell";
       description = "A consul client for Haskell";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "containers-unicode-symbols" = callPackage
    ({ mkDerivation, base, base-unicode-symbols, containers }:
     mkDerivation {
       pname = "containers-unicode-symbols";
       version = "0.3.1.1";
       sha256 = "0ccv7rqkykfk5wmr73mc0kwrnwyzakgp5x495dgwn5nila3g4ma6";
       libraryHaskellDepends = [ base base-unicode-symbols containers ];
       homepage = "http://haskell.org/haskellwiki/Unicode-symbols";
       description = "Unicode alternatives for common functions and operators";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "contravariant" = callPackage
    ({ mkDerivation, base, StateVar, transformers, transformers-compat
     }:
     mkDerivation {
       pname = "contravariant";
       version = "1.4.1";
       sha256 = "1vfhk8c5cxmmakx7rflap1ipkx5q0j5vnlrcz7yz6y53kxhksgf9";
       revision = "1";
       editedCabalFile = "0qj5nymccrb9p0cd6hffsy90jidjng14g9yv95z8v6h4q84sbzvx";
       libraryHaskellDepends = [
         base StateVar transformers transformers-compat
       ];
       homepage = "http://github.com/ekmett/contravariant/";
       description = "Contravariant functors";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "contravariant-extras" = callPackage
    ({ mkDerivation, base, base-prelude, contravariant, semigroups
     , template-haskell, tuple-th
     }:
     mkDerivation {
       pname = "contravariant-extras";
       version = "0.3.4";
       sha256 = "0gg62ccl94kvh7mnvdq09pifqxjx2kgs189si90nmg44bafj7a9n";
       revision = "1";
       editedCabalFile = "1h2955ahga6i4fn7k8v66l03v77p6fhsac6ck8gpabkc08ij60wp";
       libraryHaskellDepends = [
         base base-prelude contravariant semigroups template-haskell
         tuple-th
       ];
       homepage = "https://github.com/nikita-volkov/contravariant-extras";
       description = "Extras for the \"contravariant\" package";
       license = stdenv.lib.licenses.mit;
     }) {};
  "control-bool" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "control-bool";
       version = "0.2.1";
       sha256 = "10amxm1ff7xhd8g66n65wkbb8d17n77v1nmwxkbzhrask398asp4";
       libraryHaskellDepends = [ base ];
       homepage = "https://github.com/fumieval/control-bool";
       description = "Useful combinators for boolean expressions";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "control-dsl" = callPackage
    ({ mkDerivation, base, containers, doctest, doctest-discover
     , temporary
     }:
     mkDerivation {
       pname = "control-dsl";
       version = "0.2.1.3";
       sha256 = "0rv9wpjnr3y957vd6l8vmn87f9gi97nhk07bkgpr8083avi9biz8";
       revision = "2";
       editedCabalFile = "18jypzsawq0mp12i35f58px80i3k07ri0g07wcrh6af93vqkhvil";
       libraryHaskellDepends = [ base ];
       testHaskellDepends = [
         base containers doctest doctest-discover temporary
       ];
       doCheck = false;
       homepage = "https://github.com/Atry/Control.Dsl#readme";
       description = "An alternative to monads in do-notation";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "control-monad-free" = callPackage
    ({ mkDerivation, base, transformers }:
     mkDerivation {
       pname = "control-monad-free";
       version = "0.6.2";
       sha256 = "1habgf7byffqf1rqjkzpihvdhclaafgqsqpfpwp3fgpj5ayk1j33";
       libraryHaskellDepends = [ base transformers ];
       homepage = "http://github.com/pepeiborra/control-monad-free";
       description = "Free monads and monad transformers";
       license = stdenv.lib.licenses.publicDomain;
     }) {};
  "control-monad-omega" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "control-monad-omega";
       version = "0.3.1";
       sha256 = "11hirysr76i01qj8rm22xjcrv2qwxgwjlrqqyd1dsnnvypn9hfrq";
       libraryHaskellDepends = [ base ];
       homepage = "http://github.com/luqui/control-monad-omega";
       description = "A breadth-first list monad";
       license = stdenv.lib.licenses.publicDomain;
     }) {};
  "convertible" = callPackage
    ({ mkDerivation, base, bytestring, containers, mtl, old-locale
     , old-time, text, time
     }:
     mkDerivation {
       pname = "convertible";
       version = "1.1.1.0";
       sha256 = "0v18ap1mccnndgxmbfgyjdicg8jlss01bd5fq8a576dr0h4sgyg9";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         base bytestring containers mtl old-locale old-time text time
       ];
       homepage = "http://hackage.haskell.org/package/convertible";
       description = "Typeclasses and instances for converting between types";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "cookie" = callPackage
    ({ mkDerivation, base, bytestring, data-default-class, deepseq
     , HUnit, QuickCheck, tasty, tasty-hunit, tasty-quickcheck, text
     , time
     }:
     mkDerivation {
       pname = "cookie";
       version = "0.4.4";
       sha256 = "1qy09i0jh2z9i9avy2khf8a8afq4fqgnv0fyrszgfg4kmq2fsi9j";
       libraryHaskellDepends = [
         base bytestring data-default-class deepseq text time
       ];
       testHaskellDepends = [
         base bytestring HUnit QuickCheck tasty tasty-hunit tasty-quickcheck
         text time
       ];
       homepage = "http://github.com/snoyberg/cookie";
       description = "HTTP cookie parsing and rendering";
       license = stdenv.lib.licenses.mit;
     }) {};
  "countable" = callPackage
    ({ mkDerivation, base, bytestring, silently, tasty, tasty-golden
     , tasty-hunit
     }:
     mkDerivation {
       pname = "countable";
       version = "1.0";
       sha256 = "0v0fdapdnzdqbkjhgkicx1njs3ybshk83h79fbgln13sd5pyp87r";
       libraryHaskellDepends = [ base ];
       testHaskellDepends = [
         base bytestring silently tasty tasty-golden tasty-hunit
       ];
       homepage = "https://github.com/AshleyYakeley/countable";
       description = "Countable, Searchable, Finite, Empty classes";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "country" = callPackage
    ({ mkDerivation, aeson, attoparsec, base, bytestring, deepseq
     , ghc-prim, hashable, primitive, scientific, text
     , unordered-containers
     }:
     mkDerivation {
       pname = "country";
       version = "0.1.6";
       sha256 = "0a4r2jnp15xy18s6xpd4p10cgq3hd8qqzhy5lakmzymivwq6xcq9";
       revision = "1";
       editedCabalFile = "04a2s0zlm4garihnm3xl9avf88vjnbvpsyb2ckk3z7ydjq0y3938";
       libraryHaskellDepends = [
         aeson attoparsec base bytestring deepseq ghc-prim hashable
         primitive scientific text unordered-containers
       ];
       testHaskellDepends = [ base ];
       homepage = "https://github.com/andrewthad/country#readme";
       description = "Country data type and functions";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "courier" = callPackage
    ({ mkDerivation, async, base, bytestring, cereal, containers
     , directory, hslogger, HUnit, network, stm, test-framework
     , test-framework-hunit, text, uuid
     }:
     mkDerivation {
       pname = "courier";
       version = "0.1.1.5";
       sha256 = "1lrlqdxd19yj05hhvla1nc4a81rqkf2r4a6sffqlgqrxyd7ng7mc";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         async base bytestring cereal containers hslogger network stm text
         uuid
       ];
       executableHaskellDepends = [ base cereal ];
       testHaskellDepends = [
         async base cereal containers directory hslogger HUnit network stm
         test-framework test-framework-hunit
       ];
       doCheck = false;
       homepage = "http://github.com/hargettp/courier";
       description = "A message-passing library for simplifying network applications";
       license = stdenv.lib.licenses.mit;
     }) {};
  "cpio-conduit" = callPackage
    ({ mkDerivation, base, base16-bytestring, binary, bytestring
     , conduit, conduit-extra
     }:
     mkDerivation {
       pname = "cpio-conduit";
       version = "0.7.0";
       sha256 = "04zma03ivg9x5f1xkdpc828fk2lh6qrn7cig7gprci13id9yf2wg";
       libraryHaskellDepends = [
         base base16-bytestring binary bytestring conduit conduit-extra
       ];
       doCheck = false;
       homepage = "http://github.com/da-x/cpio-conduit";
       description = "Conduit-based CPIO";
       license = stdenv.lib.licenses.asl20;
     }) {};
  "cpphs" = callPackage
    ({ mkDerivation, base, directory, old-locale, old-time, polyparse
     }:
     mkDerivation {
       pname = "cpphs";
       version = "1.20.8";
       sha256 = "1bh524asqhk9v1s0wvipl0hgn7l63iy3js867yv0z3h5v2kn8vg5";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         base directory old-locale old-time polyparse
       ];
       executableHaskellDepends = [
         base directory old-locale old-time polyparse
       ];
       homepage = "http://projects.haskell.org/cpphs/";
       description = "A liberalised re-implementation of cpp, the C pre-processor";
       license = "LGPL";
     }) {};
  "cprng-aes" = callPackage
    ({ mkDerivation, base, byteable, bytestring, cipher-aes, criterion
     , crypto-random, mtl
     }:
     mkDerivation {
       pname = "cprng-aes";
       version = "0.6.1";
       sha256 = "1wr15kbmk1g3l8a75n0iwbzqg24ixv78slwzwb2q6rlcvq0jlnb4";
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [
         base byteable bytestring cipher-aes crypto-random
       ];
       benchmarkHaskellDepends = [
         base bytestring criterion crypto-random mtl
       ];
       homepage = "http://github.com/vincenthz/hs-cprng-aes";
       description = "Crypto Pseudo Random Number Generator using AES in counter mode";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "cpu" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "cpu";
       version = "0.1.2";
       sha256 = "0x19mlanmkg96h6h1i04w2i631z84y4rbk22ki4zhgsajysgw9sn";
       isLibrary = true;
       isExecutable = true;
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [ base ];
       homepage = "http://github.com/vincenthz/hs-cpu";
       description = "Cpu information and properties helpers";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "cpuinfo" = callPackage
    ({ mkDerivation, attoparsec, base, bytestring, deepseq }:
     mkDerivation {
       pname = "cpuinfo";
       version = "0.1.0.1";
       sha256 = "0mans1i26w3rl1vvf9isn8y6lvmn9dlf2c0znbgjxj605jcy7cyi";
       libraryHaskellDepends = [ attoparsec base bytestring deepseq ];
       homepage = "https://github.com/TravisWhitaker/cpuinfo";
       description = "Haskell Library for Checking CPU Information";
       license = stdenv.lib.licenses.mit;
     }) {};
  "cql" = callPackage
    ({ mkDerivation, base, bytestring, cereal, containers, Decimal
     , iproute, network, QuickCheck, tasty, tasty-quickcheck
     , template-haskell, text, time, transformers, uuid, vector
     }:
     mkDerivation {
       pname = "cql";
       version = "4.0.1";
       sha256 = "021qaz6qvbdp76gdyfcs07wnnq6k6r1cmqky0g3giinjdrm4qac9";
       libraryHaskellDepends = [
         base bytestring cereal containers Decimal iproute network
         template-haskell text time transformers uuid vector
       ];
       testHaskellDepends = [
         base bytestring cereal Decimal iproute network QuickCheck tasty
         tasty-quickcheck text time uuid
       ];
       homepage = "https://gitlab.com/twittner/cql/";
       description = "Cassandra CQL binary protocol";
       license = "unknown";
       hydraPlatforms = stdenv.lib.platforms.none;
     }) {};
  "cql-io" = callPackage
    ({ mkDerivation, async, auto-update, base, bytestring, containers
     , cql, cryptohash, data-default-class, Decimal, exceptions
     , hashable, HsOpenSSL, iproute, lens, monad-control, mtl
     , mwc-random, network, raw-strings-qq, retry, semigroups, stm
     , tasty, tasty-hunit, text, time, tinylog, transformers
     , transformers-base, unordered-containers, uuid, vector
     }:
     mkDerivation {
       pname = "cql-io";
       version = "1.0.1.1";
       sha256 = "1kdv00fv21s8vbb3dfgzlgsrr0xxl4p2h655ga3q5cg47by564xc";
       libraryHaskellDepends = [
         async auto-update base bytestring containers cql cryptohash
         data-default-class exceptions hashable HsOpenSSL iproute lens
         monad-control mtl mwc-random network retry semigroups stm text time
         tinylog transformers transformers-base unordered-containers uuid
         vector
       ];
       testHaskellDepends = [
         base containers cql Decimal iproute mtl raw-strings-qq tasty
         tasty-hunit text time tinylog uuid
       ];
       doCheck = false;
       homepage = "https://gitlab.com/twittner/cql-io/";
       description = "Cassandra CQL client";
       license = stdenv.lib.licenses.mpl20;
     }) {};
  "crackNum" = callPackage
    ({ mkDerivation, array, base, FloatingHex }:
     mkDerivation {
       pname = "crackNum";
       version = "2.3";
       sha256 = "1wrqq2g6hvqa8w0c4nad35d1favcjqi93ywnxqkc3i7pl37jb3s2";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [ array base FloatingHex ];
       executableHaskellDepends = [ array base FloatingHex ];
       homepage = "http://github.com/LeventErkok/CrackNum";
       description = "Crack various integer, floating-point data formats";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "credential-store" = callPackage
    ({ mkDerivation, base, bytestring, containers, cryptonite, dbus
     , memory, safe-exceptions, tasty, tasty-hunit
     }:
     mkDerivation {
       pname = "credential-store";
       version = "0.1.2";
       sha256 = "114jdbpiyx8xnjxnpz05nqpnb5s29y1iv330b0i491vik8hvrbad";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         base bytestring containers cryptonite dbus memory safe-exceptions
       ];
       executableHaskellDepends = [ base bytestring ];
       testHaskellDepends = [ base bytestring tasty tasty-hunit ];
       doCheck = false;
       homepage = "https://github.com/rblaze/credential-store#readme";
       description = "Library to access secure credential storage providers";
       license = stdenv.lib.licenses.asl20;
     }) {};
  "criterion" = callPackage
    ({ mkDerivation, aeson, ansi-wl-pprint, base, base-compat
     , base-compat-batteries, binary, bytestring, cassava, code-page
     , containers, deepseq, directory, exceptions, filepath, Glob, HUnit
     , js-flot, js-jquery, microstache, mtl, mwc-random
     , optparse-applicative, parsec, QuickCheck, semigroups, statistics
     , tasty, tasty-hunit, tasty-quickcheck, text, time, transformers
     , transformers-compat, vector, vector-algorithms
     }:
     mkDerivation {
       pname = "criterion";
       version = "1.4.1.0";
       sha256 = "0v429araqkcw3wwwi6fsp0g7g1hy3l47p061lcy7r4m7d9khd4y4";
       revision = "1";
       editedCabalFile = "0jg7mk9y9br5aqi29vrrrq28mnyknyg96zmr8rrlxw0rf68l892a";
       isLibrary = true;
       isExecutable = true;
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [
         aeson ansi-wl-pprint base base-compat-batteries binary bytestring
         cassava code-page containers deepseq directory exceptions filepath
         Glob js-flot js-jquery microstache mtl mwc-random
         optparse-applicative parsec semigroups statistics text time
         transformers transformers-compat vector vector-algorithms
       ];
       executableHaskellDepends = [
         base base-compat-batteries optparse-applicative semigroups
       ];
       testHaskellDepends = [
         aeson base base-compat base-compat-batteries bytestring deepseq
         directory HUnit QuickCheck statistics tasty tasty-hunit
         tasty-quickcheck vector
       ];
       homepage = "http://www.serpentine.com/criterion";
       description = "Robust, reliable performance measurement and analysis";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "criterion-measurement" = callPackage
    ({ mkDerivation, aeson, base, base-compat, binary, containers
     , deepseq, vector
     }:
     mkDerivation {
       pname = "criterion-measurement";
       version = "0.1.1.0";
       sha256 = "0mmbhajphlg32gqxr1lf0w12jkw0qrpjabvx92zpv4ka71lpgy7m";
       libraryHaskellDepends = [
         aeson base base-compat binary containers deepseq vector
       ];
       homepage = "https://github.com/bos/criterion";
       description = "Criterion measurement functionality and associated types";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "cron" = callPackage
    ({ mkDerivation, attoparsec, base, criterion, data-default-class
     , generics-sop, mtl, mtl-compat, old-locale, quickcheck-instances
     , semigroups, tasty, tasty-hunit, tasty-quickcheck, text, time
     , transformers-compat
     }:
     mkDerivation {
       pname = "cron";
       version = "0.6.1";
       sha256 = "0l9jigxr271gyf8a69igag5rckvcngv6h93jkf02d43jvqxza6lc";
       libraryHaskellDepends = [
         attoparsec base data-default-class mtl mtl-compat old-locale
         semigroups text time
       ];
       testHaskellDepends = [
         attoparsec base generics-sop quickcheck-instances semigroups tasty
         tasty-hunit tasty-quickcheck text time transformers-compat
       ];
       benchmarkHaskellDepends = [ attoparsec base criterion text time ];
       homepage = "http://github.com/michaelxavier/cron";
       description = "Cron datatypes and Attoparsec parser";
       license = stdenv.lib.licenses.mit;
     }) {};
  "crypt-sha512" = callPackage
    ({ mkDerivation, attoparsec, base, bytestring, cryptohash-sha512
     , quickcheck-instances, tasty, tasty-hunit, tasty-quickcheck
     }:
     mkDerivation {
       pname = "crypt-sha512";
       version = "0";
       sha256 = "1wsma9frdrn39i506zydlzlk1ir6jh1pidqfjms8rwqjpx965gn2";
       revision = "2";
       editedCabalFile = "071lxiwsf23ga1fkbjd47ykz7f5irhsh7q7zz2qczzjgnvzadadh";
       libraryHaskellDepends = [
         attoparsec base bytestring cryptohash-sha512
       ];
       testHaskellDepends = [
         base bytestring quickcheck-instances tasty tasty-hunit
         tasty-quickcheck
       ];
       homepage = "https://github.com/phadej/crypt-sha512";
       description = "Pure Haskell implelementation for GNU SHA512 crypt algorithm";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "crypto-api" = callPackage
    ({ mkDerivation, base, bytestring, cereal, entropy, tagged
     , transformers
     }:
     mkDerivation {
       pname = "crypto-api";
       version = "0.13.3";
       sha256 = "19bsmkqkpnvh01b77pmyarx00fic15j4hvg4pzscrj4prskrx2i9";
       revision = "1";
       editedCabalFile = "1z6n1sa5pn3iqvqjrd8hv4bc2pxzsrhm5sh0l8z7g9lbqp6w0wp5";
       libraryHaskellDepends = [
         base bytestring cereal entropy tagged transformers
       ];
       homepage = "https://github.com/TomMD/crypto-api";
       description = "A generic interface for cryptographic operations";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "crypto-api-tests" = callPackage
    ({ mkDerivation, base, bytestring, cereal, crypto-api, directory
     , filepath, HUnit, QuickCheck, test-framework, test-framework-hunit
     , test-framework-quickcheck2
     }:
     mkDerivation {
       pname = "crypto-api-tests";
       version = "0.3";
       sha256 = "0w3j43jdrlj28jryp18hc6q84nkl2yf4vs1hhgrsk7gb9kfyqjpl";
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [
         base bytestring cereal crypto-api directory filepath HUnit
         QuickCheck test-framework test-framework-hunit
         test-framework-quickcheck2
       ];
       homepage = "http://trac.haskell.org/crypto-api/wiki";
       description = "A test framework and KATs for cryptographic operations";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "crypto-cipher-tests" = callPackage
    ({ mkDerivation, base, byteable, bytestring, crypto-cipher-types
     , HUnit, mtl, QuickCheck, securemem, test-framework
     , test-framework-hunit, test-framework-quickcheck2
     }:
     mkDerivation {
       pname = "crypto-cipher-tests";
       version = "0.0.11";
       sha256 = "19wqignlq90qwpam01hnmmrxaxh5lkax9l1l6rlbi4a07nvp1dnz";
       libraryHaskellDepends = [
         base byteable bytestring crypto-cipher-types HUnit mtl QuickCheck
         securemem test-framework test-framework-hunit
         test-framework-quickcheck2
       ];
       testHaskellDepends = [
         base byteable bytestring crypto-cipher-types HUnit mtl QuickCheck
         test-framework test-framework-hunit test-framework-quickcheck2
       ];
       homepage = "http://github.com/vincenthz/hs-crypto-cipher";
       description = "Generic cryptography cipher tests";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "crypto-cipher-types" = callPackage
    ({ mkDerivation, base, byteable, bytestring, securemem }:
     mkDerivation {
       pname = "crypto-cipher-types";
       version = "0.0.9";
       sha256 = "03qa1i1kj07pfrxsi7fiaqnnd0vi94jd4jfswbmnm4gp1nvzcwr0";
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [ base byteable bytestring securemem ];
       homepage = "http://github.com/vincenthz/hs-crypto-cipher";
       description = "Generic cryptography cipher types";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "crypto-enigma" = callPackage
    ({ mkDerivation, ansi-terminal, base, containers, HUnit, mtl
     , optparse-applicative, QuickCheck, split, text
     }:
     mkDerivation {
       pname = "crypto-enigma";
       version = "0.0.3.1";
       sha256 = "0iadzyp44ylzwq65jqvln1cmlnsvpwvy0cvpn8xfdqd1x0qil8i2";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [ base containers mtl split text ];
       executableHaskellDepends = [
         ansi-terminal base containers mtl optparse-applicative split text
       ];
       testHaskellDepends = [ base HUnit QuickCheck ];
       homepage = "https://github.com/orome/crypto-enigma-hs";
       description = "An Enigma machine simulator with display";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "crypto-numbers" = callPackage
    ({ mkDerivation, base, byteable, bytestring, criterion
     , crypto-random, ghc-prim, integer-gmp, mtl, tasty, tasty-hunit
     , tasty-quickcheck, vector
     }:
     mkDerivation {
       pname = "crypto-numbers";
       version = "0.2.7";
       sha256 = "19l9y5jzvqrqfam13xin9m9ca0s5ql86yv0cjn6dzkydx4byn2j2";
       revision = "1";
       editedCabalFile = "1jjkhid8kwrz5894nad537rqxzzyx6b687bmgyk70nv0ny336j9b";
       libraryHaskellDepends = [
         base bytestring crypto-random ghc-prim integer-gmp vector
       ];
       testHaskellDepends = [
         base byteable bytestring crypto-random tasty tasty-hunit
         tasty-quickcheck vector
       ];
       benchmarkHaskellDepends = [ base bytestring criterion mtl ];
       doCheck = false;
       homepage = "https://github.com/vincenthz/hs-crypto-numbers";
       description = "Cryptographic numbers: functions and algorithms";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "crypto-pubkey" = callPackage
    ({ mkDerivation, base, byteable, bytestring, criterion
     , crypto-numbers, crypto-pubkey-types, crypto-random, cryptohash
     , deepseq, mtl, tasty, tasty-hunit, tasty-kat, tasty-quickcheck
     }:
     mkDerivation {
       pname = "crypto-pubkey";
       version = "0.2.8";
       sha256 = "0vmmx2fqq2xc3xfavy22i2nyynpk88jhmjr62qgxw5w5qgsz5k60";
       libraryHaskellDepends = [
         base byteable bytestring crypto-numbers crypto-pubkey-types
         crypto-random cryptohash
       ];
       testHaskellDepends = [
         base byteable bytestring crypto-numbers crypto-pubkey-types
         crypto-random cryptohash tasty tasty-hunit tasty-kat
         tasty-quickcheck
       ];
       benchmarkHaskellDepends = [
         base bytestring criterion crypto-pubkey-types crypto-random
         cryptohash deepseq mtl
       ];
       doCheck = false;
       homepage = "https://github.com/vincenthz/hs-crypto-pubkey";
       description = "Public Key cryptography";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "crypto-pubkey-types" = callPackage
    ({ mkDerivation, asn1-encoding, asn1-types, base }:
     mkDerivation {
       pname = "crypto-pubkey-types";
       version = "0.4.3";
       sha256 = "0q0wlzjmpx536h1zcdzrpxjkvqw8abj8z0ci38138kpch4igbnby";
       libraryHaskellDepends = [ asn1-encoding asn1-types base ];
       homepage = "http://github.com/vincenthz/hs-crypto-pubkey-types";
       description = "Generic cryptography Public keys algorithm types";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "crypto-random" = callPackage
    ({ mkDerivation, base, bytestring, securemem, unix, vector }:
     mkDerivation {
       pname = "crypto-random";
       version = "0.0.9";
       sha256 = "0139kbbb2h7vshf68y3fvjda29lhj7jjwl4vq78w4y8k8hc7l2hp";
       revision = "1";
       editedCabalFile = "1ax1iafbbqkcrvjnnxlvqh2zgpx8xzcbxl6l870207bpzwrja2f1";
       libraryHaskellDepends = [ base bytestring securemem unix vector ];
       homepage = "http://github.com/vincenthz/hs-crypto-random";
       description = "Simple cryptographic random related types";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "crypto-random-api" = callPackage
    ({ mkDerivation, base, bytestring, entropy }:
     mkDerivation {
       pname = "crypto-random-api";
       version = "0.2.0";
       sha256 = "0z49kwgjj7rz235642q64hbkgp0zl6ipn29xd19yb75xc5q7gsan";
       libraryHaskellDepends = [ base bytestring entropy ];
       homepage = "http://github.com/vincenthz/hs-crypto-random-api";
       description = "Simple random generators API for cryptography related code";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "cryptocipher" = callPackage
    ({ mkDerivation, base, cipher-aes, cipher-blowfish, cipher-camellia
     , cipher-des, cipher-rc4, crypto-cipher-types
     }:
     mkDerivation {
       pname = "cryptocipher";
       version = "0.6.2";
       sha256 = "0ip3a2as0df6drl29sryayxx22sx55v6bs60s2fh3i1nxqnydf9l";
       libraryHaskellDepends = [
         base cipher-aes cipher-blowfish cipher-camellia cipher-des
         cipher-rc4 crypto-cipher-types
       ];
       homepage = "http://github.com/vincenthz/hs-crypto-cipher";
       description = "Symmetrical block and stream ciphers";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "cryptocompare" = callPackage
    ({ mkDerivation, aeson, base, bytestring, containers, directory
     , exceptions, hspec, hspec-expectations, http-conduit, MissingH
     , text, time, transformers, unordered-containers
     }:
     mkDerivation {
       pname = "cryptocompare";
       version = "0.1.1";
       sha256 = "1cqnhg1ww79k3f6yisdir1fqiil13niv002p5s2kir9ks5phybni";
       libraryHaskellDepends = [
         aeson base bytestring containers directory exceptions http-conduit
         MissingH text time transformers unordered-containers
       ];
       testHaskellDepends = [ base hspec hspec-expectations MissingH ];
       homepage = "https://github.com/aviaviavi/cryptocompare";
       description = "Haskell wrapper for the cryptocompare API";
       license = stdenv.lib.licenses.mit;
     }) {};
  "cryptohash" = callPackage
    ({ mkDerivation, base, byteable, bytestring, criterion, cryptonite
     , ghc-prim, HUnit, memory, QuickCheck, tasty, tasty-hunit
     , tasty-quickcheck
     }:
     mkDerivation {
       pname = "cryptohash";
       version = "0.11.9";
       sha256 = "1yr2iyb779znj79j3fq4ky8l1y8a600a2x1fx9p5pmpwq5zq93y2";
       libraryHaskellDepends = [
         base byteable bytestring cryptonite ghc-prim memory
       ];
       testHaskellDepends = [
         base byteable bytestring HUnit QuickCheck tasty tasty-hunit
         tasty-quickcheck
       ];
       benchmarkHaskellDepends = [ base byteable bytestring criterion ];
       homepage = "http://github.com/vincenthz/hs-cryptohash";
       description = "collection of crypto hashes, fast, pure and practical";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "cryptohash-cryptoapi" = callPackage
    ({ mkDerivation, base, bytestring, cereal, crypto-api, cryptonite
     , memory, tagged
     }:
     mkDerivation {
       pname = "cryptohash-cryptoapi";
       version = "0.1.4";
       sha256 = "13h5f9pmcd0swa4asl7wzpf5lskpgjdqrmy1mqdc78gsxdj8cyki";
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [
         base bytestring cereal crypto-api cryptonite memory tagged
       ];
       homepage = "https://github.com/vincenthz/hs-cryptohash-cryptoapi";
       description = "Crypto-api interfaces for cryptohash";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "cryptohash-md5" = callPackage
    ({ mkDerivation, base, bytestring }:
     mkDerivation {
       pname = "cryptohash-md5";
       version = "0.11.100.1";
       sha256 = "1y8q7s2bn4gdknw1wjikdnar2b5pgz3nv3220lxrlgpsf23x82vi";
       revision = "3";
       editedCabalFile = "0ld224mdmw9mgzcl20q82rqkyl7d5vmi1iknsyymq58gcvcwdi2m";
       libraryHaskellDepends = [ base bytestring ];
       doCheck = false;
       homepage = "https://github.com/hvr/cryptohash-md5";
       description = "Fast, pure and practical MD5 implementation";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "cryptohash-sha1" = callPackage
    ({ mkDerivation, base, bytestring }:
     mkDerivation {
       pname = "cryptohash-sha1";
       version = "0.11.100.1";
       sha256 = "1aqdxdhxhl9jldh951djpwxx8z7gzaqspxl7iwpl84i5ahrsyy9w";
       revision = "3";
       editedCabalFile = "0i30cc85732v27baibdjy2kjjkdfv335ib5sk5ggwvsysvvvr66l";
       libraryHaskellDepends = [ base bytestring ];
       doCheck = false;
       homepage = "https://github.com/hvr/cryptohash-sha1";
       description = "Fast, pure and practical SHA-1 implementation";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "cryptohash-sha256" = callPackage
    ({ mkDerivation, base, bytestring }:
     mkDerivation {
       pname = "cryptohash-sha256";
       version = "0.11.101.0";
       sha256 = "1p85vajcgw9hmq8zsz9krzx0vxh7aggwbg5w9ws8w97avcsn8xaj";
       revision = "2";
       editedCabalFile = "0m5h68xm60wrjv88gg6cn1q5qki5674mxl4d6sn3vxpbcj9b5417";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [ base bytestring ];
       doCheck = false;
       homepage = "https://github.com/hvr/cryptohash-sha256";
       description = "Fast, pure and practical SHA-256 implementation";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "cryptohash-sha512" = callPackage
    ({ mkDerivation, base, bytestring }:
     mkDerivation {
       pname = "cryptohash-sha512";
       version = "0.11.100.1";
       sha256 = "1abi23dr3vzslkh0cx24cdn2gy88jjm4qr6rcm543ajyaywqns8h";
       revision = "3";
       editedCabalFile = "19m1fp0i7ba84aa72d5wf59c7j0p4yr1bc43in8pspgywhsr3lfl";
       libraryHaskellDepends = [ base bytestring ];
       doCheck = false;
       homepage = "https://github.com/hvr/cryptohash-sha512";
       description = "Fast, pure and practical SHA-512 implementation";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "cryptonite" = callPackage
    ({ mkDerivation, base, basement, bytestring, deepseq, gauge
     , ghc-prim, integer-gmp, memory, random, tasty, tasty-hunit
     , tasty-kat, tasty-quickcheck
     }:
     mkDerivation {
       pname = "cryptonite";
       version = "0.25";
       sha256 = "131wbbdr5yavs5k1ah9sz6fqx1ffyvaxf66pwjzsfc47mwc1mgl9";
       libraryHaskellDepends = [
         base basement bytestring deepseq ghc-prim integer-gmp memory
       ];
       testHaskellDepends = [
         base bytestring memory tasty tasty-hunit tasty-kat tasty-quickcheck
       ];
       benchmarkHaskellDepends = [
         base bytestring deepseq gauge memory random
       ];
       homepage = "https://github.com/haskell-crypto/cryptonite";
       description = "Cryptography Primitives sink";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "cryptonite-conduit" = callPackage
    ({ mkDerivation, base, bytestring, conduit, conduit-combinators
     , conduit-extra, cryptonite, exceptions, memory, resourcet, tasty
     , tasty-hunit, tasty-quickcheck, transformers
     }:
     mkDerivation {
       pname = "cryptonite-conduit";
       version = "0.2.2";
       sha256 = "1bldcmda4xh52mw1wfrjljv8crhw3al7v7kv1j0vidvr7ymnjpbh";
       revision = "1";
       editedCabalFile = "1hh2nzfz4qpxgivfilgk4ll416lph8b2fdkzpzrmqfjglivydfmz";
       libraryHaskellDepends = [
         base bytestring conduit conduit-extra cryptonite exceptions memory
         resourcet transformers
       ];
       testHaskellDepends = [
         base bytestring conduit conduit-combinators cryptonite memory tasty
         tasty-hunit tasty-quickcheck
       ];
       homepage = "https://github.com/haskell-crypto/cryptonite-conduit";
       description = "cryptonite conduit";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "cryptonite-openssl" = callPackage
    ({ mkDerivation, base, basement, bytestring, cryptonite, memory
     , openssl, tasty, tasty-hunit, tasty-kat, tasty-quickcheck
     }:
     mkDerivation {
       pname = "cryptonite-openssl";
       version = "0.7";
       sha256 = "1xj41354dx24rfh6i7av7qamvin34z4g6m1hxw1fc9jg4q41qkly";
       libraryHaskellDepends = [
         base basement bytestring cryptonite memory
       ];
       librarySystemDepends = [ openssl ];
       testHaskellDepends = [
         base bytestring cryptonite tasty tasty-hunit tasty-kat
         tasty-quickcheck
       ];
       homepage = "https://github.com/haskell-crypto/cryptonite-openssl";
       description = "Crypto stuff using OpenSSL cryptographic library";
       license = stdenv.lib.licenses.bsd3;
     }) {inherit (pkgs) openssl;};
  "csg" = callPackage
    ({ mkDerivation, attoparsec, base, bytestring, containers
     , criterion, doctest, doctest-driver-gen, gloss, gloss-raster
     , QuickCheck, simple-vec3, strict, system-filepath, tasty
     , tasty-hunit, tasty-quickcheck, transformers, turtle, vector
     }:
     mkDerivation {
       pname = "csg";
       version = "0.1.0.5";
       sha256 = "12zwf2xiqiq4snwqhwvk1k3fl1bzlfbcd2vc2hsnv6v61ci6shq9";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         attoparsec base bytestring containers QuickCheck simple-vec3 strict
         transformers
       ];
       executableHaskellDepends = [
         base gloss gloss-raster QuickCheck simple-vec3 strict
         system-filepath turtle
       ];
       testHaskellDepends = [
         base bytestring doctest doctest-driver-gen simple-vec3 tasty
         tasty-hunit tasty-quickcheck
       ];
       benchmarkHaskellDepends = [
         base criterion simple-vec3 strict vector
       ];
       homepage = "https://github.com/dzhus/csg#readme";
       description = "Analytical CSG (Constructive Solid Geometry) library";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "csp" = callPackage
    ({ mkDerivation, base, containers, mtl, nondeterminism, tasty
     , tasty-hunit
     }:
     mkDerivation {
       pname = "csp";
       version = "1.4.0";
       sha256 = "15ilx5ycvh12c71wza2d25cp4llvncxc9csmmisjcxwny5gpz1q8";
       libraryHaskellDepends = [ base containers mtl nondeterminism ];
       testHaskellDepends = [ base nondeterminism tasty tasty-hunit ];
       description = "Discrete constraint satisfaction problem (CSP) solver";
       license = "LGPL";
     }) {};
  "css-syntax" = callPackage
    ({ mkDerivation, attoparsec, base, bytestring, directory, hspec
     , scientific, text
     }:
     mkDerivation {
       pname = "css-syntax";
       version = "0.0.8";
       sha256 = "1h9h606q9m9sxgwjxx3km9b30l4rmaygd2zfigf38wz45vqfqwa2";
       libraryHaskellDepends = [
         attoparsec base bytestring scientific text
       ];
       testHaskellDepends = [
         attoparsec base bytestring directory hspec scientific text
       ];
       description = "This package implments a parser for the CSS syntax";
       license = stdenv.lib.licenses.mit;
     }) {};
  "css-text" = callPackage
    ({ mkDerivation, attoparsec, base, hspec, QuickCheck, text }:
     mkDerivation {
       pname = "css-text";
       version = "0.1.3.0";
       sha256 = "0ynd9f4hn2sfwqzbsa0y7phmxq8za7jiblpjwx0ry8b372zhgxaz";
       libraryHaskellDepends = [ attoparsec base text ];
       testHaskellDepends = [ attoparsec base hspec QuickCheck text ];
       doCheck = false;
       homepage = "https://github.com/yesodweb/css-text.git#readme";
       description = "CSS parser and renderer";
       license = stdenv.lib.licenses.mit;
     }) {};
  "csv" = callPackage
    ({ mkDerivation, base, filepath, parsec }:
     mkDerivation {
       pname = "csv";
       version = "0.1.2";
       sha256 = "00767ai09wm7f0yzmpqck3cpgxncpr9djnmmz5l17ajz69139x4c";
       libraryHaskellDepends = [ base filepath parsec ];
       description = "CSV loader and dumper";
       license = stdenv.lib.licenses.mit;
     }) {};
  "ctrie" = callPackage
    ({ mkDerivation, async, atomic-primops, base, containers, criterion
     , deepseq, hashable, primitive, QuickCheck, random, random-shuffle
     , stm, test-framework, test-framework-quickcheck2, transformers
     , unordered-containers
     }:
     mkDerivation {
       pname = "ctrie";
       version = "0.2";
       sha256 = "0568v5m5k8dyqx5sfcr13mh1qay13m1wbcjszxiidvb5kz9sdqr0";
       libraryHaskellDepends = [ atomic-primops base hashable primitive ];
       testHaskellDepends = [
         base containers hashable QuickCheck test-framework
         test-framework-quickcheck2
       ];
       benchmarkHaskellDepends = [
         async base containers criterion deepseq hashable random
         random-shuffle stm transformers unordered-containers
       ];
       homepage = "https://github.com/mcschroeder/ctrie";
       description = "Non-blocking concurrent map";
       license = stdenv.lib.licenses.mit;
     }) {};
  "cubicbezier" = callPackage
    ({ mkDerivation, base, containers, fast-math, integration, matrices
     , microlens, microlens-mtl, microlens-th, mtl, parsec, tasty
     , tasty-hunit, vector, vector-space
     }:
     mkDerivation {
       pname = "cubicbezier";
       version = "0.6.0.5";
       sha256 = "0n17nr20skrds3b9gzy0v86jgnqz8zbds796n9cl0z6rh9bq5jf5";
       libraryHaskellDepends = [
         base containers fast-math integration matrices microlens
         microlens-mtl microlens-th mtl vector vector-space
       ];
       testHaskellDepends = [ base parsec tasty tasty-hunit ];
       doHaddock = false;
       doCheck = false;
       description = "Efficient manipulating of 2D cubic bezier curves";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "cubicspline" = callPackage
    ({ mkDerivation, base, hmatrix, safe }:
     mkDerivation {
       pname = "cubicspline";
       version = "0.1.2";
       sha256 = "0ycv395qskjw8xryzam6skc92m4iixf6065grvfh23avlsffsv2v";
       libraryHaskellDepends = [ base hmatrix safe ];
       description = "Natural cubic spline interpolation";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "cue-sheet" = callPackage
    ({ mkDerivation, base, bytestring, containers, data-default-class
     , exceptions, hspec, hspec-megaparsec, megaparsec, mtl, QuickCheck
     , text
     }:
     mkDerivation {
       pname = "cue-sheet";
       version = "1.0.1";
       sha256 = "13vzay3i385k8i2k56bl9rr9sy7mnhas4b35xc8q7744gbl5hji1";
       revision = "3";
       editedCabalFile = "14kgk1digf1vbsr7v5jvj8gajkx0rkn3zjl4m8csqhxalkaxa2zl";
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [
         base bytestring containers data-default-class exceptions megaparsec
         mtl QuickCheck text
       ];
       testHaskellDepends = [
         base bytestring exceptions hspec hspec-megaparsec megaparsec
         QuickCheck text
       ];
       homepage = "https://github.com/mrkkrp/cue-sheet";
       description = "Support for construction, rendering, and parsing of CUE sheets";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "curl" = callPackage
    ({ mkDerivation, base, bytestring, containers, curl }:
     mkDerivation {
       pname = "curl";
       version = "1.3.8";
       sha256 = "0vj4hpaa30jz7c702xpsfvqaqdxz28zslsqnsfx6bf6dpwvck1wh";
       revision = "1";
       editedCabalFile = "02sq2bjw5igc2k9f9ssh58k2ivii2xsvk5r00ky3cxh8j61qy86q";
       configureFlags = [ "-fnew-base" ];
       libraryHaskellDepends = [ base bytestring containers ];
       librarySystemDepends = [ curl ];
       description = "Haskell binding to libcurl";
       license = stdenv.lib.licenses.bsd3;
     }) {inherit (pkgs) curl;};
  "curl-runnings" = callPackage
    ({ mkDerivation, aeson, aeson-pretty, base, bytestring
     , case-insensitive, cmdargs, directory, hspec, hspec-expectations
     , http-conduit, http-types, megaparsec, text, unordered-containers
     , vector, yaml
     }:
     mkDerivation {
       pname = "curl-runnings";
       version = "0.6.0";
       sha256 = "06dcxwhmzsinmay63m9wnsjsy1cgwyms64c0jicndnc3nhbl0824";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         aeson aeson-pretty base bytestring case-insensitive directory hspec
         hspec-expectations http-conduit http-types megaparsec text
         unordered-containers vector yaml
       ];
       executableHaskellDepends = [ base cmdargs text ];
       testHaskellDepends = [ base directory hspec hspec-expectations ];
       homepage = "https://github.com/aviaviavi/curl-runnings#readme";
       description = "A framework for declaratively writing curl based API tests";
       license = stdenv.lib.licenses.mit;
     }) {};
  "currencies" = callPackage
    ({ mkDerivation, base, hspec, text }:
     mkDerivation {
       pname = "currencies";
       version = "0.2.0.0";
       sha256 = "16c4m6px6kvdr8v2k5gspjn3xag69ki6yf6ij2b3ii5rlpa94wpv";
       libraryHaskellDepends = [ base text ];
       testHaskellDepends = [ base hspec text ];
       homepage = "https://github.com/alx741/currencies#readme";
       description = "Currencies representation, pretty printing and conversion";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "currency" = callPackage
    ({ mkDerivation, base, containers, hashable, iso3166-country-codes
     }:
     mkDerivation {
       pname = "currency";
       version = "0.2.0.0";
       sha256 = "0yj1x7zmkmwr9az55i9gvf84m7i3b4qi80p8qk9hszzlv7rigmdw";
       libraryHaskellDepends = [
         base containers hashable iso3166-country-codes
       ];
       homepage = "https://github.com/singpolyma/currency-haskell";
       description = "Types representing standard and non-standard currencies";
       license = "unknown";
       hydraPlatforms = stdenv.lib.platforms.none;
     }) {};
  "cutter" = callPackage
    ({ mkDerivation, base, bytestring, explicit-exception, spreadsheet
     , utility-ht
     }:
     mkDerivation {
       pname = "cutter";
       version = "0.0";
       sha256 = "1hka1k012d2nwnkbhbiga6307v1p5s88s2nxkrnymvr0db1ijwqi";
       isLibrary = false;
       isExecutable = true;
       executableHaskellDepends = [
         base bytestring explicit-exception spreadsheet utility-ht
       ];
       doHaddock = false;
       description = "Cut files according to a position list";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "cyclotomic" = callPackage
    ({ mkDerivation, arithmoi, base, containers, HUnit, QuickCheck
     , test-framework, test-framework-hunit, test-framework-quickcheck2
     , test-framework-smallcheck
     }:
     mkDerivation {
       pname = "cyclotomic";
       version = "0.5.1";
       sha256 = "1zazdzsiv42p244f0js2fj81l6wkv0s46rfcl9hyabzcq6x9h87p";
       libraryHaskellDepends = [ arithmoi base containers ];
       testHaskellDepends = [
         base HUnit QuickCheck test-framework test-framework-hunit
         test-framework-quickcheck2 test-framework-smallcheck
       ];
       description = "A subfield of the complex numbers for exact calculation";
       license = stdenv.lib.licenses.gpl3;
     }) {};
  "czipwith" = callPackage
    ({ mkDerivation, base, template-haskell, transformers }:
     mkDerivation {
       pname = "czipwith";
       version = "1.0.1.1";
       sha256 = "0hs296mwx62alp9fkpkhw9jsjqlygagvb911nx22b0pgyiwqa52a";
       libraryHaskellDepends = [ base template-haskell ];
       testHaskellDepends = [ base transformers ];
       homepage = "https://github.com/lspitzner/czipwith/";
       description = "CZipWith class and deriving via TH";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "darcs" = callPackage
    ({ mkDerivation, array, async, attoparsec, base, base16-bytestring
     , binary, bytestring, Cabal, cmdargs, containers, cryptohash, curl
     , data-ordlist, directory, fgl, filepath, FindBin, graphviz
     , hashable, haskeline, html, HTTP, HUnit, mmap, mtl, network
     , network-uri, old-time, parsec, process, QuickCheck, random
     , regex-applicative, regex-compat-tdfa, sandi, shelly, split, stm
     , tar, terminfo, test-framework, test-framework-hunit
     , test-framework-quickcheck2, text, time, transformers, unix
     , unix-compat, utf8-string, vector, zip-archive, zlib
     }:
     mkDerivation {
       pname = "darcs";
       version = "2.14.1";
       sha256 = "0dfd6bp2wy0aabxx7l93gi3dmq21j970cds424xdy1mgmjcvrpb1";
       configureFlags = [ "-fforce-char8-encoding" "-flibrary" ];
       isLibrary = true;
       isExecutable = true;
       setupHaskellDepends = [ base Cabal directory filepath process ];
       libraryHaskellDepends = [
         array async attoparsec base base16-bytestring binary bytestring
         containers cryptohash data-ordlist directory fgl filepath graphviz
         hashable haskeline html HTTP mmap mtl network network-uri old-time
         parsec process random regex-applicative regex-compat-tdfa sandi stm
         tar terminfo text time transformers unix unix-compat utf8-string
         vector zip-archive zlib
       ];
       librarySystemDepends = [ curl ];
       executableHaskellDepends = [ base ];
       testHaskellDepends = [
         array base bytestring cmdargs containers directory filepath FindBin
         HUnit mtl QuickCheck shelly split test-framework
         test-framework-hunit test-framework-quickcheck2 text zip-archive
       ];
       postInstall = ''
         mkdir -p $out/etc/bash_completion.d
         mv contrib/darcs_completion $out/etc/bash_completion.d/darcs
       '';
       homepage = "http://darcs.net/";
       description = "a distributed, interactive, smart revision control system";
       license = stdenv.lib.licenses.gpl2;
     }) {inherit (pkgs) curl;};
  "data-accessor" = callPackage
    ({ mkDerivation, array, base, containers, transformers }:
     mkDerivation {
       pname = "data-accessor";
       version = "0.2.2.8";
       sha256 = "1fq4gygxbz0bd0mzgvc1sl3m4gjnsv8nbgpnmdpa29zj5lb9agxc";
       libraryHaskellDepends = [ array base containers transformers ];
       homepage = "http://www.haskell.org/haskellwiki/Record_access";
       description = "Utilities for accessing and manipulating fields of records";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "data-accessor-mtl" = callPackage
    ({ mkDerivation, base, data-accessor, mtl }:
     mkDerivation {
       pname = "data-accessor-mtl";
       version = "0.2.0.4";
       sha256 = "1i8lk0vy04giixng5addgj740cbvwlc7g62qgrmhfip0w9k93kqh";
       libraryHaskellDepends = [ base data-accessor mtl ];
       homepage = "http://www.haskell.org/haskellwiki/Record_access";
       description = "Use Accessor to access state in mtl State monad class";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "data-accessor-template" = callPackage
    ({ mkDerivation, base, data-accessor, template-haskell, utility-ht
     }:
     mkDerivation {
       pname = "data-accessor-template";
       version = "0.2.1.16";
       sha256 = "15gd6xlrq5ica514m5rdcz2dl8bibdmbsmnc98ddhx491c9g5rwk";
       libraryHaskellDepends = [
         base data-accessor template-haskell utility-ht
       ];
       homepage = "http://www.haskell.org/haskellwiki/Record_access";
       description = "Utilities for accessing and manipulating fields of records";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "data-accessor-transformers" = callPackage
    ({ mkDerivation, base, data-accessor, transformers }:
     mkDerivation {
       pname = "data-accessor-transformers";
       version = "0.2.1.7";
       sha256 = "0yp030vafbpddl27m606aibbbr5ar5j5bsv4bksscz3cq4yq5j10";
       libraryHaskellDepends = [ base data-accessor transformers ];
       homepage = "http://www.haskell.org/haskellwiki/Record_access";
       description = "Use Accessor to access state in transformers State monad";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "data-binary-ieee754" = callPackage
    ({ mkDerivation, base, binary }:
     mkDerivation {
       pname = "data-binary-ieee754";
       version = "0.4.4";
       sha256 = "02nzg1barhqhpf4x26mpzvk7jd29nali033qy01adjplv2z5m5sr";
       libraryHaskellDepends = [ base binary ];
       homepage = "https://john-millikin.com/software/data-binary-ieee754/";
       description = "Parser/Serialiser for IEEE-754 floating-point values";
       license = stdenv.lib.licenses.mit;
     }) {};
  "data-bword" = callPackage
    ({ mkDerivation, base, ghc-prim, tasty, tasty-quickcheck }:
     mkDerivation {
       pname = "data-bword";
       version = "0.1.0.1";
       sha256 = "0zfvk7b7qi6inra0kc03rhsic2rj0818n4i03lfwzvb5g22izw3h";
       libraryHaskellDepends = [ base ghc-prim ];
       testHaskellDepends = [ base tasty tasty-quickcheck ];
       homepage = "https://github.com/mvv/data-bword";
       description = "Extra operations on binary words of fixed length";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "data-checked" = callPackage
    ({ mkDerivation, base, deepseq }:
     mkDerivation {
       pname = "data-checked";
       version = "0.3";
       sha256 = "0xjn7iqlsgi51h8gz4x40kc2qb5lwf6nw5kjwgkck1w5gjfd11yw";
       libraryHaskellDepends = [ base deepseq ];
       homepage = "https://github.com/mvv/data-checked";
       description = "Type-indexed runtime-checked properties";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "data-clist" = callPackage
    ({ mkDerivation, base, deepseq, QuickCheck }:
     mkDerivation {
       pname = "data-clist";
       version = "0.1.2.2";
       sha256 = "1aibiml1vs983lbxq18zcn9h11k3zjrxpsx4rxssqdjwni1kg9yi";
       libraryHaskellDepends = [ base deepseq QuickCheck ];
       homepage = "https://github.com/sw17ch/data-clist";
       description = "Simple functional ring type";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "data-default" = callPackage
    ({ mkDerivation, base, data-default-class
     , data-default-instances-containers, data-default-instances-dlist
     , data-default-instances-old-locale
     }:
     mkDerivation {
       pname = "data-default";
       version = "0.7.1.1";
       sha256 = "04d5n8ybmcxba9qb6h389w9zfq1lvj81b82jh6maqp6pkhkmvydh";
       libraryHaskellDepends = [
         base data-default-class data-default-instances-containers
         data-default-instances-dlist data-default-instances-old-locale
       ];
       description = "A class for types with a default value";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "data-default-class" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "data-default-class";
       version = "0.1.2.0";
       sha256 = "0miyjz8d4jyvqf2vp60lyfbnflx6cj2k8apmm9ly1hq0y0iv80ag";
       libraryHaskellDepends = [ base ];
       description = "A class for types with a default value";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "data-default-instances-containers" = callPackage
    ({ mkDerivation, base, containers, data-default-class }:
     mkDerivation {
       pname = "data-default-instances-containers";
       version = "0.0.1";
       sha256 = "06h8xka031w752a7cjlzghvr8adqbl95xj9z5zc1b62w02phfpm5";
       libraryHaskellDepends = [ base containers data-default-class ];
       description = "Default instances for types in containers";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "data-default-instances-dlist" = callPackage
    ({ mkDerivation, base, data-default-class, dlist }:
     mkDerivation {
       pname = "data-default-instances-dlist";
       version = "0.0.1";
       sha256 = "0narkdqiprhgayjiawrr4390h4rq4pl2pb6mvixbv2phrc8kfs3x";
       libraryHaskellDepends = [ base data-default-class dlist ];
       description = "Default instances for types in dlist";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "data-default-instances-old-locale" = callPackage
    ({ mkDerivation, base, data-default-class, old-locale }:
     mkDerivation {
       pname = "data-default-instances-old-locale";
       version = "0.0.1";
       sha256 = "00h81i5phib741yj517p8mbnc48myvfj8axzsw44k34m48lv1lv0";
       libraryHaskellDepends = [ base data-default-class old-locale ];
       description = "Default instances for types in old-locale";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "data-diverse" = callPackage
    ({ mkDerivation, base, containers, criterion, deepseq, ghc-prim
     , hspec, tagged
     }:
     mkDerivation {
       pname = "data-diverse";
       version = "4.6.0.0";
       sha256 = "1m6bxi37c7qkn96296lxfc0x3ab33w7yyjkvf3avla94dd248k89";
       libraryHaskellDepends = [
         base containers deepseq ghc-prim tagged
       ];
       testHaskellDepends = [ base hspec tagged ];
       benchmarkHaskellDepends = [ base criterion ];
       homepage = "https://github.com/louispan/data-diverse#readme";
       description = "Extensible records and polymorphic variants";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "data-diverse-lens" = callPackage
    ({ mkDerivation, base, data-diverse, data-has, hspec, lens
     , profunctors, tagged
     }:
     mkDerivation {
       pname = "data-diverse-lens";
       version = "4.3.0.0";
       sha256 = "11nrisgx7yb7qp03s3hxkbygc170fggbi3mcid196dhakxv4kl4p";
       libraryHaskellDepends = [
         base data-diverse data-has lens profunctors tagged
       ];
       testHaskellDepends = [ base data-diverse hspec lens tagged ];
       homepage = "https://github.com/louispan/data-diverse-lens#readme";
       description = "Isos & Lens for Data.Diverse.Many and Prisms for Data.Diverse.Which";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "data-dword" = callPackage
    ({ mkDerivation, base, data-bword, ghc-prim, hashable, tasty
     , tasty-quickcheck, template-haskell
     }:
     mkDerivation {
       pname = "data-dword";
       version = "0.3.1.2";
       sha256 = "084invjg8zj7ndxnz9clqmq06ch47k1d9lhxwap6xs0x4807crvb";
       libraryHaskellDepends = [
         base data-bword ghc-prim hashable template-haskell
       ];
       testHaskellDepends = [ base tasty tasty-quickcheck ];
       homepage = "https://github.com/mvv/data-dword";
       description = "Stick two binary words together to get a bigger one";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "data-endian" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "data-endian";
       version = "0.1.1";
       sha256 = "1h1abz87nha7cpw50yvf8fwvcca350wnnz2d3z9k30sg6wq4y7cc";
       libraryHaskellDepends = [ base ];
       homepage = "https://github.com/mvv/data-endian";
       description = "Endian-sensitive data";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "data-fix" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "data-fix";
       version = "0.2.0";
       sha256 = "14hk6hq5hdb3l5bhmzhw086jpzlvp9qbw9dzw30wlz5jbh2ihmvy";
       libraryHaskellDepends = [ base ];
       homepage = "https://github.com/anton-k/data-fix";
       description = "Fixpoint data types";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "data-has" = callPackage
    ({ mkDerivation, base, criterion, transformers }:
     mkDerivation {
       pname = "data-has";
       version = "0.3.0.0";
       sha256 = "0ybkm9zvl0l60f44p80fislbdmwwhavqz31wymnikjsyc01x899w";
       libraryHaskellDepends = [ base ];
       benchmarkHaskellDepends = [ base criterion transformers ];
       homepage = "https://github.com/winterland1989/data-has";
       description = "Simple extensible product";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "data-hash" = callPackage
    ({ mkDerivation, array, base, containers, QuickCheck
     , test-framework, test-framework-quickcheck2
     }:
     mkDerivation {
       pname = "data-hash";
       version = "0.2.0.1";
       sha256 = "1ghbqvc48gf9p8wiy71hdpaj7by3b9cw6wgwi3qqz8iw054xs5wi";
       libraryHaskellDepends = [ array base containers ];
       testHaskellDepends = [
         base QuickCheck test-framework test-framework-quickcheck2
       ];
       description = "Combinators for building fast hashing functions";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "data-inttrie" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "data-inttrie";
       version = "0.1.4";
       sha256 = "0m5xww8zvsa0whxl89wndpbdz9p5n03q3h3a904nqrxh966psfkb";
       libraryHaskellDepends = [ base ];
       homepage = "https://github.com/luqui/data-inttrie";
       description = "A simple lazy, infinite trie from integers";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "data-lens-light" = callPackage
    ({ mkDerivation, base, mtl, template-haskell }:
     mkDerivation {
       pname = "data-lens-light";
       version = "0.1.2.2";
       sha256 = "0vmkvhl7zcsaxnx7d7b59cnrdnlnr9cfn910rpn34jny7fkydlvj";
       libraryHaskellDepends = [ base mtl template-haskell ];
       homepage = "https://github.com/feuerbach/data-lens-light";
       description = "Simple lenses, minimum dependencies";
       license = stdenv.lib.licenses.mit;
     }) {};
  "data-memocombinators" = callPackage
    ({ mkDerivation, array, base, data-inttrie }:
     mkDerivation {
       pname = "data-memocombinators";
       version = "0.5.1";
       sha256 = "1mvfc1xri3kgkx5q7za01bqg1x3bfvbgcffw5vwl6jmq4hh1sd5l";
       libraryHaskellDepends = [ array base data-inttrie ];
       homepage = "http://github.com/luqui/data-memocombinators";
       description = "Combinators for building memo tables";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "data-msgpack" = callPackage
    ({ mkDerivation, base, binary, bytestring, containers, criterion
     , data-binary-ieee754, data-msgpack-types, deepseq, groom, hashable
     , hspec, QuickCheck, text, unordered-containers, vector, void
     }:
     mkDerivation {
       pname = "data-msgpack";
       version = "0.0.12";
       sha256 = "11zlw465lpa371y7cpz9r4gn1c4cw0rjrpl5l3h6h0y3zc28p7sw";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         base binary bytestring data-binary-ieee754 data-msgpack-types text
       ];
       executableHaskellDepends = [ base bytestring groom ];
       testHaskellDepends = [
         base bytestring containers data-msgpack-types hashable hspec
         QuickCheck text unordered-containers vector void
       ];
       benchmarkHaskellDepends = [
         base bytestring criterion deepseq QuickCheck
       ];
       homepage = "http://msgpack.org/";
       description = "A Haskell implementation of MessagePack";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "data-msgpack-types" = callPackage
    ({ mkDerivation, base, bytestring, containers, deepseq, hashable
     , hspec, QuickCheck, text, unordered-containers, vector, void
     }:
     mkDerivation {
       pname = "data-msgpack-types";
       version = "0.0.2";
       sha256 = "19c7285mrs9d1afgpdq4cprv44fif76ahahg3xpzijc5lhgxmzal";
       libraryHaskellDepends = [
         base bytestring containers deepseq hashable QuickCheck text
         unordered-containers vector void
       ];
       testHaskellDepends = [ base hspec QuickCheck ];
       homepage = "http://msgpack.org/";
       description = "A Haskell implementation of MessagePack";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "data-or" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "data-or";
       version = "1.0.0.5";
       sha256 = "0wp6qqq6k1zbdw9bv9gkzdiz6y8wp8r7zsqbjh54c43j3i7vdvwx";
       libraryHaskellDepends = [ base ];
       homepage = "http://code.haskell.org/~wren/";
       description = "A data type for non-exclusive disjunction";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "data-ordlist" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "data-ordlist";
       version = "0.4.7.0";
       sha256 = "03a9ix1fcx08viwv2jg5ndw1qbkydyyrmjvqr9wasmcik9x1wv3g";
       libraryHaskellDepends = [ base ];
       description = "Set and bag operations on ordered lists";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "data-ref" = callPackage
    ({ mkDerivation, base, stm, transformers }:
     mkDerivation {
       pname = "data-ref";
       version = "0.0.1.2";
       sha256 = "0896wjkpk52cndlzkdr51s1rasi0n9b100058f1sb4qzl1dgcp30";
       libraryHaskellDepends = [ base stm transformers ];
       homepage = "http://wiki.haskell.org/Mutable_variable";
       description = "Unify STRef and IORef in plain Haskell 98";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "data-reify" = callPackage
    ({ mkDerivation, base, containers }:
     mkDerivation {
       pname = "data-reify";
       version = "0.6.1";
       sha256 = "00mjv6dc3fwhbqzrll02qxilwpfypahkzcdqnv17c4nbjqg0ldb1";
       revision = "1";
       editedCabalFile = "0ixlibqrz7fd4bg9vnnd431a9kqvz4ajx8sbgyvpx9l2yjrabwzp";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [ base containers ];
       homepage = "http://ku-fpg.github.io/software/data-reify/";
       description = "Reify a recursive data structure into an explicit graph";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "data-serializer" = callPackage
    ({ mkDerivation, base, binary, bytestring, cereal, data-endian
     , parsers, semigroups, split, tasty, tasty-quickcheck
     }:
     mkDerivation {
       pname = "data-serializer";
       version = "0.3.4";
       sha256 = "1ijy8l5lxmm8wpzx4h2vh9q21zz66xgh979s32aa4b16l9m1b4z7";
       libraryHaskellDepends = [
         base binary bytestring cereal data-endian parsers semigroups split
       ];
       testHaskellDepends = [
         base binary bytestring cereal tasty tasty-quickcheck
       ];
       homepage = "https://github.com/mvv/data-serializer";
       description = "Common API for serialization libraries";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "data-textual" = callPackage
    ({ mkDerivation, base, bytestring, parsers, QuickCheck
     , test-framework, test-framework-quickcheck2, text, text-latin1
     , text-printer, type-hint
     }:
     mkDerivation {
       pname = "data-textual";
       version = "0.3.0.2";
       sha256 = "0c4qs923dj4jnvvkjvbij0c1yg922iw66140cq6wb1m4h6q31ia4";
       libraryHaskellDepends = [
         base bytestring parsers text text-latin1 text-printer
       ];
       testHaskellDepends = [
         base parsers QuickCheck test-framework test-framework-quickcheck2
         text-printer type-hint
       ];
       homepage = "https://github.com/mvv/data-textual";
       description = "Human-friendly textual representations";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "data-tree-print" = callPackage
    ({ mkDerivation, base, pretty, syb }:
     mkDerivation {
       pname = "data-tree-print";
       version = "0.1.0.2";
       sha256 = "00jh37anim8qsn553467gmfhajcz1c61zrgh1ypkqsll0gc29vy3";
       libraryHaskellDepends = [ base pretty syb ];
       homepage = "https://github.com/lspitzner/data-tree-print";
       description = "Print Data instances as a nested tree";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "datadog" = callPackage
    ({ mkDerivation, aeson, auto-update, base, buffer-builder
     , bytestring, Cabal, containers, dlist, exceptions, hspec
     , http-client, http-client-tls, http-types, lens, lifted-base
     , monad-control, network, old-locale, random, text, time
     , transformers-base, unliftio, unordered-containers, vector
     }:
     mkDerivation {
       pname = "datadog";
       version = "0.2.3.0";
       sha256 = "0d0rbi269hc0bq4asww69pfw4gf0z3p9ji3iw1h129h4qyhyvdcv";
       libraryHaskellDepends = [
         aeson auto-update base buffer-builder bytestring containers dlist
         http-client http-client-tls http-types lens lifted-base
         monad-control network old-locale text time transformers-base
         unliftio unordered-containers vector
       ];
       testHaskellDepends = [
         aeson auto-update base buffer-builder bytestring Cabal containers
         dlist exceptions hspec http-client http-client-tls http-types lens
         lifted-base monad-control network old-locale random text time
         transformers-base unliftio unordered-containers vector
       ];
       doCheck = false;
       homepage = "https://github.com/iand675/datadog";
       description = "Datadog client for Haskell. Supports both the HTTP API and StatsD.";
       license = stdenv.lib.licenses.mit;
     }) {};
  "datasets" = callPackage
    ({ mkDerivation, aeson, attoparsec, base, bytestring, cassava
     , directory, file-embed, filepath, hashable, microlens
     , stringsearch, text, time, vector, wreq
     }:
     mkDerivation {
       pname = "datasets";
       version = "0.2.5";
       sha256 = "1fpxk5wv12wyb1zr35mhinkbkmczgzny2903lszjn41n149kk4cs";
       libraryHaskellDepends = [
         aeson attoparsec base bytestring cassava directory file-embed
         filepath hashable microlens stringsearch text time vector wreq
       ];
       homepage = "https://github.com/diffusionkinetics/open/datasets";
       description = "Classical data sets for statistics and machine learning";
       license = stdenv.lib.licenses.mit;
     }) {};
  "dataurl" = callPackage
    ({ mkDerivation, attoparsec, base, base64-bytestring, bytestring
     , HTF, text
     }:
     mkDerivation {
       pname = "dataurl";
       version = "0.1.0.0";
       sha256 = "1chgcq2vc5kya8zmi0ir4589fph2rdssw1ivnkq209g7vd42prxi";
       libraryHaskellDepends = [
         attoparsec base base64-bytestring bytestring text
       ];
       testHaskellDepends = [
         attoparsec base base64-bytestring bytestring HTF text
       ];
       homepage = "http://github.com/agrafix/dataurl#readme";
       description = "Handle data-urls";
       license = stdenv.lib.licenses.mit;
     }) {};
  "dawg-ord" = callPackage
    ({ mkDerivation, base, containers, HUnit, mtl, smallcheck, tasty
     , tasty-hunit, tasty-quickcheck, tasty-smallcheck, transformers
     , vector
     }:
     mkDerivation {
       pname = "dawg-ord";
       version = "0.5.1.0";
       sha256 = "1s92i5z63maq74ni49l282pqbz0r0c22miyjjilipr0wnz7rl4nr";
       libraryHaskellDepends = [
         base containers mtl transformers vector
       ];
       testHaskellDepends = [
         base containers HUnit mtl smallcheck tasty tasty-hunit
         tasty-quickcheck tasty-smallcheck
       ];
       homepage = "https://github.com/kawu/dawg-ord";
       description = "Directed acyclic word graphs";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "dbcleaner" = callPackage
    ({ mkDerivation, base, hspec, postgresql-simple, text }:
     mkDerivation {
       pname = "dbcleaner";
       version = "0.1.3";
       sha256 = "0d8ghd4i7qq3zp1vmxvsx7s66ip3qqfzacfnb2n4i3cdd7hv05q8";
       libraryHaskellDepends = [ base postgresql-simple text ];
       testHaskellDepends = [ base hspec postgresql-simple text ];
       doCheck = false;
       description = "Clean database tables automatically around hspec tests";
       license = stdenv.lib.licenses.mit;
     }) {};
  "dbus" = callPackage
    ({ mkDerivation, base, bytestring, cereal, containers, criterion
     , deepseq, directory, extra, filepath, lens, libxml-sax, network
     , parsec, process, QuickCheck, random, resourcet, split, tasty
     , tasty-hunit, tasty-quickcheck, template-haskell, text, th-lift
     , transformers, unix, vector, xml-types
     }:
     mkDerivation {
       pname = "dbus";
       version = "1.0.1";
       sha256 = "1xg8wzs7xnh3455v3bbw9nd8inzr06n5939pzlq3nd4ajp3ba9d3";
       revision = "1";
       editedCabalFile = "043jh8sdizn17xy4hxjbal7pvdh2mc50vdplybpjxvxr4f1jl076";
       libraryHaskellDepends = [
         base bytestring cereal containers deepseq filepath lens libxml-sax
         network parsec random split template-haskell text th-lift
         transformers unix vector xml-types
       ];
       testHaskellDepends = [
         base bytestring cereal containers directory extra filepath
         libxml-sax network parsec process QuickCheck random resourcet tasty
         tasty-hunit tasty-quickcheck text transformers unix vector
         xml-types
       ];
       benchmarkHaskellDepends = [ base criterion ];
       doCheck = false;
       homepage = "https://github.com/rblaze/haskell-dbus#readme";
       description = "A client library for the D-Bus IPC system";
       license = stdenv.lib.licenses.asl20;
     }) {};
  "debian-build" = callPackage
    ({ mkDerivation, base, directory, filepath, process, split
     , transformers
     }:
     mkDerivation {
       pname = "debian-build";
       version = "0.10.1.2";
       sha256 = "0h8nxk9pir6ic65vh5y29jnlz7jrnq8inqg22h7nvlphk7qbblqw";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         base directory filepath process split transformers
       ];
       executableHaskellDepends = [ base filepath transformers ];
       homepage = "http://twitter.com/khibino/";
       description = "Debian package build sequence tools";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "debug" = callPackage
    ({ mkDerivation, aeson, base, bytestring, clock, containers
     , deepseq, directory, extra, filepath, ghc-prim, hashable, Hoed
     , libgraph, open-browser, prettyprinter
     , prettyprinter-compat-ansi-wl-pprint, template-haskell, text
     , uniplate, unordered-containers, vector, yaml
     }:
     mkDerivation {
       pname = "debug";
       version = "0.1.1";
       sha256 = "0j4jskz8zq2ww81mfarshi5g2m6xfivgl26grkhcacqq6k3483rk";
       isLibrary = true;
       isExecutable = true;
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [
         aeson base bytestring clock containers deepseq directory extra
         ghc-prim hashable Hoed libgraph open-browser prettyprinter
         prettyprinter-compat-ansi-wl-pprint template-haskell text uniplate
         unordered-containers vector
       ];
       executableHaskellDepends = [ aeson base directory filepath yaml ];
       testHaskellDepends = [
         aeson base bytestring containers directory extra filepath text
       ];
       homepage = "https://github.com/ndmitchell/debug";
       description = "Simple trace-based debugger";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "debug-trace-var" = callPackage
    ({ mkDerivation, base, template-haskell, unicode-show }:
     mkDerivation {
       pname = "debug-trace-var";
       version = "0.2.0";
       sha256 = "12dlnvzvnjk6z37pnajmghd5wcrzkf4pkpc0r2nrjp4h3p9pjkqp";
       libraryHaskellDepends = [ base template-haskell unicode-show ];
       homepage = "https://github.com/ncaq/debug-trace-var#readme";
       description = "You do not have to write variable names twice in Debug.Trace";
       license = stdenv.lib.licenses.mit;
     }) {};
  "declarative" = callPackage
    ({ mkDerivation, base, hasty-hamiltonian, kan-extensions, lens
     , mcmc-types, mighty-metropolis, mwc-probability, pipes, primitive
     , speedy-slice, transformers
     }:
     mkDerivation {
       pname = "declarative";
       version = "0.5.2";
       sha256 = "014spawd3wgasrlfaz0zcz0qf1cnhr9nxm71lzcxjgi8n1gcza0y";
       libraryHaskellDepends = [
         base hasty-hamiltonian kan-extensions lens mcmc-types
         mighty-metropolis mwc-probability pipes primitive speedy-slice
         transformers
       ];
       testHaskellDepends = [ base mwc-probability ];
       homepage = "http://github.com/jtobin/declarative";
       description = "DIY Markov Chains";
       license = stdenv.lib.licenses.mit;
     }) {};
  "deepseq-generics" = callPackage
    ({ mkDerivation, base, deepseq, ghc-prim, HUnit, test-framework
     , test-framework-hunit
     }:
     mkDerivation {
       pname = "deepseq-generics";
       version = "0.2.0.0";
       sha256 = "17bwghc15mc9pchfd1w46jh2p3wzc86aj6a537wqwxn08rayzcxh";
       revision = "3";
       editedCabalFile = "0734x6dm7ny1422n5ik4agzmjybvd3yybj1mnrc8z0kb89xdprcs";
       libraryHaskellDepends = [ base deepseq ghc-prim ];
       testHaskellDepends = [
         base deepseq ghc-prim HUnit test-framework test-framework-hunit
       ];
       homepage = "https://github.com/hvr/deepseq-generics";
       description = "GHC.Generics-based Control.DeepSeq.rnf implementation";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "dejafu" = callPackage
    ({ mkDerivation, base, concurrency, containers, contravariant
     , deepseq, exceptions, leancheck, profunctors, random, transformers
     }:
     mkDerivation {
       pname = "dejafu";
       version = "1.11.0.4";
       sha256 = "0zks4mqdndlyg8mqa1gshwahcqn45zawksgp738crls3yafgh9dg";
       libraryHaskellDepends = [
         base concurrency containers contravariant deepseq exceptions
         leancheck profunctors random transformers
       ];
       homepage = "https://github.com/barrucadu/dejafu";
       description = "A library for unit-testing concurrent programs";
       license = stdenv.lib.licenses.mit;
     }) {};
  "dependent-map" = callPackage
    ({ mkDerivation, base, containers, dependent-sum }:
     mkDerivation {
       pname = "dependent-map";
       version = "0.2.4.0";
       sha256 = "0il2naf6gdkvkhscvqd8kg9v911vdhqp9h10z5546mninnyrdcsx";
       libraryHaskellDepends = [ base containers dependent-sum ];
       homepage = "https://github.com/mokus0/dependent-map";
       description = "Dependent finite maps (partial dependent products)";
       license = "unknown";
       hydraPlatforms = stdenv.lib.platforms.none;
     }) {};
  "dependent-sum" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "dependent-sum";
       version = "0.4";
       sha256 = "07hs9s78wiybwjwkal2yq65hdavq0gg1h2ld7wbph61s2nsfrpm8";
       libraryHaskellDepends = [ base ];
       homepage = "https://github.com/mokus0/dependent-sum";
       description = "Dependent sum type";
       license = stdenv.lib.licenses.publicDomain;
     }) {};
  "dependent-sum-template" = callPackage
    ({ mkDerivation, base, dependent-sum, template-haskell, th-extras
     }:
     mkDerivation {
       pname = "dependent-sum-template";
       version = "0.0.0.6";
       sha256 = "1bcipqkkgj1afi2ax726gbvp9haqghvm5016rawx3jj9364v8k4r";
       libraryHaskellDepends = [
         base dependent-sum template-haskell th-extras
       ];
       testHaskellDepends = [ base dependent-sum ];
       homepage = "/dev/null";
       description = "Template Haskell code to generate instances of classes in dependent-sum package";
       license = stdenv.lib.licenses.publicDomain;
     }) {};
  "deque" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "deque";
       version = "0.2.1";
       sha256 = "0r1jabz5jamm79nrbwjnajzzn77fkhqbjfnmkahg293761z1k781";
       libraryHaskellDepends = [ base ];
       homepage = "https://github.com/nikita-volkov/deque";
       description = "Double-ended queue";
       license = stdenv.lib.licenses.mit;
     }) {};
  "deriving-compat" = callPackage
    ({ mkDerivation, base, base-compat, base-orphans, containers
     , ghc-boot-th, ghc-prim, hspec, hspec-discover, QuickCheck, tagged
     , template-haskell, th-abstraction, transformers
     , transformers-compat
     }:
     mkDerivation {
       pname = "deriving-compat";
       version = "0.5.2";
       sha256 = "0h5jfpwawp7xn9vi82zqskaypa3vypm97lz2farmmfqvnkw60mj9";
       revision = "1";
       editedCabalFile = "1s672vc7w96fmvr1p3fkqi9q80sn860j14545sskpxb8iz9f7sxg";
       libraryHaskellDepends = [
         base containers ghc-boot-th ghc-prim template-haskell
         th-abstraction transformers transformers-compat
       ];
       testHaskellDepends = [
         base base-compat base-orphans hspec QuickCheck tagged
         template-haskell transformers transformers-compat
       ];
       testToolDepends = [ hspec-discover ];
       homepage = "https://github.com/haskell-compat/deriving-compat";
       description = "Backports of GHC deriving extensions";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "derulo" = callPackage
    ({ mkDerivation, base, doctest }:
     mkDerivation {
       pname = "derulo";
       version = "1.0.5";
       sha256 = "1pyal6rhnyhqx8gwyh42vf66i18y9nplmqka546ikzps439rvmly";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [ base ];
       executableHaskellDepends = [ base ];
       testHaskellDepends = [ base doctest ];
       homepage = "https://github.com/tfausak/derulo#readme";
       description = "Parse and render JSON simply";
       license = stdenv.lib.licenses.mit;
     }) {};
  "detour-via-sci" = callPackage
    ({ mkDerivation, aeson, base, cassava, doctest, hlint, newtype
     , scientific, siggy-chardust, template-haskell
     }:
     mkDerivation {
       pname = "detour-via-sci";
       version = "1.0.0";
       sha256 = "1r417lp98k0nizlxh7r74c2c4g1ij33pk5ip0bm7ssmzyya127j5";
       revision = "1";
       editedCabalFile = "00dj8vf9gg9ww37sir6mblf3xhcpam8qgfz5bfana23arhf2cixj";
       libraryHaskellDepends = [
         aeson base cassava newtype scientific siggy-chardust
         template-haskell
       ];
       testHaskellDepends = [
         aeson base cassava doctest hlint newtype scientific siggy-chardust
         template-haskell
       ];
       homepage = "https://github.com/blockscope/flare-timing/tree/master/detour-via-sci#readme";
       description = "JSON and CSV encoding for rationals as decimal point numbers";
       license = stdenv.lib.licenses.mpl20;
     }) {};
  "df1" = callPackage
    ({ mkDerivation, attoparsec, base, bytestring, containers
     , QuickCheck, tasty, tasty-quickcheck, text, time
     }:
     mkDerivation {
       pname = "df1";
       version = "0.1.1";
       sha256 = "1qrgf823bf33g6vvilg9q4v1avdwh0iprf26qypzjsbzykbhj91n";
       libraryHaskellDepends = [
         attoparsec base bytestring containers text time
       ];
       testHaskellDepends = [
         attoparsec base bytestring QuickCheck tasty tasty-quickcheck text
         time
       ];
       homepage = "https://github.com/k0001/di";
       description = "Type, render and parse the df1 hierarchical structured log format";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "dhall" = callPackage
    ({ mkDerivation, ansi-terminal, base, bytestring, case-insensitive
     , containers, contravariant, criterion, cryptonite, deepseq, Diff
     , directory, doctest, exceptions, filepath, haskeline, http-client
     , http-client-tls, insert-ordered-containers, lens-family-core
     , megaparsec, memory, mockery, mtl, optparse-applicative, parsers
     , prettyprinter, prettyprinter-ansi-terminal, repline, scientific
     , tasty, tasty-hunit, template-haskell, text, transformers
     , unordered-containers, vector
     }:
     mkDerivation {
       pname = "dhall";
       version = "1.15.1";
       sha256 = "0c4fr0cs56wkfqiylbpi5qlyxxk9k6x5f9yphq12xf06l2vb6fza";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         ansi-terminal base bytestring case-insensitive containers
         contravariant cryptonite Diff directory exceptions filepath
         haskeline http-client http-client-tls insert-ordered-containers
         lens-family-core megaparsec memory mtl optparse-applicative parsers
         prettyprinter prettyprinter-ansi-terminal repline scientific
         template-haskell text transformers unordered-containers vector
       ];
       executableHaskellDepends = [ base ];
       testHaskellDepends = [
         base deepseq directory doctest filepath insert-ordered-containers
         mockery prettyprinter tasty tasty-hunit text vector
       ];
       benchmarkHaskellDepends = [
         base containers criterion directory text
       ];
       doCheck = false;
       description = "A configuration language guaranteed to terminate";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "dhall-bash" = callPackage
    ({ mkDerivation, base, bytestring, containers, dhall
     , insert-ordered-containers, neat-interpolation, optparse-generic
     , shell-escape, text
     }:
     mkDerivation {
       pname = "dhall-bash";
       version = "1.0.15";
       sha256 = "15xgfglxy5bac93i83pp4pc78yfcwq6ys9vpak9kmklsbr08ynq4";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         base bytestring containers dhall insert-ordered-containers
         neat-interpolation shell-escape text
       ];
       executableHaskellDepends = [
         base bytestring dhall optparse-generic text
       ];
       description = "Compile Dhall to Bash";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "dhall-json" = callPackage
    ({ mkDerivation, aeson, aeson-pretty, base, bytestring, dhall
     , insert-ordered-containers, optparse-applicative, tasty
     , tasty-hunit, text, unordered-containers, yaml
     }:
     mkDerivation {
       pname = "dhall-json";
       version = "1.2.3";
       sha256 = "1npw5x49jrijq6lby5ipnywqvbq67znmbsrfhnk0pi9pz4kixjw3";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         aeson base dhall insert-ordered-containers optparse-applicative
         text unordered-containers
       ];
       executableHaskellDepends = [
         aeson aeson-pretty base bytestring dhall optparse-applicative text
         yaml
       ];
       testHaskellDepends = [ aeson base dhall tasty tasty-hunit text ];
       description = "Compile Dhall to JSON or YAML";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "dhall-text" = callPackage
    ({ mkDerivation, base, dhall, optparse-applicative, text }:
     mkDerivation {
       pname = "dhall-text";
       version = "1.0.14";
       sha256 = "1485p4fazh3qcbb9khj1pk4f2gh6p6927sabh6miswczdn78z6sy";
       isLibrary = false;
       isExecutable = true;
       executableHaskellDepends = [
         base dhall optparse-applicative text
       ];
       doHaddock = false;
       description = "Template text using Dhall";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "di" = callPackage
    ({ mkDerivation, base, df1, di-core, di-df1, di-handle, di-monad
     , exceptions
     }:
     mkDerivation {
       pname = "di";
       version = "1.0.1";
       sha256 = "0h7c6s18vj60higi23icjsf1ky756l553v3a18bdkf4dgcxfs4r9";
       libraryHaskellDepends = [
         base df1 di-core di-df1 di-handle di-monad exceptions
       ];
       homepage = "https://github.com/k0001/di";
       description = "Typeful hierarchical structured logging using di, mtl and df1";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "di-core" = callPackage
    ({ mkDerivation, base, containers, QuickCheck, safe-exceptions, stm
     , tasty, tasty-hunit, tasty-quickcheck, time
     }:
     mkDerivation {
       pname = "di-core";
       version = "1.0.3";
       sha256 = "1rfza96ljcf754mj44m2ffm51k9v6c0ii2sqqnddjkva3h3hx47h";
       libraryHaskellDepends = [
         base containers safe-exceptions stm time
       ];
       testHaskellDepends = [
         base QuickCheck safe-exceptions stm tasty tasty-hunit
         tasty-quickcheck time
       ];
       homepage = "https://github.com/k0001/di";
       description = "Typeful hierarchical structured logging without monad towers";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "di-df1" = callPackage
    ({ mkDerivation, base, bytestring, df1, di-core, di-handle
     , di-monad, QuickCheck, stm, tasty, tasty-quickcheck, text, time
     }:
     mkDerivation {
       pname = "di-df1";
       version = "1.0.2";
       sha256 = "1imk26njmr7hj56227yxgshjh4dicgr2c9bpc2m9nvsw2qbqslfh";
       libraryHaskellDepends = [
         base df1 di-core di-handle di-monad stm
       ];
       testHaskellDepends = [
         base bytestring df1 di-core QuickCheck tasty tasty-quickcheck text
         time
       ];
       homepage = "https://github.com/k0001/di";
       description = "Write logs in the df1 format using the di logging framework";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "di-handle" = callPackage
    ({ mkDerivation, base, bytestring, di-core, exceptions, unix }:
     mkDerivation {
       pname = "di-handle";
       version = "1.0";
       sha256 = "1v4jn1dvvfa6nbqx34hhjg47lbjafkmdps8aalq3n5sah99iy26d";
       libraryHaskellDepends = [
         base bytestring di-core exceptions unix
       ];
       homepage = "https://github.com/k0001/di";
       description = "IO support for file handles in di-core";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "di-monad" = callPackage
    ({ mkDerivation, base, containers, di-core, exceptions, mtl, pipes
     , stm, transformers
     }:
     mkDerivation {
       pname = "di-monad";
       version = "1.0.2";
       sha256 = "1s2f2rvchfc6ha8w75rcz5w9706vf9zmxgrimav211vph3hpjkdq";
       libraryHaskellDepends = [
         base containers di-core exceptions mtl pipes stm transformers
       ];
       homepage = "https://github.com/k0001/di";
       description = "mtl flavoured typeful hierarchical structured logging for di-core";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "diagrams" = callPackage
    ({ mkDerivation, diagrams-contrib, diagrams-core, diagrams-lib
     , diagrams-svg
     }:
     mkDerivation {
       pname = "diagrams";
       version = "1.4";
       sha256 = "0fcik4vwm2zah5m3yf6p1dlf0vbs7h1jri77zfwl731bd3xgc246";
       libraryHaskellDepends = [
         diagrams-contrib diagrams-core diagrams-lib diagrams-svg
       ];
       doHaddock = false;
       homepage = "http://projects.haskell.org/diagrams";
       description = "Embedded domain-specific language for declarative vector graphics";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "diagrams-builder" = callPackage
    ({ mkDerivation, base, base-orphans, bytestring, cmdargs
     , diagrams-cairo, diagrams-lib, diagrams-postscript
     , diagrams-rasterific, diagrams-svg, directory, exceptions
     , filepath, hashable, haskell-src-exts, haskell-src-exts-simple
     , hint, JuicyPixels, lens, mtl, split, svg-builder, transformers
     }:
     mkDerivation {
       pname = "diagrams-builder";
       version = "0.8.0.3";
       sha256 = "1g8anclzfm88nd6z539g5f2h6yfb538hdl59sbiqv0vk1c4sr01s";
       revision = "1";
       editedCabalFile = "0cdnriavw7y0cr12n60vd0hwcyi09vkx5zjr47af3bj00lq1v9hk";
       configureFlags = [ "-fcairo" "-fps" "-frasterific" "-fsvg" ];
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         base base-orphans cmdargs diagrams-lib directory exceptions
         filepath hashable haskell-src-exts haskell-src-exts-simple hint
         lens mtl split transformers
       ];
       executableHaskellDepends = [
         base bytestring cmdargs diagrams-cairo diagrams-lib
         diagrams-postscript diagrams-rasterific diagrams-svg directory
         filepath JuicyPixels lens svg-builder
       ];
       homepage = "http://projects.haskell.org/diagrams";
       description = "hint-based build service for the diagrams graphics EDSL";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "diagrams-cairo" = callPackage
    ({ mkDerivation, array, base, bytestring, cairo, colour, containers
     , data-default-class, diagrams-core, diagrams-lib, filepath
     , hashable, JuicyPixels, lens, mtl, optparse-applicative, pango
     , split, statestack, transformers, unix, vector
     }:
     mkDerivation {
       pname = "diagrams-cairo";
       version = "1.4.1";
       sha256 = "0n368gv7jjnynp7gfbnaywnd4x65956qqifcxpi3gsy8yi0zsr6z";
       revision = "1";
       editedCabalFile = "0irrv1mf7lz3n4dy5pz9y6kw00v1rly47g2g6hi95nj6a6hib3z0";
       libraryHaskellDepends = [
         array base bytestring cairo colour containers data-default-class
         diagrams-core diagrams-lib filepath hashable JuicyPixels lens mtl
         optparse-applicative pango split statestack transformers unix
         vector
       ];
       homepage = "http://projects.haskell.org/diagrams";
       description = "Cairo backend for diagrams drawing EDSL";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "diagrams-canvas" = callPackage
    ({ mkDerivation, base, blank-canvas, cmdargs, containers
     , data-default-class, diagrams-core, diagrams-lib, lens, mtl
     , NumInstances, optparse-applicative, statestack, text
     }:
     mkDerivation {
       pname = "diagrams-canvas";
       version = "1.4.1";
       sha256 = "1ihmv42412d8dk3s894zd70xd386wrk9ycxkid19barry1vz5plj";
       libraryHaskellDepends = [
         base blank-canvas cmdargs containers data-default-class
         diagrams-core diagrams-lib lens mtl NumInstances
         optparse-applicative statestack text
       ];
       homepage = "http://projects.haskell.org/diagrams/";
       description = "HTML5 canvas backend for diagrams drawing EDSL";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "diagrams-contrib" = callPackage
    ({ mkDerivation, base, circle-packing, colour, containers
     , cubicbezier, data-default, data-default-class, diagrams-core
     , diagrams-lib, diagrams-solve, force-layout, hashable, HUnit, lens
     , linear, mfsolve, MonadRandom, monoid-extras, mtl, mtl-compat
     , parsec, QuickCheck, random, semigroups, split, test-framework
     , test-framework-hunit, test-framework-quickcheck2, text
     }:
     mkDerivation {
       pname = "diagrams-contrib";
       version = "1.4.3";
       sha256 = "01r081rvxkb9i56iqi28zw4054nm62pf9f1szd9i0avmnxxsiyv5";
       revision = "1";
       editedCabalFile = "16ici9kx7cnva1ihhin5nyc1icif17yks3nwcxxzqxjjw556vpig";
       libraryHaskellDepends = [
         base circle-packing colour containers cubicbezier data-default
         data-default-class diagrams-core diagrams-lib diagrams-solve
         force-layout hashable lens linear mfsolve MonadRandom monoid-extras
         mtl mtl-compat parsec random semigroups split text
       ];
       testHaskellDepends = [
         base containers diagrams-lib HUnit QuickCheck test-framework
         test-framework-hunit test-framework-quickcheck2
       ];
       homepage = "http://projects.haskell.org/diagrams/";
       description = "Collection of user contributions to diagrams EDSL";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "diagrams-core" = callPackage
    ({ mkDerivation, adjunctions, base, containers, distributive
     , dual-tree, lens, linear, monoid-extras, mtl, profunctors
     , semigroups, unordered-containers
     }:
     mkDerivation {
       pname = "diagrams-core";
       version = "1.4.1.1";
       sha256 = "10mnicfyvawy3jlpgf656fx2y4836x04p3z1lpgyyr1nkvwyk0m1";
       revision = "2";
       editedCabalFile = "1lf7xcq42l4hjksgp1nhj7600shvw9q5a27bh729fyfphmvv3xkf";
       libraryHaskellDepends = [
         adjunctions base containers distributive dual-tree lens linear
         monoid-extras mtl profunctors semigroups unordered-containers
       ];
       homepage = "http://projects.haskell.org/diagrams";
       description = "Core libraries for diagrams EDSL";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "diagrams-gtk" = callPackage
    ({ mkDerivation, base, cairo, diagrams-cairo, diagrams-lib, gtk }:
     mkDerivation {
       pname = "diagrams-gtk";
       version = "1.4";
       sha256 = "1sga2wwkircjgryd4pn9i0wvvcnh3qnhpxas32crpdq939idwsxn";
       revision = "2";
       editedCabalFile = "0hblrqvwk1pbssaci97v36r71kpm7kkcghh5ijmq52lmjfq72jqm";
       libraryHaskellDepends = [
         base cairo diagrams-cairo diagrams-lib gtk
       ];
       homepage = "http://projects.haskell.org/diagrams/";
       description = "Backend for rendering diagrams directly to GTK windows";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "diagrams-html5" = callPackage
    ({ mkDerivation, base, cmdargs, containers, data-default-class
     , diagrams-core, diagrams-lib, lens, mtl, NumInstances
     , optparse-applicative, split, statestack, static-canvas, text
     }:
     mkDerivation {
       pname = "diagrams-html5";
       version = "1.4.1";
       sha256 = "0vp99ks9ldy91x1jlla0kyg8sq9748k82ql0jsf0jxhimvwd7vp8";
       libraryHaskellDepends = [
         base cmdargs containers data-default-class diagrams-core
         diagrams-lib lens mtl NumInstances optparse-applicative split
         statestack static-canvas text
       ];
       homepage = "http://projects.haskell.org/diagrams/";
       description = "HTML5 canvas backend for diagrams drawing EDSL";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "diagrams-lib" = callPackage
    ({ mkDerivation, active, adjunctions, array, base, bytestring
     , cereal, colour, containers, criterion, data-default-class
     , deepseq, diagrams-core, diagrams-solve, directory, distributive
     , dual-tree, exceptions, filepath, fingertree, fsnotify, hashable
     , intervals, JuicyPixels, lens, linear, monoid-extras, mtl
     , numeric-extras, optparse-applicative, process, profunctors
     , semigroups, tagged, tasty, tasty-hunit, tasty-quickcheck, text
     , transformers, unordered-containers
     }:
     mkDerivation {
       pname = "diagrams-lib";
       version = "1.4.2.3";
       sha256 = "175yzi5kw4yd8ykdkpf64q85c7j3p89l90m3h6qcsx9ipv6av9r5";
       revision = "2";
       editedCabalFile = "0gn1lpsq1v9qpyhpizyknn3sfixg1b64s0dsl1jf25lz4kcrpbs7";
       libraryHaskellDepends = [
         active adjunctions array base bytestring cereal colour containers
         data-default-class diagrams-core diagrams-solve directory
         distributive dual-tree exceptions filepath fingertree fsnotify
         hashable intervals JuicyPixels lens linear monoid-extras mtl
         optparse-applicative process profunctors semigroups tagged text
         transformers unordered-containers
       ];
       testHaskellDepends = [
         base deepseq diagrams-solve distributive lens numeric-extras tasty
         tasty-hunit tasty-quickcheck
       ];
       benchmarkHaskellDepends = [ base criterion diagrams-core ];
       homepage = "http://projects.haskell.org/diagrams";
       description = "Embedded domain-specific language for declarative graphics";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "diagrams-postscript" = callPackage
    ({ mkDerivation, base, containers, data-default-class
     , diagrams-core, diagrams-lib, dlist, hashable, lens, monoid-extras
     , mtl, semigroups, split, statestack
     }:
     mkDerivation {
       pname = "diagrams-postscript";
       version = "1.4.1";
       sha256 = "171c53msr2x8da87fghl7jikbmrwy7gdxwhdviixc2y3k4fijn57";
       revision = "1";
       editedCabalFile = "0z0rh7lwyr3vx6llq6q9s5f1vzqk4zxpcg5ibfn5jdp274kfd7r1";
       libraryHaskellDepends = [
         base containers data-default-class diagrams-core diagrams-lib dlist
         hashable lens monoid-extras mtl semigroups split statestack
       ];
       homepage = "http://projects.haskell.org/diagrams/";
       description = "Postscript backend for diagrams drawing EDSL";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "diagrams-rasterific" = callPackage
    ({ mkDerivation, base, bytestring, containers, data-default-class
     , diagrams-core, diagrams-lib, file-embed, filepath, FontyFruity
     , hashable, JuicyPixels, lens, mtl, optparse-applicative
     , Rasterific
     }:
     mkDerivation {
       pname = "diagrams-rasterific";
       version = "1.4.1.1";
       sha256 = "0raki8c20s40y5xy2ax8y38xl3y40fb9qv95ax3qgnmi46s8fapp";
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [
         base bytestring containers data-default-class diagrams-core
         diagrams-lib file-embed filepath FontyFruity hashable JuicyPixels
         lens mtl optparse-applicative Rasterific
       ];
       testHaskellDepends = [ base diagrams-core diagrams-lib ];
       homepage = "http://projects.haskell.org/diagrams/";
       description = "Rasterific backend for diagrams";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "diagrams-solve" = callPackage
    ({ mkDerivation, base, deepseq, tasty, tasty-hunit
     , tasty-quickcheck
     }:
     mkDerivation {
       pname = "diagrams-solve";
       version = "0.1.1";
       sha256 = "17agchqkmj14b17sw50kzxq4hm056g5d8yy0wnqn5w8h1d0my7x4";
       revision = "4";
       editedCabalFile = "1yjacw17ga4rh6iw70vclk03qm5xjw4y17c7m43gjw8h3cfaq15d";
       libraryHaskellDepends = [ base ];
       testHaskellDepends = [
         base deepseq tasty tasty-hunit tasty-quickcheck
       ];
       homepage = "http://projects.haskell.org/diagrams";
       description = "Pure Haskell solver routines used by diagrams";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "diagrams-svg" = callPackage
    ({ mkDerivation, base, base64-bytestring, bytestring, colour
     , containers, diagrams-core, diagrams-lib, filepath, hashable
     , JuicyPixels, lens, monoid-extras, mtl, optparse-applicative
     , semigroups, split, svg-builder, text
     }:
     mkDerivation {
       pname = "diagrams-svg";
       version = "1.4.2";
       sha256 = "1lnyxx45yawqas7hmvvannwaa3ycf1l9g40lsl2m8sl2ja6vcmal";
       revision = "2";
       editedCabalFile = "15sn85xaachw4cj56w61bjcwrbf4qmnkfl8mbgdapxi5k0y4f2qv";
       libraryHaskellDepends = [
         base base64-bytestring bytestring colour containers diagrams-core
         diagrams-lib filepath hashable JuicyPixels lens monoid-extras mtl
         optparse-applicative semigroups split svg-builder text
       ];
       homepage = "http://projects.haskell.org/diagrams/";
       description = "SVG backend for diagrams drawing EDSL";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "dictionary-sharing" = callPackage
    ({ mkDerivation, base, containers }:
     mkDerivation {
       pname = "dictionary-sharing";
       version = "0.1.0.0";
       sha256 = "00aspv943qdqhlk39mbk00kb1dsa5r0caj8sslrn81fnsn252fwc";
       revision = "3";
       editedCabalFile = "1mn7jcc7h3b8f1pn9zigqp6mc2n0qb66lms5qnrx4zswdv5w9439";
       libraryHaskellDepends = [ base containers ];
       description = "Sharing/memoization of class members";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "digest" = callPackage
    ({ mkDerivation, base, bytestring, zlib }:
     mkDerivation {
       pname = "digest";
       version = "0.0.1.2";
       sha256 = "04gy2zp8yzvv7j9bdfvmfzcz3sqyqa6rwslqcn4vyair2vmif5v4";
       libraryHaskellDepends = [ base bytestring ];
       librarySystemDepends = [ zlib ];
       description = "Various cryptographic hashes for bytestrings; CRC32 and Adler32 for now";
       license = stdenv.lib.licenses.bsd3;
     }) {inherit (pkgs) zlib;};
  "digits" = callPackage
    ({ mkDerivation, base, QuickCheck }:
     mkDerivation {
       pname = "digits";
       version = "0.3.1";
       sha256 = "0b3arnnwqw53cb2xqmy4j66nw9y6wrazb545qkka9y6w8nbrqjd8";
       libraryHaskellDepends = [ base QuickCheck ];
       testHaskellDepends = [ base QuickCheck ];
       description = "Converts integers to lists of digits and back";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "dimensional" = callPackage
    ({ mkDerivation, base, criterion, deepseq, doctest, exact-pi, Glob
     , hspec, ieee754, numtype-dk, QuickCheck, semigroups
     , template-haskell, vector
     }:
     mkDerivation {
       pname = "dimensional";
       version = "1.1";
       sha256 = "05jy0xs1nmxz7x3b589313hqk317838crhd974knm5k73jf8h99s";
       libraryHaskellDepends = [
         base deepseq exact-pi ieee754 numtype-dk semigroups vector
       ];
       testHaskellDepends = [
         base doctest Glob hspec QuickCheck template-haskell
       ];
       benchmarkHaskellDepends = [ base criterion deepseq ];
       homepage = "https://github.com/bjornbm/dimensional/";
       description = "Statically checked physical dimensions, using Type Families and Data Kinds";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "direct-sqlite" = callPackage
    ({ mkDerivation, base, base16-bytestring, bytestring, directory
     , HUnit, semigroups, temporary, text
     }:
     mkDerivation {
       pname = "direct-sqlite";
       version = "2.3.23";
       sha256 = "0ywkah9gmjnx0zdlvinc2i898jsbdrw4ba315zkpijaaldp6znqz";
       libraryHaskellDepends = [ base bytestring semigroups text ];
       testHaskellDepends = [
         base base16-bytestring bytestring directory HUnit temporary text
       ];
       homepage = "https://github.com/IreneKnapp/direct-sqlite";
       description = "Low-level binding to SQLite3. Includes UTF8 and BLOB support.";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "directory-tree" = callPackage
    ({ mkDerivation, base, directory, filepath, process }:
     mkDerivation {
       pname = "directory-tree";
       version = "0.12.1";
       sha256 = "05z5ws58kky3wcwwwv6q16m9vs0lzj35qqs9v5acy9m2nfal8272";
       libraryHaskellDepends = [ base directory filepath ];
       testHaskellDepends = [ base directory filepath process ];
       homepage = "http://brandon.si/code/directory-tree-module-released/";
       description = "A simple directory-like tree datatype, with useful IO functions";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "discount" = callPackage
    ({ mkDerivation, base, bytestring, markdown, text }:
     mkDerivation {
       pname = "discount";
       version = "0.1.1";
       sha256 = "1q1lz9dgxp5kq0ngh7pagijmlc616vwrfrb14pjx2vc9s7yvg779";
       libraryHaskellDepends = [ base bytestring text ];
       librarySystemDepends = [ markdown ];
       homepage = "http://github.com/lightquake/discount";
       description = "Haskell bindings to the discount Markdown library";
       license = stdenv.lib.licenses.mit;
     }) {markdown = null;};
  "discrimination" = callPackage
    ({ mkDerivation, array, base, containers, contravariant, criterion
     , deepseq, ghc-prim, hashable, primitive, profunctors, promises
     , semigroups, transformers, transformers-compat
     , unordered-containers, vector, void
     }:
     mkDerivation {
       pname = "discrimination";
       version = "0.3";
       sha256 = "18scvjb4vj1y9mwhanr8h73bs80h1d23m2vrixm48riyg22v5m6n";
       revision = "1";
       editedCabalFile = "1p39vcdmv9k9wxlkh49w1dr1isvn2hvhjjbs95qwljpxca74i23g";
       libraryHaskellDepends = [
         array base containers contravariant deepseq ghc-prim hashable
         primitive profunctors promises semigroups transformers
         transformers-compat vector void
       ];
       benchmarkHaskellDepends = [
         base containers criterion deepseq ghc-prim primitive
         unordered-containers
       ];
       homepage = "http://github.com/ekmett/discrimination/";
       description = "Fast generic linear-time sorting, joins and container construction";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "disk-free-space" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "disk-free-space";
       version = "0.1.0.1";
       sha256 = "07rqj8k1vh3cykq9yidpjxhgh1f7vgmjs6y1nv5kq2217ff4yypi";
       revision = "3";
       editedCabalFile = "0x0wjycr3rhw9vcq51b4sz8cf7mcvx7whhywv72y25r9385lxb3i";
       libraryHaskellDepends = [ base ];
       homepage = "https://github.com/redneb/disk-free-space";
       description = "Retrieve information about disk space usage";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "distributed-closure" = callPackage
    ({ mkDerivation, async, base, binary, bytestring, constraints
     , hspec, QuickCheck, syb, template-haskell
     }:
     mkDerivation {
       pname = "distributed-closure";
       version = "0.4.1";
       sha256 = "1rkw5r5r3jlrkckjkqv290qx890a8sipx1c7n2syk1f6bshgwkny";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         base binary bytestring constraints syb template-haskell
       ];
       executableHaskellDepends = [ async base binary bytestring ];
       testHaskellDepends = [ base binary hspec QuickCheck ];
       homepage = "https://github.com/tweag/distributed-closure";
       description = "Serializable closures for distributed programming";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "distributed-static" = callPackage
    ({ mkDerivation, base, binary, bytestring, containers, deepseq
     , rank1dynamic
     }:
     mkDerivation {
       pname = "distributed-static";
       version = "0.3.8";
       sha256 = "1hpzsjwmmaj3cj4i54mg6g9dkk6vgwda66y8j14pjqmn49bzcjwm";
       libraryHaskellDepends = [
         base binary bytestring containers deepseq rank1dynamic
       ];
       homepage = "http://haskell-distributed.github.com";
       description = "Compositional, type-safe, polymorphic static values and closures";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "distribution-nixpkgs" = callPackage
    ({ mkDerivation, aeson, base, bytestring, Cabal, containers
     , deepseq, hspec, language-nix, lens, pretty, process, split
     }:
     mkDerivation {
       pname = "distribution-nixpkgs";
       version = "1.1.1";
       sha256 = "1694crd3l9cyc0c5xvqmx62154519g2cnpzc5qmlypwrk258bssm";
       libraryHaskellDepends = [
         aeson base bytestring Cabal containers deepseq language-nix lens
         pretty process split
       ];
       testHaskellDepends = [ base deepseq hspec lens ];
       homepage = "https://github.com/peti/distribution-nixpkgs#readme";
       description = "Types and functions to manipulate the Nixpkgs distribution";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "distributive" = callPackage
    ({ mkDerivation, base, base-orphans, Cabal, cabal-doctest, doctest
     , generic-deriving, hspec, tagged, transformers
     , transformers-compat
     }:
     mkDerivation {
       pname = "distributive";
       version = "0.5.3";
       sha256 = "0y566r97sfyvhsmd4yxiz4ns2mqgwf5bdbp56wgxl6wlkidq0wwi";
       revision = "6";
       editedCabalFile = "06bd38rf31yrvvy989r44pm0id3dsxwcp6nxg7wk6ccj3n2b8rzk";
       setupHaskellDepends = [ base Cabal cabal-doctest ];
       libraryHaskellDepends = [
         base base-orphans tagged transformers transformers-compat
       ];
       testHaskellDepends = [ base doctest generic-deriving hspec ];
       homepage = "http://github.com/ekmett/distributive/";
       description = "Distributive functors -- Dual to Traversable";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "dlist" = callPackage
    ({ mkDerivation, base, Cabal, deepseq, QuickCheck }:
     mkDerivation {
       pname = "dlist";
       version = "0.8.0.5";
       sha256 = "0hqvjld86vna9m0za4g37nv2gml2s8q01208igp4l3dl76l8ma4q";
       libraryHaskellDepends = [ base deepseq ];
       testHaskellDepends = [ base Cabal QuickCheck ];
       homepage = "https://github.com/spl/dlist";
       description = "Difference lists";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "dlist-instances" = callPackage
    ({ mkDerivation, base, dlist, semigroups }:
     mkDerivation {
       pname = "dlist-instances";
       version = "0.1.1.1";
       sha256 = "0nsgrr25r4qxv2kpn7i20hra8jjkyllxfrhh5hml3ysjdz010jni";
       libraryHaskellDepends = [ base dlist semigroups ];
       homepage = "https://github.com/gregwebs/dlist-instances";
       description = "Difference lists instances";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "dlist-nonempty" = callPackage
    ({ mkDerivation, base, base-compat, Cabal, deepseq, dlist
     , QuickCheck, quickcheck-instances, semigroupoids
     }:
     mkDerivation {
       pname = "dlist-nonempty";
       version = "0.1.1";
       sha256 = "0csbspdy43pzvasb5mhs5pz2f49ws78pi253cx7pp84wjx6ads20";
       revision = "4";
       editedCabalFile = "10kkj4sf1bn87z6744p9gn6mkciqri2d3l9vmg9ylpi8g7priil2";
       libraryHaskellDepends = [
         base base-compat deepseq dlist semigroupoids
       ];
       testHaskellDepends = [
         base Cabal QuickCheck quickcheck-instances
       ];
       homepage = "https://github.com/phadej/dlist-nonempty";
       description = "Non-empty difference lists";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "dns" = callPackage
    ({ mkDerivation, async, attoparsec, auto-update, base
     , base64-bytestring, binary, bytestring, containers, cryptonite
     , doctest, hspec, iproute, mtl, network, psqueues, QuickCheck, safe
     , time, word8
     }:
     mkDerivation {
       pname = "dns";
       version = "3.0.4";
       sha256 = "1aa4zb9zkk244rndimrq8maxj9qrmz3rb13v9n8jblmp6ssk6d3v";
       libraryHaskellDepends = [
         async attoparsec auto-update base base64-bytestring binary
         bytestring containers cryptonite iproute mtl network psqueues safe
         time
       ];
       testHaskellDepends = [
         base bytestring doctest hspec iproute network QuickCheck word8
       ];
       doCheck = false;
       testTarget = "spec";
       description = "DNS library in Haskell";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "do-list" = callPackage
    ({ mkDerivation, base, criterion, hspec, mtl, text }:
     mkDerivation {
       pname = "do-list";
       version = "1.0.1";
       sha256 = "155nqm4wfi9g5qxxx9gl74g6z2w3z08cysz6z60pmbdhc4s1jxxk";
       libraryHaskellDepends = [ base ];
       testHaskellDepends = [ base hspec ];
       benchmarkHaskellDepends = [ base criterion mtl text ];
       homepage = "https://github.com/tserduke/do-list#readme";
       description = "Do notation for free";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "docker" = callPackage
    ({ mkDerivation, aeson, base, blaze-builder, bytestring, conduit
     , conduit-combinators, conduit-extra, connection, containers
     , data-default-class, directory, exceptions, filemanip, filepath
     , http-client, http-client-tls, http-conduit, http-types, lens
     , lens-aeson, monad-control, mtl, network, process, QuickCheck
     , resourcet, scientific, tar, tasty, tasty-hunit, tasty-quickcheck
     , temporary, text, time, tls, transformers, transformers-base
     , unliftio-core, unordered-containers, uuid, vector, x509
     , x509-store, x509-system, zlib
     }:
     mkDerivation {
       pname = "docker";
       version = "0.6.0.0";
       sha256 = "0i90nkj1fc4swr6nral2y6raa6mmdz8x40sg47ww42dw18q00fjd";
       libraryHaskellDepends = [
         aeson base blaze-builder bytestring conduit conduit-combinators
         conduit-extra containers data-default-class directory exceptions
         filemanip filepath http-client http-conduit http-types
         monad-control mtl network resourcet scientific tar temporary text
         time tls transformers transformers-base unliftio-core
         unordered-containers uuid vector x509 x509-store x509-system zlib
       ];
       testHaskellDepends = [
         aeson base bytestring connection containers directory http-client
         http-client-tls http-types lens lens-aeson process QuickCheck tasty
         tasty-hunit tasty-quickcheck text transformers unordered-containers
         vector
       ];
       homepage = "https://github.com/denibertovic/docker-hs";
       description = "An API client for docker written in Haskell";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "dockerfile" = callPackage
    ({ mkDerivation, base, hspec }:
     mkDerivation {
       pname = "dockerfile";
       version = "0.1.0.1";
       sha256 = "0980w0fh5xb7azknnmph6rmnzswsjw360ga5ymds2valq2vc0ji9";
       libraryHaskellDepends = [ base ];
       testHaskellDepends = [ base hspec ];
       description = "A simple DSL for describing and generating Dockerfile containers in Haskell";
       license = stdenv.lib.licenses.mit;
     }) {};
  "docopt" = callPackage
    ({ mkDerivation, aeson, ansi-terminal, base, bytestring, containers
     , HUnit, parsec, split, template-haskell, text, th-lift
     }:
     mkDerivation {
       pname = "docopt";
       version = "0.7.0.5";
       sha256 = "1vh5kn13z0c6k2ir6nyr453flyn0cfmz7h61903vysw9lh40hy8m";
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [
         base containers parsec template-haskell th-lift
       ];
       testHaskellDepends = [
         aeson ansi-terminal base bytestring containers HUnit parsec split
         template-haskell text th-lift
       ];
       homepage = "https://github.com/docopt/docopt.hs";
       description = "A command-line interface parser that will make you smile";
       license = stdenv.lib.licenses.mit;
     }) {};
  "doctemplates" = callPackage
    ({ mkDerivation, aeson, base, blaze-html, blaze-markup, bytestring
     , containers, hspec, parsec, scientific, text, unordered-containers
     , vector
     }:
     mkDerivation {
       pname = "doctemplates";
       version = "0.2.2.1";
       sha256 = "1gyckfg3kgvzhxw14i7iwrw0crygvsp86sy53bbr1yn7bxbgn33b";
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [
         aeson base blaze-html blaze-markup bytestring containers parsec
         scientific text unordered-containers vector
       ];
       testHaskellDepends = [ aeson base hspec text ];
       homepage = "https://github.com/jgm/doctemplates#readme";
       description = "Pandoc-style document templates";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "doctest" = callPackage
    ({ mkDerivation, base, base-compat, code-page, deepseq, directory
     , filepath, ghc, ghc-paths, hspec, HUnit, mockery, process
     , QuickCheck, setenv, silently, stringbuilder, syb, transformers
     , with-location
     }:
     mkDerivation {
       pname = "doctest";
       version = "0.16.0.1";
       sha256 = "106pc4rs4cfym7754gzdgy36dm9aidwmnqpjm9k7yq1hfd4pallv";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         base base-compat code-page deepseq directory filepath ghc ghc-paths
         process syb transformers
       ];
       executableHaskellDepends = [
         base base-compat code-page deepseq directory filepath ghc ghc-paths
         process syb transformers
       ];
       testHaskellDepends = [
         base base-compat code-page deepseq directory filepath ghc ghc-paths
         hspec HUnit mockery process QuickCheck setenv silently
         stringbuilder syb transformers with-location
       ];
       doCheck = false;
       homepage = "https://github.com/sol/doctest#readme";
       description = "Test interactive Haskell examples";
       license = stdenv.lib.licenses.mit;
     }) {};
  "doctest-discover" = callPackage
    ({ mkDerivation, aeson, base, bytestring, directory, doctest
     , filepath
     }:
     mkDerivation {
       pname = "doctest-discover";
       version = "0.1.0.9";
       sha256 = "1clr6w1h726bbcpq2px2c51jsk48i6ki1yd9vhqj2scvy4nvp437";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         aeson base bytestring directory doctest filepath
       ];
       executableHaskellDepends = [
         aeson base bytestring directory doctest filepath
       ];
       testHaskellDepends = [ base doctest ];
       doHaddock = false;
       doCheck = false;
       homepage = "http://github.com/karun012/doctest-discover";
       description = "Easy way to run doctests via cabal";
       license = stdenv.lib.licenses.publicDomain;
     }) {};
  "doctest-driver-gen" = callPackage
    ({ mkDerivation, base, doctest }:
     mkDerivation {
       pname = "doctest-driver-gen";
       version = "0.2.0.4";
       sha256 = "0wbsql0pph74nghnnwwm2p8w4wnqs0iiwqfn3p3i26g6cg8yv1nr";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [ base doctest ];
       executableHaskellDepends = [ base ];
       testHaskellDepends = [ base doctest ];
       homepage = "https://github.com/Hexirp/doctest-driver-gen#readme";
       description = "Generate driver file for doctest's cabal integration";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "dom-parser" = callPackage
    ({ mkDerivation, base, case-insensitive, containers, data-default
     , hspec, lens, mtl, scientific, semigroups, shakespeare, text
     , transformers, xml-conduit, xml-lens
     }:
     mkDerivation {
       pname = "dom-parser";
       version = "3.1.0";
       sha256 = "1hra4sh34dr1gv4z55dg3f8s2g9l2qb7nlb0j4w0imr71fp5rqfp";
       libraryHaskellDepends = [
         base case-insensitive containers lens mtl scientific semigroups
         text transformers xml-conduit xml-lens
       ];
       testHaskellDepends = [
         base data-default hspec lens semigroups shakespeare text
         xml-conduit
       ];
       homepage = "https://github.com/typeable/dom-parser";
       description = "Simple monadic DOM parser";
       license = stdenv.lib.licenses.mit;
     }) {};
  "dotenv" = callPackage
    ({ mkDerivation, base, base-compat, directory, exceptions, hspec
     , hspec-megaparsec, megaparsec, optparse-applicative, process, text
     , transformers, yaml
     }:
     mkDerivation {
       pname = "dotenv";
       version = "0.5.2.5";
       sha256 = "1qglnss7jpns585l1k2m3pwqv7mq3jvh66ypmjjxxi1zcihbz5x1";
       isLibrary = true;
       isExecutable = true;
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [
         base base-compat directory exceptions megaparsec process text
         transformers yaml
       ];
       executableHaskellDepends = [
         base base-compat megaparsec optparse-applicative process text
         transformers yaml
       ];
       testHaskellDepends = [
         base base-compat directory exceptions hspec hspec-megaparsec
         megaparsec process text transformers yaml
       ];
       homepage = "https://github.com/stackbuilders/dotenv-hs";
       description = "Loads environment variables from dotenv files";
       license = stdenv.lib.licenses.mit;
     }) {};
  "dotnet-timespan" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "dotnet-timespan";
       version = "0.0.1.0";
       sha256 = "1hws424hf4ifijmz2xn3jvwvayll5jig83bgkl9zavwipkzqvjnq";
       libraryHaskellDepends = [ base ];
       homepage = "http://github.com/YoEight/dotnet-timespan";
       description = ".NET TimeSpan";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "double-conversion" = callPackage
    ({ mkDerivation, base, bytestring, ghc-prim, HUnit, test-framework
     , test-framework-hunit, test-framework-quickcheck2, text
     }:
     mkDerivation {
       pname = "double-conversion";
       version = "2.0.2.0";
       sha256 = "0sx2kc1gw72mjvd8vph8bbjw5whfxfv92rsdhjg1c0al75rf3ka4";
       libraryHaskellDepends = [ base bytestring ghc-prim text ];
       testHaskellDepends = [
         base bytestring HUnit test-framework test-framework-hunit
         test-framework-quickcheck2 text
       ];
       homepage = "https://github.com/bos/double-conversion";
       description = "Fast conversion between double precision floating point and text";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "download" = callPackage
    ({ mkDerivation, base, bytestring, feed, hspec, tagsoup, xml }:
     mkDerivation {
       pname = "download";
       version = "0.3.2.6";
       sha256 = "1wpf8kxq924482p7bm5l24nhmvrr75sjqinfjkj6x2x55hd40vd0";
       libraryHaskellDepends = [ base bytestring feed tagsoup xml ];
       testHaskellDepends = [ base hspec ];
       doCheck = false;
       homepage = "https://github.com/psibi/download";
       description = "High-level file download based on URLs";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "drawille" = callPackage
    ({ mkDerivation, base, containers }:
     mkDerivation {
       pname = "drawille";
       version = "0.1.2.0";
       sha256 = "1prpca2glkh8rwqwppjnqlqw71pba221hmcn9jbnih86gbl8w65q";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [ base containers ];
       doCheck = false;
       homepage = "https://github.com/yamadapc/haskell-drawille#readme";
       description = "A port of asciimoo's drawille to haskell";
       license = stdenv.lib.licenses.gpl3;
     }) {};
  "drifter" = callPackage
    ({ mkDerivation, base, containers, fgl, tasty, tasty-hunit
     , tasty-quickcheck, text
     }:
     mkDerivation {
       pname = "drifter";
       version = "0.2.3";
       sha256 = "0f16v4v0ff27qk71a6fsrcwy02nc53g9q1qrfscn8q3swi3rslyz";
       libraryHaskellDepends = [ base containers fgl text ];
       testHaskellDepends = [
         base tasty tasty-hunit tasty-quickcheck text
       ];
       homepage = "https://github.com/AndrewRademacher/drifter";
       description = "Simple schema management for arbitrary databases";
       license = stdenv.lib.licenses.mit;
     }) {};
  "drifter-postgresql" = callPackage
    ({ mkDerivation, base, containers, drifter, either, mtl
     , postgresql-simple, tasty, tasty-hunit, text, time, transformers
     , transformers-compat
     }:
     mkDerivation {
       pname = "drifter-postgresql";
       version = "0.2.1";
       sha256 = "0p7ddvfmjhf22psga0phhw2m0sdhymsc5k13jrwrdawsxivh2clk";
       libraryHaskellDepends = [
         base containers drifter mtl postgresql-simple time transformers
         transformers-compat
       ];
       testHaskellDepends = [
         base drifter either postgresql-simple tasty tasty-hunit text
       ];
       doCheck = false;
       homepage = "http://github.com/michaelxavier/drifter-postgresql";
       description = "PostgreSQL support for the drifter schema migration tool";
       license = stdenv.lib.licenses.mit;
     }) {};
  "dsp" = callPackage
    ({ mkDerivation, array, base, containers, QuickCheck, random }:
     mkDerivation {
       pname = "dsp";
       version = "0.2.4.1";
       sha256 = "0b748v9v9i7kw2djnb9a89yjw0nhwhb5sfml3x6ajydjhx79a8ik";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [ array base containers random ];
       testHaskellDepends = [ array base containers QuickCheck ];
       homepage = "http://www.haskell.org/haskellwiki/DSP";
       description = "Haskell Digital Signal Processing";
       license = "GPL";
     }) {};
  "dual-tree" = callPackage
    ({ mkDerivation, base, monoid-extras, newtype-generics, QuickCheck
     , semigroups, testing-feat
     }:
     mkDerivation {
       pname = "dual-tree";
       version = "0.2.2";
       sha256 = "1sx9p9yr06z7bi7pshjpswizs6bkmfzcpw8xlasriniry86df4kl";
       revision = "2";
       editedCabalFile = "0r8idr1haqixa9nlp8db5iw9vr9sdk6rcargkr7w7s6i99lm6jmh";
       libraryHaskellDepends = [
         base monoid-extras newtype-generics semigroups
       ];
       testHaskellDepends = [
         base monoid-extras QuickCheck semigroups testing-feat
       ];
       description = "Rose trees with cached and accumulating monoidal annotations";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "dublincore-xml-conduit" = callPackage
    ({ mkDerivation, base, bytestring, conduit, conduit-combinators
     , data-default, QuickCheck, quickcheck-instances, resourcet
     , safe-exceptions, tasty, tasty-hunit, tasty-quickcheck, text, time
     , timerep, uri-bytestring, xml-conduit, xml-types
     }:
     mkDerivation {
       pname = "dublincore-xml-conduit";
       version = "0.1.0.2";
       sha256 = "17jzyj49j88xwsz54higi81a6v8kvb8i338n5416z1ni475qsynl";
       revision = "1";
       editedCabalFile = "1rljgmi4jb6yhigfy394jb64q5f5qx7i1g68pw6zgq9ziz91p321";
       libraryHaskellDepends = [
         base conduit conduit-combinators safe-exceptions text time timerep
         uri-bytestring xml-conduit xml-types
       ];
       testHaskellDepends = [
         base bytestring conduit conduit-combinators data-default QuickCheck
         quickcheck-instances resourcet safe-exceptions tasty tasty-hunit
         tasty-quickcheck text time uri-bytestring xml-conduit xml-types
       ];
       homepage = "https://github.com/k0ral/dublincore-xml-conduit";
       description = "XML streaming parser/renderer for the Dublin Core standard elements";
       license = stdenv.lib.licenses.publicDomain;
     }) {};
  "dunai" = callPackage
    ({ mkDerivation, base, MonadRandom, transformers, transformers-base
     }:
     mkDerivation {
       pname = "dunai";
       version = "0.4.0.0";
       sha256 = "05xqhbz0x7wzfka4wl2wvfhzr242nx4ci4r3zvm89mcyxn9q7x6n";
       libraryHaskellDepends = [
         base MonadRandom transformers transformers-base
       ];
       homepage = "https://github.com/ivanperez-keera/dunai";
       description = "Generalised reactive framework supporting classic, arrowized and monadic FRP";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "dvorak" = callPackage
    ({ mkDerivation, base, containers, hspec, QuickCheck }:
     mkDerivation {
       pname = "dvorak";
       version = "0.1.0.0";
       sha256 = "1kxnzzm24kslsyy9fsjazfz14svbh9svh6f7rnf060as864vmj5g";
       libraryHaskellDepends = [ base containers ];
       testHaskellDepends = [ base hspec QuickCheck ];
       homepage = "https://github.com/kvanberendonck/codec-dvorak";
       description = "Dvorak encoding for Haskell";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "dynamic-state" = callPackage
    ({ mkDerivation, base, binary, bytestring, hashable
     , unordered-containers
     }:
     mkDerivation {
       pname = "dynamic-state";
       version = "0.3.1";
       sha256 = "0drmlb3cvx0blsnqrxzdylpff5jxvpazsy1bxq2szcp70gghpmf4";
       libraryHaskellDepends = [
         base binary bytestring hashable unordered-containers
       ];
       description = "Optionally serializable dynamic state keyed by type";
       license = stdenv.lib.licenses.gpl2;
     }) {};
  "dyre" = callPackage
    ({ mkDerivation, base, binary, directory, executable-path, filepath
     , ghc-paths, io-storage, process, time, unix, xdg-basedir
     }:
     mkDerivation {
       pname = "dyre";
       version = "0.8.12";
       sha256 = "10hnlysy4bjvvznk8v902mlk4jx95qf972clyi1l32xkqrf30972";
       libraryHaskellDepends = [
         base binary directory executable-path filepath ghc-paths io-storage
         process time unix xdg-basedir
       ];
       homepage = "http://github.com/willdonnelly/dyre";
       description = "Dynamic reconfiguration in Haskell";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "easy-file" = callPackage
    ({ mkDerivation, base, directory, filepath, time, unix }:
     mkDerivation {
       pname = "easy-file";
       version = "0.2.2";
       sha256 = "0zmlcz723051qpn8l8vi51c5rx1blwrw4094jcshkmj8p9r2xxaj";
       libraryHaskellDepends = [ base directory filepath time unix ];
       homepage = "http://github.com/kazu-yamamoto/easy-file";
       description = "Cross-platform File handling";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "easytest" = callPackage
    ({ mkDerivation, async, base, call-stack, containers, mtl, random
     , stm, text, transformers
     }:
     mkDerivation {
       pname = "easytest";
       version = "0.2.1";
       sha256 = "0gdyawzlw6d15yz7ji599xjgfr0g7l1iq11ffr4aw3j6g3dc6m8i";
       libraryHaskellDepends = [
         async base call-stack containers mtl random stm text transformers
       ];
       testHaskellDepends = [ base ];
       homepage = "https://github.com/joelburget/easytest";
       description = "Simple, expressive testing library";
       license = stdenv.lib.licenses.mit;
     }) {};
  "echo" = callPackage
    ({ mkDerivation, base, process }:
     mkDerivation {
       pname = "echo";
       version = "0.1.3";
       sha256 = "1vw5ykpwhr39wc0hhcgq3r8dh59zq6ib4zxbz1qd2wl21wqhfkvh";
       revision = "1";
       editedCabalFile = "0br8wfiybcw5hand4imiw0i5hacdmrax1dv8g95f35gazffbx42l";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [ base process ];
       homepage = "https://github.com/RyanGlScott/echo";
       description = "A cross-platform, cross-console way to handle echoing terminal input";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "ed25519" = callPackage
    ({ mkDerivation, base, bytestring, ghc-prim }:
     mkDerivation {
       pname = "ed25519";
       version = "0.0.5.0";
       sha256 = "0v8msqvgzimhs7p5ri25hrb1ni2wvisl5rmdxy89fc59py79b9fq";
       revision = "2";
       editedCabalFile = "1cq6h3jqkb1kvd9fjfhsllg5gq78sdiyf2gy9862xhlbv6wil19f";
       libraryHaskellDepends = [ base bytestring ghc-prim ];
       doCheck = false;
       homepage = "http://thoughtpolice.github.com/hs-ed25519";
       description = "Ed25519 cryptographic signatures";
       license = stdenv.lib.licenses.mit;
     }) {};
  "edit-distance" = callPackage
    ({ mkDerivation, array, base, containers, criterion, deepseq
     , process, random, time, unix
     }:
     mkDerivation {
       pname = "edit-distance";
       version = "0.2.2.1";
       sha256 = "0jkca97zyv23yyilp3jydcrzxqhyk27swhzh82llvban5zp8b21y";
       revision = "1";
       editedCabalFile = "1vjn4ryzdilz7l1ad7czh11nw48h5mj8if7ij3q0mmc3sffa8csd";
       libraryHaskellDepends = [ array base containers random ];
       benchmarkHaskellDepends = [
         array base containers criterion deepseq process random time unix
       ];
       doCheck = false;
       homepage = "http://github.com/phadej/edit-distance";
       description = "Levenshtein and restricted Damerau-Levenshtein edit distances";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "edit-distance-vector" = callPackage
    ({ mkDerivation, base, QuickCheck, quickcheck-instances, vector }:
     mkDerivation {
       pname = "edit-distance-vector";
       version = "1.0.0.4";
       sha256 = "07qgc8dyi9kkzkd3xcd78wdlljy0xwhz65b4r2qg2piidpcdvpxp";
       libraryHaskellDepends = [ base vector ];
       testHaskellDepends = [
         base QuickCheck quickcheck-instances vector
       ];
       homepage = "https://github.com/thsutton/edit-distance-vector";
       description = "Calculate edit distances and edit scripts between vectors";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "editor-open" = callPackage
    ({ mkDerivation, base, bytestring, conduit, conduit-extra
     , directory, process, resourcet, temporary, transformers, unix
     }:
     mkDerivation {
       pname = "editor-open";
       version = "0.6.0.0";
       sha256 = "0raj0s8v72kz63hqpqhf58sx0a8mcwi4ania40spjirdrsdx3i9g";
       isLibrary = true;
       isExecutable = true;
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [
         base bytestring conduit conduit-extra directory process resourcet
         temporary transformers unix
       ];
       executableHaskellDepends = [
         base bytestring conduit conduit-extra resourcet
       ];
       homepage = "https://github.com/pharpend/editor-open";
       description = "Open the user's $VISUAL or $EDITOR for text input";
       license = stdenv.lib.licenses.asl20;
     }) {};
  "either" = callPackage
    ({ mkDerivation, base, bifunctors, mtl, profunctors, QuickCheck
     , semigroupoids, semigroups, test-framework
     , test-framework-quickcheck2
     }:
     mkDerivation {
       pname = "either";
       version = "5.0.1";
       sha256 = "064hjfld7dkzs78sy30k5qkiva3hx24rax6dvzz5ygr2c0zypdkc";
       revision = "1";
       editedCabalFile = "1kf0dy6nki64kkmjw8214jz3n086g1pghfm26f012b6qv0iakzca";
       libraryHaskellDepends = [
         base bifunctors mtl profunctors semigroupoids semigroups
       ];
       testHaskellDepends = [
         base QuickCheck test-framework test-framework-quickcheck2
       ];
       homepage = "http://github.com/ekmett/either/";
       description = "Combinators for working with sums";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "either-unwrap" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "either-unwrap";
       version = "1.1";
       sha256 = "0g1f5m7bcpnyg2sdvwx8x34ml6dqfrn326s8pbfciaqqf7wddayc";
       libraryHaskellDepends = [ base ];
       homepage = "http://github.com/gcross/either-unwrap";
       description = "Functions for probing and unwrapping values inside of Either";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "ekg" = callPackage
    ({ mkDerivation, aeson, base, bytestring, ekg-core, ekg-json
     , filepath, network, snap-core, snap-server, text, time
     , transformers, unordered-containers
     }:
     mkDerivation {
       pname = "ekg";
       version = "0.4.0.15";
       sha256 = "1k3d5kiqm034qs04k0pcisf4zbdmx2fcgl9a6c1lzzjw96zf6aj8";
       revision = "5";
       editedCabalFile = "0jwzwqr4giinq6wvl46399454nm9vc5g6mc2k2mx4wjdcl07qbgm";
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [
         aeson base bytestring ekg-core ekg-json filepath network snap-core
         snap-server text time transformers unordered-containers
       ];
       homepage = "https://github.com/tibbe/ekg";
       description = "Remote monitoring of processes";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "ekg-core" = callPackage
    ({ mkDerivation, base, containers, ghc-prim, text
     , unordered-containers
     }:
     mkDerivation {
       pname = "ekg-core";
       version = "0.1.1.6";
       sha256 = "0hjprlx99k7mgs2zn06yckir71dvz90xs24g2r990r97mmwxva36";
       libraryHaskellDepends = [
         base containers ghc-prim text unordered-containers
       ];
       benchmarkHaskellDepends = [ base ];
       homepage = "https://github.com/tibbe/ekg-core";
       description = "Tracking of system metrics";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "ekg-json" = callPackage
    ({ mkDerivation, aeson, base, ekg-core, text, unordered-containers
     }:
     mkDerivation {
       pname = "ekg-json";
       version = "0.1.0.6";
       sha256 = "0iyx0ix4dcyhh9xg4ia1lm7x2q0iffswnr33khfg9fr81am80shy";
       revision = "4";
       editedCabalFile = "16sn4nbqm0rxkf0swi6r2jn6z9x92qmcg9xlx258d98kqb5fkwjg";
       libraryHaskellDepends = [
         aeson base ekg-core text unordered-containers
       ];
       homepage = "https://github.com/tibbe/ekg-json";
       description = "JSON encoding of ekg metrics";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "ekg-statsd" = callPackage
    ({ mkDerivation, base, bytestring, ekg-core, network, text, time
     , unordered-containers
     }:
     mkDerivation {
       pname = "ekg-statsd";
       version = "0.2.4.0";
       sha256 = "1nvsiblha1fzykvfaq1s0fyvfmhm32wvxdsfkn9pqd6dl5ivyx2y";
       revision = "2";
       editedCabalFile = "1l0lh77qy4kbybkys1d4gg563fc593w27wpf4k1cg9j6ix6y604x";
       libraryHaskellDepends = [
         base bytestring ekg-core network text time unordered-containers
       ];
       homepage = "https://github.com/tibbe/ekg-statsd";
       description = "Push metrics to statsd";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "ekg-wai" = callPackage
    ({ mkDerivation, aeson, base, bytestring, ekg-core, ekg-json
     , filepath, http-types, network, text, time, transformers
     , unordered-containers, wai, wai-app-static, warp
     }:
     mkDerivation {
       pname = "ekg-wai";
       version = "0.1.0.3";
       sha256 = "1sd2fz4l4slizm179x9cskqdvrpf6w4d779kah9hrnk3nqbmklxz";
       revision = "2";
       editedCabalFile = "17kca2wzlcv8nxyq096fv57jfklhz4ibnvf5nqqdszczb03j3dnn";
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [
         aeson base bytestring ekg-core ekg-json filepath http-types network
         text time transformers unordered-containers wai wai-app-static warp
       ];
       homepage = "https://github.com/tvh/ekg-wai";
       description = "Remote monitoring of processes";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "elerea" = callPackage
    ({ mkDerivation, base, containers, transformers, transformers-base
     }:
     mkDerivation {
       pname = "elerea";
       version = "2.9.0";
       sha256 = "10b68j3mr85sy2riyrq49l30zxpins5ygqhgn81phn9j1dk224lh";
       libraryHaskellDepends = [
         base containers transformers transformers-base
       ];
       description = "A minimalistic FRP library";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "elf" = callPackage
    ({ mkDerivation, base, binary, bytestring, containers, hspec }:
     mkDerivation {
       pname = "elf";
       version = "0.29";
       sha256 = "1b4g98fk1p8mk0zdh6fwzm3vnzcrhvpysx4g4ahcbgbr4bqhjra2";
       libraryHaskellDepends = [ base binary bytestring ];
       testHaskellDepends = [ base bytestring containers hspec ];
       homepage = "https://github.com/wangbj/elf";
       description = "An Elf parser";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "eliminators" = callPackage
    ({ mkDerivation, base, extra, hspec, hspec-discover, singleton-nats
     , singletons, template-haskell, th-abstraction, th-desugar
     }:
     mkDerivation {
       pname = "eliminators";
       version = "0.4.1";
       sha256 = "000x3gjwyf2s44ry16a2a9dk7cqjvl0dh21r5k85s19ljrxsxv1v";
       libraryHaskellDepends = [
         base extra singleton-nats singletons template-haskell
         th-abstraction th-desugar
       ];
       testHaskellDepends = [ base hspec singleton-nats singletons ];
       testToolDepends = [ hspec-discover ];
       homepage = "https://github.com/RyanGlScott/eliminators";
       description = "Dependently typed elimination functions using singletons";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "elm-core-sources" = callPackage
    ({ mkDerivation, base, bytestring, containers, file-embed
     , template-haskell
     }:
     mkDerivation {
       pname = "elm-core-sources";
       version = "1.0.0";
       sha256 = "1yr0csgz0hv25cz3jslap0adwvfcvv35bns32b9g0vyda1fm00x4";
       libraryHaskellDepends = [
         base bytestring containers file-embed template-haskell
       ];
       homepage = "http://github.com/JoeyEremondi/elm-build-lib";
       description = "Source files for the Elm runtime and standard libraries";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "elm-export" = callPackage
    ({ mkDerivation, base, bytestring, containers, Diff, directory
     , formatting, hspec, hspec-core, HUnit, mtl, QuickCheck
     , quickcheck-instances, text, time, wl-pprint-text
     }:
     mkDerivation {
       pname = "elm-export";
       version = "0.6.0.1";
       sha256 = "1mgrcd1hrg6rjb5x18zh9vcxqsc9hnfwvvr1nia2piqqb40n565z";
       libraryHaskellDepends = [
         base bytestring containers directory formatting mtl text time
         wl-pprint-text
       ];
       testHaskellDepends = [
         base bytestring containers Diff hspec hspec-core HUnit QuickCheck
         quickcheck-instances text time
       ];
       homepage = "http://github.com/krisajenkins/elm-export";
       description = "A library to generate Elm types from Haskell source";
       license = "unknown";
       hydraPlatforms = stdenv.lib.platforms.none;
     }) {};
  "email-validate" = callPackage
    ({ mkDerivation, attoparsec, base, bytestring, doctest, hspec
     , QuickCheck, template-haskell
     }:
     mkDerivation {
       pname = "email-validate";
       version = "2.3.2.9";
       sha256 = "12sf380s0f78npga3x1bz9wkz82h477vvf3bvsxq69hrc7m6xb5f";
       libraryHaskellDepends = [
         attoparsec base bytestring template-haskell
       ];
       testHaskellDepends = [ base bytestring doctest hspec QuickCheck ];
       homepage = "https://github.com/Porges/email-validate-hs";
       description = "Email address validation";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "enclosed-exceptions" = callPackage
    ({ mkDerivation, base, deepseq, lifted-base, monad-control
     , transformers, transformers-base
     }:
     mkDerivation {
       pname = "enclosed-exceptions";
       version = "1.0.3";
       sha256 = "1fghjj7nkiddrf03ks8brjpr5x25yi9fs7xg6adbi4mc2gqr6vdg";
       libraryHaskellDepends = [
         base deepseq lifted-base monad-control transformers
         transformers-base
       ];
       doCheck = false;
       homepage = "https://github.com/jcristovao/enclosed-exceptions";
       description = "Catching all exceptions from within an enclosed computation";
       license = stdenv.lib.licenses.mit;
     }) {};
  "entropy" = callPackage
    ({ mkDerivation, base, bytestring, Cabal, directory, filepath
     , process, unix
     }:
     mkDerivation {
       pname = "entropy";
       version = "0.4.1.4";
       sha256 = "1fgf47l9klwn1xssbcbq6by651vikd8hlfxhiwd5bqzxr1jnlgrf";
       setupHaskellDepends = [ base Cabal directory filepath process ];
       libraryHaskellDepends = [ base bytestring unix ];
       homepage = "https://github.com/TomMD/entropy";
       description = "A platform independent entropy source";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "enum-subset-generate" = callPackage
    ({ mkDerivation, base, generic-random, hspec, microlens, QuickCheck
     , template-haskell
     }:
     mkDerivation {
       pname = "enum-subset-generate";
       version = "0.1.0.0";
       sha256 = "10a5n6bvg5pfc947sa5wijsysha3008bqwdkpl3mpvlmjh4c41yx";
       libraryHaskellDepends = [ base microlens template-haskell ];
       testHaskellDepends = [
         base generic-random hspec microlens QuickCheck template-haskell
       ];
       homepage = "https://github.com/0xd34df00d/enum-subset-generate#readme";
       description = "Generate an ADT being a subset of another ADT, and the corresponding mappings";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "enummapset" = callPackage
    ({ mkDerivation, base, containers, deepseq, semigroups }:
     mkDerivation {
       pname = "enummapset";
       version = "0.5.2.2";
       sha256 = "0x6fihrgvb2y6m0z2gi8n97b54aidydd8fnbmj02bq3x73gxnbvr";
       libraryHaskellDepends = [ base containers deepseq semigroups ];
       homepage = "https://github.com/michalt/enummapset";
       description = "IntMap and IntSet with Enum keys/elements";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "enumset" = callPackage
    ({ mkDerivation, base, data-accessor, semigroups, storable-record
     }:
     mkDerivation {
       pname = "enumset";
       version = "0.0.4.1";
       sha256 = "0m6ha4m9hvmzkgnwani3z3vgcllzgv6n578g56x4sb9bgxgi37az";
       libraryHaskellDepends = [
         base data-accessor semigroups storable-record
       ];
       description = "Sets of enumeration values represented by machine words";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "envelope" = callPackage
    ({ mkDerivation, aeson, base, doctest, Glob, http-api-data, mtl
     , text
     }:
     mkDerivation {
       pname = "envelope";
       version = "0.2.2.0";
       sha256 = "1ybyhq3yfcyaj1q1pwm41xzyfjdkmy6lls0n7kn5ks06z7inykfg";
       libraryHaskellDepends = [ aeson base http-api-data mtl text ];
       testHaskellDepends = [ base doctest Glob ];
       homepage = "https://github.com/cdepillabout/envelope#readme";
       description = "Defines generic 'Envelope' type to wrap reponses from a JSON API";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "envy" = callPackage
    ({ mkDerivation, base, bytestring, containers, hspec, mtl
     , QuickCheck, quickcheck-instances, text, time, transformers
     }:
     mkDerivation {
       pname = "envy";
       version = "1.5.1.0";
       sha256 = "1r2181n5ayww1ycg7vvz5pp5cyxs6asljf4kir7g80qnj2wwpjid";
       libraryHaskellDepends = [
         base bytestring containers mtl text time transformers
       ];
       testHaskellDepends = [
         base bytestring hspec mtl QuickCheck quickcheck-instances text time
         transformers
       ];
       description = "An environmentally friendly way to deal with environment variables";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "epub-metadata" = callPackage
    ({ mkDerivation, base, bytestring, containers, directory, filepath
     , HUnit, hxt, mtl, regex-compat-tdfa, utf8-string, zip-archive
     }:
     mkDerivation {
       pname = "epub-metadata";
       version = "4.5";
       sha256 = "0j839h7894l8hf846zmx0vx640ii3rgswr3jin690djrvwa3kbhr";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         base bytestring containers directory filepath hxt mtl
         regex-compat-tdfa utf8-string zip-archive
       ];
       executableHaskellDepends = [ base mtl ];
       testHaskellDepends = [
         base bytestring directory filepath HUnit hxt mtl regex-compat-tdfa
         utf8-string zip-archive
       ];
       homepage = "http://hub.darcs.net/dino/epub-metadata";
       description = "Library for parsing epub document metadata";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "eq" = callPackage
    ({ mkDerivation, base, semigroupoids }:
     mkDerivation {
       pname = "eq";
       version = "4.2";
       sha256 = "1s3h77i0h4z3dg97sqqjl027rz0k82h48cpzp0c7a75g0qx70q21";
       libraryHaskellDepends = [ base semigroupoids ];
       homepage = "http://github.com/ekmett/eq/";
       description = "Leibnizian equality";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "equal-files" = callPackage
    ({ mkDerivation, base, bytestring, explicit-exception, filemanip
     , transformers, utility-ht
     }:
     mkDerivation {
       pname = "equal-files";
       version = "0.0.5.3";
       sha256 = "1akj045b5554bmlbg94vaji1ly10n89xj1vip9ywamy5hv18bdz5";
       isLibrary = false;
       isExecutable = true;
       executableHaskellDepends = [
         base bytestring explicit-exception filemanip transformers
         utility-ht
       ];
       doHaddock = false;
       homepage = "http://code.haskell.org/~thielema/equal-files/";
       description = "Shell command for finding equal files";
       license = "GPL";
     }) {};
  "equivalence" = callPackage
    ({ mkDerivation, base, containers, mtl, QuickCheck, STMonadTrans
     , template-haskell, test-framework, test-framework-quickcheck2
     , transformers, transformers-compat
     }:
     mkDerivation {
       pname = "equivalence";
       version = "0.3.3";
       sha256 = "02jhn8z1aqyxp3krylhfnwr7zzjcd17q9qriyd9653i92b7di3gf";
       libraryHaskellDepends = [
         base containers mtl STMonadTrans transformers transformers-compat
       ];
       testHaskellDepends = [
         base containers mtl QuickCheck STMonadTrans template-haskell
         test-framework test-framework-quickcheck2 transformers
         transformers-compat
       ];
       homepage = "https://github.com/pa-ba/equivalence";
       description = "Maintaining an equivalence relation implemented as union-find using STT";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "erf" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "erf";
       version = "2.0.0.0";
       sha256 = "0dxk2r32ajmmc05vaxcp0yw6vgv4lkbmh8jcshncn98xgsfbgw14";
       libraryHaskellDepends = [ base ];
       description = "The error function, erf, and related functions";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "error-util" = callPackage
    ({ mkDerivation, base, transformers }:
     mkDerivation {
       pname = "error-util";
       version = "0.0.1.2";
       sha256 = "01jfbq43ps6wjl9z5l1g8zfdi225mfn3xy59n6vrfxh0vsi1c6fz";
       libraryHaskellDepends = [ base transformers ];
       homepage = "http://github.com/pmlodawski/error-util";
       description = "Set of utils and operators for error handling";
       license = stdenv.lib.licenses.mit;
     }) {};
  "errors" = callPackage
    ({ mkDerivation, base, exceptions, safe, text, transformers
     , transformers-compat
     }:
     mkDerivation {
       pname = "errors";
       version = "2.3.0";
       sha256 = "0x8znwn31qcx6kqx99wp7bc86kckfb39ncz3zxvj1s07kxlfawk7";
       libraryHaskellDepends = [
         base exceptions safe text transformers transformers-compat
       ];
       description = "Simplified error-handling";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "errors-ext" = callPackage
    ({ mkDerivation, base, binary-ext, bytestring, conduit, errors
     , exceptions, HUnit, monad-control, monad-loops, mtl, transformers
     }:
     mkDerivation {
       pname = "errors-ext";
       version = "0.4.2";
       sha256 = "064nvpc8yy3n6nvc7cmxmgblmarg4wlvawj0k7bc3mj6h0rnavj0";
       libraryHaskellDepends = [
         base errors exceptions monad-control mtl transformers
       ];
       testHaskellDepends = [
         base binary-ext bytestring conduit errors exceptions HUnit
         monad-control monad-loops mtl transformers
       ];
       homepage = "https://github.com/A1-Triard/errors-ext#readme";
       description = "`bracket`-like functions for `ExceptT` over `IO` monad";
       license = stdenv.lib.licenses.asl20;
     }) {};
  "ersatz" = callPackage
    ({ mkDerivation, array, attoparsec, base, bytestring, Cabal
     , cabal-doctest, containers, data-default, directory, doctest
     , filepath, lens, mtl, parsec, process, semigroups, temporary
     , transformers, unordered-containers
     }:
     mkDerivation {
       pname = "ersatz";
       version = "0.4.4";
       sha256 = "06d0fc5s5yxk1q54fsbnnhmvf25m5g86fqdzb42f0ckc0h3sbp22";
       isLibrary = true;
       isExecutable = true;
       enableSeparateDataOutput = true;
       setupHaskellDepends = [ base Cabal cabal-doctest ];
       libraryHaskellDepends = [
         array attoparsec base bytestring containers data-default lens mtl
         process semigroups temporary transformers unordered-containers
       ];
       executableHaskellDepends = [
         array base containers lens mtl parsec semigroups
       ];
       testHaskellDepends = [ array base directory doctest filepath mtl ];
       homepage = "http://github.com/ekmett/ersatz";
       description = "A monad for expressing SAT or QSAT problems using observable sharing";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "etc" = callPackage
    ({ mkDerivation, aeson, base, rio, tasty, tasty-hunit
     , template-haskell, text, typed-process, unliftio
     }:
     mkDerivation {
       pname = "etc";
       version = "0.4.1.0";
       sha256 = "1j17g8jij4y782vwpx7b52fv9nwv4v4mygk2hbq6vihzkbrdbd31";
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [
         aeson base rio template-haskell text typed-process unliftio
       ];
       testHaskellDepends = [ aeson base rio tasty tasty-hunit ];
       homepage = "https://github.com/roman/Haskell-etc";
       description = "Declarative configuration spec for Haskell projects";
       license = stdenv.lib.licenses.mit;
     }) {};
  "event" = callPackage
    ({ mkDerivation, base, containers, semigroups, transformers }:
     mkDerivation {
       pname = "event";
       version = "0.1.4";
       sha256 = "0jl2s74zqnkpblf7b68bm32n1vk1rdjjyndb0waa2xsd5d0d34b7";
       libraryHaskellDepends = [
         base containers semigroups transformers
       ];
       description = "Monoidal, monadic and first-class events";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "event-list" = callPackage
    ({ mkDerivation, base, non-negative, QuickCheck, random, semigroups
     , transformers, utility-ht
     }:
     mkDerivation {
       pname = "event-list";
       version = "0.1.2";
       sha256 = "177q99iswmanh34wlgklw1djvv5v1c0b5ysyi7mdmb70fsw30kk2";
       libraryHaskellDepends = [
         base non-negative QuickCheck semigroups transformers utility-ht
       ];
       testHaskellDepends = [
         base non-negative QuickCheck random semigroups transformers
         utility-ht
       ];
       homepage = "http://code.haskell.org/~thielema/event-list/";
       description = "Event lists with relative or absolute time stamps";
       license = "GPL";
     }) {};
  "eventful-core" = callPackage
    ({ mkDerivation, aeson, base, containers, contravariant, hspec
     , http-api-data, HUnit, path-pieces, sum-type-boilerplate
     , template-haskell, text, transformers, uuid
     }:
     mkDerivation {
       pname = "eventful-core";
       version = "0.2.0";
       sha256 = "06chbjrxfxk0fr9lgdic6bmylnv3kz398l9drqr85r6qk1s5xxg0";
       libraryHaskellDepends = [
         aeson base containers contravariant http-api-data path-pieces
         sum-type-boilerplate template-haskell text transformers uuid
       ];
       testHaskellDepends = [
         aeson base containers contravariant hspec http-api-data HUnit
         path-pieces sum-type-boilerplate template-haskell text transformers
         uuid
       ];
       homepage = "https://github.com/jdreaver/eventful#readme";
       description = "Core module for eventful";
       license = stdenv.lib.licenses.mit;
     }) {};
  "eventful-memory" = callPackage
    ({ mkDerivation, base, containers, eventful-core
     , eventful-test-helpers, hspec, HUnit, mtl, safe, stm
     }:
     mkDerivation {
       pname = "eventful-memory";
       version = "0.2.0";
       sha256 = "1fdd2z13lnk1zxhylriwblz96x90v4504abrj9rfbi732853wz3a";
       libraryHaskellDepends = [
         base containers eventful-core mtl safe stm
       ];
       testHaskellDepends = [
         base containers eventful-core eventful-test-helpers hspec HUnit mtl
         safe stm
       ];
       homepage = "https://github.com/jdreaver/eventful#readme";
       description = "In-memory implementations for eventful";
       license = stdenv.lib.licenses.mit;
     }) {};
  "eventful-sql-common" = callPackage
    ({ mkDerivation, aeson, base, bytestring, eventful-core, mtl
     , persistent, persistent-template, text, uuid
     }:
     mkDerivation {
       pname = "eventful-sql-common";
       version = "0.2.0";
       sha256 = "1g5f6rvb14hi81dby2hdcq444zhv2vl76ql4lsrh9gdmpf6a2vm4";
       libraryHaskellDepends = [
         aeson base bytestring eventful-core mtl persistent
         persistent-template text uuid
       ];
       homepage = "https://github.com/jdreaver/eventful#readme";
       description = "Common library for SQL event stores";
       license = stdenv.lib.licenses.mit;
     }) {};
  "eventful-sqlite" = callPackage
    ({ mkDerivation, aeson, base, bytestring, eventful-core
     , eventful-sql-common, eventful-test-helpers, hspec, HUnit, mtl
     , persistent, persistent-sqlite, text, uuid
     }:
     mkDerivation {
       pname = "eventful-sqlite";
       version = "0.2.0";
       sha256 = "1vyz8401n63gqwgl1fa9dw1ar1dgki4hy6ably8lh2hzpl7fmfy0";
       libraryHaskellDepends = [
         aeson base bytestring eventful-core eventful-sql-common mtl
         persistent text uuid
       ];
       testHaskellDepends = [
         aeson base bytestring eventful-core eventful-sql-common
         eventful-test-helpers hspec HUnit mtl persistent persistent-sqlite
         text uuid
       ];
       homepage = "https://github.com/jdreaver/eventful#readme";
       description = "SQLite implementations for eventful";
       license = stdenv.lib.licenses.mit;
     }) {};
  "eventful-test-helpers" = callPackage
    ({ mkDerivation, aeson, aeson-casing, base, eventful-core, extra
     , hspec, monad-logger, text
     }:
     mkDerivation {
       pname = "eventful-test-helpers";
       version = "0.2.0";
       sha256 = "1q5z9rf5hxwpsyvm28hfnkr72zfsg7h5kz648bass9irvq69v7x9";
       libraryHaskellDepends = [
         aeson aeson-casing base eventful-core extra hspec monad-logger text
       ];
       homepage = "https://github.com/jdreaver/eventful#readme";
       description = "Common module used for eventful tests";
       license = stdenv.lib.licenses.mit;
     }) {};
  "eventstore" = callPackage
    ({ mkDerivation, aeson, array, async, base, bifunctors, bytestring
     , cereal, clock, connection, containers, dns, dotnet-timespan
     , ekg-core, exceptions, fast-logger, hashable, http-client
     , interpolate, lifted-async, lifted-base, machines, monad-control
     , monad-logger, mono-traversable, mtl, protobuf, random
     , safe-exceptions, semigroups, stm, stm-chans, tasty, tasty-hspec
     , tasty-hunit, text, time, transformers-base, unordered-containers
     , uuid
     }:
     mkDerivation {
       pname = "eventstore";
       version = "1.1.6";
       sha256 = "00bdkklwrabxvbr725hkdsc1a2fdr50gdwryn7spmsqxmqgzv96w";
       revision = "1";
       editedCabalFile = "1y1a7brw220bg4mfc80qhkcyzlm38qvs6pkr7p8xyk104b8k5qgx";
       libraryHaskellDepends = [
         aeson array base bifunctors bytestring cereal clock connection
         containers dns dotnet-timespan ekg-core exceptions fast-logger
         hashable http-client interpolate lifted-async lifted-base machines
         monad-control monad-logger mono-traversable mtl protobuf random
         safe-exceptions semigroups stm stm-chans text time
         transformers-base unordered-containers uuid
       ];
       testHaskellDepends = [
         aeson async base bytestring cereal connection containers
         dotnet-timespan exceptions fast-logger hashable lifted-async
         lifted-base monad-control mono-traversable protobuf safe-exceptions
         semigroups stm stm-chans tasty tasty-hspec tasty-hunit text time
         transformers-base unordered-containers uuid
       ];
       doCheck = false;
       homepage = "https://gitlab.com/YoEight/eventstore-hs";
       description = "EventStore TCP Client";
       license = stdenv.lib.licenses.bsd3;
       platforms = [ "x86_64-darwin" "x86_64-linux" ];
     }) {};
  "every" = callPackage
    ({ mkDerivation, async, base, stm }:
     mkDerivation {
       pname = "every";
       version = "0.0.1";
       sha256 = "1rc0g5rn8hzglm2b4biaf8jvj5kb2j1s5vsxnm24q2gvrvjg03sx";
       libraryHaskellDepends = [ async base stm ];
       homepage = "https://github.com/athanclark/every#readme";
       description = "Run a process every so often";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "exact-combinatorics" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "exact-combinatorics";
       version = "0.2.0.8";
       sha256 = "0pj7sh6s1kawk39hb42q1sx20g2rmzanpmr3zri9yvmb16qj5a1j";
       libraryHaskellDepends = [ base ];
       homepage = "http://code.haskell.org/~wren/";
       description = "Efficient exact computation of combinatoric functions";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "exact-pi" = callPackage
    ({ mkDerivation, base, numtype-dk }:
     mkDerivation {
       pname = "exact-pi";
       version = "0.4.1.4";
       sha256 = "15v10wn5zgg7y66jzfg0l8lx2qpj91dh7rp05aa3c6c3dss9dx3v";
       libraryHaskellDepends = [ base numtype-dk ];
       homepage = "https://github.com/dmcclean/exact-pi/";
       description = "Exact rational multiples of pi (and integer powers of pi)";
       license = stdenv.lib.licenses.mit;
     }) {};
  "exception-hierarchy" = callPackage
    ({ mkDerivation, base, template-haskell }:
     mkDerivation {
       pname = "exception-hierarchy";
       version = "0.1.0.1";
       sha256 = "1zk06z8fwr4g701c79vvsqmagjcm2h850d9m96zrig08kz3lshm9";
       libraryHaskellDepends = [ base template-haskell ];
       homepage = "yet";
       description = "Exception type hierarchy with TemplateHaskell";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "exception-mtl" = callPackage
    ({ mkDerivation, base, exception-transformers, mtl, transformers }:
     mkDerivation {
       pname = "exception-mtl";
       version = "0.4.0.1";
       sha256 = "0d51rsrcjy52d62f51hb6fdg0fj9b0qbv8hqf6523pndwsxbq4zc";
       libraryHaskellDepends = [
         base exception-transformers mtl transformers
       ];
       description = "Exception monad transformer instances for mtl classes";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "exception-transformers" = callPackage
    ({ mkDerivation, base, HUnit, stm, test-framework
     , test-framework-hunit, transformers, transformers-compat
     }:
     mkDerivation {
       pname = "exception-transformers";
       version = "0.4.0.7";
       sha256 = "1vzjy6mz6y9jacpwq2bax86nwzq9mk4b9y3r3r98l50r7pmn2nwj";
       revision = "1";
       editedCabalFile = "0sahi93f75acvmqagkjc1lcwx31crja6z9hyww9abj85x45pqa6f";
       libraryHaskellDepends = [
         base stm transformers transformers-compat
       ];
       testHaskellDepends = [
         base HUnit test-framework test-framework-hunit transformers
         transformers-compat
       ];
       description = "Type classes and monads for unchecked extensible exceptions";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "exceptional" = callPackage
    ({ mkDerivation, base, exceptions }:
     mkDerivation {
       pname = "exceptional";
       version = "0.3.0.0";
       sha256 = "01lzx4ihdvyivjnkvn78hcdsk83dvm6iy9v5q1f28kd1iv96x1ns";
       libraryHaskellDepends = [ base exceptions ];
       homepage = "https://github.com/";
       description = "Essentially the Maybe type with error messages";
       license = stdenv.lib.licenses.bsd2;
     }) {};
  "exceptions" = callPackage
    ({ mkDerivation, base, mtl, QuickCheck, stm, template-haskell
     , test-framework, test-framework-hunit, test-framework-quickcheck2
     , transformers, transformers-compat
     }:
     mkDerivation {
       pname = "exceptions";
       version = "0.10.0";
       sha256 = "1ms9zansv0pwzwdjncvx4kf18lnkjy2p61hvjhvxmjx5bqp93p8y";
       revision = "2";
       editedCabalFile = "0aiihbjfrlmxzw9q8idvr6mihhs7kbx9s3w1vj8x3pz27p0ncq7g";
       libraryHaskellDepends = [
         base mtl stm template-haskell transformers transformers-compat
       ];
       testHaskellDepends = [
         base mtl QuickCheck stm template-haskell test-framework
         test-framework-hunit test-framework-quickcheck2 transformers
         transformers-compat
       ];
       homepage = "http://github.com/ekmett/exceptions/";
       description = "Extensible optionally-pure exceptions";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "executable-hash" = callPackage
    ({ mkDerivation, base, bytestring, Cabal, cryptohash, directory
     , executable-path, file-embed, filepath, template-haskell
     }:
     mkDerivation {
       pname = "executable-hash";
       version = "0.2.0.4";
       sha256 = "191blh2kr2xha8l7j1nbwfq00jf5bfn25cv63y2bglwh5mkgbsil";
       isLibrary = true;
       isExecutable = true;
       setupHaskellDepends = [
         base bytestring Cabal cryptohash directory file-embed filepath
         template-haskell
       ];
       libraryHaskellDepends = [
         base bytestring cryptohash directory executable-path file-embed
         template-haskell
       ];
       executableHaskellDepends = [ base ];
       testHaskellDepends = [ base ];
       homepage = "http://github.com/fpco/executable-hash";
       description = "Provides the SHA1 hash of the program executable";
       license = stdenv.lib.licenses.mit;
     }) {};
  "executable-path" = callPackage
    ({ mkDerivation, base, directory, filepath, unix }:
     mkDerivation {
       pname = "executable-path";
       version = "0.0.3.1";
       sha256 = "0vxwmnsvx13cawcyhbyljkds0l1vr996ijldycx7nj0asjv45iww";
       libraryHaskellDepends = [ base directory filepath unix ];
       homepage = "http://code.haskell.org/~bkomuves/";
       description = "Finding out the full path of the executable";
       license = stdenv.lib.licenses.publicDomain;
     }) {};
  "exinst" = callPackage
    ({ mkDerivation, aeson, base, binary, bytes, bytestring, cereal
     , constraints, deepseq, hashable, profunctors, QuickCheck
     , singletons, tasty, tasty-hunit, tasty-quickcheck
     }:
     mkDerivation {
       pname = "exinst";
       version = "0.6";
       sha256 = "0pljgk0y4azzgp0k9q8dl7jpf9bf2719xax54mnc35g1px4s21p9";
       configureFlags = [ "-f-serialise" ];
       libraryHaskellDepends = [
         aeson base binary bytes cereal constraints deepseq hashable
         profunctors QuickCheck singletons
       ];
       testHaskellDepends = [
         aeson base binary bytes bytestring cereal constraints deepseq
         hashable profunctors QuickCheck singletons tasty tasty-hunit
         tasty-quickcheck
       ];
       homepage = "https://github.com/k0001/exinst";
       description = "Dependent pairs and their instances";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "exomizer" = callPackage
    ({ mkDerivation, base, bytestring, c2hs }:
     mkDerivation {
       pname = "exomizer";
       version = "1.0.0";
       sha256 = "1lngwbwgmh6dvskambn35ncrni7cxlychwbircb6srhjdm1lvhll";
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [ base bytestring ];
       libraryToolDepends = [ c2hs ];
       homepage = "https://github.com/alexkazik/exomizer#readme";
       description = "Compression and decompression in the exomizer format";
       license = "unknown";
       hydraPlatforms = stdenv.lib.platforms.none;
     }) {};
  "exp-pairs" = callPackage
    ({ mkDerivation, base, containers, deepseq, ghc-prim, matrix
     , prettyprinter, QuickCheck, random, smallcheck, tasty, tasty-hunit
     , tasty-quickcheck, tasty-smallcheck
     }:
     mkDerivation {
       pname = "exp-pairs";
       version = "0.1.6.0";
       sha256 = "1qsvly4klhk17r2pk60cf03dyz0cjc449fa2plqrlai9rl7xjfp6";
       revision = "1";
       editedCabalFile = "1zbsjlj6wavz9ysfzjqb4ng7688crlfvsbyj4li84khc1jp71xj3";
       libraryHaskellDepends = [
         base containers deepseq ghc-prim prettyprinter
       ];
       testHaskellDepends = [
         base matrix QuickCheck random smallcheck tasty tasty-hunit
         tasty-quickcheck tasty-smallcheck
       ];
       homepage = "https://github.com/Bodigrim/exp-pairs";
       description = "Linear programming over exponent pairs";
       license = stdenv.lib.licenses.gpl3;
     }) {};
  "expiring-cache-map" = callPackage
    ({ mkDerivation, base, bytestring, containers, hashable, time
     , unordered-containers
     }:
     mkDerivation {
       pname = "expiring-cache-map";
       version = "0.0.6.1";
       sha256 = "1fb47hsn06ybn2yzw7r6pjkmvvfpbdx7wjhbpxcywilbjyac4fqf";
       libraryHaskellDepends = [
         base containers hashable unordered-containers
       ];
       testHaskellDepends = [
         base bytestring containers hashable time unordered-containers
       ];
       homepage = "https://github.com/elblake/expiring-cache-map";
       description = "General purpose simple caching";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "explicit-exception" = callPackage
    ({ mkDerivation, base, deepseq, semigroups, transformers }:
     mkDerivation {
       pname = "explicit-exception";
       version = "0.1.9.2";
       sha256 = "1xj9fqh28br5xyzzc28zl23jj913ayhikvwcw9ccj3pqfybh5xk0";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [ base deepseq semigroups transformers ];
       homepage = "http://www.haskell.org/haskellwiki/Exception";
       description = "Exceptions which are explicit in the type signature";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "extensible" = callPackage
    ({ mkDerivation, aeson, base, bytestring, cassava, comonad
     , constraints, deepseq, ghc-prim, hashable, lens, monad-skeleton
     , mtl, prettyprinter, primitive, profunctors, QuickCheck
     , semigroups, StateVar, tagged, template-haskell, text, th-lift
     , transformers, unordered-containers, vector
     }:
     mkDerivation {
       pname = "extensible";
       version = "0.4.9";
       sha256 = "11iyz4lgs2bf6wg1iiancwj58ywpj8f93bqj9scy4mzz8mpyllmp";
       libraryHaskellDepends = [
         aeson base bytestring cassava comonad constraints deepseq ghc-prim
         hashable monad-skeleton mtl prettyprinter primitive profunctors
         QuickCheck semigroups StateVar tagged template-haskell text th-lift
         transformers unordered-containers vector
       ];
       testHaskellDepends = [ base lens QuickCheck template-haskell ];
       homepage = "https://github.com/fumieval/extensible";
       description = "Extensible, efficient, optics-friendly data types and effects";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "extensible-exceptions" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "extensible-exceptions";
       version = "0.1.1.4";
       sha256 = "1273nqws9ij1rp1bsq5jc7k2jxpqa0svawdbim05lf302y0firbc";
       libraryHaskellDepends = [ base ];
       description = "Extensible exceptions";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "extra" = callPackage
    ({ mkDerivation, base, clock, directory, filepath, process
     , QuickCheck, time, unix
     }:
     mkDerivation {
       pname = "extra";
       version = "1.6.14";
       sha256 = "170jmwx2wnpa6bs92pcijm4ib4hq0vs4582s6v63wrcn1m9l21m6";
       libraryHaskellDepends = [
         base clock directory filepath process time unix
       ];
       testHaskellDepends = [ base directory filepath QuickCheck unix ];
       homepage = "https://github.com/ndmitchell/extra#readme";
       description = "Extra functions I use";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "extractable-singleton" = callPackage
    ({ mkDerivation, base, transformers }:
     mkDerivation {
       pname = "extractable-singleton";
       version = "0.0.1";
       sha256 = "1bf0naqx0gb66dr7g58lfaba87zmg09ynzdb3cyyymwcv4l1knp8";
       libraryHaskellDepends = [ base transformers ];
       homepage = "https://github.com/athanclark/extractable-singleton#readme";
       description = "A functor, where the \"stored\" value is isomorphic to Identity";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "extrapolate" = callPackage
    ({ mkDerivation, base, leancheck, speculate, template-haskell }:
     mkDerivation {
       pname = "extrapolate";
       version = "0.3.3";
       sha256 = "1mc14d9wcrvrd2fkzjxc5gvy7s33p875qj97bdaacdjv5hmg5zr2";
       libraryHaskellDepends = [
         base leancheck speculate template-haskell
       ];
       testHaskellDepends = [ base leancheck speculate ];
       homepage = "https://github.com/rudymatela/extrapolate#readme";
       description = "generalize counter-examples of test properties";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "facts" = callPackage
    ({ mkDerivation, base, exceptions, mtl, template-haskell }:
     mkDerivation {
       pname = "facts";
       version = "0.0.1.0";
       sha256 = "12ifja6vgm8hafs23fzb2jfk0jiz4nss1if5b86950y3mc995rfx";
       revision = "1";
       editedCabalFile = "03v6p3vlilz6vk5xlvw3r31cqicx3m1xjii9shcqpacxvlh2zzlp";
       libraryHaskellDepends = [ base exceptions mtl template-haskell ];
       homepage = "https://github.com/mrkkrp/facts";
       description = "Refined types";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "fail" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "fail";
       version = "4.9.0.0";
       sha256 = "18nlj6xvnggy61gwbyrpmvbdkq928wv0wx2zcsljb52kbhddnp3d";
       doHaddock = false;
       homepage = "https://prime.haskell.org/wiki/Libraries/Proposals/MonadFail";
       description = "Forward-compatible MonadFail class";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "farmhash" = callPackage
    ({ mkDerivation, base, bytestring, criterion, hspec, QuickCheck }:
     mkDerivation {
       pname = "farmhash";
       version = "0.1.0.5";
       sha256 = "188gqa5szqm88kgpax32b830cgyh8z5vq2fjha3fig7p8ma5ls0f";
       libraryHaskellDepends = [ base bytestring ];
       testHaskellDepends = [ base bytestring hspec QuickCheck ];
       benchmarkHaskellDepends = [ base bytestring criterion ];
       homepage = "https://github.com/abhinav/farmhash";
       description = "Fast hash functions";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "fast-digits" = callPackage
    ({ mkDerivation, base, criterion, digits, integer-gmp, QuickCheck
     , smallcheck, tasty, tasty-quickcheck, tasty-smallcheck
     }:
     mkDerivation {
       pname = "fast-digits";
       version = "0.2.1.0";
       sha256 = "0fyqdlb5wmsbsxsk8s7p8j2g3g4idsv9ki67ay1dw0lj8xp5g17c";
       libraryHaskellDepends = [ base integer-gmp ];
       testHaskellDepends = [
         base digits QuickCheck smallcheck tasty tasty-quickcheck
         tasty-smallcheck
       ];
       benchmarkHaskellDepends = [ base criterion digits ];
       homepage = "https://github.com/Bodigrim/fast-digits";
       description = "The fast library for integer-to-digits conversion";
       license = stdenv.lib.licenses.gpl3;
     }) {};
  "fast-logger" = callPackage
    ({ mkDerivation, array, auto-update, base, bytestring, directory
     , easy-file, filepath, hspec, text, unix, unix-time
     }:
     mkDerivation {
       pname = "fast-logger";
       version = "2.4.11";
       sha256 = "1ad2vq4nifdxshqk9yrmghqizhkgybfz134kpr6padglb2mxxrdv";
       libraryHaskellDepends = [
         array auto-update base bytestring directory easy-file filepath text
         unix unix-time
       ];
       testHaskellDepends = [ base bytestring directory hspec ];
       homepage = "https://github.com/kazu-yamamoto/logger";
       description = "A fast logging system";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "fast-math" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "fast-math";
       version = "1.0.2";
       sha256 = "15dyw88z9abiv6n40fz4g3jpj9v6qbxvqaf0ds32wh46igf1s425";
       libraryHaskellDepends = [ base ];
       description = "Non IEEE-754 compliant compile-time floating-point optimisations";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "fay" = callPackage
    ({ mkDerivation, aeson, attoparsec, base, base-compat, bytestring
     , Cabal, containers, data-default, data-lens-light, directory
     , filepath, ghc-paths, haskell-src-exts, language-ecmascript, mtl
     , mtl-compat, optparse-applicative, process, random, safe
     , shakespeare, sourcemap, split, spoon, syb, tasty, tasty-hunit
     , tasty-th, text, time, transformers, transformers-compat
     , traverse-with-class, uniplate, unordered-containers, utf8-string
     , vector
     }:
     mkDerivation {
       pname = "fay";
       version = "0.24.0.1";
       sha256 = "05z8dyw1yf2bh42mrrk1d9rxqdz1p6gn8sjnpk66s2k76xrg4vm2";
       configureFlags = [ "-ftest" ];
       isLibrary = true;
       isExecutable = true;
       enableSeparateDataOutput = true;
       setupHaskellDepends = [ base Cabal ];
       libraryHaskellDepends = [
         aeson base base-compat bytestring containers data-default
         data-lens-light directory filepath ghc-paths haskell-src-exts
         language-ecmascript mtl mtl-compat process safe shakespeare
         sourcemap split spoon syb text time transformers
         transformers-compat traverse-with-class uniplate
         unordered-containers utf8-string vector
       ];
       executableHaskellDepends = [
         aeson attoparsec base bytestring containers directory filepath
         haskell-src-exts mtl optparse-applicative random split tasty
         tasty-hunit tasty-th text utf8-string
       ];
       homepage = "https://github.com/faylang/fay/wiki";
       description = "A compiler for Fay, a Haskell subset that compiles to JavaScript";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "fay-base" = callPackage
    ({ mkDerivation, base, fay }:
     mkDerivation {
       pname = "fay-base";
       version = "0.21.1.0";
       sha256 = "1i19q04a4z3aix8njw5im8ixkw7l53xfhff0rrgx3ibnf9jy752z";
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [ base fay ];
       homepage = "https://github.com/faylang/fay/";
       description = "The base package for Fay";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "fay-dom" = callPackage
    ({ mkDerivation, fay-base }:
     mkDerivation {
       pname = "fay-dom";
       version = "0.5.0.1";
       sha256 = "1zm6w6nccswaksr283alhnsss6xw4k7s61yp8ff4lg5127ff9wp0";
       revision = "1";
       editedCabalFile = "1lhmkf2n7prv6w51bl3szz4g9cn2dkhb873m7f568nnwysqibv8b";
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [ fay-base ];
       homepage = "https://github.com/faylang/fay-dom";
       description = "DOM FFI wrapper library for Fay";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "fb" = callPackage
    ({ mkDerivation, aeson, attoparsec, base, base16-bytestring
     , base64-bytestring, bytestring, cereal, conduit, conduit-extra
     , containers, crypto-api, cryptohash, cryptohash-cryptoapi
     , data-default, hspec, http-client, http-conduit, http-types, HUnit
     , monad-logger, old-locale, QuickCheck, resourcet, text, time
     , transformers, transformers-base, unliftio, unliftio-core
     , unordered-containers
     }:
     mkDerivation {
       pname = "fb";
       version = "1.2.1";
       sha256 = "05ax0pd9j6c64n48r9q03k5pg2axkmv11cz6azjg7k72cfkp1mm9";
       libraryHaskellDepends = [
         aeson attoparsec base base16-bytestring base64-bytestring
         bytestring cereal conduit conduit-extra crypto-api cryptohash
         cryptohash-cryptoapi data-default http-client http-conduit
         http-types monad-logger old-locale resourcet text time transformers
         transformers-base unliftio unliftio-core unordered-containers
       ];
       testHaskellDepends = [
         aeson base bytestring conduit containers data-default hspec
         http-conduit HUnit QuickCheck resourcet text time transformers
         unliftio
       ];
       doCheck = false;
       homepage = "https://github.com/psibi/fb";
       description = "Bindings to Facebook's API";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "fclabels" = callPackage
    ({ mkDerivation, base, criterion, HUnit, mtl, template-haskell
     , transformers
     }:
     mkDerivation {
       pname = "fclabels";
       version = "2.0.3.3";
       sha256 = "1q62p41bj991s7i15ciayw1v1xq8szn4bls50p65lfy2dnj7554s";
       revision = "3";
       editedCabalFile = "1wncfnvh4mv87gh0ddhiqf839d63rqs1qzi3y386y6r8hfnvra0l";
       libraryHaskellDepends = [ base mtl template-haskell transformers ];
       testHaskellDepends = [
         base HUnit mtl template-haskell transformers
       ];
       benchmarkHaskellDepends = [ base criterion ];
       homepage = "https://github.com/sebastiaanvisser/fclabels";
       description = "First class accessor labels implemented as lenses";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "feature-flags" = callPackage
    ({ mkDerivation, base, text }:
     mkDerivation {
       pname = "feature-flags";
       version = "0.1.0.1";
       sha256 = "1lssjgksq0k2dd7l5lmzxnr9f5zk3gbh386zfmcqgc4iczdzfk0f";
       libraryHaskellDepends = [ base text ];
       homepage = "https://github.com/iand675/feature-flags";
       description = "A simple library for dynamically enabling and disabling functionality";
       license = stdenv.lib.licenses.mit;
     }) {};
  "fedora-haskell-tools" = callPackage
    ({ mkDerivation, base, directory, filepath, process, time, unix }:
     mkDerivation {
       pname = "fedora-haskell-tools";
       version = "0.5.1";
       sha256 = "1543i2lxzplqmx1cpggp5773qvqc6jzn4960c1cgyhg9mjd13adr";
       isLibrary = false;
       isExecutable = true;
       executableHaskellDepends = [
         base directory filepath process time unix
       ];
       doHaddock = false;
       homepage = "https://github.com/fedora-haskell/fedora-haskell-tools";
       description = "Building and managing tools for Fedora Haskell";
       license = stdenv.lib.licenses.gpl3;
     }) {};
  "feed" = callPackage
    ({ mkDerivation, base, base-compat, bytestring, HUnit
     , markdown-unlit, old-locale, old-time, safe, test-framework
     , test-framework-hunit, text, time, time-locale-compat, utf8-string
     , xml-conduit, xml-types
     }:
     mkDerivation {
       pname = "feed";
       version = "1.0.1.0";
       sha256 = "076krkyvbh24s50chdw3nz6w2svwchys65ppjzlm8gy42ddhbgc7";
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [
         base base-compat bytestring old-locale old-time safe text time
         time-locale-compat utf8-string xml-conduit xml-types
       ];
       testHaskellDepends = [
         base base-compat HUnit old-time test-framework test-framework-hunit
         text time xml-conduit xml-types
       ];
       testToolDepends = [ markdown-unlit ];
       homepage = "https://github.com/bergmark/feed";
       description = "Interfacing with RSS (v 0.9x, 2.x, 1.0) + Atom feeds.";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "fft" = callPackage
    ({ mkDerivation, array, base, carray, fftw, fftwFloat, ix-shapable
     , QuickCheck, storable-complex, syb, transformers
     }:
     mkDerivation {
       pname = "fft";
       version = "0.1.8.6";
       sha256 = "0hjv3r09imb2ypgbz3qj9hf4f36v977z38gdcad3qa0334qdin1f";
       libraryHaskellDepends = [
         array base carray ix-shapable storable-complex syb transformers
       ];
       libraryPkgconfigDepends = [ fftw fftwFloat ];
       testHaskellDepends = [ base carray QuickCheck storable-complex ];
       description = "Bindings to the FFTW library";
       license = stdenv.lib.licenses.bsd3;
     }) {inherit (pkgs) fftw; inherit (pkgs) fftwFloat;};
  "fgl" = callPackage
    ({ mkDerivation, array, base, containers, deepseq, transformers }:
     mkDerivation {
       pname = "fgl";
       version = "5.6.0.0";
       sha256 = "1i6cp4b3w7sjk7y1dq3fh6bci2sm5h3lnbbaw9ln19nwncg2wwll";
       revision = "1";
       editedCabalFile = "17r5p1c6srgyzpdkqkjcl9k3ax9c82lvps1kqjhxpdzypsnzns70";
       libraryHaskellDepends = [
         array base containers deepseq transformers
       ];
       doCheck = false;
       description = "Martin Erwig's Functional Graph Library";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "file-embed" = callPackage
    ({ mkDerivation, base, bytestring, directory, filepath
     , template-haskell
     }:
     mkDerivation {
       pname = "file-embed";
       version = "0.0.10.1";
       sha256 = "0lj164cnzqyd487mli91nnr7137a4h4qsasfwsnsh77sx12fpk9k";
       libraryHaskellDepends = [
         base bytestring directory filepath template-haskell
       ];
       testHaskellDepends = [ base filepath ];
       homepage = "https://github.com/snoyberg/file-embed";
       description = "Use Template Haskell to embed file contents directly";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "file-embed-lzma" = callPackage
    ({ mkDerivation, base, base-compat, bytestring, directory, filepath
     , lzma, template-haskell, text, th-lift-instances, transformers
     }:
     mkDerivation {
       pname = "file-embed-lzma";
       version = "0";
       sha256 = "0xqcgx4ysyjqrygnfabs169y4w986kwzvsaqh64h7x3wfi7z8v78";
       revision = "2";
       editedCabalFile = "0dmg69gsj2k9lf112bvqw6z2w8hl0p1lx5zxdvlvk85bb3qz6304";
       libraryHaskellDepends = [
         base base-compat bytestring directory filepath lzma
         template-haskell text th-lift-instances transformers
       ];
       testHaskellDepends = [ base bytestring ];
       homepage = "https://github.com/phadej/file-embed-lzma";
       description = "Use Template Haskell to embed (LZMA compressed) data";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "file-modules" = callPackage
    ({ mkDerivation, async, base, directory, filepath, haskell-src-exts
     , MissingH, regex-compat, regex-pcre
     }:
     mkDerivation {
       pname = "file-modules";
       version = "0.1.2.4";
       sha256 = "0dgjy3axfhgv5nkvwbaylc8hc8d1fjb53n2rhmpxfzppa6yjvspz";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         async base directory filepath haskell-src-exts MissingH
         regex-compat regex-pcre
       ];
       executableHaskellDepends = [
         async base directory filepath haskell-src-exts MissingH
         regex-compat regex-pcre
       ];
       homepage = "https://github.com/yamadapc/stack-run-auto";
       description = "Takes a Haskell source-code file and outputs its modules";
       license = stdenv.lib.licenses.mit;
     }) {};
  "filecache" = callPackage
    ({ mkDerivation, base, containers, directory, exceptions, filepath
     , fsnotify, hspec, mtl, stm, strict-base-types, temporary, time
     }:
     mkDerivation {
       pname = "filecache";
       version = "0.4.1";
       sha256 = "17fbjdy2cicrd956317jj7fir0bd621c4zb5sb4991ph7jsah0n5";
       libraryHaskellDepends = [
         base containers directory exceptions filepath fsnotify mtl stm
         strict-base-types time
       ];
       testHaskellDepends = [
         base containers directory filepath hspec stm temporary
       ];
       homepage = "http://lpuppet.banquise.net/";
       description = "A cache system associating values to files";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "filelock" = callPackage
    ({ mkDerivation, async, base, process, unix }:
     mkDerivation {
       pname = "filelock";
       version = "0.1.1.2";
       sha256 = "0g90wgm4bcfr5j44sc5s2jlcd7ggk092lph3jqjgf6f67sqxrw8g";
       libraryHaskellDepends = [ base unix ];
       testHaskellDepends = [ async base process ];
       homepage = "http://github.com/takano-akio/filelock";
       description = "Portable interface to file locking (flock / LockFileEx)";
       license = stdenv.lib.licenses.publicDomain;
     }) {};
  "filemanip" = callPackage
    ({ mkDerivation, base, bytestring, directory, filepath, mtl
     , unix-compat
     }:
     mkDerivation {
       pname = "filemanip";
       version = "0.3.6.3";
       sha256 = "0ilqr8jv41zxcj5qyicg29m8s30b9v70x6f9h2h2rw5ap8bxldl8";
       libraryHaskellDepends = [
         base bytestring directory filepath mtl unix-compat
       ];
       homepage = "https://github.com/bos/filemanip";
       description = "Expressive file and directory manipulation for Haskell";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "fileplow" = callPackage
    ({ mkDerivation, base, binary-search, bytestring, hspec, mtl
     , QuickCheck, temporary, vector
     }:
     mkDerivation {
       pname = "fileplow";
       version = "0.1.0.0";
       sha256 = "017f3f3w69fvlhdagivb5xp72vwzmimcjd94zw9l9ylp5jv7vp4x";
       libraryHaskellDepends = [ base binary-search bytestring vector ];
       testHaskellDepends = [
         base bytestring hspec mtl QuickCheck temporary
       ];
       homepage = "https://github.com/agrafix/fileplow#readme";
       description = "Library to process and search large files or a collection of files";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "filter-logger" = callPackage
    ({ mkDerivation, aeson, aeson-pretty, ansi-terminal, base
     , bytestring, data-default, fast-logger, http-types, HUnit, scotty
     , semigroups, time, wai, wai-extra, wai-logger
     }:
     mkDerivation {
       pname = "filter-logger";
       version = "0.6.0.0";
       sha256 = "089gcirir6dwp2p61349dyvgk596cb8vgswkydzpy2lmar01513q";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         aeson aeson-pretty ansi-terminal base bytestring data-default
         fast-logger http-types semigroups time wai wai-extra wai-logger
       ];
       executableHaskellDepends = [ aeson base bytestring scotty ];
       testHaskellDepends = [ base bytestring HUnit ];
       homepage = "https://github.com/caneroj1/filter-logger#readme";
       description = "Filterable request logging wai middleware. Change how data is logged and when.";
       license = stdenv.lib.licenses.mit;
     }) {};
  "filtrable" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "filtrable";
       version = "0.1.1.0";
       sha256 = "0g1ngsbxrydbwa637sk8zvpvygppr6abj9hh87maf56ily4ki9fn";
       libraryHaskellDepends = [ base ];
       homepage = "https://github.com/strake/filtrable.hs";
       description = "Class of filtrable containers";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "fin" = callPackage
    ({ mkDerivation, base, deepseq, hashable, inspection-testing
     , tagged
     }:
     mkDerivation {
       pname = "fin";
       version = "0.0.1";
       sha256 = "0mqs6qayj2n54siz3bpab9z6sk9030wdaxgvgg9g36983yaqmlil";
       revision = "1";
       editedCabalFile = "056d22f1j1xv5ka2qr7a3z5ad5w1im76qdf77v6dqdi4vaz52vd1";
       libraryHaskellDepends = [ base deepseq hashable ];
       testHaskellDepends = [ base inspection-testing tagged ];
       homepage = "https://github.com/phadej/vec";
       description = "Nat and Fin: peano naturals and finite numbers";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "find-clumpiness" = callPackage
    ({ mkDerivation, aeson, base, BiobaseNewick, bytestring, clumpiness
     , containers, hierarchical-clustering, listsafe, mtl
     , optparse-applicative, text, text-show, tree-fun
     , unordered-containers, vector
     }:
     mkDerivation {
       pname = "find-clumpiness";
       version = "0.2.3.1";
       sha256 = "0aicxjh58cz25kxigz013j07a0vc5jyirs75daqjmlgd3rj5b7h8";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         aeson base BiobaseNewick bytestring clumpiness containers
         hierarchical-clustering listsafe mtl text text-show tree-fun
         unordered-containers vector
       ];
       executableHaskellDepends = [
         aeson base BiobaseNewick bytestring clumpiness containers
         optparse-applicative text tree-fun unordered-containers
       ];
       homepage = "http://github.com/GregorySchwartz/find-clumpiness#readme";
       description = "Find the clumpiness of labels in a tree";
       license = stdenv.lib.licenses.gpl3;
     }) {};
  "fingertree" = callPackage
    ({ mkDerivation, base, HUnit, QuickCheck, test-framework
     , test-framework-hunit, test-framework-quickcheck2
     }:
     mkDerivation {
       pname = "fingertree";
       version = "0.1.4.2";
       sha256 = "0zvandj8fysck7ygpn0dw5bhrhmj1s63i326nalxbfkh2ls4iacm";
       libraryHaskellDepends = [ base ];
       testHaskellDepends = [
         base HUnit QuickCheck test-framework test-framework-hunit
         test-framework-quickcheck2
       ];
       description = "Generic finger-tree structure, with example instances";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "finite-typelits" = callPackage
    ({ mkDerivation, base, deepseq }:
     mkDerivation {
       pname = "finite-typelits";
       version = "0.1.4.2";
       sha256 = "0iyp9fyd2ki9qcmk9infz9p6rjhsx9jrs3f5yz0yqs8vj5na81yj";
       libraryHaskellDepends = [ base deepseq ];
       homepage = "https://github.com/mniip/finite-typelits";
       description = "A type inhabited by finitely many values, indexed by type-level naturals";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "first-class-patterns" = callPackage
    ({ mkDerivation, base, transformers }:
     mkDerivation {
       pname = "first-class-patterns";
       version = "0.3.2.4";
       sha256 = "1dc24hgmxyhg7jrij3f3x46ra96y5fw047828f8ahxvj14ljix1v";
       libraryHaskellDepends = [ base transformers ];
       homepage = "https://github.com/kowainik/first-class-patterns";
       description = "First class patterns and pattern matching, using type families";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "fixed" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "fixed";
       version = "0.2.1.1";
       sha256 = "1qhmwx8iqshns0crmr9d2f8hm65jxbcp3dvv0c39v34ra7if3a94";
       libraryHaskellDepends = [ base ];
       homepage = "http://github.com/ekmett/fixed";
       description = "Signed 15.16 precision fixed point arithmetic";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "fixed-length" = callPackage
    ({ mkDerivation, base, non-empty, tfp, utility-ht }:
     mkDerivation {
       pname = "fixed-length";
       version = "0.2";
       sha256 = "16rqls3zhrm757brz7zkw7m58nvxbj03af9vff98w6hp8gag4w9i";
       libraryHaskellDepends = [ base non-empty tfp utility-ht ];
       homepage = "http://hub.darcs.net/thielema/fixed-length/";
       description = "Lists with statically known length based on non-empty package";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "fixed-vector" = callPackage
    ({ mkDerivation, base, deepseq, doctest, filemanip, primitive }:
     mkDerivation {
       pname = "fixed-vector";
       version = "1.1.0.0";
       sha256 = "1iclmv1xkyr1wdszrahzdim6ilqvpxrhpsiammcxishg9gwvxl0y";
       libraryHaskellDepends = [ base deepseq primitive ];
       testHaskellDepends = [ base doctest filemanip primitive ];
       description = "Generic vectors with statically known size";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "fixed-vector-hetero" = callPackage
    ({ mkDerivation, base, deepseq, fixed-vector, primitive }:
     mkDerivation {
       pname = "fixed-vector-hetero";
       version = "0.5.0.0";
       sha256 = "1446xsj030xr7zry2pqq0yxv4f0j46jmpisfmp357jb0n9l5kwm3";
       libraryHaskellDepends = [ base deepseq fixed-vector primitive ];
       homepage = "http://github.org/Shimuuar/fixed-vector-hetero";
       description = "Generic heterogeneous vectors";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "flac" = callPackage
    ({ mkDerivation, base, bytestring, containers, data-default-class
     , directory, exceptions, filepath, FLAC, hspec, mtl, temporary
     , text, transformers, vector, wave
     }:
     mkDerivation {
       pname = "flac";
       version = "0.1.2";
       sha256 = "0adc88h5dmazf9m2xah0qkcav3pm0l3jiy8wbg9fxjv1qpgv74jn";
       revision = "4";
       editedCabalFile = "0bmhd56fg4idz62maig3kykk7dyqy9dpm27fdljqg8jccl0vbwbm";
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [
         base bytestring containers data-default-class directory exceptions
         filepath mtl text transformers vector wave
       ];
       librarySystemDepends = [ FLAC ];
       testHaskellDepends = [
         base bytestring data-default-class directory filepath hspec
         temporary transformers vector wave
       ];
       homepage = "https://github.com/mrkkrp/flac";
       description = "Complete high-level binding to libFLAC";
       license = stdenv.lib.licenses.bsd3;
     }) {FLAC = null;};
  "flac-picture" = callPackage
    ({ mkDerivation, base, bytestring, data-default-class, directory
     , flac, hspec, JuicyPixels, temporary
     }:
     mkDerivation {
       pname = "flac-picture";
       version = "0.1.1";
       sha256 = "1kn1zvv5izinyidmxij7zqml94a8q52bbm2icg7704sj906gh71w";
       revision = "1";
       editedCabalFile = "02vdh61nzig0yrv6ja6fjlgfcznj5k4iqh3i5f9g5p078ycqb17w";
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [ base bytestring flac JuicyPixels ];
       testHaskellDepends = [
         base bytestring data-default-class directory flac hspec JuicyPixels
         temporary
       ];
       homepage = "https://github.com/mrkkrp/flac-picture";
       description = "Support for writing picture to FLAC metadata blocks with JuicyPixels";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "flat-mcmc" = callPackage
    ({ mkDerivation, base, formatting, mcmc-types, monad-par
     , monad-par-extras, mwc-probability, pipes, primitive, text
     , transformers, vector
     }:
     mkDerivation {
       pname = "flat-mcmc";
       version = "1.5.0";
       sha256 = "1zgi69vgwss7hhv893n5z3av0byb5hiblha7k3ck4bbfmkgakkl7";
       revision = "1";
       editedCabalFile = "1pjkyvs4c6yx6jva08zw2b1qfhhv9q71sy806f5lddjsknnym2fn";
       libraryHaskellDepends = [
         base formatting mcmc-types monad-par monad-par-extras
         mwc-probability pipes primitive text transformers vector
       ];
       testHaskellDepends = [ base vector ];
       homepage = "https://github.com/jtobin/flat-mcmc";
       description = "Painless general-purpose sampling";
       license = stdenv.lib.licenses.mit;
     }) {};
  "flay" = callPackage
    ({ mkDerivation, base, constraints, tasty, tasty-quickcheck
     , transformers
     }:
     mkDerivation {
       pname = "flay";
       version = "0.4";
       sha256 = "1vqkjjf2bzmi489wsx23ryyplbg26q9qrzb98dz80j5b5rj3xzq1";
       libraryHaskellDepends = [ base constraints transformers ];
       testHaskellDepends = [ base tasty tasty-quickcheck transformers ];
       homepage = "https://github.com/k0001/flay";
       description = "Work generically on your datatype without knowing its shape nor its contents";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "flexible-defaults" = callPackage
    ({ mkDerivation, base, containers, template-haskell, th-extras
     , transformers
     }:
     mkDerivation {
       pname = "flexible-defaults";
       version = "0.0.2";
       sha256 = "0r4aq6n5h9xnal535hds111vq8whzsvyc3yibmcbp7fndldd9mgk";
       libraryHaskellDepends = [
         base containers template-haskell th-extras transformers
       ];
       homepage = "https://github.com/peti/flexible-defaults";
       description = "Generate default function implementations for complex type classes";
       license = stdenv.lib.licenses.publicDomain;
     }) {};
  "floatshow" = callPackage
    ({ mkDerivation, array, base, integer-gmp }:
     mkDerivation {
       pname = "floatshow";
       version = "0.2.4";
       sha256 = "1zsxjwgm8nkphnmsbz03yvplc2r02qybb387n910j4j6vya98khc";
       libraryHaskellDepends = [ array base integer-gmp ];
       homepage = "https://bitbucket.org/dafis/floatshow";
       description = "Alternative faster String representations for Double and Float, String representations for more general numeric types";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "flow" = callPackage
    ({ mkDerivation, base, doctest, QuickCheck, template-haskell }:
     mkDerivation {
       pname = "flow";
       version = "1.0.17";
       sha256 = "06adx3drx4b283v0aawhzyigvjizbhig8lqxw9cgqfn1pvc1kv46";
       libraryHaskellDepends = [ base ];
       testHaskellDepends = [ base doctest QuickCheck template-haskell ];
       homepage = "https://github.com/tfausak/flow#readme";
       description = "Write more understandable Haskell";
       license = stdenv.lib.licenses.mit;
     }) {};
  "fmlist" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "fmlist";
       version = "0.9.2";
       sha256 = "02868865hqm189h5wjd916abvqwkhbrx5b0119s1dwp70ifvbi4g";
       libraryHaskellDepends = [ base ];
       homepage = "https://github.com/sjoerdvisscher/fmlist";
       description = "FoldMap lists";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "fn" = callPackage
    ({ mkDerivation, base, blaze-builder, bytestring, directory
     , filepath, hspec, http-types, resourcet, text
     , unordered-containers, wai, wai-extra
     }:
     mkDerivation {
       pname = "fn";
       version = "0.3.0.2";
       sha256 = "0pxfwyfigj449qd01xb044gz1h63f3lvmpq6xij09xhkm8bv0d0y";
       libraryHaskellDepends = [
         base blaze-builder bytestring directory filepath http-types
         resourcet text unordered-containers wai wai-extra
       ];
       testHaskellDepends = [
         base directory filepath hspec http-types resourcet text
         unordered-containers wai wai-extra
       ];
       homepage = "http://github.com/positiondev/fn#readme";
       description = "A functional web framework";
       license = stdenv.lib.licenses.isc;
     }) {};
  "focus" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "focus";
       version = "0.1.5.2";
       sha256 = "1dswf4l7d6z3rrv1d00fr3vcpawnvxhj3q741fh62s5wq948v662";
       libraryHaskellDepends = [ base ];
       doCheck = false;
       homepage = "https://github.com/nikita-volkov/focus";
       description = "A general abstraction for manipulating elements of container data structures";
       license = stdenv.lib.licenses.mit;
     }) {};
  "focuslist" = callPackage
    ({ mkDerivation, base, Cabal, cabal-doctest, containers, doctest
     , genvalidity-containers, genvalidity-hspec, hedgehog, lens
     , mono-traversable, QuickCheck, tasty, tasty-hedgehog, tasty-hspec
     , template-haskell
     }:
     mkDerivation {
       pname = "focuslist";
       version = "0.1.0.1";
       sha256 = "1qq5ixaxrwy2wn8xz8ckva9m50bkygj2gpw89fdry4wglvkrmvpx";
       revision = "2";
       editedCabalFile = "12x38kxhcjdqfwl8y8zdrwcpv6jdm7jaqc48ww3hg6fpv8rvvd49";
       isLibrary = true;
       isExecutable = true;
       setupHaskellDepends = [ base Cabal cabal-doctest ];
       libraryHaskellDepends = [
         base containers lens mono-traversable QuickCheck
       ];
       testHaskellDepends = [
         base doctest genvalidity-containers genvalidity-hspec hedgehog lens
         QuickCheck tasty tasty-hedgehog tasty-hspec template-haskell
       ];
       homepage = "https://github.com/cdepillabout/focuslist";
       description = "Lists with a focused element";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "fold-debounce" = callPackage
    ({ mkDerivation, base, data-default-class, hspec, stm, stm-delay
     , time
     }:
     mkDerivation {
       pname = "fold-debounce";
       version = "0.2.0.8";
       sha256 = "1j7v11nq2q7p50z27lbmprwqrhvcf9qa5zy2hql68zsi53q3wszw";
       libraryHaskellDepends = [
         base data-default-class stm stm-delay time
       ];
       testHaskellDepends = [ base hspec stm time ];
       homepage = "https://github.com/debug-ito/fold-debounce";
       description = "Fold multiple events that happen in a given period of time";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "fold-debounce-conduit" = callPackage
    ({ mkDerivation, base, conduit, fold-debounce, hspec, resourcet
     , stm, transformers, transformers-base
     }:
     mkDerivation {
       pname = "fold-debounce-conduit";
       version = "0.2.0.3";
       sha256 = "0rzgaxqv3q0s848bk3hm0mq14sxa1szpxvi9k19n0hpqlx60rj4p";
       libraryHaskellDepends = [
         base conduit fold-debounce resourcet stm transformers
         transformers-base
       ];
       testHaskellDepends = [
         base conduit hspec resourcet stm transformers
       ];
       homepage = "https://github.com/debug-ito/fold-debounce-conduit";
       description = "Regulate input traffic from conduit Source with Control.FoldDebounce";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "foldable1" = callPackage
    ({ mkDerivation, base, transformers, util }:
     mkDerivation {
       pname = "foldable1";
       version = "0.1.0.0";
       sha256 = "02p9wg0rcp7qvjp588y6r2szz7ja5x1idl04vn3hr7mbrbjq9ml5";
       libraryHaskellDepends = [ base transformers util ];
       description = "Foldable types with at least 1 element";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "foldl" = callPackage
    ({ mkDerivation, base, bytestring, comonad, containers
     , contravariant, criterion, hashable, mwc-random, primitive
     , profunctors, semigroupoids, semigroups, text, transformers
     , unordered-containers, vector, vector-builder
     }:
     mkDerivation {
       pname = "foldl";
       version = "1.4.5";
       sha256 = "19qjmzc7gaxfwgqbgy0kq4vhbxvh3qjnwsxnc7pzwws2if5bv80b";
       libraryHaskellDepends = [
         base bytestring comonad containers contravariant hashable
         mwc-random primitive profunctors semigroupoids semigroups text
         transformers unordered-containers vector vector-builder
       ];
       benchmarkHaskellDepends = [ base criterion ];
       description = "Composable, streaming, and efficient left folds";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "folds" = callPackage
    ({ mkDerivation, adjunctions, base, bifunctors, bytestring, Cabal
     , cabal-doctest, comonad, constraints, contravariant, data-reify
     , deepseq, directory, distributive, doctest, filepath, lens, mtl
     , pointed, profunctors, reflection, semigroupoids, semigroups
     , transformers, unordered-containers, vector
     }:
     mkDerivation {
       pname = "folds";
       version = "0.7.4";
       sha256 = "0wj5fd3icj05w3lziv4rmqahsh42kzckxybjacyvwb45kiy6yvjw";
       configureFlags = [ "-f-test-hlint" ];
       setupHaskellDepends = [ base Cabal cabal-doctest ];
       libraryHaskellDepends = [
         adjunctions base bifunctors comonad constraints contravariant
         data-reify distributive lens mtl pointed profunctors reflection
         semigroupoids transformers unordered-containers vector
       ];
       testHaskellDepends = [
         base bytestring deepseq directory doctest filepath mtl semigroups
       ];
       doCheck = false;
       homepage = "http://github.com/ekmett/folds";
       description = "Beautiful Folding";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "force-layout" = callPackage
    ({ mkDerivation, base, containers, data-default-class, lens, linear
     }:
     mkDerivation {
       pname = "force-layout";
       version = "0.4.0.6";
       sha256 = "17956k3mab2xhrmfy7fj5gh08h43yjlsryi5acjhnkmin5arhwpp";
       revision = "4";
       editedCabalFile = "0hpr1z68lflgcdl9gbmva0i52wbgfhh4qj3iwdvzipsp8mwav7s7";
       libraryHaskellDepends = [
         base containers data-default-class lens linear
       ];
       description = "Simple force-directed layout";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "foreign-store" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "foreign-store";
       version = "0.2";
       sha256 = "1p436dn6l5zjzizcsj0hn10s2n907gr7c8y89i4sm3h69lhqlw86";
       libraryHaskellDepends = [ base ];
       homepage = "https://github.com/chrisdone/foreign-store";
       description = "Store a stable pointer in a foreign context to be retrieved later";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "forkable-monad" = callPackage
    ({ mkDerivation, base, transformers }:
     mkDerivation {
       pname = "forkable-monad";
       version = "0.2.0.3";
       sha256 = "0qnl3bvqiwh6d7lm3w06is5ivh025c7024695m7fzajvzbpk67jp";
       libraryHaskellDepends = [ base transformers ];
       homepage = "https://github.com/System-Indystress/ForkableMonad#readme";
       description = "An implementation of forkIO for monad stacks";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "forma" = callPackage
    ({ mkDerivation, aeson, base, containers, hspec, mtl, text
     , unordered-containers
     }:
     mkDerivation {
       pname = "forma";
       version = "1.1.0";
       sha256 = "09f377ak1208lr8sskdga3nq47a151whd7z982pwv552w1q75p5p";
       revision = "2";
       editedCabalFile = "1yc9gv1rjbl4lsxscp5idfpn7jp27c38j6gm9v7isxgyaih0j4v4";
       libraryHaskellDepends = [
         aeson base containers mtl text unordered-containers
       ];
       testHaskellDepends = [ aeson base containers hspec mtl text ];
       homepage = "https://github.com/mrkkrp/forma";
       description = "Parse and validate forms in JSON format";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "format-numbers" = callPackage
    ({ mkDerivation, base, hspec, text }:
     mkDerivation {
       pname = "format-numbers";
       version = "0.1.0.0";
       sha256 = "19ii2b804i6rmz21qpjy1p5yvb32gglniszhgcpmb268aldmd90c";
       libraryHaskellDepends = [ base text ];
       testHaskellDepends = [ base hspec text ];
       homepage = "https://github.com/agrafix/format-numbers#readme";
       description = "Various number formatting functions";
       license = stdenv.lib.licenses.mit;
     }) {};
  "formatting" = callPackage
    ({ mkDerivation, array, base, bytestring, clock, ghc-prim, hspec
     , integer-gmp, old-locale, scientific, semigroups, text, time
     , transformers
     }:
     mkDerivation {
       pname = "formatting";
       version = "6.3.6";
       sha256 = "06nkm9scy3a41v4m7npgkl9lvy5py6v7chsx0yhdy4pr4mvdna3a";
       revision = "1";
       editedCabalFile = "0vw77ji2d7rhwhq2g7dmln9ifsghgzdlnxg4wjipb128f6gwclh7";
       libraryHaskellDepends = [
         array base bytestring clock ghc-prim integer-gmp old-locale
         scientific semigroups text time transformers
       ];
       testHaskellDepends = [ base hspec semigroups ];
       description = "Combinator-based type-safe formatting (like printf() or FORMAT)";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "foundation" = callPackage
    ({ mkDerivation, base, basement, gauge, ghc-prim }:
     mkDerivation {
       pname = "foundation";
       version = "0.0.21";
       sha256 = "1q43y8wfj0wf9gdq2kzphwjwq6m5pvryy1lqgk954aq5z3ks1lsf";
       revision = "1";
       editedCabalFile = "07mzfc75wl7kn2lr2gmbx4i0a5gxyi9b066rz0x2pqxqav3fwqs0";
       libraryHaskellDepends = [ base basement ghc-prim ];
       testHaskellDepends = [ base basement ];
       benchmarkHaskellDepends = [ base basement gauge ];
       homepage = "https://github.com/haskell-foundation/foundation";
       description = "Alternative prelude with batteries and no dependencies";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "free" = callPackage
    ({ mkDerivation, base, bifunctors, comonad, containers
     , distributive, exceptions, mtl, profunctors, semigroupoids
     , semigroups, template-haskell, transformers, transformers-base
     , transformers-compat
     }:
     mkDerivation {
       pname = "free";
       version = "5.0.2";
       sha256 = "15m3n9vhz7z3kzv1w3wlfa3x8jp4cbrkwmrcjr7jlx39iqffn1gg";
       libraryHaskellDepends = [
         base bifunctors comonad containers distributive exceptions mtl
         profunctors semigroupoids semigroups template-haskell transformers
         transformers-base transformers-compat
       ];
       homepage = "http://github.com/ekmett/free/";
       description = "Monads for free";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "free-vl" = callPackage
    ({ mkDerivation, base, containers, mtl, tasty, tasty-hunit }:
     mkDerivation {
       pname = "free-vl";
       version = "0.1.4";
       sha256 = "1gq2lqzrv77w02x1sdym5156q3aycp887h9wzgz59z22bg9kxxjp";
       revision = "1";
       editedCabalFile = "1711k76b6w7gfqvc8z9jnylj4hhk3rvx7ap31y1mmq4g2a4s82qm";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [ base ];
       executableHaskellDepends = [ base ];
       testHaskellDepends = [ base containers mtl tasty tasty-hunit ];
       homepage = "http://github.com/aaronlevin/free-vl";
       description = "van Laarhoven encoded Free Monad with Extensible Effects";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "freenect" = callPackage
    ({ mkDerivation, base, freenect, freenect_sync, libfreenect, vector
     }:
     mkDerivation {
       pname = "freenect";
       version = "1.2.1";
       sha256 = "0n87sxf12kkpdlhdaw4pcb3dfl1qc3w7j5hh9crrchy0isasm9zw";
       libraryHaskellDepends = [ base vector ];
       librarySystemDepends = [ freenect freenect_sync ];
       libraryPkgconfigDepends = [ libfreenect ];
       homepage = "https://github.com/chrisdone/freenect";
       description = "Interface to the Kinect device";
       license = stdenv.lib.licenses.bsd3;
     }) {inherit (pkgs) freenect; freenect_sync = null;
         libfreenect = null;};
  "freer-simple" = callPackage
    ({ mkDerivation, base, natural-transformation, QuickCheck, tasty
     , tasty-hunit, tasty-quickcheck, transformers-base
     }:
     mkDerivation {
       pname = "freer-simple";
       version = "1.1.0.0";
       sha256 = "00dvn620xg24pxw1h9p7dgl5wj25q77mfdsmxlmijsr0ysqwv611";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         base natural-transformation transformers-base
       ];
       executableHaskellDepends = [ base ];
       testHaskellDepends = [
         base QuickCheck tasty tasty-hunit tasty-quickcheck
       ];
       homepage = "https://github.com/lexi-lambda/freer-simple#readme";
       description = "Implementation of a friendly effect system for Haskell";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "freetype2" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "freetype2";
       version = "0.1.2";
       sha256 = "00p3zb5iip9ggkapw4jkmpypnl8s7l6q9mrl66q07schi0lq0zji";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [ base ];
       description = "Haskell binding for FreeType 2 library";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "friday" = callPackage
    ({ mkDerivation, base, containers, convertible, deepseq, primitive
     , QuickCheck, ratio-int, test-framework, test-framework-quickcheck2
     , transformers, vector
     }:
     mkDerivation {
       pname = "friday";
       version = "0.2.3.1";
       sha256 = "04wn36249b7mddhp6r8zycdxixm0ryj3jrc6qjjvl5k138n4j9q8";
       revision = "1";
       editedCabalFile = "0n1f4plvrmad6gm8dbsi6g5ghahdwwy2fhgippmnp1ixb65x7d58";
       libraryHaskellDepends = [
         base containers convertible deepseq primitive ratio-int
         transformers vector
       ];
       testHaskellDepends = [
         base QuickCheck test-framework test-framework-quickcheck2 vector
       ];
       homepage = "https://github.com/RaphaelJ/friday";
       description = "A functional image processing library for Haskell";
       license = stdenv.lib.licenses.lgpl3;
     }) {};
  "friday-juicypixels" = callPackage
    ({ mkDerivation, base, bytestring, file-embed, friday, hspec
     , JuicyPixels, vector
     }:
     mkDerivation {
       pname = "friday-juicypixels";
       version = "0.1.2.4";
       sha256 = "0gxfj3x5w65dfnkf6ymjs27w2i14yv2m218qgmvx1p80wy7q4nbd";
       libraryHaskellDepends = [ base friday JuicyPixels vector ];
       testHaskellDepends = [
         base bytestring file-embed friday hspec JuicyPixels
       ];
       homepage = "github.com/TomMD/friday-juicypixels";
       description = "Converts between the Friday and JuicyPixels image types";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "friendly-time" = callPackage
    ({ mkDerivation, base, hspec, old-locale, time }:
     mkDerivation {
       pname = "friendly-time";
       version = "0.4.1";
       sha256 = "1j4k8fjmb10zmj9pvn42mgirv9bpbk0w7n0ys7sp3wn34wr49wws";
       revision = "1";
       editedCabalFile = "096nfaqxavi6xblqh4q5dxks824liz75b4rm2la2hlkkn5mhqdgs";
       libraryHaskellDepends = [ base old-locale time ];
       testHaskellDepends = [ base hspec old-locale time ];
       description = "Print time information in friendly ways";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "frisby" = callPackage
    ({ mkDerivation, array, base, containers, mtl, semigroups }:
     mkDerivation {
       pname = "frisby";
       version = "0.2.2";
       sha256 = "1mdncc38qwakadr8q4ncz9vzvx9scfhlgk2m540y2mjdypdiicy1";
       libraryHaskellDepends = [ array base containers mtl semigroups ];
       homepage = "http://repetae.net/computer/frisby/";
       description = "Linear time composable parser for PEG grammars";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "from-sum" = callPackage
    ({ mkDerivation, base, doctest, Glob, mtl }:
     mkDerivation {
       pname = "from-sum";
       version = "0.2.1.0";
       sha256 = "0rv66a7mhswb4sqkyarg9kxxfpiymsmrk49gprq8mpwq7d1qmvd1";
       libraryHaskellDepends = [ base mtl ];
       testHaskellDepends = [ base doctest Glob ];
       homepage = "https://github.com/cdepillabout/from-sum";
       description = "Canonical fromMaybeM and fromEitherM functions";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "frontmatter" = callPackage
    ({ mkDerivation, attoparsec, base, bytestring, hspec, QuickCheck
     , text, yaml
     }:
     mkDerivation {
       pname = "frontmatter";
       version = "0.1.0.2";
       sha256 = "17dr2g1rywai80hx2v51ljwjpsn6m1jgg6lb4gq9fwq9snq9gsv6";
       libraryHaskellDepends = [ attoparsec base bytestring yaml ];
       testHaskellDepends = [
         attoparsec base bytestring hspec QuickCheck text yaml
       ];
       homepage = "https://github.com/yamadapc/haskell-frontmatter";
       description = "Parses frontmatter as used in Jekyll markdown files";
       license = stdenv.lib.licenses.mit;
     }) {};
  "fsnotify" = callPackage
    ({ mkDerivation, async, base, bytestring, containers, directory
     , filepath, hinotify, random, shelly, tasty, tasty-hunit, temporary
     , text, time, unix, unix-compat
     }:
     mkDerivation {
       pname = "fsnotify";
       version = "0.3.0.1";
       sha256 = "19bdbz9wb9jvln6yg6qm0hz0w84bypvkxf0wjhgrgd52f9gidlny";
       revision = "1";
       editedCabalFile = "1pa9pa0kflkqlb4dysagy0aihn452hmf6wwlsr7fp4ygg86m7fsq";
       libraryHaskellDepends = [
         async base bytestring containers directory filepath hinotify shelly
         text time unix unix-compat
       ];
       testHaskellDepends = [
         async base directory filepath random tasty tasty-hunit temporary
         unix-compat
       ];
       doCheck = false;
       homepage = "https://github.com/haskell-fswatch/hfsnotify";
       description = "Cross platform library for file change notification";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "fsnotify-conduit" = callPackage
    ({ mkDerivation, base, conduit, directory, filepath, fsnotify
     , hspec, resourcet, temporary, transformers
     }:
     mkDerivation {
       pname = "fsnotify-conduit";
       version = "0.1.1.1";
       sha256 = "1kh1y1p4dw2yhxrl1rrkmpkvm3q5nq12cwl8dfcscrkx3wqhz683";
       libraryHaskellDepends = [
         base conduit directory filepath fsnotify resourcet transformers
       ];
       testHaskellDepends = [
         base conduit directory filepath fsnotify hspec resourcet temporary
         transformers
       ];
       homepage = "https://github.com/fpco/fsnotify-conduit#readme";
       description = "Get filesystem notifications as a stream of events";
       license = stdenv.lib.licenses.mit;
     }) {};
  "funcmp" = callPackage
    ({ mkDerivation, base, filepath, pretty, process }:
     mkDerivation {
       pname = "funcmp";
       version = "1.9";
       sha256 = "1d5appkjhajb9ndv2gwnfz8lw2w53v8baajzmrhg26ihzj1bkch8";
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [ base filepath pretty process ];
       homepage = "https://github.com/peti/funcmp";
       description = "Functional MetaPost is a Haskell frontend to the MetaPost language";
       license = stdenv.lib.licenses.gpl3;
     }) {};
  "functor-classes-compat" = callPackage
    ({ mkDerivation, base, containers, hashable, unordered-containers
     , vector
     }:
     mkDerivation {
       pname = "functor-classes-compat";
       version = "1";
       sha256 = "0vrnl5crr7d2wsm4ryx26g98j23dpk7x5p31xrbnckd78i7zj4gg";
       revision = "3";
       editedCabalFile = "1jx552ysdnxvd8wdvsf4bgxlsgldpb7a8zi54abyjmxv6mkp98ys";
       configureFlags = [ "-fcontainers" ];
       libraryHaskellDepends = [
         base containers hashable unordered-containers vector
       ];
       homepage = "https://github.com/phadej/functor-classes-compat#readme";
       description = "Data.Functor.Classes instances for core packages";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "fuzzcheck" = callPackage
    ({ mkDerivation, base, hspec, hspec-expectations, HUnit
     , lifted-base, monad-control, QuickCheck, random, transformers
     }:
     mkDerivation {
       pname = "fuzzcheck";
       version = "0.1.1";
       sha256 = "0qfr4f0b50l368b45yzwhqd4g2y1kvfrfj4hr84cdxcwdrwn9mpc";
       libraryHaskellDepends = [
         base lifted-base monad-control QuickCheck random transformers
       ];
       testHaskellDepends = [
         base hspec hspec-expectations HUnit QuickCheck
       ];
       homepage = "https://github.com/fpco/fuzzcheck";
       description = "A simple checker for stress testing monadic code";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "fuzzy-dates" = callPackage
    ({ mkDerivation, base, hourglass, hspec, lens, parsec }:
     mkDerivation {
       pname = "fuzzy-dates";
       version = "0.1.1.1";
       sha256 = "1hanmwzr1g11am4z3r9wrkzfycvk76a03cg9bqpifidv7y9hcd73";
       libraryHaskellDepends = [ base hourglass hspec lens parsec ];
       testHaskellDepends = [ base hourglass hspec lens parsec ];
       homepage = "https://github.com/ReedOei/fuzzy-dates#readme";
       description = "Libary for parsing dates in strings in varied formats";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "fuzzyset" = callPackage
    ({ mkDerivation, base, base-unicode-symbols, data-default, hspec
     , ieee754, lens, text, text-metrics, unordered-containers, vector
     }:
     mkDerivation {
       pname = "fuzzyset";
       version = "0.1.0.6";
       sha256 = "18v1zsmdgy5if7l23vciip6dbbhbpgvn0dy0ray0pqwdcw9yh6kk";
       libraryHaskellDepends = [
         base base-unicode-symbols data-default lens text text-metrics
         unordered-containers vector
       ];
       testHaskellDepends = [
         base base-unicode-symbols hspec ieee754 lens text
         unordered-containers
       ];
       homepage = "https://github.com/laserpants/fuzzyset-haskell";
       description = "Fuzzy set for approximate string matching";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "gauge" = callPackage
    ({ mkDerivation, base, basement, bytestring, deepseq, directory
     , foundation, process, vector
     }:
     mkDerivation {
       pname = "gauge";
       version = "0.2.4";
       sha256 = "1p8accsrv0njiqgybz2plwiglg90nazibggc270j7gmqxqna0zr9";
       libraryHaskellDepends = [
         base basement deepseq directory process vector
       ];
       testHaskellDepends = [
         base bytestring deepseq directory foundation
       ];
       benchmarkHaskellDepends = [ base ];
       homepage = "https://github.com/vincenthz/hs-gauge";
       description = "small framework for performance measurement and analysis";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "gc" = callPackage
    ({ mkDerivation, base, Cabal, cabal-doctest, directory, doctest
     , filepath, hlint, parallel
     }:
     mkDerivation {
       pname = "gc";
       version = "0.0.2";
       sha256 = "03637njk3pqbqvng7zf370ykykm3nnsxvmp09qcfp6iihz45mk1r";
       setupHaskellDepends = [ base Cabal cabal-doctest ];
       libraryHaskellDepends = [ base ];
       testHaskellDepends = [
         base directory doctest filepath hlint parallel
       ];
       homepage = "http://github.com/ekmett/gc/";
       description = "Poor Richard's Memory Manager";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "gd" = callPackage
    ({ mkDerivation, base, bytestring, expat, fontconfig, freetype, gd
     , libjpeg, libpng, zlib
     }:
     mkDerivation {
       pname = "gd";
       version = "3000.7.3";
       sha256 = "1dkzv6zs00qi0jmblkw05ywizc8y3baz7pnz0lcqn1cs1mhcpbhl";
       libraryHaskellDepends = [ base bytestring ];
       librarySystemDepends = [
         expat fontconfig freetype gd libjpeg libpng zlib
       ];
       description = "A Haskell binding to a subset of the GD graphics library";
       license = stdenv.lib.licenses.bsd3;
     }) {inherit (pkgs) expat; inherit (pkgs) fontconfig;
         inherit (pkgs) freetype; inherit (pkgs) gd; inherit (pkgs) libjpeg;
         inherit (pkgs) libpng; inherit (pkgs) zlib;};
  "gdax" = callPackage
    ({ mkDerivation, aeson, aeson-casing, aeson-pretty, base
     , base64-bytestring, byteable, bytestring, containers, cryptohash
     , exceptions, hashable, http-client, http-client-tls, lens
     , lens-aeson, mtl, regex-tdfa, regex-tdfa-text, scientific, tasty
     , tasty-hunit, tasty-quickcheck, tasty-th, text, time
     , unordered-containers, uuid, vector, websockets, wreq, wuss
     }:
     mkDerivation {
       pname = "gdax";
       version = "0.6.0.0";
       sha256 = "08b7j5dcs5indpd6gb6pc3aw692jqvm26vfnq12mpssdbv7fzf6y";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         aeson aeson-casing base base64-bytestring byteable bytestring
         containers cryptohash exceptions hashable http-client
         http-client-tls lens lens-aeson mtl regex-tdfa regex-tdfa-text
         scientific text time unordered-containers uuid vector websockets
         wreq wuss
       ];
       executableHaskellDepends = [
         aeson aeson-pretty base base64-bytestring bytestring text vector
         websockets wuss
       ];
       testHaskellDepends = [
         aeson aeson-pretty base base64-bytestring bytestring containers
         exceptions lens lens-aeson mtl tasty tasty-hunit tasty-quickcheck
         tasty-th text time unordered-containers vector websockets wuss
       ];
       doCheck = false;
       homepage = "https://github.com/AndrewRademacher/gdax";
       description = "API Wrapping for Coinbase's GDAX exchange";
       license = stdenv.lib.licenses.mit;
     }) {};
  "gdp" = callPackage
    ({ mkDerivation, base, lawful }:
     mkDerivation {
       pname = "gdp";
       version = "0.0.0.2";
       sha256 = "1gqs19wjyng0nacwvi7sjxnhnxjy2az0jwjyy6w2r5g4w9dgykr1";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [ base lawful ];
       executableHaskellDepends = [ base ];
       homepage = "https://github.com/githubuser/gdp#readme";
       description = "Reason about invariants and preconditions with ghosts of departed proofs";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "general-games" = callPackage
    ({ mkDerivation, base, hspec, HUnit, monad-loops, MonadRandom
     , random, random-shuffle
     }:
     mkDerivation {
       pname = "general-games";
       version = "1.1.1";
       sha256 = "1h2h6dbd12xzvgwm7a26scpjyfkcwkmpdkw98nkmb2vk8qsrx3lb";
       libraryHaskellDepends = [
         base monad-loops MonadRandom random random-shuffle
       ];
       testHaskellDepends = [ base hspec HUnit MonadRandom ];
       homepage = "https://github.com/cgorski/general-games";
       description = "Library supporting simulation of a number of games";
       license = stdenv.lib.licenses.mit;
     }) {};
  "generic-aeson" = callPackage
    ({ mkDerivation, aeson, attoparsec, base, generic-deriving, mtl
     , tagged, text, unordered-containers, vector
     }:
     mkDerivation {
       pname = "generic-aeson";
       version = "0.2.0.9";
       sha256 = "1jw4rmfsky8r8551ddjy0i3va3dj37flzf23gxniyam7zy8kzh9l";
       revision = "4";
       editedCabalFile = "0m2m2wfv9nhq8m7xl1nrmj4wy3yip3s31b4448za58ryrwkdgjzd";
       libraryHaskellDepends = [
         aeson attoparsec base generic-deriving mtl tagged text
         unordered-containers vector
       ];
       description = "Derivation of Aeson instances using GHC generics";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "generic-arbitrary" = callPackage
    ({ mkDerivation, base, QuickCheck }:
     mkDerivation {
       pname = "generic-arbitrary";
       version = "0.1.0";
       sha256 = "1imw36k5kxfl7ik0mzjxa8xzqg6hs3k253kpi19a9l53wxa0mwv9";
       libraryHaskellDepends = [ base QuickCheck ];
       description = "Generic implementation for QuickCheck's Arbitrary";
       license = stdenv.lib.licenses.mit;
     }) {};
  "generic-deriving" = callPackage
    ({ mkDerivation, base, containers, ghc-prim, hspec, hspec-discover
     , template-haskell, th-abstraction
     }:
     mkDerivation {
       pname = "generic-deriving";
       version = "1.12.2";
       sha256 = "1i7d6cpj9yhaqb79zays3nqchhaacacjz9bkc0zlwj73y5gvi22n";
       revision = "1";
       editedCabalFile = "0gr20ypr6s0183wmrhmia0zvpbn4dmfyr3wksrkrqj4i8nhj42fz";
       libraryHaskellDepends = [
         base containers ghc-prim template-haskell th-abstraction
       ];
       testHaskellDepends = [ base hspec template-haskell ];
       testToolDepends = [ hspec-discover ];
       homepage = "https://github.com/dreixel/generic-deriving";
       description = "Generic programming library for generalised deriving";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "generic-lens" = callPackage
    ({ mkDerivation, base, criterion, deepseq, doctest, HUnit
     , inspection-testing, lens, profunctors, QuickCheck, tagged
     }:
     mkDerivation {
       pname = "generic-lens";
       version = "1.0.0.2";
       sha256 = "0s21jfw0ndkkmx7di3q0b7xj7hws6yxxcsflal617c44iqc8lvsy";
       libraryHaskellDepends = [ base profunctors tagged ];
       testHaskellDepends = [
         base doctest HUnit inspection-testing lens profunctors
       ];
       benchmarkHaskellDepends = [
         base criterion deepseq lens QuickCheck
       ];
       homepage = "https://github.com/kcsongor/generic-lens";
       description = "Generically derive traversals, lenses and prisms";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "generic-random" = callPackage
    ({ mkDerivation, base, deepseq, QuickCheck }:
     mkDerivation {
       pname = "generic-random";
       version = "1.2.0.0";
       sha256 = "130lmblycxnpqbsl7vf6a90zccibnvcb5zaclfajcn3by39007lv";
       revision = "1";
       editedCabalFile = "1d0hx41r7yq2a86ydnfh2fv540ah8cz05l071s2z4wxcjw0ymyn4";
       libraryHaskellDepends = [ base QuickCheck ];
       testHaskellDepends = [ base deepseq QuickCheck ];
       doCheck = false;
       homepage = "http://github.com/lysxia/generic-random";
       description = "Generic random generators";
       license = stdenv.lib.licenses.mit;
     }) {};
  "generic-xmlpickler" = callPackage
    ({ mkDerivation, base, generic-deriving, hxt, hxt-pickle-utils
     , tasty, tasty-hunit, tasty-th, text
     }:
     mkDerivation {
       pname = "generic-xmlpickler";
       version = "0.1.0.5";
       sha256 = "1brnlgnbys811qy64aps2j03ks2p0rkihaqzaszfwl80cpsn05ym";
       revision = "8";
       editedCabalFile = "1hpcglml4b5yv192syxazminr5v7qjrgqwb2wk0cf7f0sjpm5d0q";
       libraryHaskellDepends = [ base generic-deriving hxt text ];
       testHaskellDepends = [
         base hxt hxt-pickle-utils tasty tasty-hunit tasty-th
       ];
       homepage = "http://github.com/silkapp/generic-xmlpickler";
       description = "Generic generation of HXT XmlPickler instances using GHC Generics";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "generics-eot" = callPackage
    ({ mkDerivation, base, directory, doctest, filepath, hspec
     , interpolate, markdown-unlit, mockery, QuickCheck, shake, silently
     }:
     mkDerivation {
       pname = "generics-eot";
       version = "0.4";
       sha256 = "16yfzv9aqyizm57r5m5ddwdnlh05fvlrxjn6m3vqz33kvy3drgjs";
       libraryHaskellDepends = [ base ];
       testHaskellDepends = [
         base directory doctest filepath hspec interpolate markdown-unlit
         mockery QuickCheck shake silently
       ];
       testToolDepends = [ markdown-unlit ];
       homepage = "https://generics-eot.readthedocs.io/";
       description = "A library for generic programming that aims to be easy to understand";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "generics-sop" = callPackage
    ({ mkDerivation, base, deepseq, ghc-prim, template-haskell }:
     mkDerivation {
       pname = "generics-sop";
       version = "0.3.2.0";
       sha256 = "168v62i845jh9jbfaz3ldz8svz4wmzq9mf2vhb7pxlnbkk8fqq1h";
       revision = "3";
       editedCabalFile = "0lw5n8npdrdd1h7j000flaig4z30b8pig4q52sj34zhwccjkdzq2";
       libraryHaskellDepends = [ base deepseq ghc-prim template-haskell ];
       testHaskellDepends = [ base ];
       description = "Generic Programming using True Sums of Products";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "generics-sop-lens" = callPackage
    ({ mkDerivation, base, generics-sop, lens }:
     mkDerivation {
       pname = "generics-sop-lens";
       version = "0.1.2.1";
       sha256 = "0p2ji955hy9r6c1wmiziga9pbbli24my3vmx19gf4i8db36d8jaf";
       revision = "6";
       editedCabalFile = "0j4j3kk2nsl5n5gp0vrzqdc5y9ly31b4nvhq0bpgcpzibvik7ssw";
       libraryHaskellDepends = [ base generics-sop lens ];
       homepage = "https://github.com/phadej/generics-sop-lens#readme";
       description = "Lenses for types in generics-sop";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "geniplate-mirror" = callPackage
    ({ mkDerivation, base, mtl, template-haskell }:
     mkDerivation {
       pname = "geniplate-mirror";
       version = "0.7.6";
       sha256 = "1y0m0bw5zpm1y1y6d9qmxj3swl8j8hlw1shxbr5awycf6k884ssb";
       revision = "1";
       editedCabalFile = "1pyz2vdkr5w9wadmb5v4alx408dqamny3mkvl4x8v2pf549qn37k";
       libraryHaskellDepends = [ base mtl template-haskell ];
       homepage = "https://github.com/danr/geniplate";
       description = "Use Template Haskell to generate Uniplate-like functions";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "genvalidity" = callPackage
    ({ mkDerivation, base, hspec, QuickCheck, validity }:
     mkDerivation {
       pname = "genvalidity";
       version = "0.5.1.0";
       sha256 = "17ykq38j9a2lzir6dqz5jgy6ndaafrpkhqhcg96c5ppg7wcxaaj0";
       libraryHaskellDepends = [ base QuickCheck validity ];
       testHaskellDepends = [ base hspec QuickCheck ];
       homepage = "https://github.com/NorfairKing/validity#readme";
       description = "Testing utilities for the validity library";
       license = stdenv.lib.licenses.mit;
     }) {};
  "genvalidity-aeson" = callPackage
    ({ mkDerivation, aeson, base, genvalidity, genvalidity-hspec
     , genvalidity-scientific, genvalidity-text
     , genvalidity-unordered-containers, genvalidity-vector, hspec
     , QuickCheck, validity, validity-aeson
     }:
     mkDerivation {
       pname = "genvalidity-aeson";
       version = "0.2.0.2";
       sha256 = "1c77lbw4y6fmrsdzxwm38la161n6k3zvjwisg17ssz0a1bm4y96i";
       libraryHaskellDepends = [
         aeson base genvalidity genvalidity-scientific genvalidity-text
         genvalidity-unordered-containers genvalidity-vector QuickCheck
         validity validity-aeson
       ];
       testHaskellDepends = [
         aeson base genvalidity genvalidity-hspec hspec
       ];
       homepage = "https://github.com/NorfairKing/validity#readme";
       description = "GenValidity support for aeson";
       license = stdenv.lib.licenses.mit;
     }) {};
  "genvalidity-bytestring" = callPackage
    ({ mkDerivation, base, bytestring, genvalidity, genvalidity-hspec
     , hspec, QuickCheck, validity, validity-bytestring
     }:
     mkDerivation {
       pname = "genvalidity-bytestring";
       version = "0.2.0.2";
       sha256 = "1qy19j0cyza2a6z59br4wma68081xqsq9m4ndmv195ym04a0bfa3";
       libraryHaskellDepends = [
         base bytestring genvalidity QuickCheck validity validity-bytestring
       ];
       testHaskellDepends = [
         base bytestring genvalidity genvalidity-hspec hspec QuickCheck
       ];
       homepage = "https://github.com/NorfairKing/validity#readme";
       description = "GenValidity support for ByteString";
       license = stdenv.lib.licenses.mit;
     }) {};
  "genvalidity-containers" = callPackage
    ({ mkDerivation, base, containers, genvalidity, genvalidity-hspec
     , hspec, QuickCheck, validity, validity-containers
     }:
     mkDerivation {
       pname = "genvalidity-containers";
       version = "0.5.1.0";
       sha256 = "098360pcf522xcwa3lk091pyjl6a08cl12z18ybrlai38saskd83";
       libraryHaskellDepends = [
         base containers genvalidity QuickCheck validity validity-containers
       ];
       testHaskellDepends = [
         base containers genvalidity genvalidity-hspec hspec
       ];
       homepage = "https://github.com/NorfairKing/validity#readme";
       description = "GenValidity support for containers";
       license = stdenv.lib.licenses.mit;
     }) {};
  "genvalidity-hspec" = callPackage
    ({ mkDerivation, base, doctest, genvalidity, genvalidity-property
     , hspec, hspec-core, QuickCheck, transformers, validity
     }:
     mkDerivation {
       pname = "genvalidity-hspec";
       version = "0.6.2.0";
       sha256 = "05dgfivvsfcnrbdkvx7mssi14xsnxck8h2xasbqnn6xng3pc351v";
       libraryHaskellDepends = [
         base genvalidity genvalidity-property hspec hspec-core QuickCheck
         transformers validity
       ];
       testHaskellDepends = [
         base doctest genvalidity hspec hspec-core QuickCheck
       ];
       homepage = "https://github.com/NorfairKing/validity#readme";
       description = "Standard spec's for GenValidity instances";
       license = stdenv.lib.licenses.mit;
     }) {};
  "genvalidity-hspec-aeson" = callPackage
    ({ mkDerivation, aeson, base, bytestring, deepseq, doctest
     , genvalidity, genvalidity-aeson, genvalidity-hspec
     , genvalidity-text, hspec, QuickCheck, text
     }:
     mkDerivation {
       pname = "genvalidity-hspec-aeson";
       version = "0.3.0.0";
       sha256 = "0bqjfl86gj2201w5yingzizwq8hn63zdhir9wp3p0jiah2zp5rxh";
       libraryHaskellDepends = [
         aeson base bytestring deepseq genvalidity genvalidity-hspec hspec
         QuickCheck
       ];
       testHaskellDepends = [
         aeson base doctest genvalidity genvalidity-aeson genvalidity-hspec
         genvalidity-text hspec text
       ];
       homepage = "http://cs-syd.eu";
       description = "Standard spec's for aeson-related instances";
       license = stdenv.lib.licenses.mit;
     }) {};
  "genvalidity-hspec-binary" = callPackage
    ({ mkDerivation, base, binary, deepseq, doctest, genvalidity
     , genvalidity-hspec, hspec, QuickCheck
     }:
     mkDerivation {
       pname = "genvalidity-hspec-binary";
       version = "0.2.0.2";
       sha256 = "1h14b0m5kq3md5rys07rrn5jjcpk0c09fln40v221z2rrssnh211";
       libraryHaskellDepends = [
         base binary deepseq genvalidity genvalidity-hspec hspec QuickCheck
       ];
       testHaskellDepends = [ base doctest genvalidity hspec ];
       homepage = "https://github.com/NorfairKing/validity#readme";
       description = "Standard spec's for binary-related Instances";
       license = stdenv.lib.licenses.mit;
     }) {};
  "genvalidity-hspec-cereal" = callPackage
    ({ mkDerivation, base, cereal, deepseq, doctest, genvalidity
     , genvalidity-hspec, hspec, QuickCheck
     }:
     mkDerivation {
       pname = "genvalidity-hspec-cereal";
       version = "0.2.0.2";
       sha256 = "16r4g9k9rjifvbmy5nwkan6lnwhjvp85nlfihr1in5lwxf3gcl71";
       libraryHaskellDepends = [
         base cereal deepseq genvalidity genvalidity-hspec hspec QuickCheck
       ];
       testHaskellDepends = [ base doctest genvalidity hspec ];
       homepage = "http://cs-syd.eu";
       description = "Standard spec's for cereal-related instances";
       license = stdenv.lib.licenses.mit;
     }) {};
  "genvalidity-hspec-hashable" = callPackage
    ({ mkDerivation, base, doctest, genvalidity, genvalidity-hspec
     , genvalidity-property, hashable, hspec, hspec-core, QuickCheck
     , validity
     }:
     mkDerivation {
       pname = "genvalidity-hspec-hashable";
       version = "0.2.0.2";
       sha256 = "0s4z5k4myx4c6sky11l7s2lsvkxgyri11ikq75nfinff8b44h7iw";
       libraryHaskellDepends = [
         base genvalidity genvalidity-hspec genvalidity-property hashable
         hspec QuickCheck validity
       ];
       testHaskellDepends = [
         base doctest genvalidity genvalidity-hspec hashable hspec
         hspec-core QuickCheck
       ];
       homepage = "https://github.com/NorfairKing/validity#readme";
       description = "Standard spec's for Hashable instances";
       license = stdenv.lib.licenses.mit;
     }) {};
  "genvalidity-path" = callPackage
    ({ mkDerivation, base, criterion, genvalidity, genvalidity-hspec
     , hspec, path, QuickCheck, validity-path
     }:
     mkDerivation {
       pname = "genvalidity-path";
       version = "0.3.0.2";
       sha256 = "1fj0lc1il2yjlj6wmczvnk505c1dlvz4xw2aml0agkal9lpnvz00";
       libraryHaskellDepends = [
         base genvalidity path QuickCheck validity-path
       ];
       testHaskellDepends = [ base genvalidity-hspec hspec path ];
       benchmarkHaskellDepends = [
         base criterion genvalidity path QuickCheck
       ];
       homepage = "https://github.com/NorfairKing/validity#readme";
       description = "GenValidity support for Path";
       license = stdenv.lib.licenses.mit;
     }) {};
  "genvalidity-property" = callPackage
    ({ mkDerivation, base, directory, doctest, filepath, genvalidity
     , hspec, QuickCheck, validity
     }:
     mkDerivation {
       pname = "genvalidity-property";
       version = "0.2.1.1";
       sha256 = "0cjw5i2pydidda9bnp6x37ylhxdk9g874x5sadr6sscg5kq85a1b";
       libraryHaskellDepends = [
         base genvalidity hspec QuickCheck validity
       ];
       testHaskellDepends = [ base directory doctest filepath ];
       homepage = "https://github.com/NorfairKing/validity#readme";
       description = "Standard properties for functions on `Validity` types";
       license = stdenv.lib.licenses.mit;
     }) {};
  "genvalidity-scientific" = callPackage
    ({ mkDerivation, base, genvalidity, genvalidity-hspec, hspec
     , QuickCheck, scientific, validity, validity-scientific
     }:
     mkDerivation {
       pname = "genvalidity-scientific";
       version = "0.2.1.0";
       sha256 = "0gchsn5pvmbk57y7jn33zcbdr78mx3vb8v4cwr8b4pj5af6d84dg";
       libraryHaskellDepends = [
         base genvalidity QuickCheck scientific validity validity-scientific
       ];
       testHaskellDepends = [
         base genvalidity genvalidity-hspec hspec QuickCheck scientific
       ];
       homepage = "https://github.com/NorfairKing/validity#readme";
       description = "GenValidity support for Scientific";
       license = stdenv.lib.licenses.mit;
     }) {};
  "genvalidity-text" = callPackage
    ({ mkDerivation, array, base, genvalidity, genvalidity-hspec, hspec
     , QuickCheck, text, validity, validity-text
     }:
     mkDerivation {
       pname = "genvalidity-text";
       version = "0.5.1.0";
       sha256 = "0j7fx2zzv6ljqk87148h1rq3yg6vvy0dsl7kfl3f2p6ghnz7wggg";
       libraryHaskellDepends = [
         array base genvalidity QuickCheck text validity validity-text
       ];
       testHaskellDepends = [
         base genvalidity genvalidity-hspec hspec QuickCheck text
       ];
       homepage = "https://github.com/NorfairKing/validity#readme";
       description = "GenValidity support for Text";
       license = stdenv.lib.licenses.mit;
     }) {};
  "genvalidity-time" = callPackage
    ({ mkDerivation, base, genvalidity, genvalidity-hspec, hspec
     , QuickCheck, time, validity-time
     }:
     mkDerivation {
       pname = "genvalidity-time";
       version = "0.2.1.1";
       sha256 = "0x3qddniy2a0qfyaxi1mfw9kqijky2gwyp19bcsp1gfxxl3c4mf5";
       libraryHaskellDepends = [
         base genvalidity QuickCheck time validity-time
       ];
       testHaskellDepends = [ base genvalidity-hspec hspec time ];
       homepage = "https://github.com/NorfairKing/validity#readme";
       description = "GenValidity support for time";
       license = stdenv.lib.licenses.mit;
     }) {};
  "genvalidity-unordered-containers" = callPackage
    ({ mkDerivation, base, genvalidity, genvalidity-hspec, hashable
     , hspec, QuickCheck, unordered-containers, validity
     , validity-unordered-containers
     }:
     mkDerivation {
       pname = "genvalidity-unordered-containers";
       version = "0.2.0.3";
       sha256 = "0r89pisv6a7m0vf6dif7lx7w7gc4jsx33d4hzskwz3x6si07xadd";
       libraryHaskellDepends = [
         base genvalidity hashable QuickCheck unordered-containers validity
         validity-unordered-containers
       ];
       testHaskellDepends = [
         base genvalidity genvalidity-hspec hspec unordered-containers
       ];
       homepage = "https://github.com/NorfairKing/validity#readme";
       description = "GenValidity support for unordered-containers";
       license = stdenv.lib.licenses.mit;
     }) {};
  "genvalidity-uuid" = callPackage
    ({ mkDerivation, base, genvalidity, genvalidity-hspec, hspec
     , QuickCheck, uuid, validity, validity-uuid
     }:
     mkDerivation {
       pname = "genvalidity-uuid";
       version = "0.1.0.2";
       sha256 = "04pladdynmjdcd553cp44nli7k5hxp82rlpyihi1ynm7q3glndfi";
       libraryHaskellDepends = [
         base genvalidity QuickCheck uuid validity validity-uuid
       ];
       testHaskellDepends = [
         base genvalidity genvalidity-hspec hspec QuickCheck uuid
       ];
       homepage = "https://github.com/NorfairKing/validity#readme";
       description = "GenValidity support for UUID";
       license = stdenv.lib.licenses.mit;
     }) {};
  "genvalidity-vector" = callPackage
    ({ mkDerivation, base, genvalidity, genvalidity-hspec, hspec
     , QuickCheck, validity, validity-vector, vector
     }:
     mkDerivation {
       pname = "genvalidity-vector";
       version = "0.2.0.3";
       sha256 = "161w5shgj1k8691mmi9ddhxrnrqhsp502ywln2h0sk55zqcj1i5k";
       libraryHaskellDepends = [
         base genvalidity QuickCheck validity validity-vector vector
       ];
       testHaskellDepends = [
         base genvalidity genvalidity-hspec hspec vector
       ];
       homepage = "https://github.com/NorfairKing/validity#readme";
       description = "GenValidity support for vector";
       license = stdenv.lib.licenses.mit;
     }) {};
  "geodetics" = callPackage
    ({ mkDerivation, array, base, checkers, dimensional, HUnit
     , QuickCheck, test-framework, test-framework-hunit
     , test-framework-quickcheck2
     }:
     mkDerivation {
       pname = "geodetics";
       version = "0.0.6";
       sha256 = "0hp5p6m6szj1h5hzmrs3pyj4cfvcvkgdc95s5xa0lcxc3z8bn7g2";
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [ array base dimensional ];
       testHaskellDepends = [
         array base checkers dimensional HUnit QuickCheck test-framework
         test-framework-hunit test-framework-quickcheck2
       ];
       homepage = "https://github.com/PaulJohnson/geodetics";
       description = "Terrestrial coordinate systems and geodetic calculations";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "getopt-generics" = callPackage
    ({ mkDerivation, base, base-compat, base-orphans, filepath
     , generics-sop, hspec, QuickCheck, safe, silently, tagged
     }:
     mkDerivation {
       pname = "getopt-generics";
       version = "0.13.0.3";
       sha256 = "1202xsfvygd06h1d70v73ldwj32qv6sqadk5zl2979dgjx4841db";
       libraryHaskellDepends = [
         base base-compat base-orphans generics-sop tagged
       ];
       testHaskellDepends = [
         base base-compat base-orphans filepath generics-sop hspec
         QuickCheck safe silently tagged
       ];
       homepage = "https://github.com/soenkehahn/getopt-generics#readme";
       description = "Create command line interfaces with ease";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "ghc-core" = callPackage
    ({ mkDerivation, base, colorize-haskell, directory, filepath
     , pcre-light, process
     }:
     mkDerivation {
       pname = "ghc-core";
       version = "0.5.6";
       sha256 = "11byidxq2mcqams9a7df0hwwlzir639mr1s556sw5rrbi7jz6d7c";
       isLibrary = false;
       isExecutable = true;
       executableHaskellDepends = [
         base colorize-haskell directory filepath pcre-light process
       ];
       doHaddock = false;
       homepage = "https://github.com/shachaf/ghc-core";
       description = "Display GHC's core and assembly output in a pager";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "ghc-exactprint" = callPackage
    ({ mkDerivation, base, bytestring, containers, Diff, directory
     , filemanip, filepath, free, ghc, ghc-boot, ghc-paths, HUnit, mtl
     , silently, syb
     }:
     mkDerivation {
       pname = "ghc-exactprint";
       version = "0.5.6.1";
       sha256 = "141k6qiys0m0r4br7ikp4i546vs3xcil9cwglzcdfcbnb5nj1z87";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         base bytestring containers directory filepath free ghc ghc-boot
         ghc-paths mtl syb
       ];
       testHaskellDepends = [
         base bytestring containers Diff directory filemanip filepath ghc
         ghc-boot ghc-paths HUnit mtl silently syb
       ];
       doCheck = false;
       description = "ExactPrint for GHC";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "ghc-parser" = callPackage
    ({ mkDerivation, base, cpphs, ghc, happy }:
     mkDerivation {
       pname = "ghc-parser";
       version = "0.2.0.2";
       sha256 = "1130fpddf3jx84k558gsc83j3166qy15jp878w2d3lwgzxjcqx5v";
       libraryHaskellDepends = [ base ghc ];
       libraryToolDepends = [ cpphs happy ];
       homepage = "https://github.com/gibiansky/IHaskell";
       description = "Haskell source parser from GHC";
       license = stdenv.lib.licenses.mit;
     }) {};
  "ghc-paths" = callPackage
    ({ mkDerivation, base, Cabal, directory }:
     mkDerivation {
       pname = "ghc-paths";
       version = "0.1.0.9";
       sha256 = "0ibrr1dxa35xx20cpp8jzgfak1rdmy344dfwq4vlq013c6w8z9mg";
       revision = "4";
       editedCabalFile = "1fp0jyvi6prqsv0dxn010c7q4mmiwlcy1xk6ppd4d539adxxy67d";
       setupHaskellDepends = [ base Cabal directory ];
       libraryHaskellDepends = [ base ];
       description = "Knowledge of GHC's installation directories";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "ghc-prof" = callPackage
    ({ mkDerivation, attoparsec, base, containers, directory, filepath
     , process, scientific, tasty, tasty-hunit, temporary, text, time
     }:
     mkDerivation {
       pname = "ghc-prof";
       version = "1.4.1.5";
       sha256 = "0cpyzfyfkq6c17xpccgibjpq8j0l4w33mbpivim3kha7k76ilbg4";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         attoparsec base containers scientific text time
       ];
       testHaskellDepends = [
         attoparsec base containers directory filepath process tasty
         tasty-hunit temporary text
       ];
       homepage = "https://github.com/maoe/ghc-prof";
       description = "Library for parsing GHC time and allocation profiling reports";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "ghc-syntax-highlighter" = callPackage
    ({ mkDerivation, base, ghc, hspec, hspec-discover, text }:
     mkDerivation {
       pname = "ghc-syntax-highlighter";
       version = "0.0.3.0";
       sha256 = "077cvrx25qdl04qgp3wl7c3jxrakw1k873dwgybfwkhgfj2g8dx1";
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [ base ghc text ];
       testHaskellDepends = [ base hspec text ];
       testToolDepends = [ hspec-discover ];
       homepage = "https://github.com/mrkkrp/ghc-syntax-highlighter";
       description = "Syntax highlighter for Haskell using lexer of GHC itself";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "ghc-tcplugins-extra" = callPackage
    ({ mkDerivation, base, ghc }:
     mkDerivation {
       pname = "ghc-tcplugins-extra";
       version = "0.3";
       sha256 = "0k1ph8za52mx6f146xhaakn630xrzk42ylchv4b9r04hslhzvb1h";
       revision = "1";
       editedCabalFile = "0x2d4bp5lhyfrqjshmgbirdn2ihc057a8a6khqmz91jj9zlhf7vb";
       libraryHaskellDepends = [ base ghc ];
       homepage = "http://github.com/clash-lang/ghc-tcplugins-extra";
       description = "Utilities for writing GHC type-checker plugins";
       license = stdenv.lib.licenses.bsd2;
     }) {};
  "ghc-typelits-extra" = callPackage
    ({ mkDerivation, base, ghc, ghc-prim, ghc-tcplugins-extra
     , ghc-typelits-knownnat, ghc-typelits-natnormalise, integer-gmp
     , tasty, tasty-hunit, template-haskell, transformers
     }:
     mkDerivation {
       pname = "ghc-typelits-extra";
       version = "0.2.6";
       sha256 = "0dx6rk6lpklqqklj74mg92vjn66kkjfxp87hwazzlx9wai23r3cm";
       libraryHaskellDepends = [
         base ghc ghc-prim ghc-tcplugins-extra ghc-typelits-knownnat
         ghc-typelits-natnormalise integer-gmp transformers
       ];
       testHaskellDepends = [
         base ghc-typelits-knownnat ghc-typelits-natnormalise tasty
         tasty-hunit template-haskell
       ];
       homepage = "http://www.clash-lang.org/";
       description = "Additional type-level operations on GHC.TypeLits.Nat";
       license = stdenv.lib.licenses.bsd2;
     }) {};
  "ghc-typelits-knownnat" = callPackage
    ({ mkDerivation, base, ghc, ghc-tcplugins-extra
     , ghc-typelits-natnormalise, tasty, tasty-hunit, tasty-quickcheck
     , template-haskell, transformers
     }:
     mkDerivation {
       pname = "ghc-typelits-knownnat";
       version = "0.5.1";
       sha256 = "0yvdb3y82wrm41p9sbbsmfq91cp9kzx7mmqr20wgxrqamhnw952v";
       libraryHaskellDepends = [
         base ghc ghc-tcplugins-extra ghc-typelits-natnormalise
         template-haskell transformers
       ];
       testHaskellDepends = [
         base ghc-typelits-natnormalise tasty tasty-hunit tasty-quickcheck
       ];
       homepage = "http://clash-lang.org/";
       description = "Derive KnownNat constraints from other KnownNat constraints";
       license = stdenv.lib.licenses.bsd2;
     }) {};
  "ghc-typelits-natnormalise" = callPackage
    ({ mkDerivation, base, ghc, ghc-tcplugins-extra, integer-gmp, tasty
     , tasty-hunit, template-haskell, transformers
     }:
     mkDerivation {
       pname = "ghc-typelits-natnormalise";
       version = "0.6.2";
       sha256 = "04a338yfcl6jm1daax08zsy03myii4llzih4mlprkyid8i0yn740";
       libraryHaskellDepends = [
         base ghc ghc-tcplugins-extra integer-gmp transformers
       ];
       testHaskellDepends = [ base tasty tasty-hunit template-haskell ];
       homepage = "http://www.clash-lang.org/";
       description = "GHC typechecker plugin for types of kind GHC.TypeLits.Nat";
       license = stdenv.lib.licenses.bsd2;
     }) {};
  "ghcid" = callPackage
    ({ mkDerivation, ansi-terminal, base, cmdargs, containers
     , directory, extra, filepath, fsnotify, process, tasty, tasty-hunit
     , terminal-size, time, unix
     }:
     mkDerivation {
       pname = "ghcid";
       version = "0.7.1";
       sha256 = "06n37dv51i2905v8nwwv1ilm0zlx6zblrkfic1mp491ws2sijdx7";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         ansi-terminal base cmdargs directory extra filepath process time
       ];
       executableHaskellDepends = [
         ansi-terminal base cmdargs containers directory extra filepath
         fsnotify process terminal-size time unix
       ];
       testHaskellDepends = [
         ansi-terminal base cmdargs containers directory extra filepath
         fsnotify process tasty tasty-hunit terminal-size time unix
       ];
       doCheck = false;
       homepage = "https://github.com/ndmitchell/ghcid#readme";
       description = "GHCi based bare bones IDE";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "ghcjs-base-stub" = callPackage
    ({ mkDerivation, aeson, attoparsec, base, containers, deepseq
     , ghc-prim, primitive, scientific, text, transformers
     , unordered-containers, vector
     }:
     mkDerivation {
       pname = "ghcjs-base-stub";
       version = "0.2.0.0";
       sha256 = "05k59a6jg1a5s8zvqfah5rvm5kg34sqpv2zx4chczihx3n9prfv7";
       revision = "1";
       editedCabalFile = "0hvmgwyhv28d39was8bm52anwqh6x4mbd1mzzqxazlm0d0l8bpwp";
       libraryHaskellDepends = [
         aeson attoparsec base containers deepseq ghc-prim primitive
         scientific text transformers unordered-containers vector
       ];
       homepage = "https://github.com/louispan/javascript-stub#readme";
       description = "Allow GHCJS projects to compile under GHC and develop using intero";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "ghcjs-codemirror" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "ghcjs-codemirror";
       version = "0.0.0.2";
       sha256 = "15r09fdx6q3l8jk8k0hziw9hzvdj7p9jssj8nx78fjkdkxj2rfvc";
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [ base ];
       homepage = "https://github.com/ghcjs/CodeMirror";
       description = "Installs CodeMirror JavaScript files";
       license = stdenv.lib.licenses.mit;
     }) {};
  "ghost-buster" = callPackage
    ({ mkDerivation, base, hspec, QuickCheck }:
     mkDerivation {
       pname = "ghost-buster";
       version = "0.1.1.0";
       sha256 = "1mpnvdb6p6hda645njnfia5j259byrs0mg2fl3syff3qww797l02";
       libraryHaskellDepends = [ base ];
       testHaskellDepends = [ base hspec QuickCheck ];
       homepage = "https://github.com/Lazersmoke/ghost-buster#readme";
       description = "Existential type utilites";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "gi-atk" = callPackage
    ({ mkDerivation, atk, base, bytestring, Cabal, containers, gi-glib
     , gi-gobject, haskell-gi, haskell-gi-base, haskell-gi-overloading
     , text, transformers
     }:
     mkDerivation {
       pname = "gi-atk";
       version = "2.0.15";
       sha256 = "1vmzby12nvbrka6f44pr1pjwccl0p6s984pxvibajzp72x2knxc9";
       setupHaskellDepends = [ base Cabal haskell-gi ];
       libraryHaskellDepends = [
         base bytestring containers gi-glib gi-gobject haskell-gi
         haskell-gi-base haskell-gi-overloading text transformers
       ];
       libraryPkgconfigDepends = [ atk ];
       doHaddock = false;
       homepage = "https://github.com/haskell-gi/haskell-gi";
       description = "Atk bindings";
       license = stdenv.lib.licenses.lgpl21;
     }) {inherit (pkgs) atk;};
  "gi-cairo" = callPackage
    ({ mkDerivation, base, bytestring, Cabal, cairo, containers
     , haskell-gi, haskell-gi-base, haskell-gi-overloading, text
     , transformers
     }:
     mkDerivation {
       pname = "gi-cairo";
       version = "1.0.17";
       sha256 = "1ax7aly9ahvb18m3zjmy0dk47qfdx5yl15q52c3wp4wa0c5aggax";
       setupHaskellDepends = [ base Cabal haskell-gi ];
       libraryHaskellDepends = [
         base bytestring containers haskell-gi haskell-gi-base
         haskell-gi-overloading text transformers
       ];
       libraryPkgconfigDepends = [ cairo ];
       doHaddock = false;
       preCompileBuildDriver = ''
         PKG_CONFIG_PATH+=":${cairo}/lib/pkgconfig"
         setupCompileFlags+=" $(pkg-config --libs cairo-gobject)"
       '';
       homepage = "https://github.com/haskell-gi/haskell-gi";
       description = "Cairo bindings";
       license = stdenv.lib.licenses.lgpl21;
     }) {inherit (pkgs) cairo;};
  "gi-gdk" = callPackage
    ({ mkDerivation, base, bytestring, Cabal, containers, gi-cairo
     , gi-gdkpixbuf, gi-gio, gi-glib, gi-gobject, gi-pango, gtk3
     , haskell-gi, haskell-gi-base, haskell-gi-overloading, text
     , transformers
     }:
     mkDerivation {
       pname = "gi-gdk";
       version = "3.0.16";
       sha256 = "0jp3d3zfm20b4ax1g5k1wzh8fxxzsw4ssw7zqx0d13167m4smc3y";
       setupHaskellDepends = [ base Cabal haskell-gi ];
       libraryHaskellDepends = [
         base bytestring containers gi-cairo gi-gdkpixbuf gi-gio gi-glib
         gi-gobject gi-pango haskell-gi haskell-gi-base
         haskell-gi-overloading text transformers
       ];
       libraryPkgconfigDepends = [ gtk3 ];
       doHaddock = false;
       homepage = "https://github.com/haskell-gi/haskell-gi";
       description = "Gdk bindings";
       license = stdenv.lib.licenses.lgpl21;
     }) {gtk3 = pkgs.gnome3.gtk;};
  "gi-gdkpixbuf" = callPackage
    ({ mkDerivation, base, bytestring, Cabal, containers, gdk_pixbuf
     , gi-gio, gi-glib, gi-gobject, haskell-gi, haskell-gi-base
     , haskell-gi-overloading, text, transformers
     }:
     mkDerivation {
       pname = "gi-gdkpixbuf";
       version = "2.0.16";
       sha256 = "0vqnskshbfp9nsgyfg4pifrh007rb7k176ci8niik96kxh95zfzx";
       setupHaskellDepends = [ base Cabal haskell-gi ];
       libraryHaskellDepends = [
         base bytestring containers gi-gio gi-glib gi-gobject haskell-gi
         haskell-gi-base haskell-gi-overloading text transformers
       ];
       libraryPkgconfigDepends = [ gdk_pixbuf ];
       doHaddock = false;
       homepage = "https://github.com/haskell-gi/haskell-gi";
       description = "GdkPixbuf bindings";
       license = stdenv.lib.licenses.lgpl21;
     }) {inherit (pkgs) gdk_pixbuf;};
  "gi-gio" = callPackage
    ({ mkDerivation, base, bytestring, Cabal, containers, gi-glib
     , gi-gobject, glib, haskell-gi, haskell-gi-base
     , haskell-gi-overloading, text, transformers
     }:
     mkDerivation {
       pname = "gi-gio";
       version = "2.0.18";
       sha256 = "0h7liqxf63wmhjzgbjshv7pa4fx743jpvkphn5yyjkc0bnfcvsqk";
       setupHaskellDepends = [ base Cabal haskell-gi ];
       libraryHaskellDepends = [
         base bytestring containers gi-glib gi-gobject haskell-gi
         haskell-gi-base haskell-gi-overloading text transformers
       ];
       libraryPkgconfigDepends = [ glib ];
       doHaddock = false;
       homepage = "https://github.com/haskell-gi/haskell-gi";
       description = "Gio bindings";
       license = stdenv.lib.licenses.lgpl21;
     }) {inherit (pkgs) glib;};
  "gi-glib" = callPackage
    ({ mkDerivation, base, bytestring, Cabal, containers, glib
     , haskell-gi, haskell-gi-base, haskell-gi-overloading, text
     , transformers
     }:
     mkDerivation {
       pname = "gi-glib";
       version = "2.0.17";
       sha256 = "0rxbkrwlwnjf46z0qpw0vjw1nv9kl91xp7k2098rqs36kl5bwylx";
       setupHaskellDepends = [ base Cabal haskell-gi ];
       libraryHaskellDepends = [
         base bytestring containers haskell-gi haskell-gi-base
         haskell-gi-overloading text transformers
       ];
       libraryPkgconfigDepends = [ glib ];
       doHaddock = false;
       homepage = "https://github.com/haskell-gi/haskell-gi";
       description = "GLib bindings";
       license = stdenv.lib.licenses.lgpl21;
     }) {inherit (pkgs) glib;};
  "gi-gobject" = callPackage
    ({ mkDerivation, base, bytestring, Cabal, containers, gi-glib, glib
     , haskell-gi, haskell-gi-base, haskell-gi-overloading, text
     , transformers
     }:
     mkDerivation {
       pname = "gi-gobject";
       version = "2.0.16";
       sha256 = "1bgn4ywx94py0v213iv7mbjjvvy3y7gvpgw4wpn38s2np7al8y65";
       setupHaskellDepends = [ base Cabal haskell-gi ];
       libraryHaskellDepends = [
         base bytestring containers gi-glib haskell-gi haskell-gi-base
         haskell-gi-overloading text transformers
       ];
       libraryPkgconfigDepends = [ glib ];
       doHaddock = false;
       homepage = "https://github.com/haskell-gi/haskell-gi";
       description = "GObject bindings";
       license = stdenv.lib.licenses.lgpl21;
     }) {inherit (pkgs) glib;};
  "gi-gtk" = callPackage
    ({ mkDerivation, base, bytestring, Cabal, containers, gi-atk
     , gi-cairo, gi-gdk, gi-gdkpixbuf, gi-gio, gi-glib, gi-gobject
     , gi-pango, gtk3, haskell-gi, haskell-gi-base
     , haskell-gi-overloading, text, transformers
     }:
     mkDerivation {
       pname = "gi-gtk";
       version = "3.0.26";
       sha256 = "1b0sfjcjxm0kzqyhrvl4wbxqa7zdpwv13xzrpb1k1k9rijjf1anf";
       setupHaskellDepends = [ base Cabal haskell-gi ];
       libraryHaskellDepends = [
         base bytestring containers gi-atk gi-cairo gi-gdk gi-gdkpixbuf
         gi-gio gi-glib gi-gobject gi-pango haskell-gi haskell-gi-base
         haskell-gi-overloading text transformers
       ];
       libraryPkgconfigDepends = [ gtk3 ];
       doHaddock = false;
       homepage = "https://github.com/haskell-gi/haskell-gi";
       description = "Gtk bindings";
       license = stdenv.lib.licenses.lgpl21;
     }) {gtk3 = pkgs.gnome3.gtk;};
  "gi-gtk-hs" = callPackage
    ({ mkDerivation, base, base-compat, containers, gi-gdk
     , gi-gdkpixbuf, gi-glib, gi-gobject, gi-gtk, haskell-gi-base, mtl
     , text, transformers
     }:
     mkDerivation {
       pname = "gi-gtk-hs";
       version = "0.3.6.3";
       sha256 = "0xnrssnfaz57akrkgpf1cm3d4lg3cmlh0b8yp6w9pdsbp0lld2ay";
       libraryHaskellDepends = [
         base base-compat containers gi-gdk gi-gdkpixbuf gi-glib gi-gobject
         gi-gtk haskell-gi-base mtl text transformers
       ];
       homepage = "https://github.com/haskell-gi/gi-gtk-hs";
       description = "A wrapper for gi-gtk, adding a few more idiomatic API parts on top";
       license = stdenv.lib.licenses.lgpl21;
     }) {};
  "gi-gtksource" = callPackage
    ({ mkDerivation, base, bytestring, Cabal, containers, gi-atk
     , gi-cairo, gi-gdk, gi-gdkpixbuf, gi-gio, gi-glib, gi-gobject
     , gi-gtk, gi-pango, gtksourceview3, haskell-gi, haskell-gi-base
     , haskell-gi-overloading, text, transformers
     }:
     mkDerivation {
       pname = "gi-gtksource";
       version = "3.0.16";
       sha256 = "0fm5bnyq4f9icyhxkyxf42mmanmc2klbdgin75dcdq5r92gipfcp";
       setupHaskellDepends = [ base Cabal haskell-gi ];
       libraryHaskellDepends = [
         base bytestring containers gi-atk gi-cairo gi-gdk gi-gdkpixbuf
         gi-gio gi-glib gi-gobject gi-gtk gi-pango haskell-gi
         haskell-gi-base haskell-gi-overloading text transformers
       ];
       libraryPkgconfigDepends = [ gtksourceview3 ];
       doHaddock = false;
       homepage = "https://github.com/haskell-gi/haskell-gi";
       description = "GtkSource bindings";
       license = stdenv.lib.licenses.lgpl21;
     }) {gtksourceview3 = pkgs.gnome3.gtksourceview;};
  "gi-javascriptcore" = callPackage
    ({ mkDerivation, base, bytestring, Cabal, containers, gi-glib
     , gi-gobject, haskell-gi, haskell-gi-base, haskell-gi-overloading
     , text, transformers, webkitgtk
     }:
     mkDerivation {
       pname = "gi-javascriptcore";
       version = "4.0.16";
       sha256 = "0kihq9sp42k2k9j8qrwgja62i5pzwhc1z1yy6h19n56aikddfc2z";
       setupHaskellDepends = [ base Cabal haskell-gi ];
       libraryHaskellDepends = [
         base bytestring containers gi-glib gi-gobject haskell-gi
         haskell-gi-base haskell-gi-overloading text transformers
       ];
       libraryPkgconfigDepends = [ webkitgtk ];
       doHaddock = false;
       homepage = "https://github.com/haskell-gi/haskell-gi";
       description = "JavaScriptCore bindings";
       license = stdenv.lib.licenses.lgpl21;
     }) {inherit (pkgs.gnome3) webkitgtk;};
  "gi-pango" = callPackage
    ({ mkDerivation, base, bytestring, Cabal, cairo, containers
     , gi-glib, gi-gobject, haskell-gi, haskell-gi-base
     , haskell-gi-overloading, pango, text, transformers
     }:
     mkDerivation {
       pname = "gi-pango";
       version = "1.0.16";
       sha256 = "1x3q1q4ww1v6v42p1wcaghxsja8cigqaqvklkfg4gxyp2f2cdg57";
       setupHaskellDepends = [ base Cabal haskell-gi ];
       libraryHaskellDepends = [
         base bytestring containers gi-glib gi-gobject haskell-gi
         haskell-gi-base haskell-gi-overloading text transformers
       ];
       libraryPkgconfigDepends = [ cairo pango ];
       doHaddock = false;
       preCompileBuildDriver = ''
         PKG_CONFIG_PATH+=":${cairo}/lib/pkgconfig"
         setupCompileFlags+=" $(pkg-config --libs cairo-gobject)"
       '';
       homepage = "https://github.com/haskell-gi/haskell-gi";
       description = "Pango bindings";
       license = stdenv.lib.licenses.lgpl21;
     }) {inherit (pkgs) cairo; inherit (pkgs.gnome2) pango;};
  "gi-vte" = callPackage
    ({ mkDerivation, base, bytestring, Cabal, containers, gi-atk
     , gi-gdk, gi-gio, gi-glib, gi-gobject, gi-gtk, gi-pango, haskell-gi
     , haskell-gi-base, haskell-gi-overloading, text, transformers
     , vte_291
     }:
     mkDerivation {
       pname = "gi-vte";
       version = "2.91.19";
       sha256 = "1hnhidjr7jh7i826lj6kdn264i592sfl5kwvymnpiycmcb37dd4y";
       setupHaskellDepends = [ base Cabal haskell-gi ];
       libraryHaskellDepends = [
         base bytestring containers gi-atk gi-gdk gi-gio gi-glib gi-gobject
         gi-gtk gi-pango haskell-gi haskell-gi-base haskell-gi-overloading
         text transformers
       ];
       libraryPkgconfigDepends = [ vte_291 ];
       doHaddock = false;
       homepage = "https://github.com/haskell-gi/haskell-gi";
       description = "Vte bindings";
       license = stdenv.lib.licenses.lgpl21;
     }) {vte_291 = pkgs.gnome3.vte;};
  "gio" = callPackage
    ({ mkDerivation, array, base, bytestring, Cabal, containers, glib
     , gtk2hs-buildtools, mtl, system-glib
     }:
     mkDerivation {
       pname = "gio";
       version = "0.13.5.0";
       sha256 = "0p1mwzbrzb74wxlykasza4qvvlck2b0wgnhvfa0j3h27x4ii8xjw";
       enableSeparateDataOutput = true;
       setupHaskellDepends = [ base Cabal gtk2hs-buildtools ];
       libraryHaskellDepends = [
         array base bytestring containers glib mtl
       ];
       libraryPkgconfigDepends = [ system-glib ];
       homepage = "http://projects.haskell.org/gtk2hs/";
       description = "Binding to GIO";
       license = stdenv.lib.licenses.lgpl21;
     }) {system-glib = pkgs.glib;};
  "giphy-api" = callPackage
    ({ mkDerivation, aeson, base, basic-prelude, bytestring, containers
     , directory, hspec, http-api-data, http-client, http-client-tls
     , lens, microlens, microlens-th, mtl, network-uri, servant
     , servant-client, text, transformers
     }:
     mkDerivation {
       pname = "giphy-api";
       version = "0.6.0.1";
       sha256 = "0146813vcnjgb8clyczlz8g6ngm9l702gib60f2m6rf2bc0bbpwd";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         aeson base containers http-api-data http-client http-client-tls
         microlens microlens-th mtl network-uri servant servant-client text
         transformers
       ];
       testHaskellDepends = [
         aeson base basic-prelude bytestring containers directory hspec lens
         network-uri text
       ];
       homepage = "http://github.com/passy/giphy-api#readme";
       description = "Giphy HTTP API wrapper and CLI search tool";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "git-vogue" = callPackage
    ({ mkDerivation, base, bifunctors, containers, cpphs, Diff
     , directory, filepath, formatting, git, haskell-src-exts, hlint
     , hscolour, hspec, optparse-applicative, process, split, strict
     , stylish-haskell, temporary, text, transformers, unix
     }:
     mkDerivation {
       pname = "git-vogue";
       version = "0.3.0.2";
       sha256 = "0p3h4107pfcxap83xbqffb30zymi2ipzjqgcdg2qzpbnczw6j5ml";
       isLibrary = true;
       isExecutable = true;
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [
         base containers directory filepath formatting optparse-applicative
         process split temporary text transformers unix
       ];
       executableHaskellDepends = [
         base bifunctors cpphs Diff directory haskell-src-exts hlint
         hscolour optparse-applicative process strict stylish-haskell text
       ];
       testHaskellDepends = [
         base containers directory filepath hspec process temporary
       ];
       testToolDepends = [ git ];
       doCheck = false;
       homepage = "https://github.com/christian-marie/git-vogue";
       description = "A framework for pre-commit checks";
       license = stdenv.lib.licenses.bsd3;
     }) {inherit (pkgs) git;};
  "githash" = callPackage
    ({ mkDerivation, base, bytestring, directory, filepath, hspec
     , process, template-haskell, temporary, unliftio
     }:
     mkDerivation {
       pname = "githash";
       version = "0.1.3.0";
       sha256 = "0rnp5ljrb05kd127fy2s5jlxjvjfs50dar92pahb36w2qw2clnp7";
       libraryHaskellDepends = [
         base bytestring directory filepath process template-haskell
       ];
       testHaskellDepends = [
         base bytestring directory filepath hspec process template-haskell
         temporary unliftio
       ];
       doCheck = false;
       homepage = "https://github.com/snoyberg/githash#readme";
       description = "Compile git revision info into Haskell projects";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "github" = callPackage
    ({ mkDerivation, aeson, aeson-compat, base, base-compat
     , base16-bytestring, binary, binary-orphans, byteable, bytestring
     , containers, cryptohash, deepseq, deepseq-generics, exceptions
     , file-embed, hashable, hspec, hspec-discover, http-client
     , http-client-tls, http-link-header, http-types, iso8601-time, mtl
     , network-uri, semigroups, text, time, tls, transformers
     , transformers-compat, unordered-containers, vector
     , vector-instances
     }:
     mkDerivation {
       pname = "github";
       version = "0.19";
       sha256 = "1523p2rv4jwsbsqjc9g3qff4cy5dhdy5wzp382x5nr11rmbrpsph";
       revision = "3";
       editedCabalFile = "0s3zmkzgfbh1mc0492i7rjiawxkzg0im8z2p10niv5ff58m87yri";
       libraryHaskellDepends = [
         aeson aeson-compat base base-compat base16-bytestring binary
         binary-orphans byteable bytestring containers cryptohash deepseq
         deepseq-generics exceptions hashable http-client http-client-tls
         http-link-header http-types iso8601-time mtl network-uri semigroups
         text time tls transformers transformers-compat unordered-containers
         vector vector-instances
       ];
       testHaskellDepends = [
         aeson-compat base base-compat bytestring file-embed hspec
         unordered-containers vector
       ];
       testToolDepends = [ hspec-discover ];
       homepage = "https://github.com/phadej/github";
       description = "Access to the GitHub API, v3";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "github-release" = callPackage
    ({ mkDerivation, aeson, base, bytestring, http-client
     , http-client-tls, http-types, mime-types, optparse-generic, text
     , unordered-containers, uri-templater
     }:
     mkDerivation {
       pname = "github-release";
       version = "1.2.3";
       sha256 = "14jb82gybm2zwri05bqxsibwr29lhghcaj3n0171nbndqs0dyl0y";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         aeson base bytestring http-client http-client-tls http-types
         mime-types optparse-generic text unordered-containers uri-templater
       ];
       executableHaskellDepends = [
         aeson base bytestring http-client http-client-tls http-types
         mime-types optparse-generic text unordered-containers uri-templater
       ];
       homepage = "https://github.com/tfausak/github-release#readme";
       description = "Upload files to GitHub releases";
       license = stdenv.lib.licenses.mit;
     }) {};
  "github-types" = callPackage
    ({ mkDerivation, aeson, aeson-pretty, base, hspec, hspec-smallcheck
     , http-conduit, smallcheck, text, time, unordered-containers
     , vector
     }:
     mkDerivation {
       pname = "github-types";
       version = "0.2.1";
       sha256 = "0rvqmzbbc8k7xs0akry7xh5c2abzzr6290812cnwk9ry3d3fmr6c";
       libraryHaskellDepends = [ aeson base text time ];
       testHaskellDepends = [
         aeson aeson-pretty base hspec hspec-smallcheck http-conduit
         smallcheck text time unordered-containers vector
       ];
       description = "Type definitions for objects used by the GitHub v3 API";
       license = "unknown";
       hydraPlatforms = stdenv.lib.platforms.none;
     }) {};
  "github-webhooks" = callPackage
    ({ mkDerivation, aeson, base, base16-bytestring, bytestring
     , cryptonite, deepseq, deepseq-generics, hspec, memory, text, time
     , vector
     }:
     mkDerivation {
       pname = "github-webhooks";
       version = "0.10.0";
       sha256 = "1pvif863yi6qxwjd43insjvrzizaz78b3kf8l13rmy3irjlqljh8";
       libraryHaskellDepends = [
         aeson base base16-bytestring bytestring cryptonite deepseq
         deepseq-generics memory text time vector
       ];
       testHaskellDepends = [ aeson base bytestring hspec text vector ];
       homepage = "https://github.com/onrock-eng/github-webhooks#readme";
       description = "Aeson instances for GitHub Webhook payloads";
       license = stdenv.lib.licenses.mit;
     }) {};
  "gitrev" = callPackage
    ({ mkDerivation, base, base-compat, directory, filepath, process
     , template-haskell
     }:
     mkDerivation {
       pname = "gitrev";
       version = "1.3.1";
       sha256 = "0cl3lfm6k1h8fxp2vxa6ihfp4v8igkz9h35iwyq2frzm4kdn96d8";
       libraryHaskellDepends = [
         base base-compat directory filepath process template-haskell
       ];
       homepage = "https://github.com/acfoltzer/gitrev";
       description = "Compile git revision info into Haskell projects";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "gl" = callPackage
    ({ mkDerivation, base, Cabal, containers, directory, filepath
     , fixed, half, hxt, libGL, transformers
     }:
     mkDerivation {
       pname = "gl";
       version = "0.8.0";
       sha256 = "0f8l1ra05asqjnk97sliqb3wqvr6lic18rfs1f9dm1kw2lw2hkda";
       revision = "2";
       editedCabalFile = "0zbpf559ajlcwnylpbm6dbi4m3g3s08fciqfp5am3i2vrmw0wpi9";
       setupHaskellDepends = [
         base Cabal containers directory filepath hxt transformers
       ];
       libraryHaskellDepends = [
         base containers fixed half transformers
       ];
       librarySystemDepends = [ libGL ];
       description = "Complete OpenGL raw bindings";
       license = stdenv.lib.licenses.bsd3;
     }) {inherit (pkgs) libGL;};
  "glabrous" = callPackage
    ({ mkDerivation, aeson, aeson-pretty, attoparsec, base, bytestring
     , cereal, cereal-text, directory, either, hspec, text
     , unordered-containers
     }:
     mkDerivation {
       pname = "glabrous";
       version = "0.3.6";
       sha256 = "1ba1smngfq6xqwcbfg10sy2qjxh7miyd8qbfmmv14klzwimk44ri";
       libraryHaskellDepends = [
         aeson aeson-pretty attoparsec base bytestring cereal cereal-text
         either text unordered-containers
       ];
       testHaskellDepends = [
         base directory either hspec text unordered-containers
       ];
       homepage = "https://github.com/MichelBoucey/glabrous";
       description = "A template DSL library";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "glaze" = callPackage
    ({ mkDerivation, base, lens }:
     mkDerivation {
       pname = "glaze";
       version = "0.3.0.1";
       sha256 = "18925rqf3ah1k7xcb15zk0gcbc4slvvhr5lsz32fh96gid089cdv";
       libraryHaskellDepends = [ base lens ];
       homepage = "https://github.com/louispan/glaze#readme";
       description = "Framework for rendering things with metadata/headers and values";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "glazier" = callPackage
    ({ mkDerivation, alternators, base, data-diverse, data-diverse-lens
     , dlist, lens, mtl, stm, tagged, transformers, unliftio
     , unliftio-core
     }:
     mkDerivation {
       pname = "glazier";
       version = "1.0.0.0";
       sha256 = "193igffdh2sdb8sharv7ycxj0daxii2x2n0c53kbz6cbwi865ig9";
       libraryHaskellDepends = [
         alternators base data-diverse data-diverse-lens dlist lens mtl
         transformers unliftio unliftio-core
       ];
       testHaskellDepends = [
         alternators base data-diverse data-diverse-lens dlist lens mtl stm
         tagged transformers unliftio unliftio-core
       ];
       homepage = "https://github.com/louispan/glazier#readme";
       description = "Extensible effects using ContT, State and variants";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "glib" = callPackage
    ({ mkDerivation, base, bytestring, Cabal, containers, glib
     , gtk2hs-buildtools, text, utf8-string
     }:
     mkDerivation {
       pname = "glib";
       version = "0.13.6.0";
       sha256 = "1sz8mvac39sxj7skw8zasbp6srm4k92223l29lll1125d8n0cwaf";
       setupHaskellDepends = [ base Cabal gtk2hs-buildtools ];
       libraryHaskellDepends = [
         base bytestring containers text utf8-string
       ];
       libraryPkgconfigDepends = [ glib ];
       homepage = "http://projects.haskell.org/gtk2hs/";
       description = "Binding to the GLIB library for Gtk2Hs";
       license = stdenv.lib.licenses.lgpl21;
     }) {inherit (pkgs) glib;};
  "gloss" = callPackage
    ({ mkDerivation, base, bmp, bytestring, containers, ghc-prim
     , gloss-rendering, GLUT, OpenGL
     }:
     mkDerivation {
       pname = "gloss";
       version = "1.12.0.0";
       sha256 = "0jxcvvmxvmb7n0wp4lwhvl4axkbhwwv4i6pi4xng357hfanxh1k9";
       libraryHaskellDepends = [
         base bmp bytestring containers ghc-prim gloss-rendering GLUT OpenGL
       ];
       homepage = "http://gloss.ouroborus.net";
       description = "Painless 2D vector graphics, animations and simulations";
       license = stdenv.lib.licenses.mit;
     }) {};
  "gloss-raster" = callPackage
    ({ mkDerivation, base, containers, ghc-prim, gloss, gloss-rendering
     , repa
     }:
     mkDerivation {
       pname = "gloss-raster";
       version = "1.12.0.0";
       sha256 = "14a1qcajm4fp4hr4y55mw1jl5id747d455yn1818y5kz75m4k7y8";
       libraryHaskellDepends = [
         base containers ghc-prim gloss gloss-rendering repa
       ];
       homepage = "http://gloss.ouroborus.net";
       description = "Parallel rendering of raster images";
       license = stdenv.lib.licenses.mit;
     }) {};
  "gloss-rendering" = callPackage
    ({ mkDerivation, base, bmp, bytestring, containers, GLUT, OpenGL }:
     mkDerivation {
       pname = "gloss-rendering";
       version = "1.12.0.0";
       sha256 = "1g64wlyk13lssf8p71xhpjaqygzdkn5fq6k2bmqwixmq56bhpnb0";
       libraryHaskellDepends = [
         base bmp bytestring containers GLUT OpenGL
       ];
       description = "Gloss picture data types and rendering functions";
       license = stdenv.lib.licenses.mit;
     }) {};
  "gnuplot" = callPackage
    ({ mkDerivation, array, base, containers, data-accessor
     , data-accessor-transformers, deepseq, filepath, process
     , semigroups, temporary, time, transformers, utility-ht
     }:
     mkDerivation {
       pname = "gnuplot";
       version = "0.5.5.3";
       sha256 = "0105ajc5szgrh091x5fxdcydc96rdh75gg2snyfr2y2rhf120x2g";
       isLibrary = true;
       isExecutable = true;
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [
         array base containers data-accessor data-accessor-transformers
         deepseq filepath process semigroups temporary time transformers
         utility-ht
       ];
       homepage = "http://www.haskell.org/haskellwiki/Gnuplot";
       description = "2D and 3D plots using gnuplot";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "goggles" = callPackage
    ({ mkDerivation, aeson, attoparsec, base, base64-bytestring, binary
     , bytestring, containers, cryptonite, exceptions, filepath, hspec
     , http-client, http-client-tls, http-types, memory, mtl, pem
     , QuickCheck, req, scientific, stm, text, time, transformers
     , unix-time, x509, x509-store
     }:
     mkDerivation {
       pname = "goggles";
       version = "0.3.2";
       sha256 = "0g798gvxyqr08digpb61cvfcwg626iwmz9dqyg32w5vba332akd6";
       libraryHaskellDepends = [
         aeson attoparsec base base64-bytestring binary bytestring
         containers cryptonite exceptions filepath http-client
         http-client-tls http-types memory mtl pem req scientific stm text
         time transformers unix-time x509 x509-store
       ];
       testHaskellDepends = [ base hspec QuickCheck ];
       homepage = "https://github.com/ocramz/goggles";
       description = "Extensible interface to Web APIs";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "google-oauth2-jwt" = callPackage
    ({ mkDerivation, base, base64-bytestring, bytestring, HsOpenSSL
     , RSA, text, unix-time
     }:
     mkDerivation {
       pname = "google-oauth2-jwt";
       version = "0.3.1";
       sha256 = "121g7fsdcnv65gp81z450dqqw6ii75pwn3cbilwx5yv4mm571mvi";
       libraryHaskellDepends = [
         base base64-bytestring bytestring HsOpenSSL RSA text unix-time
       ];
       homepage = "https://github.com/MichelBoucey/google-oauth2-jwt";
       description = "Get a signed JWT for Google Service Accounts";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "gpolyline" = callPackage
    ({ mkDerivation, base, split }:
     mkDerivation {
       pname = "gpolyline";
       version = "0.1.0.1";
       sha256 = "01bsl7s8r33jgvk9lyca02awj43acii8spa6sskz19ivhm2adcr8";
       libraryHaskellDepends = [ base split ];
       homepage = "https://github.com/fegu/gpolyline";
       description = "Pure module for encoding/decoding Google Polyline";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "graph-core" = callPackage
    ({ mkDerivation, base, containers, deepseq, hashable, HTF, mtl
     , QuickCheck, safe, unordered-containers, vector
     }:
     mkDerivation {
       pname = "graph-core";
       version = "0.3.0.0";
       sha256 = "0m7820dwasix5x6ni6gphbqwswxm7qv9xxw9qgl7ifzb82m0p3rp";
       libraryHaskellDepends = [
         base containers deepseq hashable mtl safe unordered-containers
         vector
       ];
       testHaskellDepends = [
         base containers deepseq hashable HTF mtl QuickCheck safe
         unordered-containers vector
       ];
       homepage = "https://github.com/factisresearch/graph-core";
       description = "Fast, memory efficient and persistent graph implementation";
       license = stdenv.lib.licenses.mit;
     }) {};
  "graph-wrapper" = callPackage
    ({ mkDerivation, array, base, containers, deepseq, hspec
     , QuickCheck
     }:
     mkDerivation {
       pname = "graph-wrapper";
       version = "0.2.5.2";
       sha256 = "1kcdfr1bz2ks71gapz6wrzv7sj6qbmj1zadj1cmh39g9xvqjx94q";
       libraryHaskellDepends = [ array base containers ];
       testHaskellDepends = [
         array base containers deepseq hspec QuickCheck
       ];
       homepage = "https://github.com/soenkehahn/graph-wrapper";
       description = "A wrapper around the standard Data.Graph with a less awkward interface";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "graphs" = callPackage
    ({ mkDerivation, array, base, containers, transformers
     , transformers-compat, void
     }:
     mkDerivation {
       pname = "graphs";
       version = "0.7.1";
       sha256 = "02g21jpz8jm8j1kpszk8vglw1733z2jp32dc650z40nxlmxpmlxc";
       revision = "1";
       editedCabalFile = "1cjyxswlkachki6l4mcaffwpjajyx86jzipzlqjg7c080vwvb19g";
       libraryHaskellDepends = [
         array base containers transformers transformers-compat void
       ];
       homepage = "http://github.com/ekmett/graphs";
       description = "A simple monadic graph library";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "graphviz" = callPackage
    ({ mkDerivation, base, bytestring, colour, containers, directory
     , dlist, fgl, filepath, graphviz, mtl, polyparse, process
     , temporary, text, wl-pprint-text
     }:
     mkDerivation {
       pname = "graphviz";
       version = "2999.20.0.2";
       sha256 = "0kj7ap0gnliviq2p8lscw1m06capnsa90vpvcys24nqy5nw2wrp7";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         base bytestring colour containers directory dlist fgl filepath mtl
         polyparse process temporary text wl-pprint-text
       ];
       testSystemDepends = [ graphviz ];
       doCheck = false;
       homepage = "http://projects.haskell.org/graphviz/";
       description = "Bindings to Graphviz for graph visualisation";
       license = stdenv.lib.licenses.bsd3;
     }) {inherit (pkgs) graphviz;};
  "gravatar" = callPackage
    ({ mkDerivation, base, bytestring, data-default, hspec, HTTP
     , pureMD5, text
     }:
     mkDerivation {
       pname = "gravatar";
       version = "0.8.0";
       sha256 = "1mzl08qzwzzhz6bvkz4qnrdnzsgvsmi2lnhzf743yzx4msn00q3g";
       libraryHaskellDepends = [
         base bytestring data-default HTTP pureMD5 text
       ];
       testHaskellDepends = [ base hspec text ];
       description = "Generate Gravatar image URLs";
       license = stdenv.lib.licenses.mit;
     }) {};
  "graylog" = callPackage
    ({ mkDerivation, aeson, aeson-casing, base, bytestring, file-embed
     , network, random, scientific, tasty, tasty-hunit, text, time
     , vector
     }:
     mkDerivation {
       pname = "graylog";
       version = "0.1.0.1";
       sha256 = "10h0d87gvvg4bznnlj9ad0ppjz0nibmcrrlmrcwjrl583pk7709d";
       libraryHaskellDepends = [
         aeson aeson-casing base bytestring network random scientific text
         time vector
       ];
       testHaskellDepends = [
         aeson aeson-casing base bytestring file-embed network scientific
         tasty tasty-hunit text time vector
       ];
       doCheck = false;
       homepage = "https://github.com/AndrewRademacher/haskell-graylog";
       description = "Support for graylog output";
       license = "unknown";
       hydraPlatforms = stdenv.lib.platforms.none;
     }) {};
  "greskell" = callPackage
    ({ mkDerivation, aeson, base, bytestring, doctest, doctest-discover
     , exceptions, greskell-core, hspec, semigroups, text, transformers
     , unordered-containers, vector
     }:
     mkDerivation {
       pname = "greskell";
       version = "0.2.2.0";
       sha256 = "1ka4iqfyr03dj2kw22h1gik70cfhhvn870w9q9fd42n2k794snbz";
       configureFlags = [ "-f-hint-test" ];
       libraryHaskellDepends = [
         aeson base exceptions greskell-core semigroups text transformers
         unordered-containers vector
       ];
       testHaskellDepends = [
         aeson base bytestring doctest doctest-discover greskell-core hspec
         text unordered-containers
       ];
       homepage = "https://github.com/debug-ito/greskell/";
       description = "Haskell binding for Gremlin graph query language";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "greskell-core" = callPackage
    ({ mkDerivation, aeson, base, bytestring, containers, doctest
     , doctest-discover, hashable, hspec, QuickCheck, scientific
     , semigroups, text, unordered-containers, uuid, vector
     }:
     mkDerivation {
       pname = "greskell-core";
       version = "0.1.2.4";
       sha256 = "11agvhvpv94rnylc5ch5cg90w5z1i0ywdw47yca83503lmv3y790";
       libraryHaskellDepends = [
         aeson base containers hashable scientific semigroups text
         unordered-containers uuid vector
       ];
       testHaskellDepends = [
         aeson base bytestring doctest doctest-discover hspec QuickCheck
         text unordered-containers vector
       ];
       homepage = "https://github.com/debug-ito/greskell/";
       description = "Haskell binding for Gremlin graph query language - core data types and tools";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "greskell-websocket" = callPackage
    ({ mkDerivation, aeson, async, base, base64-bytestring, bytestring
     , greskell-core, hashtables, hspec, safe-exceptions, stm, text
     , unordered-containers, uuid, vector, websockets
     }:
     mkDerivation {
       pname = "greskell-websocket";
       version = "0.1.1.2";
       sha256 = "1rydw93dscnq41a1j4l7fchbpxgbqgf2kx8c58kb0m8qxi7v6qlh";
       libraryHaskellDepends = [
         aeson async base base64-bytestring bytestring greskell-core
         hashtables safe-exceptions stm text unordered-containers uuid
         vector websockets
       ];
       testHaskellDepends = [
         aeson base bytestring greskell-core hspec unordered-containers uuid
         vector
       ];
       homepage = "https://github.com/debug-ito/greskell/";
       description = "Haskell client for Gremlin Server using WebSocket serializer";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "groom" = callPackage
    ({ mkDerivation, base, haskell-src-exts }:
     mkDerivation {
       pname = "groom";
       version = "0.1.2.1";
       sha256 = "17g51p15209wwgq83clsd97xvy4kchbx8jzh74qgc9hvmz9s9d56";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [ base haskell-src-exts ];
       executableHaskellDepends = [ base ];
       description = "Pretty printing for well-behaved Show instances";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "groundhog" = callPackage
    ({ mkDerivation, aeson, attoparsec, base, base64-bytestring
     , blaze-builder, bytestring, containers, monad-control, mtl
     , resourcet, safe-exceptions, scientific, text, time, transformers
     , transformers-base, transformers-compat
     }:
     mkDerivation {
       pname = "groundhog";
       version = "0.9.0";
       sha256 = "09d0n91cd0bvmrik4ail2svbh7l8vp5va0344jzvy1g2ancy0yj0";
       libraryHaskellDepends = [
         aeson attoparsec base base64-bytestring blaze-builder bytestring
         containers monad-control mtl resourcet safe-exceptions scientific
         text time transformers transformers-base transformers-compat
       ];
       homepage = "http://github.com/lykahb/groundhog";
       description = "Type-safe datatype-database mapping library";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "groundhog-inspector" = callPackage
    ({ mkDerivation, aeson-pretty, base, bytestring, cmdargs
     , containers, groundhog, groundhog-sqlite, groundhog-th, mtl
     , regex-compat, syb, template-haskell, text, time, transformers
     }:
     mkDerivation {
       pname = "groundhog-inspector";
       version = "0.9.0";
       sha256 = "1vb9zsg2r5d9ad6ppbzzm18hq4d4ygc7g2z1w5nb866774zwlywb";
       revision = "1";
       editedCabalFile = "1fzkm7rxg3la10j65drhvqnzcv6c5rscq3cqz7f0395rbw0pakmy";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         aeson-pretty base bytestring containers groundhog groundhog-th
         regex-compat syb template-haskell text time transformers
       ];
       executableHaskellDepends = [
         base bytestring cmdargs containers groundhog groundhog-sqlite
         groundhog-th mtl
       ];
       homepage = "http://github.com/lykahb/groundhog";
       description = "Type-safe datatype-database mapping library";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "groundhog-mysql" = callPackage
    ({ mkDerivation, base, bytestring, containers, groundhog
     , monad-control, monad-logger, mysql, mysql-simple, resource-pool
     , resourcet, text, time, transformers
     }:
     mkDerivation {
       pname = "groundhog-mysql";
       version = "0.9.0";
       sha256 = "0n3zcvb1qh5jdfrzgiamaf51fvkhgabsl07asy7wcdp0hb8rxdkq";
       libraryHaskellDepends = [
         base bytestring containers groundhog monad-control monad-logger
         mysql mysql-simple resource-pool resourcet text time transformers
       ];
       description = "MySQL backend for the groundhog library";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "groundhog-postgresql" = callPackage
    ({ mkDerivation, aeson, attoparsec, base, blaze-builder, bytestring
     , containers, groundhog, monad-control, postgresql-libpq
     , postgresql-simple, resource-pool, resourcet, text, time
     , transformers, vector
     }:
     mkDerivation {
       pname = "groundhog-postgresql";
       version = "0.9.0.1";
       sha256 = "0p88l85rsmbdpfnrh2411n68yy70g0iw7pqmp496b8n6gr0mmvl5";
       libraryHaskellDepends = [
         aeson attoparsec base blaze-builder bytestring containers groundhog
         monad-control postgresql-libpq postgresql-simple resource-pool
         resourcet text time transformers vector
       ];
       description = "PostgreSQL backend for the groundhog library";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "groundhog-sqlite" = callPackage
    ({ mkDerivation, base, bytestring, containers, direct-sqlite
     , groundhog, monad-control, resource-pool, resourcet, text
     , transformers, unordered-containers
     }:
     mkDerivation {
       pname = "groundhog-sqlite";
       version = "0.9.0";
       sha256 = "06985myr96dc7f6hkkm9nihvvl2c19wdl1bn3nfvyj78yvz8ryxb";
       libraryHaskellDepends = [
         base bytestring containers direct-sqlite groundhog monad-control
         resource-pool resourcet text transformers unordered-containers
       ];
       description = "Sqlite3 backend for the groundhog library";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "groundhog-th" = callPackage
    ({ mkDerivation, aeson, base, bytestring, containers, groundhog
     , template-haskell, text, time, unordered-containers, yaml
     }:
     mkDerivation {
       pname = "groundhog-th";
       version = "0.9.0.1";
       sha256 = "0hrk86s5mfj33sx5im6pcym1br160vnp17yhi82b2x1imm26cmlk";
       libraryHaskellDepends = [
         aeson base bytestring containers groundhog template-haskell text
         time unordered-containers yaml
       ];
       description = "Type-safe datatype-database mapping library";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "groups" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "groups";
       version = "0.4.1.0";
       sha256 = "0ggkygkyxw5ga4cza82bjvdraavl294k0h6b62d2px7z3nvqhifx";
       libraryHaskellDepends = [ base ];
       description = "Haskell 98 groups";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "gtk" = callPackage
    ({ mkDerivation, array, base, bytestring, Cabal, cairo, containers
     , gio, glib, gtk2, gtk2hs-buildtools, mtl, pango, text
     }:
     mkDerivation {
       pname = "gtk";
       version = "0.14.10";
       sha256 = "0cq6cpr42mjansnbk3p38xkqslqcb8lbl4smc73kaqr1xcg6gq98";
       enableSeparateDataOutput = true;
       setupHaskellDepends = [ base Cabal gtk2hs-buildtools ];
       libraryHaskellDepends = [
         array base bytestring cairo containers gio glib mtl pango text
       ];
       libraryPkgconfigDepends = [ gtk2 ];
       doHaddock = false;
       homepage = "http://projects.haskell.org/gtk2hs/";
       description = "Binding to the Gtk+ graphical user interface library";
       license = stdenv.lib.licenses.lgpl21;
     }) {gtk2 = pkgs.gnome2.gtk;};
  "gtk2hs-buildtools" = callPackage
    ({ mkDerivation, alex, array, base, Cabal, containers, directory
     , filepath, happy, hashtables, pretty, process, random
     }:
     mkDerivation {
       pname = "gtk2hs-buildtools";
       version = "0.13.4.0";
       sha256 = "0yg6xmylgpylmnh5g33qwwn5x9bqckdvvv4czqzd9vrr12lnnghg";
       revision = "1";
       editedCabalFile = "0nbghg11y4nvxjxrvdm4a7fzj8z12fr12hkj4b7p27imlryg3m10";
       isLibrary = true;
       isExecutable = true;
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [
         array base Cabal containers directory filepath hashtables pretty
         process random
       ];
       libraryToolDepends = [ alex happy ];
       executableHaskellDepends = [ base ];
       homepage = "http://projects.haskell.org/gtk2hs/";
       description = "Tools to build the Gtk2Hs suite of User Interface libraries";
       license = stdenv.lib.licenses.gpl2;
     }) {};
  "gtk3" = callPackage
    ({ mkDerivation, array, base, bytestring, Cabal, cairo, containers
     , gio, glib, gtk2hs-buildtools, gtk3, mtl, pango, text
     }:
     mkDerivation {
       pname = "gtk3";
       version = "0.14.9";
       sha256 = "1rcn0x6q0r0a3waxdsyvbyzfswsi6j7yr9fsixqr1c0g334lmqa8";
       isLibrary = true;
       isExecutable = true;
       enableSeparateDataOutput = true;
       setupHaskellDepends = [ base Cabal gtk2hs-buildtools ];
       libraryHaskellDepends = [
         array base bytestring cairo containers gio glib mtl pango text
       ];
       libraryPkgconfigDepends = [ gtk3 ];
       doHaddock = false;
       homepage = "http://projects.haskell.org/gtk2hs/";
       description = "Binding to the Gtk+ 3 graphical user interface library";
       license = stdenv.lib.licenses.lgpl21;
     }) {inherit (pkgs) gtk3;};
  "gym-http-api" = callPackage
    ({ mkDerivation, aeson, base, exceptions, http-client, servant
     , servant-client, servant-lucid, text, unordered-containers
     }:
     mkDerivation {
       pname = "gym-http-api";
       version = "0.1.0.1";
       sha256 = "0469n34s0p313nwnw8zpg1n9aaf6sqn5h7yl0jhc6yydc6rdjgrc";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         aeson base servant servant-client servant-lucid text
         unordered-containers
       ];
       executableHaskellDepends = [
         base exceptions http-client servant-client
       ];
       homepage = "https://github.com/stites/gym-http-api#readme";
       description = "REST client to the gym-http-api project";
       license = stdenv.lib.licenses.mit;
     }) {};
  "h2c" = callPackage
    ({ mkDerivation, base, bytestring, mtl, resourcet }:
     mkDerivation {
       pname = "h2c";
       version = "1.0.0";
       sha256 = "16aljqvzf8n1js0drqii99z3v8xba0468w27c9vmf5w483awkqjb";
       libraryHaskellDepends = [ base bytestring mtl resourcet ];
       homepage = "https://bitbucket.org/fmapE/h2c";
       description = "Bindings to Linux I2C with support for repeated-start transactions";
       license = stdenv.lib.licenses.mit;
     }) {};
  "hOpenPGP" = callPackage
    ({ mkDerivation, aeson, asn1-encoding, attoparsec, base
     , base16-bytestring, base64-bytestring, bifunctors, binary
     , binary-conduit, bytestring, bzlib, conduit, conduit-extra
     , containers, criterion, crypto-cipher-types, cryptonite, errors
     , hashable, incremental-parser, ixset-typed, lens, memory
     , monad-loops, nettle, network, network-uri, newtype
     , openpgp-asciiarmor, prettyprinter, QuickCheck
     , quickcheck-instances, resourcet, semigroups, split, tasty
     , tasty-hunit, tasty-quickcheck, text, time, time-locale-compat
     , transformers, unliftio-core, unordered-containers, zlib
     }:
     mkDerivation {
       pname = "hOpenPGP";
       version = "2.7.4.1";
       sha256 = "0fcm87rkf1c94w68ad2zkd3r2pbxzqa82kh3d2ky87rc1wqnia0s";
       libraryHaskellDepends = [
         aeson asn1-encoding attoparsec base base16-bytestring
         base64-bytestring bifunctors binary binary-conduit bytestring bzlib
         conduit conduit-extra containers crypto-cipher-types cryptonite
         errors hashable incremental-parser ixset-typed lens memory
         monad-loops nettle network-uri newtype openpgp-asciiarmor
         prettyprinter resourcet semigroups split text time
         time-locale-compat transformers unliftio-core unordered-containers
         zlib
       ];
       testHaskellDepends = [
         aeson asn1-encoding attoparsec base base16-bytestring bifunctors
         binary binary-conduit bytestring bzlib conduit conduit-extra
         containers crypto-cipher-types cryptonite errors hashable
         incremental-parser ixset-typed lens memory monad-loops nettle
         network network-uri newtype prettyprinter QuickCheck
         quickcheck-instances resourcet semigroups split tasty tasty-hunit
         tasty-quickcheck text time time-locale-compat transformers
         unliftio-core unordered-containers zlib
       ];
       benchmarkHaskellDepends = [
         aeson base base16-bytestring base64-bytestring bifunctors binary
         binary-conduit bytestring bzlib conduit conduit-extra containers
         criterion crypto-cipher-types cryptonite errors hashable
         incremental-parser ixset-typed lens memory monad-loops nettle
         network network-uri newtype openpgp-asciiarmor prettyprinter
         resourcet semigroups split text time time-locale-compat
         transformers unliftio-core unordered-containers zlib
       ];
       homepage = "https://salsa.debian.org/clint/hOpenPGP";
       description = "native Haskell implementation of OpenPGP (RFC4880)";
       license = stdenv.lib.licenses.mit;
     }) {};
  "hackage-db" = callPackage
    ({ mkDerivation, aeson, base, bytestring, Cabal, containers
     , directory, filepath, tar, time, utf8-string
     }:
     mkDerivation {
       pname = "hackage-db";
       version = "2.0.1";
       sha256 = "13ggj72i8dxwh3qwznnqxbr00nvsbapyyhzx5zybfacddnpw3aph";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         aeson base bytestring Cabal containers directory filepath tar time
         utf8-string
       ];
       homepage = "https://github.com/peti/hackage-db#readme";
       description = "Access Hackage's package database via Data.Map";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "hackage-security" = callPackage
    ({ mkDerivation, base, base16-bytestring, base64-bytestring
     , bytestring, Cabal, containers, cryptohash-sha256, directory
     , ed25519, filepath, ghc-prim, mtl, network, network-uri, parsec
     , pretty, tar, template-haskell, time, transformers, zlib
     }:
     mkDerivation {
       pname = "hackage-security";
       version = "0.5.3.0";
       sha256 = "08bwawc7ramgdh54vcly2m9pvfchp0ahhs8117jajni6x4bnx66v";
       revision = "3";
       editedCabalFile = "07h13j203wafvimfhswpjl2a43iaavy9579hm16z5m565m7f8hwy";
       libraryHaskellDepends = [
         base base16-bytestring base64-bytestring bytestring Cabal
         containers cryptohash-sha256 directory ed25519 filepath ghc-prim
         mtl network network-uri parsec pretty tar template-haskell time
         transformers zlib
       ];
       doCheck = false;
       homepage = "https://github.com/haskell/hackage-security";
       description = "Hackage security library";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "haddock-library" = callPackage
    ({ mkDerivation, base, bytestring, containers, deepseq
     , transformers
     }:
     mkDerivation {
       pname = "haddock-library";
       version = "1.5.0.1";
       sha256 = "1cmbg8l5xrwpliclwy3l057raypjqy0hsg1h1743ahaj8gq10b7z";
       libraryHaskellDepends = [
         base bytestring containers deepseq transformers
       ];
       doHaddock = false;
       doCheck = false;
       homepage = "http://www.haskell.org/haddock/";
       description = "Library exposing some functionality of Haddock";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "hailgun" = callPackage
    ({ mkDerivation, aeson, base, bytestring, email-validate
     , exceptions, filepath, http-client, http-client-tls, http-types
     , tagsoup, text, time, transformers
     }:
     mkDerivation {
       pname = "hailgun";
       version = "0.4.1.8";
       sha256 = "1hyww94b0ndfypk47iffvfxm96m24ygrbm26a820arpcmxkp7k4x";
       libraryHaskellDepends = [
         aeson base bytestring email-validate exceptions filepath
         http-client http-client-tls http-types tagsoup text time
         transformers
       ];
       homepage = "https://bitbucket.org/robertmassaioli/hailgun";
       description = "Mailgun REST api interface for Haskell";
       license = stdenv.lib.licenses.mit;
     }) {};
  "hakyll" = callPackage
    ({ mkDerivation, base, binary, blaze-html, blaze-markup, bytestring
     , containers, cryptohash, data-default, deepseq, directory
     , file-embed, filepath, fsnotify, http-conduit, http-types
     , lrucache, mtl, network-uri, optparse-applicative, pandoc
     , pandoc-citeproc, parsec, process, QuickCheck, random, regex-tdfa
     , resourcet, scientific, tagsoup, tasty, tasty-hunit
     , tasty-quickcheck, text, time, time-locale-compat
     , unordered-containers, utillinux, vector, wai, wai-app-static
     , warp, yaml
     }:
     mkDerivation {
       pname = "hakyll";
       version = "4.12.4.0";
       sha256 = "0kflvb86maqn15h0dh2r2p415q9k351gl9mpb3vnbmfn0nhvg1x1";
       isLibrary = true;
       isExecutable = true;
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [
         base binary blaze-html blaze-markup bytestring containers
         cryptohash data-default deepseq directory file-embed filepath
         fsnotify http-conduit http-types lrucache mtl network-uri
         optparse-applicative pandoc pandoc-citeproc parsec process random
         regex-tdfa resourcet scientific tagsoup text time
         time-locale-compat unordered-containers vector wai wai-app-static
         warp yaml
       ];
       executableHaskellDepends = [ base directory filepath ];
       testHaskellDepends = [
         base bytestring containers filepath QuickCheck tasty tasty-hunit
         tasty-quickcheck text unordered-containers yaml
       ];
       testToolDepends = [ utillinux ];
       homepage = "http://jaspervdj.be/hakyll";
       description = "A static website compiler library";
       license = stdenv.lib.licenses.bsd3;
     }) {inherit (pkgs) utillinux;};
  "half" = callPackage
    ({ mkDerivation, base, deepseq, hspec, QuickCheck, template-haskell
     }:
     mkDerivation {
       pname = "half";
       version = "0.3";
       sha256 = "14r0nx8hm5fic9gz0ybjjw4kyc758zfgvhhwvzsshpx5caq6zch6";
       libraryHaskellDepends = [ base deepseq template-haskell ];
       testHaskellDepends = [ base hspec QuickCheck ];
       homepage = "http://github.com/ekmett/half";
       description = "Half-precision floating-point";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "hamilton" = callPackage
    ({ mkDerivation, ad, ansi-wl-pprint, base, containers
     , finite-typelits, ghc-typelits-knownnat, hmatrix, hmatrix-gsl
     , hmatrix-vector-sized, optparse-applicative, typelits-witnesses
     , vector, vector-sized, vty
     }:
     mkDerivation {
       pname = "hamilton";
       version = "0.1.0.3";
       sha256 = "06yvmm9641v74kd265csycwp6ywyc19mx0r0csycljcfghhj6xiw";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         ad base hmatrix hmatrix-gsl hmatrix-vector-sized typelits-witnesses
         vector-sized
       ];
       executableHaskellDepends = [
         ansi-wl-pprint base containers finite-typelits
         ghc-typelits-knownnat hmatrix optparse-applicative vector
         vector-sized vty
       ];
       homepage = "https://github.com/mstksg/hamilton#readme";
       description = "Physics on generalized coordinate systems using Hamiltonian Mechanics and AD";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "hamtsolo" = callPackage
    ({ mkDerivation, async, attoparsec, attoparsec-binary, base, binary
     , bytestring, conduit, conduit-combinators, conduit-extra
     , exceptions, gitrev, optparse-applicative, resourcet, stm-conduit
     , unix
     }:
     mkDerivation {
       pname = "hamtsolo";
       version = "1.0.3";
       sha256 = "0dbhpdfmbs6ydin2p75wqia9lcrw82gfv3kx8659gnw2ll3dmpnh";
       isLibrary = false;
       isExecutable = true;
       executableHaskellDepends = [
         async attoparsec attoparsec-binary base binary bytestring conduit
         conduit-combinators conduit-extra exceptions gitrev
         optparse-applicative resourcet stm-conduit unix
       ];
       doHaddock = false;
       homepage = "https://github.com/tfc/hamtsolo#readme";
       description = "Intel AMT serial-over-lan (SOL) client";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "handwriting" = callPackage
    ({ mkDerivation, aeson, base, bytestring, containers, directory
     , filepath, lens, lens-aeson, random, split, text, transformers
     , wreq
     }:
     mkDerivation {
       pname = "handwriting";
       version = "0.1.0.3";
       sha256 = "1amysm2ds1prp6przgvqknxr3jn72kidqqh4j4s9pwxj35nl06vy";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         aeson base bytestring containers lens lens-aeson split text
         transformers wreq
       ];
       executableHaskellDepends = [
         base bytestring directory filepath random text
       ];
       testHaskellDepends = [ base ];
       homepage = "http://github.com/ismailmustafa/handwriting-haskell#readme";
       description = "API Client for the handwriting.io API.";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "hapistrano" = callPackage
    ({ mkDerivation, aeson, async, base, directory, filepath
     , formatting, gitrev, hspec, mtl, optparse-applicative, path
     , path-io, process, QuickCheck, silently, stm, temporary, time
     , transformers, typed-process, yaml
     }:
     mkDerivation {
       pname = "hapistrano";
       version = "0.3.8.0";
       sha256 = "1kkasqfx7k8sl22sklysxl76d5ljcm7p96hgcak7qgwwbj7igj56";
       isLibrary = true;
       isExecutable = true;
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [
         aeson base filepath formatting gitrev mtl path process stm time
         transformers typed-process
       ];
       executableHaskellDepends = [
         aeson async base formatting gitrev optparse-applicative path
         path-io stm yaml
       ];
       testHaskellDepends = [
         base directory filepath hspec mtl path path-io process QuickCheck
         silently temporary
       ];
       homepage = "https://github.com/stackbuilders/hapistrano";
       description = "A deployment library for Haskell applications";
       license = stdenv.lib.licenses.mit;
     }) {};
  "happstack-server" = callPackage
    ({ mkDerivation, base, base64-bytestring, blaze-html, bytestring
     , containers, directory, exceptions, extensible-exceptions
     , filepath, hslogger, html, HUnit, monad-control, mtl, network
     , network-uri, old-locale, parsec, process, semigroups, sendfile
     , syb, system-filepath, template-haskell, text, threads, time
     , time-compat, transformers, transformers-base, transformers-compat
     , unix, utf8-string, xhtml, zlib
     }:
     mkDerivation {
       pname = "happstack-server";
       version = "7.5.1.3";
       sha256 = "0agxmrf2njd3whvgw4in0ixgss1qlmi6cdi9fglhs7nhykpkgllk";
       libraryHaskellDepends = [
         base base64-bytestring blaze-html bytestring containers directory
         exceptions extensible-exceptions filepath hslogger html
         monad-control mtl network network-uri old-locale parsec process
         semigroups sendfile syb system-filepath template-haskell text
         threads time time-compat transformers transformers-base
         transformers-compat unix utf8-string xhtml zlib
       ];
       testHaskellDepends = [
         base bytestring containers HUnit parsec zlib
       ];
       homepage = "http://happstack.com";
       description = "Web related tools and services";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "happy" = callPackage
    ({ mkDerivation, array, base, Cabal, containers, directory
     , filepath, mtl, process
     }:
     mkDerivation {
       pname = "happy";
       version = "1.19.9";
       sha256 = "138xpxdb7x62lpmgmb6b3v3vgdqqvqn4273jaap3mjmc2gla709y";
       revision = "3";
       editedCabalFile = "0kwlh964nyqvfbm02np8vpc28gbhsby0r65jhz1918rm0wip9izq";
       isLibrary = false;
       isExecutable = true;
       setupHaskellDepends = [ base Cabal directory filepath ];
       executableHaskellDepends = [ array base containers mtl ];
       testHaskellDepends = [ base process ];
       doHaddock = false;
       doCheck = false;
       homepage = "https://www.haskell.org/happy/";
       description = "Happy is a parser generator for Haskell";
       license = stdenv.lib.licenses.bsd2;
     }) {};
  "hasbolt" = callPackage
    ({ mkDerivation, base, binary, bytestring, connection, containers
     , data-binary-ieee754, data-default, hex, hspec, network
     , QuickCheck, text, transformers
     }:
     mkDerivation {
       pname = "hasbolt";
       version = "0.1.3.2";
       sha256 = "14sq3iqbrfkwyswdka2285cdhwx3c6srfhn5qb7yw1nfjx2bdb1i";
       revision = "1";
       editedCabalFile = "127j24130d412ccn9zc71lxjfr6w0srbc8ir67s3zbmzs6g1l9j8";
       libraryHaskellDepends = [
         base binary bytestring connection containers data-binary-ieee754
         data-default network text transformers
       ];
       testHaskellDepends = [
         base bytestring containers hex hspec QuickCheck text
       ];
       homepage = "https://github.com/zmactep/hasbolt#readme";
       description = "Haskell driver for Neo4j 3+ (BOLT protocol)";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "hashable" = callPackage
    ({ mkDerivation, base, bytestring, criterion, deepseq, ghc-prim
     , HUnit, integer-gmp, QuickCheck, random, siphash, test-framework
     , test-framework-hunit, test-framework-quickcheck2, text, unix
     }:
     mkDerivation {
       pname = "hashable";
       version = "1.2.7.0";
       sha256 = "1gra8gq3kb7b2sd845h55yxlrfqx3ii004c6vjhga8v0b30fzdgc";
       revision = "1";
       editedCabalFile = "197063dpl0wn67dp7a06yc2hxp81n24ykk7klbjx0fndm5n87dh3";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         base bytestring deepseq ghc-prim integer-gmp text
       ];
       testHaskellDepends = [
         base bytestring ghc-prim HUnit QuickCheck random test-framework
         test-framework-hunit test-framework-quickcheck2 text unix
       ];
       benchmarkHaskellDepends = [
         base bytestring criterion ghc-prim integer-gmp siphash text
       ];
       homepage = "http://github.com/tibbe/hashable";
       description = "A class for types that can be converted to a hash value";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "hashids" = callPackage
    ({ mkDerivation, base, bytestring, containers, split }:
     mkDerivation {
       pname = "hashids";
       version = "1.0.2.4";
       sha256 = "1kzkyni9hfwpvyq9rdv62iziwiax5avzd05ghsh7dgnylv41z697";
       libraryHaskellDepends = [ base bytestring containers split ];
       testHaskellDepends = [ base bytestring containers split ];
       homepage = "http://hashids.org/";
       description = "Hashids generates short, unique, non-sequential ids from numbers";
       license = stdenv.lib.licenses.mit;
     }) {};
  "hashing" = callPackage
    ({ mkDerivation, array, base, bytestring, cryptonite, mtl
     , QuickCheck, template-haskell
     }:
     mkDerivation {
       pname = "hashing";
       version = "0.1.0.1";
       sha256 = "044lyj8kyhrm8xs1v3z60g9zh8wdc1nvf79qvans1w6ndjfa3975";
       revision = "2";
       editedCabalFile = "1rwl68jiivw7f2f5cg73sr3dawlbmklnwyiwivrcsihrg4b1z1lq";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [ array base bytestring ];
       executableHaskellDepends = [
         array base bytestring mtl QuickCheck
       ];
       testHaskellDepends = [
         array base bytestring cryptonite mtl QuickCheck template-haskell
       ];
       homepage = "https://github.com/wangbj/hashing";
       description = "A pure haskell library implements several hash algorithms";
       license = stdenv.lib.licenses.mit;
     }) {};
  "hashmap" = callPackage
    ({ mkDerivation, base, containers, deepseq, hashable }:
     mkDerivation {
       pname = "hashmap";
       version = "1.3.3";
       sha256 = "0ma7svf9nanlfbj9nkk6bzk4m98i7xd71xrdc3a5dmmws5yba1nw";
       libraryHaskellDepends = [ base containers deepseq hashable ];
       homepage = "https://github.com/foxik/hashmap";
       description = "Persistent containers Map and Set based on hashing";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "hashtables" = callPackage
    ({ mkDerivation, base, ghc-prim, hashable, primitive, vector }:
     mkDerivation {
       pname = "hashtables";
       version = "1.2.3.1";
       sha256 = "1giw9caajr07slf09j7zry9b0kvm4yj9q78zy1mawzi6gk3wglcg";
       libraryHaskellDepends = [
         base ghc-prim hashable primitive vector
       ];
       homepage = "http://github.com/gregorycollins/hashtables";
       description = "Mutable hash tables in the ST monad";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "haskeline" = callPackage
    ({ mkDerivation, base, bytestring, containers, directory, filepath
     , process, stm, terminfo, transformers, unix
     }:
     mkDerivation {
       pname = "haskeline";
       version = "0.7.4.3";
       sha256 = "0ydnsr1nhh7mfgvbpclidcfbgzf7j8g5vnwxrnkmgg1dphq0jv84";
       configureFlags = [ "-fterminfo" ];
       libraryHaskellDepends = [
         base bytestring containers directory filepath process stm terminfo
         transformers unix
       ];
       homepage = "https://github.com/judah/haskeline";
       description = "A command-line interface for user input, written in Haskell";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "haskell-gi" = callPackage
    ({ mkDerivation, attoparsec, base, bytestring, Cabal, containers
     , directory, doctest, filepath, glib, gobject-introspection
     , haskell-gi-base, mtl, pretty-show, process, regex-tdfa, safe
     , text, transformers, xdg-basedir, xml-conduit
     }:
     mkDerivation {
       pname = "haskell-gi";
       version = "0.21.5";
       sha256 = "1rvi9bmgxq7q6js8yb5yb156yxmnm9px9amgjwzxmr7sxz31dl8j";
       libraryHaskellDepends = [
         attoparsec base bytestring Cabal containers directory filepath
         haskell-gi-base mtl pretty-show process regex-tdfa safe text
         transformers xdg-basedir xml-conduit
       ];
       libraryPkgconfigDepends = [ glib gobject-introspection ];
       testHaskellDepends = [ base doctest process ];
       homepage = "https://github.com/haskell-gi/haskell-gi";
       description = "Generate Haskell bindings for GObject Introspection capable libraries";
       license = stdenv.lib.licenses.lgpl21;
     }) {inherit (pkgs) glib; gobject-introspection = null;};
  "haskell-gi-base" = callPackage
    ({ mkDerivation, base, bytestring, containers, glib, text }:
     mkDerivation {
       pname = "haskell-gi-base";
       version = "0.21.4";
       sha256 = "0vrl0cqws1l0ba7avf16c9zyfsvq7gd8wv4sjzd7rjk6jmg38vds";
       libraryHaskellDepends = [ base bytestring containers text ];
       libraryPkgconfigDepends = [ glib ];
       homepage = "https://github.com/haskell-gi/haskell-gi-base";
       description = "Foundation for libraries generated by haskell-gi";
       license = stdenv.lib.licenses.lgpl21;
     }) {inherit (pkgs) glib;};
  "haskell-gi-overloading" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "haskell-gi-overloading";
       version = "1.0";
       sha256 = "0ak8f79ia9zlk94zr02sq8bqi5n5pd8ria8w1dj3adcdvpw9gmry";
       doHaddock = false;
       homepage = "https://github.com/haskell-gi/haskell-gi";
       description = "Overloading support for haskell-gi";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "haskell-lexer" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "haskell-lexer";
       version = "1.0.2";
       sha256 = "1wyxd8x33x4v5vxyzkhm610pl86gbkc8y439092fr1735q9g7kfq";
       libraryHaskellDepends = [ base ];
       homepage = "https://github.com/yav/haskell-lexer";
       description = "A fully compliant Haskell 98 lexer";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "haskell-lsp" = callPackage
    ({ mkDerivation, aeson, base, bytestring, containers, data-default
     , directory, filepath, hashable, haskell-lsp-types, hslogger, hspec
     , lens, mtl, network-uri, parsec, sorted-list, stm, text, time
     , transformers, unordered-containers, vector, yi-rope
     }:
     mkDerivation {
       pname = "haskell-lsp";
       version = "0.2.2.0";
       sha256 = "1h3ibwd0i0z2c35fxw0m0gyd6dj45pf17x9hc5cgf3sql4qr5yxd";
       revision = "1";
       editedCabalFile = "0bdgpj5cj4qwp31glmilp1gqdm8c3fkqvgw18aqv8pz2wg39x23y";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         aeson base bytestring containers data-default directory filepath
         hashable haskell-lsp-types hslogger lens mtl network-uri parsec
         sorted-list stm text time unordered-containers yi-rope
       ];
       executableHaskellDepends = [
         aeson base bytestring containers data-default directory filepath
         hslogger lens mtl network-uri parsec stm text time transformers
         unordered-containers vector yi-rope
       ];
       testHaskellDepends = [
         aeson base containers directory filepath hashable hspec lens
         network-uri sorted-list text yi-rope
       ];
       homepage = "https://github.com/alanz/haskell-lsp";
       description = "Haskell library for the Microsoft Language Server Protocol";
       license = stdenv.lib.licenses.mit;
     }) {};
  "haskell-lsp-types" = callPackage
    ({ mkDerivation, aeson, base, bytestring, data-default, filepath
     , hashable, lens, network-uri, text, unordered-containers
     }:
     mkDerivation {
       pname = "haskell-lsp-types";
       version = "0.2.2.0";
       sha256 = "0wchy8qrd450s90j6d26psznrd3n245lvn01qxa42l5akljmlymx";
       libraryHaskellDepends = [
         aeson base bytestring data-default filepath hashable lens
         network-uri text unordered-containers
       ];
       homepage = "https://github.com/alanz/haskell-lsp";
       description = "Haskell library for the Microsoft Language Server Protocol, data types";
       license = stdenv.lib.licenses.mit;
     }) {};
  "haskell-spacegoo" = callPackage
    ({ mkDerivation, aeson, base, bytestring, conduit, conduit-extra
     , mtl, pretty, pretty-show, text, vector, vector-space
     }:
     mkDerivation {
       pname = "haskell-spacegoo";
       version = "0.2.0.1";
       sha256 = "0g6ximrv5jwibklkyr74vy3qkx8mv4xbpc7f6w1qg9gnlylzmcqy";
       libraryHaskellDepends = [
         aeson base bytestring conduit conduit-extra mtl pretty pretty-show
         text vector vector-space
       ];
       description = "Client API for Rocket Scissor Spacegoo";
       license = stdenv.lib.licenses.mit;
     }) {};
  "haskell-src" = callPackage
    ({ mkDerivation, array, base, happy, pretty, syb }:
     mkDerivation {
       pname = "haskell-src";
       version = "1.0.3.0";
       sha256 = "1g4dj1f0j68bhn4ixfac63wjzy6gsp6kwgxryb1k5nl3i0g99d5l";
       libraryHaskellDepends = [ array base pretty syb ];
       libraryToolDepends = [ happy ];
       description = "Support for manipulating Haskell source code";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "haskell-src-exts" = callPackage
    ({ mkDerivation, array, base, containers, directory, filepath
     , ghc-prim, happy, mtl, pretty, pretty-show, smallcheck, tasty
     , tasty-golden, tasty-smallcheck
     }:
     mkDerivation {
       pname = "haskell-src-exts";
       version = "1.20.3";
       sha256 = "1a74s4zarxdvhnflkxy13pawbfcdhyrb6gkdx0si8spv66knhgj3";
       libraryHaskellDepends = [ array base ghc-prim pretty ];
       libraryToolDepends = [ happy ];
       testHaskellDepends = [
         base containers directory filepath mtl pretty-show smallcheck tasty
         tasty-golden tasty-smallcheck
       ];
       homepage = "https://github.com/haskell-suite/haskell-src-exts";
       description = "Manipulating Haskell source: abstract syntax, lexer, parser, and pretty-printer";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "haskell-src-exts-simple" = callPackage
    ({ mkDerivation, base, haskell-src-exts }:
     mkDerivation {
       pname = "haskell-src-exts-simple";
       version = "1.20.0.0";
       sha256 = "0p79ppmwb14lj2a1wy42zgm3z3zk5jbyn7rfgwxsyw2g424bw1dk";
       libraryHaskellDepends = [ base haskell-src-exts ];
       homepage = "https://github.com/int-e/haskell-src-exts-simple";
       description = "A simplified view on the haskell-src-exts AST";
       license = stdenv.lib.licenses.mit;
     }) {};
  "haskell-src-exts-util" = callPackage
    ({ mkDerivation, base, containers, data-default, haskell-src-exts
     , semigroups, transformers, uniplate
     }:
     mkDerivation {
       pname = "haskell-src-exts-util";
       version = "0.2.4";
       sha256 = "1xbf28aisqizy3a0sy42p3rwib2s7jaqi6dcr6lp4b1j54xazf5y";
       libraryHaskellDepends = [
         base containers data-default haskell-src-exts semigroups
         transformers uniplate
       ];
       homepage = "https://github.com/pepeiborra/haskell-src-exts-util";
       description = "Helper functions for working with haskell-src-exts trees";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "haskell-src-meta" = callPackage
    ({ mkDerivation, base, haskell-src-exts, HUnit, pretty, syb
     , template-haskell, test-framework, test-framework-hunit
     , th-orphans
     }:
     mkDerivation {
       pname = "haskell-src-meta";
       version = "0.8.0.3";
       sha256 = "08jq156zv4m0fjq6712n99c1jwxnpa6kj6sq8ch0r1l0a1ay6ww4";
       revision = "2";
       editedCabalFile = "0dp5v0yd0wgijzaggr22glgjswpa65hy84h8awdzd9d78g2fjz6c";
       libraryHaskellDepends = [
         base haskell-src-exts pretty syb template-haskell th-orphans
       ];
       testHaskellDepends = [
         base haskell-src-exts HUnit pretty template-haskell test-framework
         test-framework-hunit
       ];
       description = "Parse source to template-haskell abstract syntax";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "haskell-tools-ast" = callPackage
    ({ mkDerivation, base, classyplate, ghc, mtl, pretty, references
     , template-haskell, uniplate
     }:
     mkDerivation {
       pname = "haskell-tools-ast";
       version = "1.1.0.2";
       sha256 = "0j81dmg2mgxlc4wy054a13bvx549xs19fr729rirdj2illdgbw1c";
       libraryHaskellDepends = [
         base classyplate ghc mtl pretty references template-haskell
         uniplate
       ];
       homepage = "https://github.com/nboldi/haskell-tools";
       description = "Haskell AST for efficient tooling";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "haskell-tools-backend-ghc" = callPackage
    ({ mkDerivation, base, bytestring, containers, ghc, ghc-boot-th
     , haskell-tools-ast, mtl, references, safe, split, template-haskell
     , transformers, uniplate
     }:
     mkDerivation {
       pname = "haskell-tools-backend-ghc";
       version = "1.1.0.2";
       sha256 = "0c054gvnn38r5vlpka5jsvq3n8lcn3j77jg45g1zl1az0099mzhl";
       libraryHaskellDepends = [
         base bytestring containers ghc ghc-boot-th haskell-tools-ast mtl
         references safe split template-haskell transformers uniplate
       ];
       homepage = "https://github.com/nboldi/haskell-tools";
       description = "Creating the Haskell-Tools AST from GHC's representations";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "haskell-tools-builtin-refactorings" = callPackage
    ({ mkDerivation, aeson, base, Cabal, classyplate, containers
     , deepseq, directory, filepath, ghc, ghc-paths, haskell-tools-ast
     , haskell-tools-backend-ghc, haskell-tools-prettyprint
     , haskell-tools-refactor, haskell-tools-rewrite, minisat-solver
     , mtl, portable-lines, references, split, template-haskell
     , transformers, uniplate
     }:
     mkDerivation {
       pname = "haskell-tools-builtin-refactorings";
       version = "1.1.0.2";
       sha256 = "1wm7c63cw4izg6vlrm2xdyrfvf4cwcqs2n144y8k0zf442xaq5l9";
       libraryHaskellDepends = [
         aeson base Cabal classyplate containers deepseq directory filepath
         ghc ghc-paths haskell-tools-ast haskell-tools-backend-ghc
         haskell-tools-prettyprint haskell-tools-refactor
         haskell-tools-rewrite minisat-solver mtl portable-lines references
         split template-haskell transformers uniplate
       ];
       doCheck = false;
       homepage = "https://github.com/haskell-tools/haskell-tools";
       description = "Refactoring Tool for Haskell";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "haskell-tools-debug" = callPackage
    ({ mkDerivation, base, classyplate, criterion, filepath, ghc
     , ghc-paths, haskell-tools-ast, haskell-tools-backend-ghc
     , haskell-tools-builtin-refactorings, haskell-tools-prettyprint
     , haskell-tools-refactor, mtl, references, split, template-haskell
     , uniplate
     }:
     mkDerivation {
       pname = "haskell-tools-debug";
       version = "1.1.0.2";
       sha256 = "1lnv9j4h45g0z1s9pf86py39p2bs8dbz3xybg0bwz89yix8h7nhl";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         base classyplate criterion filepath ghc ghc-paths haskell-tools-ast
         haskell-tools-backend-ghc haskell-tools-builtin-refactorings
         haskell-tools-prettyprint haskell-tools-refactor mtl references
         split template-haskell uniplate
       ];
       executableHaskellDepends = [ base ];
       homepage = "https://github.com/haskell-tools/haskell-tools";
       description = "Debugging Tools for Haskell-tools";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "haskell-tools-demo" = callPackage
    ({ mkDerivation, aeson, base, bytestring, containers, directory
     , filepath, ghc, ghc-paths, haskell-tools-ast
     , haskell-tools-backend-ghc, haskell-tools-builtin-refactorings
     , haskell-tools-prettyprint, haskell-tools-refactor, http-types
     , mtl, references, transformers, wai, wai-websockets, warp
     , websockets
     }:
     mkDerivation {
       pname = "haskell-tools-demo";
       version = "1.1.0.2";
       sha256 = "0c2m6xqcl22x9ay3n9j64lphmsvxsgcwymvbxscwpki9mv7wbvkx";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         aeson base bytestring containers directory filepath ghc ghc-paths
         haskell-tools-ast haskell-tools-backend-ghc
         haskell-tools-builtin-refactorings haskell-tools-prettyprint
         haskell-tools-refactor http-types mtl references transformers wai
         wai-websockets warp websockets
       ];
       executableHaskellDepends = [ base ];
       doCheck = false;
       homepage = "https://github.com/haskell-tools/haskell-tools";
       description = "A web-based demo for Haskell-tools Refactor";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "haskell-tools-prettyprint" = callPackage
    ({ mkDerivation, base, containers, ghc, haskell-tools-ast, mtl
     , references, split, text, uniplate
     }:
     mkDerivation {
       pname = "haskell-tools-prettyprint";
       version = "1.1.0.2";
       sha256 = "01j212inqx7hq24kcw7n0619bgz7bj576xrh06h10n0wqhd6qfbq";
       libraryHaskellDepends = [
         base containers ghc haskell-tools-ast mtl references split text
         uniplate
       ];
       homepage = "https://github.com/haskell-tools/haskell-tools";
       description = "Pretty printing of Haskell-Tools AST";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "haskell-tools-refactor" = callPackage
    ({ mkDerivation, aeson, base, Cabal, containers, directory
     , filepath, ghc, ghc-paths, haskell-tools-ast
     , haskell-tools-backend-ghc, haskell-tools-prettyprint
     , haskell-tools-rewrite, mtl, references, split, template-haskell
     , transformers, uniplate
     }:
     mkDerivation {
       pname = "haskell-tools-refactor";
       version = "1.1.0.2";
       sha256 = "12gkmji62kvnqjih9845hmsdj2f52hvmqgrz7s5wclpn3b5fhczq";
       libraryHaskellDepends = [
         aeson base Cabal containers directory filepath ghc ghc-paths
         haskell-tools-ast haskell-tools-backend-ghc
         haskell-tools-prettyprint haskell-tools-rewrite mtl references
         split template-haskell transformers uniplate
       ];
       doCheck = false;
       homepage = "https://github.com/haskell-tools/haskell-tools";
       description = "Refactoring Tool for Haskell";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "haskell-tools-rewrite" = callPackage
    ({ mkDerivation, base, containers, ghc, haskell-tools-ast
     , haskell-tools-prettyprint, mtl, references
     }:
     mkDerivation {
       pname = "haskell-tools-rewrite";
       version = "1.1.0.2";
       sha256 = "1az7924bsiapn7g8gj75vdi47alrlly0wnwhcd7p8a24kh1hj055";
       libraryHaskellDepends = [
         base containers ghc haskell-tools-ast haskell-tools-prettyprint mtl
         references
       ];
       doCheck = false;
       homepage = "https://github.com/haskell-tools/haskell-tools";
       description = "Facilities for generating new parts of the Haskell-Tools AST";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "haskey" = callPackage
    ({ mkDerivation, async, base, binary, bytestring, containers
     , directory, exceptions, filepath, focus, haskey-btree, HUnit
     , list-t, lz4, mtl, QuickCheck, random, semigroups, stm
     , stm-containers, temporary, test-framework, test-framework-hunit
     , test-framework-quickcheck2, text, transformers, unix, vector
     , xxhash-ffi
     }:
     mkDerivation {
       pname = "haskey";
       version = "0.3.0.2";
       sha256 = "1s24k6mwb1231j3ryd4iizday4l966vs9rcghr53k3jx2nl0h74h";
       libraryHaskellDepends = [
         base binary bytestring containers directory exceptions filepath
         focus haskey-btree list-t lz4 mtl semigroups stm stm-containers
         transformers unix xxhash-ffi
       ];
       testHaskellDepends = [
         async base binary bytestring containers directory exceptions
         haskey-btree HUnit mtl QuickCheck random temporary test-framework
         test-framework-hunit test-framework-quickcheck2 text transformers
         vector
       ];
       homepage = "https://github.com/haskell-haskey";
       description = "A transactional, ACID compliant, embeddable key-value store";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "haskey-btree" = callPackage
    ({ mkDerivation, base, binary, bytestring, containers, data-ordlist
     , hashable, HUnit, mtl, QuickCheck, semigroups, test-framework
     , test-framework-hunit, test-framework-quickcheck2, text
     , transformers, vector
     }:
     mkDerivation {
       pname = "haskey-btree";
       version = "0.3.0.0";
       sha256 = "0nj6jhigzgjac45cg0qjbjamn152n7rvir5clkwj5yraisd7sf4h";
       libraryHaskellDepends = [
         base binary bytestring containers hashable mtl semigroups text
         transformers vector
       ];
       testHaskellDepends = [
         base binary bytestring containers data-ordlist HUnit mtl QuickCheck
         test-framework test-framework-hunit test-framework-quickcheck2
         transformers vector
       ];
       homepage = "https://github.com/haskell-haskey/haskey-btree";
       description = "B+-tree implementation in Haskell";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "haskey-mtl" = callPackage
    ({ mkDerivation, base, binary, exceptions, haskey, haskey-btree
     , lens, monad-control, mtl, text, transformers, transformers-base
     }:
     mkDerivation {
       pname = "haskey-mtl";
       version = "0.3.1.0";
       sha256 = "154jny8frg61amsyh15w4n6clj9alp8rsa8qxgg9xh8xj2i01yqz";
       libraryHaskellDepends = [
         base exceptions haskey haskey-btree monad-control mtl transformers
         transformers-base
       ];
       testHaskellDepends = [
         base binary exceptions haskey haskey-btree lens mtl text
         transformers
       ];
       homepage = "https://github.com/haskell-haskey";
       description = "A monad transformer supporting Haskey transactions";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "haskintex" = callPackage
    ({ mkDerivation, base, binary, bytestring, containers, directory
     , filepath, haskell-src-exts, HaTeX, hint, parsec, process, text
     , transformers
     }:
     mkDerivation {
       pname = "haskintex";
       version = "0.8.0.0";
       sha256 = "1n6xbk8mc4n7a7w9hw2q21ya784jd2wqfvx54iqz9fik5w8p8jcx";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         base binary bytestring containers directory filepath
         haskell-src-exts HaTeX hint parsec process text transformers
       ];
       executableHaskellDepends = [ base ];
       homepage = "http://daniel-diaz.github.io/projects/haskintex";
       description = "Haskell Evaluation inside of LaTeX code";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "hasql" = callPackage
    ({ mkDerivation, attoparsec, base, base-prelude, bytestring
     , bytestring-strict-builder, contravariant, contravariant-extras
     , data-default-class, dlist, hashable, hashtables, loch-th, mtl
     , placeholders, postgresql-binary, postgresql-libpq, profunctors
     , text, text-builder, transformers, vector
     }:
     mkDerivation {
       pname = "hasql";
       version = "1.3.0.3";
       sha256 = "01vl4p67yhcm8cmbmajgyd7ggj3p5f6350f8sky8kv3dn31wg6ji";
       revision = "2";
       editedCabalFile = "14063k0dald0i2cqk70kdja1df587vn8vrzgw3rb62nxwycr0r9b";
       libraryHaskellDepends = [
         attoparsec base base-prelude bytestring bytestring-strict-builder
         contravariant contravariant-extras data-default-class dlist
         hashable hashtables loch-th mtl placeholders postgresql-binary
         postgresql-libpq profunctors text text-builder transformers vector
       ];
       doCheck = false;
       homepage = "https://github.com/nikita-volkov/hasql";
       description = "An efficient PostgreSQL driver and a flexible mapping API";
       license = stdenv.lib.licenses.mit;
     }) {};
  "hasql-optparse-applicative" = callPackage
    ({ mkDerivation, base-prelude, hasql, hasql-pool
     , optparse-applicative
     }:
     mkDerivation {
       pname = "hasql-optparse-applicative";
       version = "0.3.0.3";
       sha256 = "0d33y3bzy3q5yj4vizi9i2xwwnw1lzyxq72jk2daqjs347dc7d33";
       libraryHaskellDepends = [
         base-prelude hasql hasql-pool optparse-applicative
       ];
       homepage = "https://github.com/sannsyn/hasql-optparse-applicative";
       description = "\"optparse-applicative\" parsers for \"hasql\"";
       license = stdenv.lib.licenses.mit;
     }) {};
  "hasql-pool" = callPackage
    ({ mkDerivation, base-prelude, hasql, resource-pool, time }:
     mkDerivation {
       pname = "hasql-pool";
       version = "0.5";
       sha256 = "0bsxh9yf5p2iknrnssrif563n42ih14cj95qmy9z2lz2kbycscrs";
       libraryHaskellDepends = [ base-prelude hasql resource-pool time ];
       doCheck = false;
       homepage = "https://github.com/nikita-volkov/hasql-pool";
       description = "A pool of connections for Hasql";
       license = stdenv.lib.licenses.mit;
     }) {};
  "hasql-transaction" = callPackage
    ({ mkDerivation, async, base, base-prelude, bytestring
     , bytestring-tree-builder, contravariant, contravariant-extras
     , hasql, mtl, rebase, transformers
     }:
     mkDerivation {
       pname = "hasql-transaction";
       version = "0.7";
       sha256 = "1kvzj16mw471z2vgm27k0nfwfgf5cq3w6qaqwqz4247p11dkrjyy";
       libraryHaskellDepends = [
         base base-prelude bytestring bytestring-tree-builder contravariant
         contravariant-extras hasql mtl transformers
       ];
       testHaskellDepends = [ async hasql rebase ];
       doCheck = false;
       homepage = "https://github.com/nikita-volkov/hasql-transaction";
       description = "A composable abstraction over the retryable transactions for Hasql";
       license = stdenv.lib.licenses.mit;
     }) {};
  "hasty-hamiltonian" = callPackage
    ({ mkDerivation, ad, base, kan-extensions, lens, mcmc-types
     , mwc-probability, pipes, primitive, transformers
     }:
     mkDerivation {
       pname = "hasty-hamiltonian";
       version = "1.3.2";
       sha256 = "17nc33q9vkq13wp5dqrq2vq6bz408ll8h84fg7mapks5w5r9sag6";
       libraryHaskellDepends = [
         base kan-extensions lens mcmc-types mwc-probability pipes primitive
         transformers
       ];
       testHaskellDepends = [ ad base mwc-probability ];
       homepage = "http://github.com/jtobin/hasty-hamiltonian";
       description = "Speedy traversal through parameter space";
       license = stdenv.lib.licenses.mit;
     }) {};
  "haxl" = callPackage
    ({ mkDerivation, aeson, base, binary, bytestring, containers
     , deepseq, exceptions, filepath, ghc-prim, hashable, pretty, stm
     , text, time, transformers, unordered-containers, vector
     }:
     mkDerivation {
       pname = "haxl";
       version = "2.0.1.1";
       sha256 = "1wfnwi3impv4cv359a65yh50c6kdfxhvbwycf5h76w3cvqdhvwsr";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         aeson base binary bytestring containers deepseq exceptions filepath
         ghc-prim hashable pretty stm text time transformers
         unordered-containers vector
       ];
       doCheck = false;
       homepage = "https://github.com/facebook/Haxl";
       description = "A Haskell library for efficient, concurrent, and concise data access";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "hbeanstalk" = callPackage
    ({ mkDerivation, attoparsec, base, blaze-builder, bytestring
     , containers, network
     }:
     mkDerivation {
       pname = "hbeanstalk";
       version = "0.2.4";
       sha256 = "13xcia1nnayhr22zi1wzgn8qs403ib4n2zikpxd3xnzy33yrgbzy";
       libraryHaskellDepends = [
         attoparsec base blaze-builder bytestring containers network
       ];
       homepage = "http://github.com/scsibug/hbeanstalk/";
       description = "Client for the beanstalkd workqueue service";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "hdaemonize" = callPackage
    ({ mkDerivation, base, bytestring, extensible-exceptions, filepath
     , hsyslog, mtl, unix
     }:
     mkDerivation {
       pname = "hdaemonize";
       version = "0.5.5";
       sha256 = "17q2zr9bv6xwnldgbsh1idwfgybp8q4xzq79p2lmmi3f0q6cnl6j";
       libraryHaskellDepends = [
         base bytestring extensible-exceptions filepath hsyslog mtl unix
       ];
       homepage = "http://github.com/greydot/hdaemonize";
       description = "Library to handle the details of writing daemons for UNIX";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "heap" = callPackage
    ({ mkDerivation, base, QuickCheck }:
     mkDerivation {
       pname = "heap";
       version = "1.0.4";
       sha256 = "0ahpsfmb76728w71xn4021ad7z752n6aqqgzdpcyis9i22g4ihm4";
       libraryHaskellDepends = [ base ];
       testHaskellDepends = [ base QuickCheck ];
       description = "Heaps in Haskell";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "heaps" = callPackage
    ({ mkDerivation, base, Cabal, cabal-doctest, directory, doctest
     , filepath
     }:
     mkDerivation {
       pname = "heaps";
       version = "0.3.6";
       sha256 = "1cnxgmxxvl053yv93vcz5fnla4iir5g9wr697n88ysdyybbkq70q";
       revision = "3";
       editedCabalFile = "0k6wsm1hwn3vaxdvw8p7cidxg7p8zply2ig4w4qrbpyjhl6dj9x9";
       setupHaskellDepends = [ base Cabal cabal-doctest ];
       libraryHaskellDepends = [ base ];
       testHaskellDepends = [ base directory doctest filepath ];
       homepage = "http://github.com/ekmett/heaps/";
       description = "Asymptotically optimal Brodal/Okasaki heaps";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "hebrew-time" = callPackage
    ({ mkDerivation, base, HUnit, QuickCheck, test-framework
     , test-framework-hunit, test-framework-quickcheck2, time
     }:
     mkDerivation {
       pname = "hebrew-time";
       version = "0.1.1";
       sha256 = "0ckridxf4rvhhp0k1mckbbbpzfs32l4mwg7n9mrmsggldpl7x6f7";
       libraryHaskellDepends = [ base time ];
       testHaskellDepends = [
         base HUnit QuickCheck test-framework test-framework-hunit
         test-framework-quickcheck2 time
       ];
       homepage = "https://github.com/snoyberg/hebrew-time";
       description = "Hebrew dates and prayer times";
       license = stdenv.lib.licenses.mit;
     }) {};
  "hedgehog" = callPackage
    ({ mkDerivation, ansi-terminal, async, base, bytestring
     , concurrent-output, containers, directory, exceptions
     , lifted-async, mmorph, monad-control, mtl, pretty-show, primitive
     , random, resourcet, semigroups, stm, template-haskell, text
     , th-lift, time, transformers, transformers-base, unix
     , wl-pprint-annotated
     }:
     mkDerivation {
       pname = "hedgehog";
       version = "0.6.1";
       sha256 = "0xz10ycdm5vk9nrcym1fi83k19frfwqz18bz8bnpzwvaj0j41yfj";
       revision = "2";
       editedCabalFile = "1l0iw2jqdvxgfysfvp1x0s2pq3kyvpapjdjkx9pi4bkxpjpkvbza";
       libraryHaskellDepends = [
         ansi-terminal async base bytestring concurrent-output containers
         directory exceptions lifted-async mmorph monad-control mtl
         pretty-show primitive random resourcet semigroups stm
         template-haskell text th-lift time transformers transformers-base
         unix wl-pprint-annotated
       ];
       testHaskellDepends = [
         base containers pretty-show semigroups text transformers
       ];
       homepage = "https://hedgehog.qa";
       description = "Hedgehog will eat all your bugs";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "hedgehog-corpus" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "hedgehog-corpus";
       version = "0.1.0";
       sha256 = "1whrszkd03d9a86vqnp38sq8gs2hfdc39wxcf5c12w3767c9qmn3";
       libraryHaskellDepends = [ base ];
       homepage = "https://github.com/tmcgilchrist/hedgehog-corpus";
       description = "hedgehog-corpus";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "hedis" = callPackage
    ({ mkDerivation, async, base, bytestring, bytestring-lexing
     , deepseq, doctest, errors, HTTP, HUnit, mtl, network, network-uri
     , resource-pool, scanner, stm, test-framework, test-framework-hunit
     , text, time, tls, unordered-containers, vector
     }:
     mkDerivation {
       pname = "hedis";
       version = "0.10.10";
       sha256 = "0hbjhccipvg2i1cyinvhlk4jgscam9y5897ib1fh6rc0qwnlblhs";
       libraryHaskellDepends = [
         async base bytestring bytestring-lexing deepseq errors HTTP mtl
         network network-uri resource-pool scanner stm text time tls
         unordered-containers vector
       ];
       testHaskellDepends = [
         async base bytestring doctest HUnit mtl stm test-framework
         test-framework-hunit text time
       ];
       benchmarkHaskellDepends = [ base mtl time ];
       doCheck = false;
       homepage = "https://github.com/informatikr/hedis";
       description = "Client library for the Redis datastore: supports full command set, pipelining";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "here" = callPackage
    ({ mkDerivation, base, haskell-src-meta, mtl, parsec
     , template-haskell
     }:
     mkDerivation {
       pname = "here";
       version = "1.2.13";
       sha256 = "001wfyvigl2xswqysnpignkl124hybf833875mkcsn8yp8krqvs0";
       libraryHaskellDepends = [
         base haskell-src-meta mtl parsec template-haskell
       ];
       homepage = "https://github.com/tmhedberg/here";
       description = "Here docs & interpolated strings via quasiquotation";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "heredoc" = callPackage
    ({ mkDerivation, base, template-haskell }:
     mkDerivation {
       pname = "heredoc";
       version = "0.2.0.0";
       sha256 = "0h0g2f7yscwl1ba1yn3jnz2drvd6ns9m910hwlmq3kdq3k39y3f9";
       libraryHaskellDepends = [ base template-haskell ];
       homepage = "http://hackage.haskell.org/package/heredoc";
       description = "multi-line string / here document using QuasiQuotes";
       license = stdenv.lib.licenses.publicDomain;
     }) {};
  "heterocephalus" = callPackage
    ({ mkDerivation, base, blaze-html, blaze-markup, containers, dlist
     , doctest, Glob, mtl, parsec, shakespeare, template-haskell, text
     , transformers
     }:
     mkDerivation {
       pname = "heterocephalus";
       version = "1.0.5.3";
       sha256 = "0kvrv15xm6igd6nkyfij1h982jqpbf61pzinv8jdb4fcjqwf08s7";
       libraryHaskellDepends = [
         base blaze-html blaze-markup containers dlist mtl parsec
         shakespeare template-haskell text transformers
       ];
       testHaskellDepends = [ base doctest Glob ];
       homepage = "https://github.com/arowM/heterocephalus#readme";
       description = "A type-safe template engine for working with popular front end development tools";
       license = stdenv.lib.licenses.mit;
     }) {};
  "hex" = callPackage
    ({ mkDerivation, base, bytestring }:
     mkDerivation {
       pname = "hex";
       version = "0.1.2";
       sha256 = "1v31xiaivrrn0q2jz8919wvkjplv1kxna5ajhsj701fqxm1i5vhj";
       libraryHaskellDepends = [ base bytestring ];
       description = "Convert strings into hexadecimal and back";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "hexml" = callPackage
    ({ mkDerivation, base, bytestring, extra }:
     mkDerivation {
       pname = "hexml";
       version = "0.3.4";
       sha256 = "0amy5gjk1sqj5dq8a8gp7d3z9wfhcflhxkssijnklnfn5s002x4k";
       libraryHaskellDepends = [ base bytestring extra ];
       testHaskellDepends = [ base bytestring ];
       homepage = "https://github.com/ndmitchell/hexml#readme";
       description = "XML subset DOM parser";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "hexml-lens" = callPackage
    ({ mkDerivation, base, bytestring, contravariant, doctest
     , foundation, hexml, hspec, lens, profunctors, QuickCheck, text
     , wreq
     }:
     mkDerivation {
       pname = "hexml-lens";
       version = "0.2.1";
       sha256 = "0ss9riq7ppmqav4p38ckk479ggq7iy7xm0wsanr29ybg43vlx8xs";
       libraryHaskellDepends = [
         base bytestring contravariant foundation hexml lens profunctors
         text
       ];
       testHaskellDepends = [
         base bytestring doctest hexml hspec lens QuickCheck wreq
       ];
       homepage = "https://github.com/pepeiborra/hexml-lens#readme";
       description = "Lenses for the hexml package";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "hexpat" = callPackage
    ({ mkDerivation, base, bytestring, containers, deepseq, expat, List
     , text, transformers, utf8-string
     }:
     mkDerivation {
       pname = "hexpat";
       version = "0.20.13";
       sha256 = "1l9zfp69r3xaxi2znjwpcrx7xckcqvaahv2c0qgkqq61a7ka1qa6";
       libraryHaskellDepends = [
         base bytestring containers deepseq List text transformers
         utf8-string
       ];
       librarySystemDepends = [ expat ];
       homepage = "http://haskell.org/haskellwiki/Hexpat/";
       description = "XML parser/formatter based on expat";
       license = stdenv.lib.licenses.bsd3;
     }) {inherit (pkgs) expat;};
  "hexstring" = callPackage
    ({ mkDerivation, aeson, base, base16-bytestring, binary, bytestring
     , hspec, text
     }:
     mkDerivation {
       pname = "hexstring";
       version = "0.11.1";
       sha256 = "0509h2fhrpcsjf7gffychf700xca4a5l937jfgdzywpm4bzdpn20";
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [
         aeson base base16-bytestring binary bytestring text
       ];
       testHaskellDepends = [ base binary bytestring hspec text ];
       homepage = "http://www.leonmergen.com/opensource.html";
       description = "Fast and safe representation of a hex string";
       license = stdenv.lib.licenses.mit;
     }) {};
  "hfsevents" = callPackage
    ({ mkDerivation, base, bytestring, cereal, Cocoa, CoreServices, mtl
     , text
     }:
     mkDerivation {
       pname = "hfsevents";
       version = "0.1.6";
       sha256 = "019zbnvfd866ch49gax0c1c93zv92142saim1hrgypz5lprz7hvl";
       libraryHaskellDepends = [ base bytestring cereal mtl text ];
       librarySystemDepends = [ Cocoa ];
       libraryToolDepends = [ CoreServices ];
       homepage = "http://github.com/luite/hfsevents";
       description = "File/folder watching for OS X";
       license = stdenv.lib.licenses.bsd3;
       platforms = [ "x86_64-darwin" ];
     }) {inherit (pkgs.darwin.apple_sdk.frameworks) Cocoa;
         inherit (pkgs.darwin.apple_sdk.frameworks) CoreServices;};
  "hgmp" = callPackage
    ({ mkDerivation, base, ghc-prim, integer-gmp, QuickCheck }:
     mkDerivation {
       pname = "hgmp";
       version = "0.1.1";
       sha256 = "1hisbcpz47x2lbqf8vzwis7qw7xhvx22lv7dcyhm9vsmsh5741dr";
       revision = "3";
       editedCabalFile = "0z2xbqzyrgm9apy3xl353wgwhbnc3hdb1giw2j6fyvv705fmpb62";
       libraryHaskellDepends = [ base ghc-prim integer-gmp ];
       testHaskellDepends = [ base QuickCheck ];
       homepage = "https://code.mathr.co.uk/hgmp";
       description = "Haskell interface to GMP";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "hidapi" = callPackage
    ({ mkDerivation, base, bytestring, deepseq, deepseq-generics
     , systemd
     }:
     mkDerivation {
       pname = "hidapi";
       version = "0.1.5";
       sha256 = "0pjrrm8rpcwwsc5ck36p0zyk5rr5jri8c79436whk8xxpnyf09ip";
       libraryHaskellDepends = [
         base bytestring deepseq deepseq-generics
       ];
       librarySystemDepends = [ systemd ];
       homepage = "https://github.com/vahokif/haskell-hidapi";
       description = "Haskell bindings to HIDAPI";
       license = stdenv.lib.licenses.mit;
     }) {inherit (pkgs) systemd;};
  "hidden-char" = callPackage
    ({ mkDerivation, base, hspec }:
     mkDerivation {
       pname = "hidden-char";
       version = "0.1.0.2";
       sha256 = "167l83cn37mkq394pbanybz1kghnbim1m74fxskws1nclxr9747a";
       revision = "2";
       editedCabalFile = "1d0k297hxff31k0x5xbli6l7c151d2y9wq4w0x0prgagjc0l7z5n";
       libraryHaskellDepends = [ base ];
       testHaskellDepends = [ base hspec ];
       homepage = "https://github.com/rcook/hidden-char#readme";
       description = "Provides cross-platform getHiddenChar function";
       license = stdenv.lib.licenses.mit;
     }) {};
  "hierarchical-clustering" = callPackage
    ({ mkDerivation, array, base, containers, hspec, HUnit, QuickCheck
     }:
     mkDerivation {
       pname = "hierarchical-clustering";
       version = "0.4.6";
       sha256 = "1cfcrnxqczqzqgpyipsw9dwfw1j75zd11vpd12i533f3p44pzwbm";
       libraryHaskellDepends = [ array base containers ];
       testHaskellDepends = [ base hspec HUnit QuickCheck ];
       description = "Fast algorithms for single, average/UPGMA and complete linkage clustering";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "hierarchy" = callPackage
    ({ mkDerivation, base, directory, doctest, exceptions, filepath
     , free, mmorph, monad-control, mtl, transformers, transformers-base
     , transformers-compat
     }:
     mkDerivation {
       pname = "hierarchy";
       version = "1.0.2";
       sha256 = "060kgg8gfp2155fibksi65xy5psbwabh4wymg7i6cqh3k3zhxy95";
       libraryHaskellDepends = [
         base exceptions free mmorph monad-control mtl transformers
         transformers-base transformers-compat
       ];
       testHaskellDepends = [
         base directory doctest exceptions filepath free mmorph
         monad-control mtl transformers transformers-base
         transformers-compat
       ];
       homepage = "https://github.com/jwiegley/hierarchy#readme";
       description = "Predicated traversal of generated trees";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "higher-leveldb" = callPackage
    ({ mkDerivation, base, bytestring, cereal, data-default, exceptions
     , hspec, leveldb-haskell, mtl, process, resourcet, transformers
     , transformers-base, unliftio, unliftio-core
     }:
     mkDerivation {
       pname = "higher-leveldb";
       version = "0.5.0.2";
       sha256 = "1wmgz2aqz0vg0fnnigpg27gnzs9i6slyn6lb41myv6m20j0j5z1a";
       libraryHaskellDepends = [
         base bytestring cereal data-default exceptions leveldb-haskell mtl
         resourcet transformers transformers-base unliftio-core
       ];
       testHaskellDepends = [
         base bytestring cereal hspec leveldb-haskell mtl process resourcet
         transformers transformers-base unliftio
       ];
       homepage = "https://github.com/jeremyjh/higher-leveldb";
       description = "A rich monadic API for working with leveldb databases";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "highlighting-kate" = callPackage
    ({ mkDerivation, base, blaze-html, bytestring, containers, Diff
     , directory, filepath, mtl, parsec, pcre-light, process
     , utf8-string
     }:
     mkDerivation {
       pname = "highlighting-kate";
       version = "0.6.4";
       sha256 = "1bqv00gfmrsf0jjr4qf3lhshvfkyzmhbi3pjb6mafbnsyn2k7f6q";
       configureFlags = [ "-fpcre-light" ];
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         base blaze-html bytestring containers mtl parsec pcre-light
         utf8-string
       ];
       testHaskellDepends = [
         base blaze-html containers Diff directory filepath process
       ];
       homepage = "http://github.com/jgm/highlighting-kate";
       description = "Syntax highlighting";
       license = "GPL";
     }) {};
  "hinotify" = callPackage
    ({ mkDerivation, async, base, bytestring, containers, directory
     , unix
     }:
     mkDerivation {
       pname = "hinotify";
       version = "0.3.10";
       sha256 = "17ax3n68a5c2ddazp86aciliskrh6znd3bnry0wcllmb6dbpsaxg";
       revision = "1";
       editedCabalFile = "07z0n5rvki3w0kjr190bwv7sq8p3myspv8999ilz9rlsqf5a0324";
       libraryHaskellDepends = [ async base bytestring containers unix ];
       testHaskellDepends = [ base bytestring directory unix ];
       homepage = "https://github.com/kolmodin/hinotify.git";
       description = "Haskell binding to inotify";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "hint" = callPackage
    ({ mkDerivation, base, directory, exceptions, extensible-exceptions
     , filepath, ghc, ghc-boot, ghc-paths, HUnit, mtl, random, temporary
     , unix
     }:
     mkDerivation {
       pname = "hint";
       version = "0.8.0";
       sha256 = "0h8wan0hb16m1gcil1csaay9f9f1pq3kfgbzfsfpjszmr1i2sw1f";
       libraryHaskellDepends = [
         base directory exceptions filepath ghc ghc-boot ghc-paths mtl
         random temporary unix
       ];
       testHaskellDepends = [
         base directory exceptions extensible-exceptions filepath HUnit unix
       ];
       homepage = "https://github.com/mvdan/hint";
       description = "Runtime Haskell interpreter (GHC API wrapper)";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "histogram-fill" = callPackage
    ({ mkDerivation, base, criterion, deepseq, ghc-prim, mwc-random
     , primitive, vector
     }:
     mkDerivation {
       pname = "histogram-fill";
       version = "0.9.1.0";
       sha256 = "0qcil8lgkzklgbzb9a81kdzsyzrsgzwdgz424mlvp8sbrfmbnz3m";
       libraryHaskellDepends = [ base deepseq ghc-prim primitive vector ];
       benchmarkHaskellDepends = [ base criterion mwc-random vector ];
       homepage = "https://github.com/Shimuuar/histogram-fill/";
       description = "Library for histograms creation";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "hjsmin" = callPackage
    ({ mkDerivation, base, blaze-builder, bytestring, containers
     , language-javascript, optparse-applicative, text
     }:
     mkDerivation {
       pname = "hjsmin";
       version = "0.2.0.2";
       sha256 = "112lj2jgbcfdnr0hxc2cfxpxzxy9qyid04pbk0wwcqk977957hdy";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         base blaze-builder bytestring containers language-javascript text
       ];
       executableHaskellDepends = [
         base blaze-builder bytestring containers language-javascript
         optparse-applicative text
       ];
       homepage = "http://github.com/erikd/hjsmin";
       description = "Haskell implementation of a javascript minifier";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "hledger" = callPackage
    ({ mkDerivation, ansi-terminal, base, base-compat-batteries
     , bytestring, cmdargs, containers, criterion, csv, data-default
     , Decimal, Diff, directory, file-embed, filepath, hashable
     , haskeline, here, hledger-lib, html, HUnit, lucid, megaparsec, mtl
     , mtl-compat, old-time, parsec, pretty-show, process, regex-tdfa
     , safe, shakespeare, split, tabular, temporary, terminfo
     , test-framework, test-framework-hunit, text, time, timeit
     , transformers, unordered-containers, utf8-string, utility-ht
     , wizards
     }:
     mkDerivation {
       pname = "hledger";
       version = "1.10";
       sha256 = "1ly4sp0lhb3w5nrd77xd84bcyvm000fwwjipm7gq8bjhabw20i7n";
       revision = "1";
       editedCabalFile = "1kj1by80j7f6rzwfccwl2cp53bb3lyivh8a8xnawdyxab1pkyz34";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         ansi-terminal base base-compat-batteries bytestring cmdargs
         containers csv data-default Decimal Diff directory file-embed
         filepath hashable haskeline here hledger-lib HUnit lucid megaparsec
         mtl mtl-compat old-time parsec pretty-show process regex-tdfa safe
         shakespeare split tabular temporary terminfo text time transformers
         unordered-containers utf8-string utility-ht wizards
       ];
       executableHaskellDepends = [
         ansi-terminal base base-compat-batteries bytestring cmdargs
         containers csv data-default Decimal directory file-embed filepath
         haskeline here hledger-lib HUnit megaparsec mtl mtl-compat old-time
         parsec pretty-show process regex-tdfa safe shakespeare split
         tabular temporary terminfo text time transformers
         unordered-containers utf8-string utility-ht wizards
       ];
       testHaskellDepends = [
         ansi-terminal base base-compat-batteries bytestring cmdargs
         containers csv data-default Decimal directory file-embed filepath
         haskeline here hledger-lib HUnit megaparsec mtl mtl-compat old-time
         parsec pretty-show process regex-tdfa safe shakespeare split
         tabular temporary terminfo test-framework test-framework-hunit text
         time transformers unordered-containers utf8-string utility-ht
         wizards
       ];
       benchmarkHaskellDepends = [
         ansi-terminal base base-compat-batteries bytestring cmdargs
         containers criterion csv data-default Decimal directory file-embed
         filepath haskeline here hledger-lib html HUnit megaparsec mtl
         mtl-compat old-time parsec pretty-show process regex-tdfa safe
         shakespeare split tabular temporary terminfo text time timeit
         transformers unordered-containers utf8-string utility-ht wizards
       ];
       homepage = "http://hledger.org";
       description = "Command-line interface for the hledger accounting tool";
       license = stdenv.lib.licenses.gpl3;
     }) {};
  "hledger-api" = callPackage
    ({ mkDerivation, aeson, base, bytestring, containers, data-default
     , Decimal, docopt, either, hledger, hledger-lib, microlens
     , microlens-platform, safe, servant-server, servant-swagger
     , swagger2, text, transformers, wai, wai-extra, warp
     }:
     mkDerivation {
       pname = "hledger-api";
       version = "1.10";
       sha256 = "1axcpipq6m4r9bh2633j7l88pc4ax8ycb2q0wivhfq2dp1pbylbf";
       isLibrary = false;
       isExecutable = true;
       executableHaskellDepends = [
         aeson base bytestring containers data-default Decimal docopt either
         hledger hledger-lib microlens microlens-platform safe
         servant-server servant-swagger swagger2 text transformers wai
         wai-extra warp
       ];
       doHaddock = false;
       homepage = "http://hledger.org";
       description = "Web API server for the hledger accounting tool";
       license = stdenv.lib.licenses.gpl3;
     }) {};
  "hledger-interest" = callPackage
    ({ mkDerivation, base, Cabal, Decimal, hledger-lib, mtl, text, time
     }:
     mkDerivation {
       pname = "hledger-interest";
       version = "1.5.3";
       sha256 = "1ff113z2ir07ihdvfa5fca4x326zwm2jd7sjy6hjpr4qgi1mszvs";
       isLibrary = false;
       isExecutable = true;
       executableHaskellDepends = [
         base Cabal Decimal hledger-lib mtl text time
       ];
       doHaddock = false;
       homepage = "http://github.com/peti/hledger-interest";
       description = "computes interest for a given account";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "hledger-lib" = callPackage
    ({ mkDerivation, ansi-terminal, array, base, base-compat-batteries
     , blaze-markup, bytestring, cmdargs, containers, csv, data-default
     , Decimal, deepseq, directory, doctest, easytest, extra, filepath
     , Glob, hashtables, HUnit, megaparsec, mtl, mtl-compat, old-time
     , parsec, parser-combinators, pretty-show, regex-tdfa, safe, split
     , tabular, test-framework, test-framework-hunit, text, time
     , transformers, uglymemo, utf8-string
     }:
     mkDerivation {
       pname = "hledger-lib";
       version = "1.10";
       sha256 = "1kj3376gaaq39rwfyhfg7npdsy7z561184wia4rc8ijzf0isz2p1";
       revision = "1";
       editedCabalFile = "1b6hj4w1qfh1q8c3ikx5sn8z70cfdmqi4iy3a3l64q4x1j4jgyic";
       libraryHaskellDepends = [
         ansi-terminal array base base-compat-batteries blaze-markup
         bytestring cmdargs containers csv data-default Decimal deepseq
         directory extra filepath hashtables HUnit megaparsec mtl mtl-compat
         old-time parsec parser-combinators pretty-show regex-tdfa safe
         split tabular text time transformers uglymemo utf8-string
       ];
       testHaskellDepends = [
         ansi-terminal array base base-compat-batteries blaze-markup
         bytestring cmdargs containers csv data-default Decimal deepseq
         directory doctest easytest extra filepath Glob hashtables HUnit
         megaparsec mtl mtl-compat old-time parsec parser-combinators
         pretty-show regex-tdfa safe split tabular test-framework
         test-framework-hunit text time transformers uglymemo utf8-string
       ];
       homepage = "http://hledger.org";
       description = "Core data types, parsers and functionality for the hledger accounting tools";
       license = stdenv.lib.licenses.gpl3;
     }) {};
  "hledger-ui" = callPackage
    ({ mkDerivation, ansi-terminal, async, base, base-compat-batteries
     , brick, cmdargs, containers, data-default, directory, filepath
     , fsnotify, hledger, hledger-lib, HUnit, megaparsec, microlens
     , microlens-platform, pretty-show, process, safe, split, text
     , text-zipper, time, transformers, vector, vty
     }:
     mkDerivation {
       pname = "hledger-ui";
       version = "1.10.1";
       sha256 = "1h4hhsyajpiydvs1p6f4z1s3kblyfn4lvnwwbar6lj4z5jfizm67";
       revision = "1";
       editedCabalFile = "1xvppxdkrk64mpqb64r016xshxqq25zzflbysmldgiqm1ibngy1g";
       isLibrary = false;
       isExecutable = true;
       executableHaskellDepends = [
         ansi-terminal async base base-compat-batteries brick cmdargs
         containers data-default directory filepath fsnotify hledger
         hledger-lib HUnit megaparsec microlens microlens-platform
         pretty-show process safe split text text-zipper time transformers
         vector vty
       ];
       doHaddock = false;
       homepage = "http://hledger.org";
       description = "Curses-style user interface for the hledger accounting tool";
       license = stdenv.lib.licenses.gpl3;
     }) {};
  "hledger-web" = callPackage
    ({ mkDerivation, base, blaze-html, blaze-markup, bytestring
     , case-insensitive, clientsession, cmdargs, conduit, conduit-extra
     , data-default, directory, filepath, hjsmin, hledger, hledger-lib
     , http-client, http-conduit, HUnit, json, megaparsec, mtl
     , semigroups, shakespeare, template-haskell, text, time
     , transformers, wai, wai-extra, wai-handler-launch, warp, yaml
     , yesod, yesod-core, yesod-form, yesod-static
     }:
     mkDerivation {
       pname = "hledger-web";
       version = "1.10";
       sha256 = "1hfl9kr3h9lcmy512s3yiv3rp31md7kw5n1145khj2j3l8qd3py9";
       revision = "1";
       editedCabalFile = "0zzgc6mjia06fwvjwpzzczh0p9k0a6bi2lib6zq5k1briq4gqblm";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         base blaze-html blaze-markup bytestring case-insensitive
         clientsession cmdargs conduit conduit-extra data-default directory
         filepath hjsmin hledger hledger-lib http-client http-conduit HUnit
         json megaparsec mtl semigroups shakespeare template-haskell text
         time transformers wai wai-extra wai-handler-launch warp yaml yesod
         yesod-core yesod-form yesod-static
       ];
       executableHaskellDepends = [ base ];
       homepage = "http://hledger.org";
       description = "Web interface for the hledger accounting tool";
       license = stdenv.lib.licenses.gpl3;
     }) {};
  "hlibgit2" = callPackage
    ({ mkDerivation, base, bindings-DSL, git, openssl, process, zlib }:
     mkDerivation {
       pname = "hlibgit2";
       version = "0.18.0.16";
       sha256 = "0plfzxzgph7iilwp434ndcw7pia47n96hcfa32fs7q5gz8kl17hr";
       libraryHaskellDepends = [ base bindings-DSL zlib ];
       librarySystemDepends = [ openssl ];
       testHaskellDepends = [ base process ];
       testToolDepends = [ git ];
       description = "Low-level bindings to libgit2";
       license = stdenv.lib.licenses.mit;
     }) {inherit (pkgs) git; inherit (pkgs) openssl;};
  "hlibsass" = callPackage
    ({ mkDerivation, base, Cabal, directory, hspec, libsass }:
     mkDerivation {
       pname = "hlibsass";
       version = "0.1.8.0";
       sha256 = "1ssgvr0jvl79k1vckp5nq2zw6mx8l4xasydymzjwmhg0fl99mpi6";
       configureFlags = [ "-fexternalLibsass" ];
       setupHaskellDepends = [ base Cabal directory ];
       libraryHaskellDepends = [ base ];
       librarySystemDepends = [ libsass ];
       testHaskellDepends = [ base hspec ];
       homepage = "https://github.com/jakubfijalkowski/hlibsass";
       description = "Low-level bindings to Libsass";
       license = stdenv.lib.licenses.mit;
     }) {inherit (pkgs) libsass;};
  "hlint" = callPackage
    ({ mkDerivation, aeson, ansi-terminal, base, bytestring, cmdargs
     , containers, cpphs, data-default, directory, extra, filepath
     , haskell-src-exts, haskell-src-exts-util, hscolour, process
     , refact, text, transformers, uniplate, unordered-containers
     , vector, yaml
     }:
     mkDerivation {
       pname = "hlint";
       version = "2.1.11";
       sha256 = "0nv6627dacfsfjd3irmkff06hj1hr194zpm9xq6ng93dxhkhsnab";
       isLibrary = true;
       isExecutable = true;
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [
         aeson ansi-terminal base bytestring cmdargs containers cpphs
         data-default directory extra filepath haskell-src-exts
         haskell-src-exts-util hscolour process refact text transformers
         uniplate unordered-containers vector yaml
       ];
       executableHaskellDepends = [ base ];
       homepage = "https://github.com/ndmitchell/hlint#readme";
       description = "Source code suggestions";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "hmatrix" = callPackage
    ({ mkDerivation, array, base, binary, bytestring, deepseq
     , openblasCompat, random, semigroups, split, storable-complex
     , vector
     }:
     mkDerivation {
       pname = "hmatrix";
       version = "0.19.0.0";
       sha256 = "10jd69nby29dggghcyjk6ykyr5wrn97nrv1dkpyrp0y5xm12xssj";
       revision = "1";
       editedCabalFile = "0krx0ds5mcj28y6zpg0r50lljn8681wi4c5lqcdz2c71nhixfq8h";
       configureFlags = [ "-fdisable-default-paths" "-fopenblas" ];
       libraryHaskellDepends = [
         array base binary bytestring deepseq random semigroups split
         storable-complex vector
       ];
       librarySystemDepends = [ openblasCompat ];
       homepage = "https://github.com/albertoruiz/hmatrix";
       description = "Numeric Linear Algebra";
       license = stdenv.lib.licenses.bsd3;
     }) {inherit (pkgs) openblasCompat;};
  "hmatrix-backprop" = callPackage
    ({ mkDerivation, backprop, base, finite-typelits
     , ghc-typelits-knownnat, ghc-typelits-natnormalise, hedgehog
     , hmatrix, hmatrix-vector-sized, microlens, microlens-platform
     , vector, vector-sized
     }:
     mkDerivation {
       pname = "hmatrix-backprop";
       version = "0.1.2.3";
       sha256 = "1x833a48czc2hphswxgwf1ihkgxz13w3bz2d2zs9dqq8xkzdf4mx";
       revision = "1";
       editedCabalFile = "03zrx1kvyz8gn2w2ygd7ql98yimsm3kyrnrr1cc99mz1cm0phnrv";
       libraryHaskellDepends = [
         backprop base ghc-typelits-knownnat ghc-typelits-natnormalise
         hmatrix hmatrix-vector-sized microlens vector vector-sized
       ];
       testHaskellDepends = [
         backprop base finite-typelits hedgehog hmatrix hmatrix-vector-sized
         microlens microlens-platform vector-sized
       ];
       homepage = "https://github.com/mstksg/hmatrix-backprop#readme";
       description = "hmatrix operations lifted for backprop";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "hmatrix-gsl" = callPackage
    ({ mkDerivation, array, base, gsl, hmatrix, process, random, vector
     }:
     mkDerivation {
       pname = "hmatrix-gsl";
       version = "0.19.0.1";
       sha256 = "0v6dla426x4ywaq59jm89ql1i42n39iw6z0j378xwb676v9kfxhm";
       libraryHaskellDepends = [
         array base hmatrix process random vector
       ];
       libraryPkgconfigDepends = [ gsl ];
       homepage = "https://github.com/albertoruiz/hmatrix";
       description = "Numerical computation";
       license = stdenv.lib.licenses.gpl3;
     }) {inherit (pkgs) gsl;};
  "hmatrix-gsl-stats" = callPackage
    ({ mkDerivation, base, binary, gsl, hmatrix, storable-complex
     , vector
     }:
     mkDerivation {
       pname = "hmatrix-gsl-stats";
       version = "0.4.1.7";
       sha256 = "1gslgk58lzin43cvbpivhw7nrn9qyaa6qwhy1z9ypvyal5p8n3sa";
       libraryHaskellDepends = [
         base binary hmatrix storable-complex vector
       ];
       libraryPkgconfigDepends = [ gsl ];
       homepage = "http://code.haskell.org/hmatrix-gsl-stats";
       description = "GSL Statistics interface";
       license = stdenv.lib.licenses.bsd3;
     }) {inherit (pkgs) gsl;};
  "hmatrix-morpheus" = callPackage
    ({ mkDerivation, base, blas, criterion, hmatrix, HUnit, liblapack
     , MonadRandom, test-framework, test-framework-hunit
     , test-framework-quickcheck2
     }:
     mkDerivation {
       pname = "hmatrix-morpheus";
       version = "0.1.1.2";
       sha256 = "19q52n5j1n5db7b2pv0iabh1xygpybgiszswginab5khc01fxwzj";
       libraryHaskellDepends = [ base hmatrix ];
       librarySystemDepends = [ blas liblapack ];
       testHaskellDepends = [
         base hmatrix HUnit MonadRandom test-framework test-framework-hunit
         test-framework-quickcheck2
       ];
       benchmarkHaskellDepends = [ base criterion hmatrix ];
       homepage = "https://github.com/aligusnet/morpheus/tree/master/hmatrix-morpheus";
       description = "Low-level machine learning auxiliary functions";
       license = stdenv.lib.licenses.bsd3;
     }) {inherit (pkgs) blas; inherit (pkgs) liblapack;};
  "hmatrix-special" = callPackage
    ({ mkDerivation, base, hmatrix, hmatrix-gsl }:
     mkDerivation {
       pname = "hmatrix-special";
       version = "0.19.0.0";
       sha256 = "1mywr61kr852sbff26n9x95kswx9l4ycbv6s68qsbkh02xzqq7qz";
       libraryHaskellDepends = [ base hmatrix hmatrix-gsl ];
       homepage = "https://github.com/albertoruiz/hmatrix";
       description = "Interface to GSL special functions";
       license = stdenv.lib.licenses.gpl3;
     }) {};
  "hmatrix-vector-sized" = callPackage
    ({ mkDerivation, base, ghc-typelits-knownnat, hedgehog, hmatrix
     , vector, vector-sized
     }:
     mkDerivation {
       pname = "hmatrix-vector-sized";
       version = "0.1.1.2";
       sha256 = "0zj31xm0d2d7bzky9qxxs5jb5snjivdjknghpwmf8s1b85zim646";
       libraryHaskellDepends = [ base hmatrix vector vector-sized ];
       testHaskellDepends = [
         base ghc-typelits-knownnat hedgehog hmatrix vector vector-sized
       ];
       homepage = "https://github.com/mstksg/hmatrix-vector-sized#readme";
       description = "Conversions between hmatrix and vector-sized types";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "hmpfr" = callPackage
    ({ mkDerivation, base, integer-gmp, mpfr }:
     mkDerivation {
       pname = "hmpfr";
       version = "0.4.4";
       sha256 = "1x8n5245rm0brjl7vhcabazh1k69dcjdas70pnrnlkx26bqfpb9b";
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [ base integer-gmp ];
       librarySystemDepends = [ mpfr ];
       homepage = "https://github.com/michalkonecny/hmpfr";
       description = "Haskell binding to the MPFR library";
       license = stdenv.lib.licenses.bsd3;
     }) {inherit (pkgs) mpfr;};
  "hoogle" = callPackage
    ({ mkDerivation, aeson, base, binary, bytestring, cmdargs, conduit
     , conduit-extra, connection, containers, deepseq, directory, extra
     , filepath, haskell-src-exts, http-conduit, http-types, js-flot
     , js-jquery, mmap, network, network-uri, old-locale, process-extras
     , QuickCheck, resourcet, storable-tuple, tar, template-haskell
     , text, time, transformers, uniplate, utf8-string, vector, wai
     , wai-logger, warp, warp-tls, zlib
     }:
     mkDerivation {
       pname = "hoogle";
       version = "5.0.17.3";
       sha256 = "174gp41v0krzj37m75pnr3aawyhkbk2wq4q6zk2z3zh0avvvmgk6";
       isLibrary = true;
       isExecutable = true;
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [
         aeson base binary bytestring cmdargs conduit conduit-extra
         connection containers deepseq directory extra filepath
         haskell-src-exts http-conduit http-types js-flot js-jquery mmap
         network network-uri old-locale process-extras QuickCheck resourcet
         storable-tuple tar template-haskell text time transformers uniplate
         utf8-string vector wai wai-logger warp warp-tls zlib
       ];
       executableHaskellDepends = [ base ];
       testTarget = "--test-option=--no-net";
       homepage = "http://hoogle.haskell.org/";
       description = "Haskell API Search";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "hoopl" = callPackage
    ({ mkDerivation, base, containers, filepath, mtl, parsec
     , test-framework, test-framework-hunit
     }:
     mkDerivation {
       pname = "hoopl";
       version = "3.10.2.2";
       sha256 = "15rbb9a8mza3zv8h3p237zhmy29bxc4k48ik27kzzj7islb16yq9";
       revision = "2";
       editedCabalFile = "0j6pz4jzhvviyrhhn1j22ikmjvzrg60nzvq26lbpkcb6y4q6rlyx";
       libraryHaskellDepends = [ base containers ];
       testHaskellDepends = [
         base containers filepath mtl parsec test-framework
         test-framework-hunit
       ];
       doCheck = false;
       homepage = "https://github.com/haskell/hoopl";
       description = "A library to support dataflow analysis and optimization";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "hopenpgp-tools" = callPackage
    ({ mkDerivation, aeson, alex, array, attoparsec, base
     , base16-bytestring, binary, binary-conduit, bytestring, conduit
     , conduit-extra, containers, crypto-pubkey, cryptohash, directory
     , errors, fgl, graphviz, happy, hOpenPGP, http-client
     , http-client-tls, http-types, ixset-typed, lens, monad-loops
     , openpgp-asciiarmor, optparse-applicative, prettyprinter
     , prettyprinter-ansi-terminal, prettyprinter-convert-ansi-wl-pprint
     , resourcet, text, time, time-locale-compat, transformers
     , unordered-containers, yaml
     }:
     mkDerivation {
       pname = "hopenpgp-tools";
       version = "0.21.2";
       sha256 = "13064b3ybjsa78gw1dhykl24l1ccqxsdq773zwb95ccz3v4dy65l";
       isLibrary = false;
       isExecutable = true;
       executableHaskellDepends = [
         aeson array attoparsec base base16-bytestring binary binary-conduit
         bytestring conduit conduit-extra containers crypto-pubkey
         cryptohash directory errors fgl graphviz hOpenPGP http-client
         http-client-tls http-types ixset-typed lens monad-loops
         openpgp-asciiarmor optparse-applicative prettyprinter
         prettyprinter-ansi-terminal prettyprinter-convert-ansi-wl-pprint
         resourcet text time time-locale-compat transformers
         unordered-containers yaml
       ];
       executableToolDepends = [ alex happy ];
       doHaddock = false;
       homepage = "https://salsa.debian.org/clint/hOpenPGP";
       description = "hOpenPGP-based command-line tools";
       license = stdenv.lib.licenses.agpl3;
     }) {};
  "hopenssl" = callPackage
    ({ mkDerivation, base, bytestring, HUnit, openssl }:
     mkDerivation {
       pname = "hopenssl";
       version = "2.2.4";
       sha256 = "0wbnibaffpmk453jbvh95r1d1scz1ivkj59ddrbd3hf4iwr6rx4x";
       libraryHaskellDepends = [ base bytestring ];
       librarySystemDepends = [ openssl ];
       testHaskellDepends = [ base bytestring HUnit ];
       homepage = "http://github.com/peti/hopenssl";
       description = "FFI Bindings to OpenSSL's EVP Digest Interface";
       license = stdenv.lib.licenses.bsd3;
     }) {inherit (pkgs) openssl;};
  "hopfli" = callPackage
    ({ mkDerivation, base, bytestring, hspec, QuickCheck, zlib }:
     mkDerivation {
       pname = "hopfli";
       version = "0.2.2.1";
       sha256 = "061as7aa806xzcpch35isrkqbgqhwdy48fs049f491wwb47xqwad";
       revision = "1";
       editedCabalFile = "116jns5im51sb9xiwpx308wz3pr67335633anrf8f704pz8vwjka";
       libraryHaskellDepends = [ base bytestring zlib ];
       testHaskellDepends = [ base bytestring hspec QuickCheck zlib ];
       homepage = "https://github.com/ananthakumaran/hopfli";
       description = "Bidings to Google's Zopfli compression library";
       license = stdenv.lib.licenses.asl20;
     }) {};
  "hostname" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "hostname";
       version = "1.0";
       sha256 = "0p6gm4328946qxc295zb6vhwhf07l1fma82vd0siylnsnsqxlhwv";
       libraryHaskellDepends = [ base ];
       description = "A very simple package providing a cross-platform means of determining the hostname";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "hostname-validate" = callPackage
    ({ mkDerivation, attoparsec, base, bytestring }:
     mkDerivation {
       pname = "hostname-validate";
       version = "1.0.0";
       sha256 = "0my8g4kqf9mz7ii79ff53rwkx3yv9kkn4jbm60q4b7g1rzhb3bvz";
       libraryHaskellDepends = [ attoparsec base bytestring ];
       description = "Validate hostnames e.g. localhost or foo.co.uk.";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "hourglass" = callPackage
    ({ mkDerivation, base, bytestring, deepseq, gauge, mtl, old-locale
     , tasty, tasty-hunit, tasty-quickcheck, time
     }:
     mkDerivation {
       pname = "hourglass";
       version = "0.2.12";
       sha256 = "0jnay5j13vpz6i1rkaj3j0d9v8jfpri499xn3l7wd01f81f5ncs4";
       libraryHaskellDepends = [ base deepseq ];
       testHaskellDepends = [
         base deepseq mtl old-locale tasty tasty-hunit tasty-quickcheck time
       ];
       benchmarkHaskellDepends = [
         base bytestring deepseq gauge mtl old-locale time
       ];
       homepage = "https://github.com/vincenthz/hs-hourglass";
       description = "simple performant time related library";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "hourglass-orphans" = callPackage
    ({ mkDerivation, aeson, base, hourglass, hspec, hspec-expectations
     , text
     }:
     mkDerivation {
       pname = "hourglass-orphans";
       version = "0.1.0.0";
       sha256 = "0r1x6w5zpszr783gzsl3v2fizas4mh5wwgdgdnr93lydngrsj2wz";
       libraryHaskellDepends = [ aeson base hourglass ];
       testHaskellDepends = [
         aeson base hourglass hspec hspec-expectations text
       ];
       homepage = "https://github.com/psibi/hourglass-orphans#readme";
       description = "Orphan Aeson instances to hourglass";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "hp2pretty" = callPackage
    ({ mkDerivation, array, attoparsec, base, containers, filepath
     , floatshow, mtl, optparse-applicative, semigroups, text
     }:
     mkDerivation {
       pname = "hp2pretty";
       version = "0.8.0.2";
       sha256 = "1j3rn4xjpyqnl8vcsc9pyj03mwpilq20g0z8brh3prsvhjb9gl9g";
       isLibrary = false;
       isExecutable = true;
       executableHaskellDepends = [
         array attoparsec base containers filepath floatshow mtl
         optparse-applicative semigroups text
       ];
       doHaddock = false;
       homepage = "https://code.mathr.co.uk/hp2pretty";
       description = "generate pretty graphs from heap profiles";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "hpack" = callPackage
    ({ mkDerivation, aeson, base, bifunctors, bytestring, Cabal
     , containers, cryptonite, deepseq, directory, filepath, Glob, hspec
     , http-client, http-client-tls, http-types, HUnit, interpolate
     , mockery, pretty, QuickCheck, scientific, template-haskell
     , temporary, text, transformers, unordered-containers, vector, yaml
     }:
     mkDerivation {
       pname = "hpack";
       version = "0.28.2";
       sha256 = "18w0h76jdp3mk9vin8da9iz3cwhcxmw787xy8wlh8bxcpcr16q5r";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         aeson base bifunctors bytestring Cabal containers cryptonite
         deepseq directory filepath Glob http-client http-client-tls
         http-types pretty scientific text transformers unordered-containers
         vector yaml
       ];
       executableHaskellDepends = [
         aeson base bifunctors bytestring Cabal containers cryptonite
         deepseq directory filepath Glob http-client http-client-tls
         http-types pretty scientific text transformers unordered-containers
         vector yaml
       ];
       testHaskellDepends = [
         aeson base bifunctors bytestring Cabal containers cryptonite
         deepseq directory filepath Glob hspec http-client http-client-tls
         http-types HUnit interpolate mockery pretty QuickCheck scientific
         template-haskell temporary text transformers unordered-containers
         vector yaml
       ];
       homepage = "https://github.com/sol/hpack#readme";
       description = "An alternative format for Haskell packages";
       license = stdenv.lib.licenses.mit;
     }) {};
  "hpqtypes" = callPackage
    ({ mkDerivation, aeson, async, base, bytestring, Cabal, containers
     , data-default-class, directory, exceptions, filepath, HUnit
     , lifted-base, monad-control, mtl, postgresql, QuickCheck, random
     , resource-pool, scientific, semigroups, test-framework
     , test-framework-hunit, text, text-show, time, transformers
     , transformers-base, unordered-containers, vector
     }:
     mkDerivation {
       pname = "hpqtypes";
       version = "1.5.3.0";
       sha256 = "1igzja5vy3pfvn2xi4bfbrbnxggxwav16cw2kfjrzkp2xrxq09gz";
       setupHaskellDepends = [ base Cabal directory filepath ];
       libraryHaskellDepends = [
         aeson async base bytestring containers data-default-class
         exceptions lifted-base monad-control mtl resource-pool semigroups
         text text-show time transformers transformers-base vector
       ];
       librarySystemDepends = [ postgresql ];
       testHaskellDepends = [
         aeson base bytestring exceptions HUnit lifted-base monad-control
         mtl QuickCheck random scientific test-framework
         test-framework-hunit text text-show time transformers-base
         unordered-containers vector
       ];
       doCheck = false;
       homepage = "https://github.com/scrive/hpqtypes";
       description = "Haskell bindings to libpqtypes";
       license = stdenv.lib.licenses.bsd3;
     }) {inherit (pkgs) postgresql;};
  "hprotoc" = callPackage
    ({ mkDerivation, alex, array, base, binary, bytestring, containers
     , directory, filepath, haskell-src-exts, mtl, parsec
     , protocol-buffers, protocol-buffers-descriptor, utf8-string
     }:
     mkDerivation {
       pname = "hprotoc";
       version = "2.4.11";
       sha256 = "0740yc33ginskkiggyaqc1khkb2bzb4vg0r12rj59f3gimzfiwlk";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         array base binary bytestring containers directory filepath
         haskell-src-exts mtl parsec protocol-buffers
         protocol-buffers-descriptor utf8-string
       ];
       libraryToolDepends = [ alex ];
       executableHaskellDepends = [
         array base binary bytestring containers directory filepath
         haskell-src-exts mtl parsec protocol-buffers
         protocol-buffers-descriptor utf8-string
       ];
       executableToolDepends = [ alex ];
       homepage = "https://github.com/k-bx/protocol-buffers";
       description = "Parse Google Protocol Buffer specifications";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "hquantlib" = callPackage
    ({ mkDerivation, base, containers, hmatrix, hmatrix-gsl
     , hmatrix-special, hquantlib-time, HUnit, mersenne-random-pure64
     , parallel, QuickCheck, random, statistics, test-framework
     , test-framework-hunit, test-framework-quickcheck2, time, vector
     , vector-algorithms
     }:
     mkDerivation {
       pname = "hquantlib";
       version = "0.0.5.0";
       sha256 = "1zi31y89kdbid3xjvpsd2iqwvn8a7d2i5518maigkmhp5v1lg0w6";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         base containers hmatrix hmatrix-gsl hmatrix-special hquantlib-time
         mersenne-random-pure64 parallel random statistics time vector
         vector-algorithms
       ];
       executableHaskellDepends = [
         base containers mersenne-random-pure64 parallel time
       ];
       testHaskellDepends = [
         base HUnit QuickCheck test-framework test-framework-hunit
         test-framework-quickcheck2
       ];
       homepage = "http://github.com/paulrzcz/hquantlib.git";
       description = "HQuantLib is a port of essencial parts of QuantLib to Haskell";
       license = "LGPL";
     }) {};
  "hquantlib-time" = callPackage
    ({ mkDerivation, base, time }:
     mkDerivation {
       pname = "hquantlib-time";
       version = "0.0.4.1";
       sha256 = "0g2j7m14ic40lhcnbvfjya3qh7ngx658qlmrr0dzr5r1ywcyv75c";
       libraryHaskellDepends = [ base time ];
       homepage = "http://github.com/paulrzcz/hquantlib-time.git";
       description = "HQuantLib Time is a business calendar functions extracted from HQuantLib";
       license = "LGPL";
     }) {};
  "hreader" = callPackage
    ({ mkDerivation, base, exceptions, hset, mmorph, monad-control, mtl
     , tagged, transformers, transformers-base
     }:
     mkDerivation {
       pname = "hreader";
       version = "1.1.0";
       sha256 = "0fkxk9sz9hnnacnsv8dq7xb0sfq0b9abch6ky1zsnhxkb7004ara";
       revision = "1";
       editedCabalFile = "0kz3yzah7m4c2r9yaawhljcgb579masx3lx4mrr4lmqy39kmsvcb";
       libraryHaskellDepends = [
         base exceptions hset mmorph monad-control mtl tagged transformers
         transformers-base
       ];
       testHaskellDepends = [ base hset transformers-base ];
       homepage = "https://bitbucket.org/s9gf4ult/hreader";
       description = "Generalization of MonadReader and ReaderT using hset";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "hreader-lens" = callPackage
    ({ mkDerivation, base, comonad, hreader, hset, lens, lens-action
     , profunctors
     }:
     mkDerivation {
       pname = "hreader-lens";
       version = "0.1.3.0";
       sha256 = "1l02fplf2gjns869rhlwzglg08gl8cpjciv9fh05rg74dhn0m3s0";
       libraryHaskellDepends = [
         base comonad hreader hset lens lens-action profunctors
       ];
       homepage = "http://github.com/dredozubov/hreader-lens";
       description = "Optics for hreader package";
       license = stdenv.lib.licenses.mit;
     }) {};
  "hruby" = callPackage
    ({ mkDerivation, aeson, attoparsec, base, bytestring, Cabal
     , process, QuickCheck, ruby, scientific, stm, text
     , unordered-containers, vector
     }:
     mkDerivation {
       pname = "hruby";
       version = "0.3.6";
       sha256 = "068mvb6bf583bldx07whc3cc0s3xbjlibi55r0ajjq9v4kxv98yx";
       setupHaskellDepends = [ base Cabal process ];
       libraryHaskellDepends = [
         aeson attoparsec base bytestring scientific stm text
         unordered-containers vector
       ];
       librarySystemDepends = [ ruby ];
       testHaskellDepends = [
         aeson attoparsec base QuickCheck text vector
       ];
       description = "Embed a Ruby intepreter in your Haskell program !";
       license = stdenv.lib.licenses.bsd3;
     }) {inherit (pkgs) ruby;};
  "hs-GeoIP" = callPackage
    ({ mkDerivation, base, bytestring, deepseq, GeoIP }:
     mkDerivation {
       pname = "hs-GeoIP";
       version = "0.3";
       sha256 = "135bl4cjijq6mr485waz7aaxgkaji2fsdjhdy4v4756q6ahzcpwf";
       libraryHaskellDepends = [ base bytestring deepseq ];
       librarySystemDepends = [ GeoIP ];
       homepage = "http://github.com/ozataman/hs-GeoIP";
       description = "Haskell bindings to the MaxMind GeoIPCity database via the C library";
       license = stdenv.lib.licenses.bsd3;
     }) {GeoIP = null;};
  "hs-bibutils" = callPackage
    ({ mkDerivation, base, syb }:
     mkDerivation {
       pname = "hs-bibutils";
       version = "6.6.0.0";
       sha256 = "0n2sz2zl4naspryd49ii858qkjp2lapns5a2gr8zm6vvn5sh1f0l";
       libraryHaskellDepends = [ base syb ];
       homepage = "https://github.com/wilx/hs-bibutils";
       description = "Haskell bindings to bibutils, the bibliography conversion utilities";
       license = "GPL";
     }) {};
  "hs-functors" = callPackage
    ({ mkDerivation, base, transformers }:
     mkDerivation {
       pname = "hs-functors";
       version = "0.1.3.0";
       sha256 = "1j7g5s82f8c1j4hans28m63bwi612j8kfrb7n9cdqqzlc1r804ik";
       libraryHaskellDepends = [ base transformers ];
       description = "Functors from products of Haskell and its dual to Haskell";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "hsass" = callPackage
    ({ mkDerivation, base, bytestring, data-default-class, filepath
     , hlibsass, hspec, hspec-discover, monad-loops, temporary, text
     , transformers
     }:
     mkDerivation {
       pname = "hsass";
       version = "0.7.0";
       sha256 = "0mqsj1jm37pqc1vwjs5y5mh4sfhdyclp1vdr7q5nq2a3pa3qwxbk";
       libraryHaskellDepends = [
         base bytestring data-default-class filepath hlibsass monad-loops
         transformers
       ];
       testHaskellDepends = [
         base bytestring data-default-class hspec hspec-discover temporary
         text
       ];
       testToolDepends = [ hspec-discover ];
       homepage = "https://github.com/jakubfijalkowski/hsass";
       description = "Integrating Sass into Haskell applications";
       license = stdenv.lib.licenses.mit;
     }) {};
  "hscolour" = callPackage
    ({ mkDerivation, base, containers }:
     mkDerivation {
       pname = "hscolour";
       version = "1.24.4";
       sha256 = "079jwph4bwllfp03yfr26s5zc6m6kw3nhb1cggrifh99haq34cr4";
       isLibrary = true;
       isExecutable = true;
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [ base containers ];
       executableHaskellDepends = [ base containers ];
       homepage = "http://code.haskell.org/~malcolm/hscolour/";
       description = "Colourise Haskell code";
       license = "LGPL";
     }) {};
  "hsdns" = callPackage
    ({ mkDerivation, adns, base, containers, network }:
     mkDerivation {
       pname = "hsdns";
       version = "1.7.1";
       sha256 = "0i50p31zxsrkx9hv3mqcl2042lf922b1fsswmd99d66ybkl01kag";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [ base containers network ];
       librarySystemDepends = [ adns ];
       homepage = "http://github.com/peti/hsdns";
       description = "Asynchronous DNS Resolver";
       license = stdenv.lib.licenses.lgpl3;
     }) {inherit (pkgs) adns;};
  "hsebaysdk" = callPackage
    ({ mkDerivation, aeson, base, bytestring, http-client, http-types
     , text, time, transformers, unordered-containers
     }:
     mkDerivation {
       pname = "hsebaysdk";
       version = "0.4.0.0";
       sha256 = "00c9vwlmx4i2a436ajznv1bwaqj5lgq05gpc928vn59v27gx0f07";
       libraryHaskellDepends = [
         aeson base bytestring http-client http-types text time transformers
         unordered-containers
       ];
       homepage = "https://github.com/creichert/hsebaysdk";
       description = "Haskell eBay SDK";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "hsemail" = callPackage
    ({ mkDerivation, base, doctest, hspec, mtl, old-time, parsec }:
     mkDerivation {
       pname = "hsemail";
       version = "2";
       sha256 = "1nd8pzsdan6zxddm96xswcm67g43zkbj1rm3m3wx3as4jj3qmw7m";
       libraryHaskellDepends = [ base mtl old-time parsec ];
       testHaskellDepends = [ base doctest hspec mtl old-time parsec ];
       homepage = "https://github.com/peti/hsemail#readme";
       description = "Parsec parsers for the RFC2822 Internet Message format";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "hset" = callPackage
    ({ mkDerivation, base, deepseq, HUnit, tagged, type-fun }:
     mkDerivation {
       pname = "hset";
       version = "2.2.0";
       sha256 = "0c7i1c2gdj1j3igfmyl3mhv2z875km7k6yjfh75a5b5f4q47lx5q";
       libraryHaskellDepends = [ base deepseq tagged type-fun ];
       testHaskellDepends = [ base HUnit tagged ];
       homepage = "https://bitbucket.org/s9gf4ult/hset";
       description = "Primitive list with elements of unique types";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "hsexif" = callPackage
    ({ mkDerivation, base, binary, bytestring, containers, hspec, HUnit
     , iconv, text, time
     }:
     mkDerivation {
       pname = "hsexif";
       version = "0.6.1.6";
       sha256 = "0pdm0v3xz308yzdhc646bbkwj156llf9g17c2y74x339xk6i8zhg";
       revision = "1";
       editedCabalFile = "1dgcgsmx0k5p3ibfv3n5k0c5p1is2m5zfsd2s6nc6d0pz34d4wl9";
       libraryHaskellDepends = [
         base binary bytestring containers iconv text time
       ];
       testHaskellDepends = [
         base binary bytestring containers hspec HUnit iconv text time
       ];
       homepage = "https://github.com/emmanueltouzery/hsexif";
       description = "EXIF handling library in pure Haskell";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "hsini" = callPackage
    ({ mkDerivation, base, bytestring, containers, mtl, parsec, tasty
     , tasty-hunit, tasty-quickcheck, tasty-th
     }:
     mkDerivation {
       pname = "hsini";
       version = "0.5.1.2";
       sha256 = "1r6qksnrmk18ndxs5zaga8b7kvmk34kp0kh5hwqmq797qrlax9pa";
       libraryHaskellDepends = [ base bytestring containers mtl parsec ];
       testHaskellDepends = [
         base bytestring containers mtl parsec tasty tasty-hunit
         tasty-quickcheck tasty-th
       ];
       description = "ini configuration files";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "hsinstall" = callPackage
    ({ mkDerivation, base, directory, filepath }:
     mkDerivation {
       pname = "hsinstall";
       version = "1.6";
       sha256 = "04f86mk2304q9kz37hr18b9jcz66wk04z747xzpxbnnwig390406";
       isLibrary = true;
       isExecutable = true;
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [ base directory filepath ];
       executableHaskellDepends = [ base directory filepath ];
       description = "Install Haskell software";
       license = stdenv.lib.licenses.isc;
     }) {};
  "hslogger" = callPackage
    ({ mkDerivation, base, containers, directory, mtl, network
     , old-locale, process, time, unix
     }:
     mkDerivation {
       pname = "hslogger";
       version = "1.2.12";
       sha256 = "0ykcsk7wqygvrg60r5kpl6xfinr706al8pfyk5wj67wjs24lqypr";
       revision = "1";
       editedCabalFile = "1rk2lrg3959nbgbyd1aacvwbv865lsrnczqdmj4ivkfn0c8nkidh";
       libraryHaskellDepends = [
         base containers directory mtl network old-locale process time unix
       ];
       homepage = "http://software.complete.org/hslogger";
       description = "Versatile logging framework";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "hslua" = callPackage
    ({ mkDerivation, base, bytestring, containers, exceptions, fail
     , lua5_3, mtl, QuickCheck, quickcheck-instances, tasty
     , tasty-expected-failure, tasty-hunit, tasty-quickcheck, text
     }:
     mkDerivation {
       pname = "hslua";
       version = "0.9.5.2";
       sha256 = "1rdvv01p214zfjh6fcqjjgqwi8y42wad6cqzhlcv5gvclzw2ck8f";
       configureFlags = [ "-fsystem-lua" "-f-use-pkgconfig" ];
       libraryHaskellDepends = [
         base bytestring containers exceptions fail mtl text
       ];
       librarySystemDepends = [ lua5_3 ];
       testHaskellDepends = [
         base bytestring containers QuickCheck quickcheck-instances tasty
         tasty-expected-failure tasty-hunit tasty-quickcheck text
       ];
       description = "A Lua language interpreter embedding in Haskell";
       license = stdenv.lib.licenses.mit;
     }) {inherit (pkgs) lua5_3;};
  "hslua-aeson" = callPackage
    ({ mkDerivation, aeson, base, hashable, hslua, hspec, HUnit
     , ieee754, QuickCheck, quickcheck-instances, scientific, text
     , unordered-containers, vector
     }:
     mkDerivation {
       pname = "hslua-aeson";
       version = "0.3.0.2";
       sha256 = "0qfqq2xz5jqws1bh7iwznnv50kgqc1v5xxvnrraqkmz7hh4wyam2";
       libraryHaskellDepends = [
         aeson base hashable hslua scientific text unordered-containers
         vector
       ];
       testHaskellDepends = [
         aeson base hashable hslua hspec HUnit ieee754 QuickCheck
         quickcheck-instances scientific text unordered-containers vector
       ];
       homepage = "https://github.com/tarleb/hslua-aeson#readme";
       description = "Allow aeson data types to be used with lua";
       license = stdenv.lib.licenses.mit;
     }) {};
  "hslua-module-text" = callPackage
    ({ mkDerivation, base, hslua, tasty, tasty-hunit, text }:
     mkDerivation {
       pname = "hslua-module-text";
       version = "0.1.2.1";
       sha256 = "0bcfpb1dhnxp0gr376ai4w7vczr9zrjl1r3r6w7kcxivfkwq9cxf";
       revision = "1";
       editedCabalFile = "0vajlsd7y6pwa08635q0cx8z5c1c55bk7fvavw7g2vmyvxqjzx6n";
       libraryHaskellDepends = [ base hslua text ];
       testHaskellDepends = [ base hslua tasty tasty-hunit text ];
       homepage = "https://github.com/hslua/hslua-module-test";
       description = "Lua module for text";
       license = stdenv.lib.licenses.mit;
     }) {};
  "hsp" = callPackage
    ({ mkDerivation, base, mtl, text }:
     mkDerivation {
       pname = "hsp";
       version = "0.10.0";
       sha256 = "1ayfywgrlmzivsq6lirmgvl65x1shf8041lzw2yh245rkmd91lsf";
       libraryHaskellDepends = [ base mtl text ];
       homepage = "http://hub.darcs.net/nibro/hsp";
       description = "Haskell Server Pages is a library for writing dynamic server-side web pages";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "hspec" = callPackage
    ({ mkDerivation, base, call-stack, directory, hspec-core
     , hspec-discover, hspec-expectations, hspec-meta, HUnit, QuickCheck
     , stringbuilder, transformers
     }:
     mkDerivation {
       pname = "hspec";
       version = "2.5.5";
       sha256 = "1yv4k5b5kkig2q3waj28587sq28wms7wfav5a3lq4dra6jybimfm";
       libraryHaskellDepends = [
         base call-stack hspec-core hspec-discover hspec-expectations HUnit
         QuickCheck transformers
       ];
       testHaskellDepends = [
         base call-stack directory hspec-core hspec-discover
         hspec-expectations hspec-meta HUnit QuickCheck stringbuilder
         transformers
       ];
       testToolDepends = [ hspec-discover ];
       homepage = "http://hspec.github.io/";
       description = "A Testing Framework for Haskell";
       license = stdenv.lib.licenses.mit;
     }) {};
  "hspec-attoparsec" = callPackage
    ({ mkDerivation, attoparsec, base, bytestring, hspec
     , hspec-expectations, text
     }:
     mkDerivation {
       pname = "hspec-attoparsec";
       version = "0.1.0.2";
       sha256 = "0r7v6x0k5r8jxl0rnsq8h3gqhbiimsic3kiphn6dxaw954zqnypa";
       libraryHaskellDepends = [
         attoparsec base bytestring hspec-expectations text
       ];
       testHaskellDepends = [
         attoparsec base bytestring hspec hspec-expectations text
       ];
       homepage = "http://github.com/alpmestan/hspec-attoparsec";
       description = "Utility functions for testing your attoparsec parsers with hspec";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "hspec-checkers" = callPackage
    ({ mkDerivation, base, checkers, hspec }:
     mkDerivation {
       pname = "hspec-checkers";
       version = "0.1.0.2";
       sha256 = "16by6gw5gg4sifb44w0cdabrfhh7398kvgivf83bixbwabf7knz7";
       libraryHaskellDepends = [ base checkers hspec ];
       testHaskellDepends = [ base checkers hspec ];
       description = "Allows to use checkers properties from hspec";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "hspec-contrib" = callPackage
    ({ mkDerivation, base, hspec, hspec-core, HUnit, QuickCheck }:
     mkDerivation {
       pname = "hspec-contrib";
       version = "0.5.0";
       sha256 = "13579xdqwbsy8k0vxdcvgy932d4p76mij1rzkzbpqbspfn7399yv";
       libraryHaskellDepends = [ base hspec-core HUnit ];
       testHaskellDepends = [ base hspec hspec-core HUnit QuickCheck ];
       homepage = "http://hspec.github.io/";
       description = "Contributed functionality for Hspec";
       license = stdenv.lib.licenses.mit;
     }) {};
  "hspec-core" = callPackage
    ({ mkDerivation, ansi-terminal, array, base, call-stack, clock
     , deepseq, directory, filepath, hspec-expectations, hspec-meta
     , HUnit, process, QuickCheck, quickcheck-io, random, setenv
     , silently, stm, temporary, tf-random, transformers
     }:
     mkDerivation {
       pname = "hspec-core";
       version = "2.5.5";
       sha256 = "1vfrqlpn32s9wiykmkxbnrnd5p56yznw20pf8fwzw78ar4wpz55x";
       revision = "1";
       editedCabalFile = "1fifkdjhzrvwsx27qcsj0jam66sswjas5vfrzmb75z0xqyg5lpr7";
       libraryHaskellDepends = [
         ansi-terminal array base call-stack clock deepseq directory
         filepath hspec-expectations HUnit QuickCheck quickcheck-io random
         setenv stm tf-random transformers
       ];
       testHaskellDepends = [
         ansi-terminal array base call-stack clock deepseq directory
         filepath hspec-expectations hspec-meta HUnit process QuickCheck
         quickcheck-io random setenv silently stm temporary tf-random
         transformers
       ];
       testTarget = "--test-option=--skip --test-option='Test.Hspec.Core.Runner.hspecResult runs specs in parallel'";
       homepage = "http://hspec.github.io/";
       description = "A Testing Framework for Haskell";
       license = stdenv.lib.licenses.mit;
     }) {};
  "hspec-discover" = callPackage
    ({ mkDerivation, base, directory, filepath, hspec-meta, QuickCheck
     }:
     mkDerivation {
       pname = "hspec-discover";
       version = "2.5.5";
       sha256 = "04aidzi91ccr9bygmfkjzshz34z9vh8wvqj4zinx2clxq6r7gqfz";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [ base directory filepath ];
       executableHaskellDepends = [ base directory filepath ];
       testHaskellDepends = [
         base directory filepath hspec-meta QuickCheck
       ];
       homepage = "http://hspec.github.io/";
       description = "Automatically discover and run Hspec tests";
       license = stdenv.lib.licenses.mit;
     }) {};
  "hspec-expectations" = callPackage
    ({ mkDerivation, base, call-stack, HUnit, nanospec }:
     mkDerivation {
       pname = "hspec-expectations";
       version = "0.8.2";
       sha256 = "1vxl9zazbaapijr6zmcj72j9wf7ka1pirrjbwddwwddg3zm0g5l1";
       libraryHaskellDepends = [ base call-stack HUnit ];
       testHaskellDepends = [ base call-stack HUnit nanospec ];
       homepage = "https://github.com/hspec/hspec-expectations#readme";
       description = "Catchy combinators for HUnit";
       license = stdenv.lib.licenses.mit;
     }) {};
  "hspec-expectations-lifted" = callPackage
    ({ mkDerivation, base, hspec-expectations, transformers }:
     mkDerivation {
       pname = "hspec-expectations-lifted";
       version = "0.10.0";
       sha256 = "0a1qwz0n80lph8m9cq6cb06m8bsmqgg8ifx0acpylvrrkd8g3k92";
       libraryHaskellDepends = [ base hspec-expectations transformers ];
       description = "A version of hspec-expectations generalized to MonadIO";
       license = stdenv.lib.licenses.mit;
     }) {};
  "hspec-expectations-pretty-diff" = callPackage
    ({ mkDerivation, aeson, ansi-terminal, base, Diff, hscolour, hspec
     , HUnit, nicify-lib, text
     }:
     mkDerivation {
       pname = "hspec-expectations-pretty-diff";
       version = "0.7.2.4";
       sha256 = "02hvnlhvlhg4yv6pbr1f0ig01qs83z85cmcl4w5wpqqb6cjdbgqv";
       libraryHaskellDepends = [
         ansi-terminal base Diff hscolour HUnit nicify-lib text
       ];
       testHaskellDepends = [ aeson base hspec HUnit text ];
       doCheck = false;
       homepage = "https://github.com/myfreeweb/hspec-expectations-pretty-diff#readme";
       description = "Catchy combinators for HUnit";
       license = stdenv.lib.licenses.mit;
     }) {};
  "hspec-golden-aeson" = callPackage
    ({ mkDerivation, aeson, aeson-pretty, base, bytestring, directory
     , filepath, hspec, hspec-core, QuickCheck, quickcheck-arbitrary-adt
     , random, silently, transformers
     }:
     mkDerivation {
       pname = "hspec-golden-aeson";
       version = "0.7.0.0";
       sha256 = "18jc992dhln1v5sfg8yjfsm2i5c7c38ph3bxrjxgc9bl7fzcsk0i";
       libraryHaskellDepends = [
         aeson aeson-pretty base bytestring directory filepath hspec
         QuickCheck quickcheck-arbitrary-adt random transformers
       ];
       testHaskellDepends = [
         aeson base directory hspec hspec-core QuickCheck
         quickcheck-arbitrary-adt silently transformers
       ];
       homepage = "https://github.com/plow-technologies/hspec-golden-aeson#readme";
       description = "Use tests to monitor changes in Aeson serialization";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "hspec-megaparsec" = callPackage
    ({ mkDerivation, base, containers, hspec, hspec-expectations
     , megaparsec
     }:
     mkDerivation {
       pname = "hspec-megaparsec";
       version = "1.0.0";
       sha256 = "1dafrbzjm7rzwvcpjpk3bsg7bd111xfij94n17sh8wfykzhim5hl";
       libraryHaskellDepends = [
         base containers hspec-expectations megaparsec
       ];
       testHaskellDepends = [ base hspec hspec-expectations megaparsec ];
       homepage = "https://github.com/mrkkrp/hspec-megaparsec";
       description = "Utility functions for testing Megaparsec parsers with Hspec";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "hspec-meta" = callPackage
    ({ mkDerivation, ansi-terminal, array, async, base, call-stack
     , deepseq, directory, filepath, hspec-expectations, HUnit
     , QuickCheck, quickcheck-io, random, setenv, time, transformers
     }:
     mkDerivation {
       pname = "hspec-meta";
       version = "2.4.6";
       sha256 = "0qmvk01n79j6skn79r6zalg2pd0x0nqqn9qn8mhg0pgyzcdnfc9b";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         ansi-terminal array async base call-stack deepseq directory
         filepath hspec-expectations HUnit QuickCheck quickcheck-io random
         setenv time transformers
       ];
       executableHaskellDepends = [
         ansi-terminal array async base call-stack deepseq directory
         filepath hspec-expectations HUnit QuickCheck quickcheck-io random
         setenv time transformers
       ];
       homepage = "http://hspec.github.io/";
       description = "A version of Hspec which is used to test Hspec itself";
       license = stdenv.lib.licenses.mit;
     }) {};
  "hspec-pg-transact" = callPackage
    ({ mkDerivation, base, bytestring, hspec, pg-transact
     , postgresql-simple, resource-pool, text, tmp-postgres
     }:
     mkDerivation {
       pname = "hspec-pg-transact";
       version = "0.1.0.2";
       sha256 = "030wy3ajlfd7pi6gwfn6xcsl2yi0gvznxl8m7kq001bkiabjmv55";
       libraryHaskellDepends = [
         base bytestring hspec pg-transact postgresql-simple resource-pool
         text tmp-postgres
       ];
       homepage = "https://github.com/jfischoff/pg-transact-hspec#readme";
       description = "Helpers for creating database tests with hspec and pg-transact";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "hspec-smallcheck" = callPackage
    ({ mkDerivation, base, base-orphans, call-stack, hspec, hspec-core
     , HUnit, QuickCheck, smallcheck
     }:
     mkDerivation {
       pname = "hspec-smallcheck";
       version = "0.5.2";
       sha256 = "06c1ym793zkdwi4bxk5f4l7m1n1bg5jmnm0p68q2pa9rlhk1lc4s";
       libraryHaskellDepends = [
         base call-stack hspec-core HUnit smallcheck
       ];
       testHaskellDepends = [
         base base-orphans call-stack hspec hspec-core HUnit QuickCheck
         smallcheck
       ];
       homepage = "http://hspec.github.io/";
       description = "SmallCheck support for the Hspec testing framework";
       license = stdenv.lib.licenses.mit;
     }) {};
  "hspec-wai" = callPackage
    ({ mkDerivation, base, base-compat, bytestring, case-insensitive
     , hspec, hspec-core, hspec-expectations, http-types, QuickCheck
     , text, transformers, wai, wai-extra
     }:
     mkDerivation {
       pname = "hspec-wai";
       version = "0.9.2";
       sha256 = "0gr8j8x8vvzygxyqc0likam63f3427x4p73g95a387aksr5l2ph5";
       libraryHaskellDepends = [
         base base-compat bytestring case-insensitive hspec-core
         hspec-expectations http-types QuickCheck text transformers wai
         wai-extra
       ];
       testHaskellDepends = [
         base base-compat bytestring case-insensitive hspec hspec-core
         hspec-expectations http-types QuickCheck text transformers wai
         wai-extra
       ];
       homepage = "https://github.com/hspec/hspec-wai#readme";
       description = "Experimental Hspec support for testing WAI applications";
       license = stdenv.lib.licenses.mit;
     }) {};
  "hspec-wai-json" = callPackage
    ({ mkDerivation, aeson, aeson-qq, base, bytestring
     , case-insensitive, hspec, hspec-wai, template-haskell
     }:
     mkDerivation {
       pname = "hspec-wai-json";
       version = "0.9.2";
       sha256 = "1p6adknahl357cjkfg32aha6v79mwwr55isgl4hj2rh45r429qw2";
       libraryHaskellDepends = [
         aeson aeson-qq base bytestring case-insensitive hspec-wai
         template-haskell
       ];
       testHaskellDepends = [ base hspec hspec-wai ];
       homepage = "https://github.com/hspec/hspec-wai#readme";
       description = "Testing JSON APIs with hspec-wai";
       license = stdenv.lib.licenses.mit;
     }) {};
  "hstatsd" = callPackage
    ({ mkDerivation, base, bytestring, mtl, network, text }:
     mkDerivation {
       pname = "hstatsd";
       version = "0.1";
       sha256 = "092q52yyb1xdji1y72bdcgvp8by2w1z9j717sl1gmh2p89cpjrs4";
       libraryHaskellDepends = [ base bytestring mtl network text ];
       homepage = "https://github.com/mokus0/hstatsd";
       description = "Quick and dirty statsd interface";
       license = stdenv.lib.licenses.publicDomain;
     }) {};
  "hsx-jmacro" = callPackage
    ({ mkDerivation, base, hsp, jmacro, mtl, text, wl-pprint-text }:
     mkDerivation {
       pname = "hsx-jmacro";
       version = "7.3.8.1";
       sha256 = "0ndgy5vf5rwgwqya75ny5vbr7hfqwjrdgfgpwf5410bk0603v47i";
       libraryHaskellDepends = [
         base hsp jmacro mtl text wl-pprint-text
       ];
       homepage = "http://www.happstack.com/";
       description = "hsp+jmacro support";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "hsyslog" = callPackage
    ({ mkDerivation, base, Cabal, cabal-doctest, doctest }:
     mkDerivation {
       pname = "hsyslog";
       version = "5.0.1";
       sha256 = "05k0ckgqzjpa3mqamlswi0kpvqxvq40awip0cvhpzjx64240vpl6";
       isLibrary = true;
       isExecutable = true;
       setupHaskellDepends = [ base Cabal cabal-doctest ];
       libraryHaskellDepends = [ base ];
       testHaskellDepends = [ base doctest ];
       homepage = "http://github.com/peti/hsyslog";
       description = "FFI interface to syslog(3) from POSIX.1-2001";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "hsyslog-udp" = callPackage
    ({ mkDerivation, base, bytestring, hspec, hsyslog, network, text
     , time, unix
     }:
     mkDerivation {
       pname = "hsyslog-udp";
       version = "0.2.4";
       sha256 = "1xahxchr1il9naf8kdwdbh1sy5vv4afqkcxfy4993nsk5j7zs586";
       libraryHaskellDepends = [
         base bytestring hsyslog network text time unix
       ];
       testHaskellDepends = [ base hspec time ];
       homepage = "https://github.com/ThoughtLeadr/hsyslog-udp";
       description = "Log to syslog over a network via UDP";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "htaglib" = callPackage
    ({ mkDerivation, base, bytestring, directory, filepath, hspec
     , hspec-discover, taglib, text, transformers
     }:
     mkDerivation {
       pname = "htaglib";
       version = "1.2.0";
       sha256 = "0ph04j1ysjzzrcyllgibzrzfv5g5mgpa6s0ksxww15aryipw65sa";
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [ base bytestring text transformers ];
       librarySystemDepends = [ taglib ];
       testHaskellDepends = [ base directory filepath hspec ];
       testToolDepends = [ hspec-discover ];
       homepage = "https://github.com/mrkkrp/htaglib";
       description = "Bindings to TagLib, audio meta-data library";
       license = stdenv.lib.licenses.bsd3;
     }) {inherit (pkgs) taglib;};
  "html" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "html";
       version = "1.0.1.2";
       sha256 = "0q9hmfii62kc82ijlg238fxrzxhsivn42x5wd6ffcr9xldg4jd8c";
       libraryHaskellDepends = [ base ];
       description = "HTML combinator library";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "html-conduit" = callPackage
    ({ mkDerivation, attoparsec, base, bytestring, conduit
     , conduit-extra, containers, deepseq, hspec, HUnit, resourcet, text
     , transformers, xml-conduit, xml-types
     }:
     mkDerivation {
       pname = "html-conduit";
       version = "1.3.2";
       sha256 = "0l5hc7bf57p5jiqh3wvnqapc27ibnlv00zm6szc0nqbvknzvvz85";
       libraryHaskellDepends = [
         attoparsec base bytestring conduit conduit-extra containers
         resourcet text transformers xml-conduit xml-types
       ];
       testHaskellDepends = [
         base bytestring containers deepseq hspec HUnit text xml-conduit
       ];
       homepage = "https://github.com/snoyberg/xml";
       description = "Parse HTML documents using xml-conduit datatypes";
       license = stdenv.lib.licenses.mit;
     }) {};
  "html-email-validate" = callPackage
    ({ mkDerivation, attoparsec, base, criterion, hspec, QuickCheck
     , regex-pcre-builtin, text
     }:
     mkDerivation {
       pname = "html-email-validate";
       version = "0.2.0.0";
       sha256 = "1bvdmaamxbldb8nndi5f330msj1d0mrj8lapvxqyr333bg3kwaix";
       libraryHaskellDepends = [ attoparsec base text ];
       testHaskellDepends = [
         attoparsec base hspec QuickCheck regex-pcre-builtin text
       ];
       benchmarkHaskellDepends = [ base criterion text ];
       description = "Validating an email address against HTML standard";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "html-entities" = callPackage
    ({ mkDerivation, attoparsec, base, base-prelude, text
     , unordered-containers
     }:
     mkDerivation {
       pname = "html-entities";
       version = "1.1.4.2";
       sha256 = "1ryfslp60s0d0ygmnxfgw9p8s7l2xq1i5kmj86g2ghdljf8hq6hn";
       libraryHaskellDepends = [
         attoparsec base base-prelude text unordered-containers
       ];
       homepage = "https://github.com/nikita-volkov/html-entities";
       description = "A codec library for HTML-escaped text and HTML-entities";
       license = stdenv.lib.licenses.mit;
     }) {};
  "html-entity-map" = callPackage
    ({ mkDerivation, base, criterion, text, unordered-containers }:
     mkDerivation {
       pname = "html-entity-map";
       version = "0.1.0.0";
       sha256 = "0k1l1pbmrfmh44v9cc9ka01bx9xm1x4jabbl675fc5c57v1h0dlq";
       revision = "3";
       editedCabalFile = "0aj61kpf39rhn4d7nk3vwq933b826ywhwklw479y9nkczac5lpz8";
       libraryHaskellDepends = [ base text unordered-containers ];
       benchmarkHaskellDepends = [
         base criterion text unordered-containers
       ];
       homepage = "https://github.com/mrkkrp/html-entity-map";
       description = "Map from HTML5 entity names to the corresponding Unicode text";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "htoml" = callPackage
    ({ mkDerivation, aeson, base, bytestring, containers, criterion
     , file-embed, old-locale, parsec, tasty, tasty-hspec, tasty-hunit
     , text, time, unordered-containers, vector
     }:
     mkDerivation {
       pname = "htoml";
       version = "1.0.0.3";
       sha256 = "0vw59kmwwqcr6ja9rx2q5l7s78n384cl7fdbq1azp03g6a5diy08";
       libraryHaskellDepends = [
         aeson base containers old-locale parsec text time
         unordered-containers vector
       ];
       testHaskellDepends = [
         aeson base bytestring containers file-embed parsec tasty
         tasty-hspec tasty-hunit text time unordered-containers vector
       ];
       benchmarkHaskellDepends = [
         aeson base containers criterion parsec text time
         unordered-containers vector
       ];
       homepage = "https://github.com/cies/htoml";
       description = "Parser for TOML files";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "http-api-data" = callPackage
    ({ mkDerivation, attoparsec, attoparsec-iso8601, base, bytestring
     , Cabal, cabal-doctest, containers, hashable, http-types, text
     , time, time-locale-compat, unordered-containers, uri-bytestring
     , uuid-types
     }:
     mkDerivation {
       pname = "http-api-data";
       version = "0.3.8.1";
       sha256 = "1cq6459b8wz6nvkvpi89dg189n5q2xdq4rdq435hf150555vmskf";
       revision = "1";
       editedCabalFile = "1843bapm2rdkl4941rycryircpqpp7mbal7vgmlikf11f8ws7y7x";
       setupHaskellDepends = [ base Cabal cabal-doctest ];
       libraryHaskellDepends = [
         attoparsec attoparsec-iso8601 base bytestring containers hashable
         http-types text time time-locale-compat unordered-containers
         uri-bytestring uuid-types
       ];
       doCheck = false;
       homepage = "http://github.com/fizruk/http-api-data";
       description = "Converting to/from HTTP API data like URL pieces, headers and query parameters";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "http-client" = callPackage
    ({ mkDerivation, array, async, base, blaze-builder, bytestring
     , case-insensitive, containers, cookie, deepseq, directory
     , exceptions, filepath, ghc-prim, hspec, http-types, memory
     , mime-types, monad-control, network, network-uri, random, stm
     , streaming-commons, text, time, transformers, zlib
     }:
     mkDerivation {
       pname = "http-client";
       version = "0.5.14";
       sha256 = "0irnvrxlsr9f7ybvzbpv24zbq3lhxjzh6bavjnl527020jbl0l4f";
       libraryHaskellDepends = [
         array base blaze-builder bytestring case-insensitive containers
         cookie deepseq exceptions filepath ghc-prim http-types memory
         mime-types network network-uri random stm streaming-commons text
         time transformers
       ];
       testHaskellDepends = [
         async base blaze-builder bytestring case-insensitive containers
         deepseq directory hspec http-types monad-control network
         network-uri streaming-commons text time transformers zlib
       ];
       doCheck = false;
       homepage = "https://github.com/snoyberg/http-client";
       description = "An HTTP client engine";
       license = stdenv.lib.licenses.mit;
     }) {};
  "http-client-openssl" = callPackage
    ({ mkDerivation, base, HsOpenSSL, hspec, http-client, http-types
     , network
     }:
     mkDerivation {
       pname = "http-client-openssl";
       version = "0.2.2.0";
       sha256 = "1ahh2b34cwkmspwg8zilf2llmayf03p33z2gsw455wkhgfbhshcn";
       libraryHaskellDepends = [ base HsOpenSSL http-client network ];
       testHaskellDepends = [
         base HsOpenSSL hspec http-client http-types
       ];
       homepage = "https://github.com/snoyberg/http-client";
       description = "http-client backend using the OpenSSL library";
       license = stdenv.lib.licenses.mit;
     }) {};
  "http-client-tls" = callPackage
    ({ mkDerivation, base, bytestring, case-insensitive, connection
     , containers, cryptonite, data-default-class, exceptions, gauge
     , hspec, http-client, http-types, memory, network, network-uri
     , text, tls, transformers
     }:
     mkDerivation {
       pname = "http-client-tls";
       version = "0.3.5.3";
       sha256 = "0qj3pcpgbsfsc4m52dz35khhl4hf1i0nmcpa445z82d9567vy6j7";
       libraryHaskellDepends = [
         base bytestring case-insensitive connection containers cryptonite
         data-default-class exceptions http-client http-types memory network
         network-uri text tls transformers
       ];
       testHaskellDepends = [
         base connection hspec http-client http-types
       ];
       benchmarkHaskellDepends = [ base gauge http-client ];
       doCheck = false;
       homepage = "https://github.com/snoyberg/http-client";
       description = "http-client backend using the connection package and tls library";
       license = stdenv.lib.licenses.mit;
     }) {};
  "http-common" = callPackage
    ({ mkDerivation, base, base64-bytestring, blaze-builder, bytestring
     , case-insensitive, directory, mtl, network, text, transformers
     , unordered-containers
     }:
     mkDerivation {
       pname = "http-common";
       version = "0.8.2.0";
       sha256 = "14s5a178sb2vm5k00rs21760mds5dz2gs10k9iyn22h01mxyf599";
       libraryHaskellDepends = [
         base base64-bytestring blaze-builder bytestring case-insensitive
         directory mtl network text transformers unordered-containers
       ];
       homepage = "http://research.operationaldynamics.com/projects/http-streams/";
       description = "Common types for HTTP clients and servers";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "http-conduit" = callPackage
    ({ mkDerivation, aeson, base, blaze-builder, bytestring
     , case-insensitive, conduit, conduit-extra, connection, cookie
     , data-default-class, hspec, http-client, http-client-tls
     , http-types, HUnit, mtl, network, resourcet, streaming-commons
     , temporary, text, time, transformers, unliftio, unliftio-core
     , utf8-string, wai, wai-conduit, warp, warp-tls
     }:
     mkDerivation {
       pname = "http-conduit";
       version = "2.3.2";
       sha256 = "1iay4hr0mj8brkxvgkv1liqa8irl9axfc3qhn8qsvcyq4n1l95km";
       revision = "1";
       editedCabalFile = "0g6rg8r33q5rmrx5287vjfcqwjacchgzyfc8aqqrhrfz3fq5ll0g";
       libraryHaskellDepends = [
         aeson base bytestring conduit conduit-extra http-client
         http-client-tls http-types mtl resourcet transformers unliftio-core
       ];
       testHaskellDepends = [
         aeson base blaze-builder bytestring case-insensitive conduit
         conduit-extra connection cookie data-default-class hspec
         http-client http-types HUnit network resourcet streaming-commons
         temporary text time transformers unliftio utf8-string wai
         wai-conduit warp warp-tls
       ];
       homepage = "http://www.yesodweb.com/book/http-conduit";
       description = "HTTP client package with conduit interface and HTTPS support";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "http-date" = callPackage
    ({ mkDerivation, array, attoparsec, base, bytestring, doctest
     , hspec, old-locale, time
     }:
     mkDerivation {
       pname = "http-date";
       version = "0.0.8";
       sha256 = "09slbzqayjnqqz9zybk7slgzvizgplikqgg4b2flzgks91466k0g";
       libraryHaskellDepends = [ array attoparsec base bytestring time ];
       testHaskellDepends = [
         base bytestring doctest hspec old-locale time
       ];
       description = "HTTP Date parser/formatter";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "http-link-header" = callPackage
    ({ mkDerivation, attoparsec, base, bytestring
     , bytestring-conversion, criterion, directory, errors, hspec
     , hspec-attoparsec, http-api-data, network-uri, QuickCheck, text
     , transformers
     }:
     mkDerivation {
       pname = "http-link-header";
       version = "1.0.3.1";
       sha256 = "0b9a3kax6zvn8aaflys63lanqan65hsv0dr8vwhbpbhyvxrxn9ns";
       libraryHaskellDepends = [
         attoparsec base bytestring bytestring-conversion errors
         http-api-data network-uri text
       ];
       testHaskellDepends = [
         base hspec hspec-attoparsec QuickCheck text
       ];
       benchmarkHaskellDepends = [
         base criterion directory network-uri text transformers
       ];
       doCheck = false;
       homepage = "https://github.com/myfreeweb/http-link-header";
       description = "A parser and writer for the HTTP Link header as specified in RFC 5988 \"Web Linking\"";
       license = stdenv.lib.licenses.publicDomain;
     }) {};
  "http-media" = callPackage
    ({ mkDerivation, base, bytestring, case-insensitive, containers
     , QuickCheck, test-framework, test-framework-quickcheck2
     , utf8-string
     }:
     mkDerivation {
       pname = "http-media";
       version = "0.7.1.3";
       sha256 = "0kqjzvh5y8r6x5rw2kgd816w2963c6cbyw2qjvaj2mv59zxzqkrr";
       libraryHaskellDepends = [
         base bytestring case-insensitive containers utf8-string
       ];
       testHaskellDepends = [
         base bytestring case-insensitive containers QuickCheck
         test-framework test-framework-quickcheck2 utf8-string
       ];
       homepage = "https://github.com/zmthy/http-media";
       description = "Processing HTTP Content-Type and Accept headers";
       license = stdenv.lib.licenses.mit;
     }) {};
  "http-reverse-proxy" = callPackage
    ({ mkDerivation, base, blaze-builder, bytestring, case-insensitive
     , conduit, conduit-extra, containers, hspec, http-client
     , http-conduit, http-types, network, resourcet, streaming-commons
     , text, transformers, unliftio, wai, wai-logger, warp, word8
     }:
     mkDerivation {
       pname = "http-reverse-proxy";
       version = "0.6.0";
       sha256 = "1a6i5njf85b2lhg8m83njagcf09wih5q2irnyb2890s724qr277v";
       libraryHaskellDepends = [
         base blaze-builder bytestring case-insensitive conduit
         conduit-extra containers http-client http-types network resourcet
         streaming-commons text transformers unliftio wai wai-logger word8
       ];
       testHaskellDepends = [
         base blaze-builder bytestring conduit conduit-extra hspec
         http-conduit http-types network resourcet streaming-commons
         transformers unliftio wai warp
       ];
       homepage = "https://github.com/fpco/http-reverse-proxy";
       description = "Reverse proxy HTTP requests, either over raw sockets or with WAI";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "http-streams" = callPackage
    ({ mkDerivation, aeson, attoparsec, base, base64-bytestring
     , blaze-builder, bytestring, Cabal, case-insensitive, directory
     , HsOpenSSL, http-common, io-streams, mtl, network, network-uri
     , openssl-streams, text, transformers, unordered-containers
     }:
     mkDerivation {
       pname = "http-streams";
       version = "0.8.6.1";
       sha256 = "18vxd35n7s3z4gjvad94bknc8z1w9d7ccgphnhsxlz5cackizmxq";
       setupHaskellDepends = [ base Cabal ];
       libraryHaskellDepends = [
         aeson attoparsec base base64-bytestring blaze-builder bytestring
         case-insensitive directory HsOpenSSL http-common io-streams mtl
         network network-uri openssl-streams text transformers
         unordered-containers
       ];
       doCheck = false;
       homepage = "https://github.com/afcowie/http-streams/";
       description = "An HTTP client using io-streams";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "http-types" = callPackage
    ({ mkDerivation, array, base, bytestring, case-insensitive, doctest
     , hspec, QuickCheck, quickcheck-instances, text
     }:
     mkDerivation {
       pname = "http-types";
       version = "0.12.2";
       sha256 = "01ck5wmzvl5cqd3w2kwkrmp18n78474a3lngk6ry28w9pbbh4caj";
       libraryHaskellDepends = [
         array base bytestring case-insensitive text
       ];
       testHaskellDepends = [
         base bytestring doctest hspec QuickCheck quickcheck-instances text
       ];
       homepage = "https://github.com/aristidb/http-types";
       description = "Generic HTTP types for Haskell (for both client and server code)";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "http2" = callPackage
    ({ mkDerivation, aeson, aeson-pretty, array, base, bytestring
     , case-insensitive, containers, criterion, directory, doctest
     , filepath, Glob, heaps, hex, hspec, mwc-random, network-byte-order
     , psqueues, stm, text, unordered-containers, vector, word8
     }:
     mkDerivation {
       pname = "http2";
       version = "1.6.4";
       sha256 = "0rhy7z67bmbb15kxq9fmpgvqmc3npsbf1ym04cg07ymq9ihxvjig";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         array base bytestring case-insensitive containers
         network-byte-order psqueues stm
       ];
       testHaskellDepends = [
         aeson aeson-pretty array base bytestring case-insensitive
         containers directory doctest filepath Glob hex hspec
         network-byte-order psqueues stm text unordered-containers vector
         word8
       ];
       benchmarkHaskellDepends = [
         array base bytestring case-insensitive containers criterion heaps
         mwc-random network-byte-order psqueues stm
       ];
       homepage = "https://github.com/kazu-yamamoto/http2";
       description = "HTTP/2 library including frames, priority queues and HPACK";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "httpd-shed" = callPackage
    ({ mkDerivation, base, network, network-uri }:
     mkDerivation {
       pname = "httpd-shed";
       version = "0.4.0.3";
       sha256 = "064jy1mqhnf1hvq6s04wlhmp916rd522x58djb9qixv13vc8gzxh";
       revision = "2";
       editedCabalFile = "12y9qf8s0aq4dc80wrvh14cjvvm4mcygrqq72w4z8w9n8mp8jg9p";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [ base network network-uri ];
       description = "A simple web-server with an interact style API";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "human-readable-duration" = callPackage
    ({ mkDerivation, base, criterion, doctest, Glob }:
     mkDerivation {
       pname = "human-readable-duration";
       version = "0.2.1.2";
       sha256 = "142ng2395pa9lcllb0sh8n974d58r4ny05nlsj6y3gd04prdwlk5";
       libraryHaskellDepends = [ base ];
       testHaskellDepends = [ base doctest Glob ];
       benchmarkHaskellDepends = [ base criterion ];
       homepage = "https://gitlab.esy.fun/yogsototh/human-readable-duration#readme";
       description = "Provide duration helper";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "hunit-dejafu" = callPackage
    ({ mkDerivation, base, dejafu, exceptions, HUnit }:
     mkDerivation {
       pname = "hunit-dejafu";
       version = "1.2.0.6";
       sha256 = "10zndwkgpliyycyynfd34nhzplfhs9cychpznzzcwbpckx3w5ajl";
       libraryHaskellDepends = [ base dejafu exceptions HUnit ];
       homepage = "https://github.com/barrucadu/dejafu";
       description = "Deja Fu support for the HUnit test framework";
       license = stdenv.lib.licenses.mit;
     }) {};
  "hvect" = callPackage
    ({ mkDerivation, base, hspec }:
     mkDerivation {
       pname = "hvect";
       version = "0.4.0.0";
       sha256 = "1dihbqfjwgd92khlrc8mwjxsjbwbassma3bxg8hqr7qqgwdfyl6b";
       libraryHaskellDepends = [ base ];
       testHaskellDepends = [ base hspec ];
       homepage = "https://github.com/agrafix/hvect";
       description = "Simple strict heterogeneous lists";
       license = stdenv.lib.licenses.mit;
     }) {};
  "hvega" = callPackage
    ({ mkDerivation, aeson, base, text, vector }:
     mkDerivation {
       pname = "hvega";
       version = "0.1.0.3";
       sha256 = "0hh5izmw6ss4yznr665674p48lwxgzf3kspl86sy4sfrbab5jxqa";
       libraryHaskellDepends = [ aeson base text vector ];
       homepage = "https://github.com/DougBurke/hvega";
       description = "Create Vega and Vega-Lite visualizations";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "hw-balancedparens" = callPackage
    ({ mkDerivation, base, criterion, hspec, hw-bits, hw-excess
     , hw-prim, hw-rankselect-base, QuickCheck, vector
     }:
     mkDerivation {
       pname = "hw-balancedparens";
       version = "0.2.0.2";
       sha256 = "0paphyp5icawflbybm40mn8r9ka7a6x128vwqagpiz6mb5zpa8hn";
       libraryHaskellDepends = [
         base hw-bits hw-excess hw-prim hw-rankselect-base vector
       ];
       testHaskellDepends = [
         base hspec hw-bits hw-prim hw-rankselect-base QuickCheck vector
       ];
       benchmarkHaskellDepends = [
         base criterion hw-bits hw-prim vector
       ];
       homepage = "http://github.com/haskell-works/hw-balancedparens#readme";
       description = "Balanced parentheses";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "hw-bits" = callPackage
    ({ mkDerivation, base, bytestring, hedgehog, hspec
     , hw-hspec-hedgehog, hw-int, hw-prim, hw-string-parse, QuickCheck
     , safe, vector
     }:
     mkDerivation {
       pname = "hw-bits";
       version = "0.7.0.5";
       sha256 = "1p3bqkzsmmz66chrwykj8pawgg7m5dvzsqmr9lrsdxldgqq62i8s";
       libraryHaskellDepends = [
         base bytestring hw-int hw-prim hw-string-parse safe vector
       ];
       testHaskellDepends = [
         base bytestring hedgehog hspec hw-hspec-hedgehog hw-prim QuickCheck
         vector
       ];
       homepage = "http://github.com/haskell-works/hw-bits#readme";
       description = "Bit manipulation";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "hw-conduit" = callPackage
    ({ mkDerivation, array, base, bytestring, conduit
     , conduit-combinators, criterion, hspec, mmap, time, transformers
     , unliftio-core, vector, word8
     }:
     mkDerivation {
       pname = "hw-conduit";
       version = "0.2.0.5";
       sha256 = "00fpinpafvrdkmk6gksqd9v6f3lzrqcg79yja0h55gw7qjz5lz84";
       libraryHaskellDepends = [
         array base bytestring conduit conduit-combinators time transformers
         unliftio-core word8
       ];
       testHaskellDepends = [ base bytestring conduit hspec ];
       benchmarkHaskellDepends = [
         base bytestring conduit criterion mmap vector
       ];
       homepage = "http://github.com/haskell-works/hw-conduit#readme";
       description = "Conduits for tokenizing streams";
       license = stdenv.lib.licenses.mit;
     }) {};
  "hw-diagnostics" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "hw-diagnostics";
       version = "0.0.0.5";
       sha256 = "0cfrgcjj7c2bi5l4qan23ipylfa73qh19xc9x03sbia6qh0yrsjw";
       libraryHaskellDepends = [ base ];
       homepage = "http://github.com/haskell-works/hw-diagnostics#readme";
       description = "Diagnostics library";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "hw-excess" = callPackage
    ({ mkDerivation, base, hspec, hw-bits, hw-prim, hw-rankselect-base
     , QuickCheck, safe, vector
     }:
     mkDerivation {
       pname = "hw-excess";
       version = "0.2.0.2";
       sha256 = "1xm1nwab2zhlyd0n536pd5sny4miqr8p41pasl9mqvg89v6x0db7";
       libraryHaskellDepends = [
         base hw-bits hw-prim hw-rankselect-base safe vector
       ];
       testHaskellDepends = [
         base hspec hw-bits hw-prim QuickCheck vector
       ];
       homepage = "http://github.com/haskell-works/hw-excess#readme";
       description = "Excess";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "hw-fingertree-strict" = callPackage
    ({ mkDerivation, base, deepseq, hedgehog, hspec, HUnit
     , hw-hspec-hedgehog, QuickCheck, test-framework
     , test-framework-hunit, test-framework-quickcheck2
     }:
     mkDerivation {
       pname = "hw-fingertree-strict";
       version = "0.1.1.1";
       sha256 = "0s0jz6lynxiaz2h8hr78j05vhswrl6vwhmvdra9a46c3yg7vf9qi";
       libraryHaskellDepends = [ base deepseq ];
       testHaskellDepends = [
         base hedgehog hspec HUnit hw-hspec-hedgehog QuickCheck
         test-framework test-framework-hunit test-framework-quickcheck2
       ];
       homepage = "https://github.com/haskell-works/hw-fingertree-strict#readme";
       description = "Generic strict finger-tree structure";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "hw-hedgehog" = callPackage
    ({ mkDerivation, base, hedgehog, vector }:
     mkDerivation {
       pname = "hw-hedgehog";
       version = "0.1.0.2";
       sha256 = "0fk5qgn011j7cb75xi434vk0vq4bl8w9lrs6hpf45c8mv4c48vby";
       libraryHaskellDepends = [ base hedgehog vector ];
       testHaskellDepends = [ base ];
       homepage = "https://github.com/haskell-works/hw-hedgehog#readme";
       description = "Extra hedgehog functionality";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "hw-hspec-hedgehog" = callPackage
    ({ mkDerivation, base, call-stack, hedgehog, hspec, HUnit
     , transformers
     }:
     mkDerivation {
       pname = "hw-hspec-hedgehog";
       version = "0.1.0.5";
       sha256 = "0kznqpliqnahyayi1q08mfz4qwhqvz54hb8cv6r2ps3lyjnpmlfk";
       revision = "2";
       editedCabalFile = "0rnmwi88yj0xdnywwzswhcwgs6pj5s1m3vpgvbz31r4jpz8mvfkh";
       libraryHaskellDepends = [
         base call-stack hedgehog hspec HUnit transformers
       ];
       testHaskellDepends = [ base hedgehog hspec ];
       homepage = "https://github.com/haskell-works/hw-hspec-hedgehog#readme";
       description = "Interoperability between hspec and hedgehog";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "hw-int" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "hw-int";
       version = "0.0.0.3";
       sha256 = "0gsaimfx7gg39yfj2n6mlszri5x06f14b8f9cs12klrq2q8sadl3";
       libraryHaskellDepends = [ base ];
       homepage = "http://github.com/haskell-works/hw-int#readme";
       description = "Integers";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "hw-ip" = callPackage
    ({ mkDerivation, base, hedgehog, hspec, hw-hspec-hedgehog }:
     mkDerivation {
       pname = "hw-ip";
       version = "0.1.0.0";
       sha256 = "1gw0g6xd6q2rbnpb8j2yi8ddq39r2l8rplx8nfwk9mqzpgxx0r1n";
       libraryHaskellDepends = [ base ];
       testHaskellDepends = [ base hedgehog hspec hw-hspec-hedgehog ];
       homepage = "https://github.com/haskell-works/hw-ip#readme";
       description = "Library for manipulating IP addresses and CIDR blocks";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "hw-json" = callPackage
    ({ mkDerivation, ansi-wl-pprint, array, attoparsec, base
     , bytestring, conduit, containers, criterion, dlist, hspec
     , hw-balancedparens, hw-bits, hw-conduit, hw-diagnostics, hw-mquery
     , hw-parser, hw-prim, hw-rankselect, hw-rankselect-base, mmap
     , mono-traversable, parsec, QuickCheck, resourcet, text
     , transformers, vector, word8
     }:
     mkDerivation {
       pname = "hw-json";
       version = "0.6.0.0";
       sha256 = "1na1xcgnnig27cv1v773jr7mv5izv8n1dnf6k3irw9rml3l213mv";
       revision = "2";
       editedCabalFile = "0ygq95nx4sb70l5kfxlsj6rf2b3ry84ixby567n0jk1g0zks3z7s";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         ansi-wl-pprint array attoparsec base bytestring conduit containers
         dlist hw-balancedparens hw-bits hw-conduit hw-mquery hw-parser
         hw-prim hw-rankselect hw-rankselect-base mmap mono-traversable
         resourcet text vector word8
       ];
       executableHaskellDepends = [
         ansi-wl-pprint array attoparsec base bytestring conduit containers
         criterion dlist hw-balancedparens hw-bits hw-conduit hw-diagnostics
         hw-mquery hw-parser hw-prim hw-rankselect hw-rankselect-base mmap
         mono-traversable resourcet text vector word8
       ];
       testHaskellDepends = [
         attoparsec base bytestring conduit containers hspec
         hw-balancedparens hw-bits hw-conduit hw-prim hw-rankselect
         hw-rankselect-base mmap parsec QuickCheck resourcet transformers
         vector
       ];
       benchmarkHaskellDepends = [
         base bytestring conduit criterion hw-balancedparens hw-bits
         hw-conduit hw-prim hw-rankselect hw-rankselect-base mmap resourcet
         vector
       ];
       homepage = "http://github.com/haskell-works/hw-json#readme";
       description = "Memory efficient JSON parser";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "hw-mquery" = callPackage
    ({ mkDerivation, ansi-wl-pprint, base, dlist, hspec, QuickCheck }:
     mkDerivation {
       pname = "hw-mquery";
       version = "0.1.0.1";
       sha256 = "0g8i7vlb0xhmcwdkvakmr6j7hy8gfyil4w0vnygshmqb96qaajkj";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [ ansi-wl-pprint base dlist ];
       executableHaskellDepends = [ base ];
       testHaskellDepends = [ base hspec QuickCheck ];
       homepage = "http://github.com/haskell-works/hw-mquery#readme";
       description = "Conduits for tokenizing streams";
       license = stdenv.lib.licenses.mit;
     }) {};
  "hw-parser" = callPackage
    ({ mkDerivation, attoparsec, base, bytestring, hw-prim
     , mono-traversable, text
     }:
     mkDerivation {
       pname = "hw-parser";
       version = "0.0.0.3";
       sha256 = "1wn68s00smwnivi813jcb71mx095v1kjgd2253gqknpmdv3ig16x";
       libraryHaskellDepends = [
         attoparsec base bytestring hw-prim mono-traversable text
       ];
       homepage = "http://github.com/haskell-works/hw-parser#readme";
       description = "Simple parser support";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "hw-prim" = callPackage
    ({ mkDerivation, base, bytestring, criterion, directory, exceptions
     , hedgehog, hspec, hw-hspec-hedgehog, mmap, QuickCheck, semigroups
     , transformers, vector
     }:
     mkDerivation {
       pname = "hw-prim";
       version = "0.6.2.22";
       sha256 = "16dfajzylki7g7p8q2a79dvx3xymxkrpckajdks9k3q4rxsc6k0i";
       libraryHaskellDepends = [
         base bytestring mmap semigroups transformers vector
       ];
       testHaskellDepends = [
         base bytestring directory exceptions hedgehog hspec
         hw-hspec-hedgehog mmap QuickCheck semigroups transformers vector
       ];
       benchmarkHaskellDepends = [
         base bytestring criterion mmap semigroups transformers vector
       ];
       homepage = "http://github.com/haskell-works/hw-prim#readme";
       description = "Primitive functions and data types";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "hw-rankselect" = callPackage
    ({ mkDerivation, base, bytestring, conduit, criterion, deepseq
     , directory, hedgehog, hspec, hw-balancedparens, hw-bits
     , hw-hedgehog, hw-hspec-hedgehog, hw-prim, hw-rankselect-base, mmap
     , QuickCheck, resourcet, vector
     }:
     mkDerivation {
       pname = "hw-rankselect";
       version = "0.10.0.3";
       sha256 = "1jqlyprb83bnffmq6ck6xpx27mqnmrarn890r2dn8k06asghf7da";
       revision = "1";
       editedCabalFile = "1rkni89h3sq02y03phb2bgx4yrx4gly9mzan6r4ziph0qayf09wf";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         base deepseq hw-balancedparens hw-bits hw-prim hw-rankselect-base
         vector
       ];
       executableHaskellDepends = [
         base directory hw-bits hw-prim hw-rankselect-base mmap vector
       ];
       testHaskellDepends = [
         base directory hedgehog hspec hw-bits hw-hedgehog hw-hspec-hedgehog
         hw-prim hw-rankselect-base mmap QuickCheck vector
       ];
       benchmarkHaskellDepends = [
         base bytestring conduit criterion directory hw-bits hw-prim
         hw-rankselect-base mmap resourcet vector
       ];
       homepage = "http://github.com/haskell-works/hw-rankselect#readme";
       description = "Rank-select";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "hw-rankselect-base" = callPackage
    ({ mkDerivation, base, bits-extra, criterion, hedgehog, hspec
     , hw-bits, hw-hedgehog, hw-hspec-hedgehog, hw-int, hw-prim
     , hw-string-parse, QuickCheck, safe, vector
     }:
     mkDerivation {
       pname = "hw-rankselect-base";
       version = "0.3.2.1";
       sha256 = "0q4kywln4bls2dvazhqh2acw4yqnabnx0mdkhldgg70q8amnq2nj";
       libraryHaskellDepends = [
         base bits-extra hw-bits hw-int hw-prim hw-string-parse safe vector
       ];
       testHaskellDepends = [
         base bits-extra hedgehog hspec hw-bits hw-hedgehog
         hw-hspec-hedgehog hw-prim QuickCheck vector
       ];
       benchmarkHaskellDepends = [
         base bits-extra criterion hw-bits hw-prim vector
       ];
       homepage = "http://github.com/haskell-works/hw-rankselect-base#readme";
       description = "Rank-select base";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "hw-string-parse" = callPackage
    ({ mkDerivation, base, bytestring, hspec, QuickCheck, vector }:
     mkDerivation {
       pname = "hw-string-parse";
       version = "0.0.0.4";
       sha256 = "1dzjx6virpikbqnpzdjlliakm8kd6kxyn3y4jgr5bqhisgwfp8b4";
       libraryHaskellDepends = [ base ];
       testHaskellDepends = [ base bytestring hspec QuickCheck vector ];
       homepage = "http://github.com/haskell-works/hw-string-parse#readme";
       description = "String parser";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "hw-succinct" = callPackage
    ({ mkDerivation, attoparsec, base, bytestring, conduit, containers
     , hw-balancedparens, hw-bits, hw-prim, hw-rankselect
     , hw-rankselect-base, mmap, mono-traversable, text, vector, word8
     }:
     mkDerivation {
       pname = "hw-succinct";
       version = "0.1.0.1";
       sha256 = "1ns96y77r7pa7pv6p7v24m0w2xw7451skcl9y2z3r8zp3y65fb00";
       libraryHaskellDepends = [
         attoparsec base bytestring conduit containers hw-balancedparens
         hw-bits hw-prim hw-rankselect hw-rankselect-base mmap
         mono-traversable text vector word8
       ];
       homepage = "http://github.com/haskell-works/hw-succinct#readme";
       description = "Succint datastructures";
       license = stdenv.lib.licenses.mit;
     }) {};
  "hw-xml" = callPackage
    ({ mkDerivation, ansi-wl-pprint, array, attoparsec, base
     , bytestring, cereal, conduit, containers, criterion, deepseq
     , ghc-prim, hspec, hw-balancedparens, hw-bits, hw-conduit
     , hw-parser, hw-prim, hw-rankselect, hw-rankselect-base, lens, mmap
     , mtl, QuickCheck, resourcet, transformers, vector, word8
     }:
     mkDerivation {
       pname = "hw-xml";
       version = "0.1.0.3";
       sha256 = "15vycayfmykds6dka0kw106fjk2wg3qgifk698fwkj1i4chsia97";
       isLibrary = true;
       isExecutable = true;
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [
         ansi-wl-pprint array attoparsec base bytestring cereal conduit
         containers deepseq ghc-prim hw-balancedparens hw-bits hw-conduit
         hw-parser hw-prim hw-rankselect hw-rankselect-base lens mtl
         resourcet transformers vector word8
       ];
       executableHaskellDepends = [
         base bytestring hw-balancedparens hw-bits hw-prim hw-rankselect
         vector
       ];
       testHaskellDepends = [
         attoparsec base bytestring conduit hspec hw-balancedparens hw-bits
         hw-conduit hw-prim hw-rankselect hw-rankselect-base QuickCheck
         vector
       ];
       benchmarkHaskellDepends = [
         base bytestring conduit criterion hw-balancedparens hw-bits
         hw-conduit hw-prim mmap resourcet vector
       ];
       homepage = "http://github.com/haskell-works/hw-xml#readme";
       description = "Conduits for tokenizing streams";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "hweblib" = callPackage
    ({ mkDerivation, attoparsec, base, bytestring, containers
     , criterion, HUnit, mtl, text, transformers
     }:
     mkDerivation {
       pname = "hweblib";
       version = "0.6.3";
       sha256 = "03dmx5irlsyb3b9zg2r6nz947sslizkn0nlk65ldb5n4m8my33hy";
       libraryHaskellDepends = [
         attoparsec base bytestring containers mtl text transformers
       ];
       testHaskellDepends = [
         attoparsec base bytestring containers HUnit mtl transformers
       ];
       benchmarkHaskellDepends = [
         attoparsec base bytestring containers criterion HUnit mtl
         transformers
       ];
       doCheck = false;
       homepage = "http://github.com/aycanirican/hweblib";
       description = "Haskell Web Library";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "hworker" = callPackage
    ({ mkDerivation, aeson, attoparsec, base, bytestring, hedis, hspec
     , hspec-contrib, HUnit, text, time, uuid
     }:
     mkDerivation {
       pname = "hworker";
       version = "0.1.0.1";
       sha256 = "079z4ahnbwibhy15jm3ymfzbfxgwy7f2l1raq06sp47ip16wrjrl";
       revision = "1";
       editedCabalFile = "0w2bpvfr68n2qipvr8gc5096dain3g2536m4n9kqx1fahf12mwy5";
       libraryHaskellDepends = [
         aeson attoparsec base bytestring hedis text time uuid
       ];
       testHaskellDepends = [
         aeson attoparsec base bytestring hedis hspec hspec-contrib HUnit
         text time uuid
       ];
       doCheck = false;
       homepage = "http://github.com/dbp/hworker";
       description = "A reliable at-least-once job queue built on top of redis";
       license = stdenv.lib.licenses.isc;
     }) {};
  "hxt" = callPackage
    ({ mkDerivation, base, binary, bytestring, containers, deepseq
     , directory, filepath, hxt-charproperties, hxt-regex-xmlschema
     , hxt-unicode, mtl, network-uri, parsec
     }:
     mkDerivation {
       pname = "hxt";
       version = "9.3.1.16";
       sha256 = "1qq3ykgn355rx242xjcbqqksgvwr6k2fdj5phw4iv28qqxff6m8d";
       configureFlags = [ "-fnetwork-uri" ];
       libraryHaskellDepends = [
         base binary bytestring containers deepseq directory filepath
         hxt-charproperties hxt-regex-xmlschema hxt-unicode mtl network-uri
         parsec
       ];
       homepage = "https://github.com/UweSchmidt/hxt";
       description = "A collection of tools for processing XML with Haskell";
       license = stdenv.lib.licenses.mit;
     }) {};
  "hxt-charproperties" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "hxt-charproperties";
       version = "9.2.0.1";
       sha256 = "1mml8wglvagqq891rchgli6r8rnkwrqhgsxfl6kb5403pzb18rp4";
       libraryHaskellDepends = [ base ];
       homepage = "https://github.com/UweSchmidt/hxt";
       description = "Character properties and classes for XML and Unicode";
       license = stdenv.lib.licenses.mit;
     }) {};
  "hxt-css" = callPackage
    ({ mkDerivation, base, hxt, parsec, split }:
     mkDerivation {
       pname = "hxt-css";
       version = "0.1.0.3";
       sha256 = "1dv5xy0rhcs08zyfnmf752h026r2kfg9905d482xy8srblagqi02";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [ base hxt parsec split ];
       homepage = "https://github.com/redneb/hxt-css";
       description = "CSS selectors for HXT";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "hxt-curl" = callPackage
    ({ mkDerivation, base, bytestring, curl, hxt, parsec }:
     mkDerivation {
       pname = "hxt-curl";
       version = "9.1.1.1";
       sha256 = "1sn5ngzz5qszdb3anbpqbjdijz29gmrwjrg9vsmrqsdqz65wrhfd";
       libraryHaskellDepends = [ base bytestring curl hxt parsec ];
       homepage = "https://github.com/UweSchmidt/hxt";
       description = "LibCurl interface for HXT";
       license = "unknown";
       hydraPlatforms = stdenv.lib.platforms.none;
     }) {};
  "hxt-expat" = callPackage
    ({ mkDerivation, base, bytestring, hexpat, hxt }:
     mkDerivation {
       pname = "hxt-expat";
       version = "9.1.1";
       sha256 = "1mi2f2i31nqjqzwl82iypm1qngrpxp7lz506pjgqfbn840yc9n8h";
       libraryHaskellDepends = [ base bytestring hexpat hxt ];
       homepage = "http://www.fh-wedel.de/~si/HXmlToolbox/index.html";
       description = "Expat parser for HXT";
       license = "unknown";
       hydraPlatforms = stdenv.lib.platforms.none;
     }) {};
  "hxt-http" = callPackage
    ({ mkDerivation, base, bytestring, HTTP, hxt, network, network-uri
     , parsec
     }:
     mkDerivation {
       pname = "hxt-http";
       version = "9.1.5.2";
       sha256 = "02yxvzczv89j518b94wh8m4dsmnymzxgv9158m7w6lqxk41rv8bg";
       configureFlags = [ "-fnetwork-uri" ];
       libraryHaskellDepends = [
         base bytestring HTTP hxt network network-uri parsec
       ];
       homepage = "https://github.com/UweSchmidt/hxt";
       description = "Interface to native Haskell HTTP package HTTP";
       license = stdenv.lib.licenses.mit;
     }) {};
  "hxt-pickle-utils" = callPackage
    ({ mkDerivation, base, hxt, mtl }:
     mkDerivation {
       pname = "hxt-pickle-utils";
       version = "0.1.0.3";
       sha256 = "1id9459yphsbxqa0z89dhsmqqcgvk2axv91d05aw3n6r4ygs3nwx";
       revision = "3";
       editedCabalFile = "0d5fg718y7xzw76ip33q0w1liqk70q9074qkd198mjnijxjcrkf3";
       libraryHaskellDepends = [ base hxt mtl ];
       homepage = "https://github.com/silkapp/hxt-pickle-utils";
       description = "Utility functions for using HXT picklers";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "hxt-regex-xmlschema" = callPackage
    ({ mkDerivation, base, bytestring, criterion, deepseq, HUnit
     , hxt-charproperties, parsec, text
     }:
     mkDerivation {
       pname = "hxt-regex-xmlschema";
       version = "9.2.0.3";
       sha256 = "1c4jr0439f5yc05h7iz53fa47g6l2wrvqp6gvwf01mlqajk3nx7l";
       libraryHaskellDepends = [
         base bytestring hxt-charproperties parsec text
       ];
       testHaskellDepends = [ base bytestring HUnit parsec text ];
       benchmarkHaskellDepends = [
         base bytestring criterion deepseq parsec text
       ];
       homepage = "http://www.haskell.org/haskellwiki/Regular_expressions_for_XML_Schema";
       description = "A regular expression library for W3C XML Schema regular expressions";
       license = stdenv.lib.licenses.mit;
     }) {};
  "hxt-tagsoup" = callPackage
    ({ mkDerivation, base, hxt, hxt-charproperties, hxt-unicode
     , tagsoup
     }:
     mkDerivation {
       pname = "hxt-tagsoup";
       version = "9.1.4";
       sha256 = "10xj8jqxazfxzazc1ln9w2blp67rafbwdi87ba7arw5ccc6jjyyp";
       libraryHaskellDepends = [
         base hxt hxt-charproperties hxt-unicode tagsoup
       ];
       homepage = "https://github.com/UweSchmidt/hxt";
       description = "TagSoup parser for HXT";
       license = "unknown";
       hydraPlatforms = stdenv.lib.platforms.none;
     }) {};
  "hxt-unicode" = callPackage
    ({ mkDerivation, base, hxt-charproperties }:
     mkDerivation {
       pname = "hxt-unicode";
       version = "9.0.2.4";
       sha256 = "0rj48cy8z4fl3zpg5bpa458kqr83adav6jnqv4i71dclpprj6n3v";
       libraryHaskellDepends = [ base hxt-charproperties ];
       homepage = "https://github.com/UweSchmidt/hxt";
       description = "Unicode en-/decoding functions for utf8, iso-latin-* and other encodings";
       license = stdenv.lib.licenses.mit;
     }) {};
  "hybrid-vectors" = callPackage
    ({ mkDerivation, base, deepseq, primitive, semigroups, vector }:
     mkDerivation {
       pname = "hybrid-vectors";
       version = "0.2.2";
       sha256 = "1mw69xjdncj6kqa2mvag8xc79y4jijnh2qg6ahrhifb4vxqw7ij1";
       libraryHaskellDepends = [
         base deepseq primitive semigroups vector
       ];
       homepage = "http://github.com/ekmett/hybrid-vectors";
       description = "Hybrid vectors e.g. Mixed Boxed/Unboxed vectors";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "hyperloglog" = callPackage
    ({ mkDerivation, approximate, base, binary, bits, bytes, Cabal
     , cabal-doctest, cereal, cereal-vector, comonad, deepseq, directory
     , distributive, doctest, filepath, generic-deriving, hashable, lens
     , reflection, safecopy, semigroupoids, semigroups, simple-reflect
     , siphash, tagged, vector
     }:
     mkDerivation {
       pname = "hyperloglog";
       version = "0.4.2";
       sha256 = "0j0hbzpap3f92kvywsxjahxmqrdj51275jdv0h7f9lf9qby3rf7m";
       setupHaskellDepends = [ base Cabal cabal-doctest ];
       libraryHaskellDepends = [
         approximate base binary bits bytes cereal cereal-vector comonad
         deepseq distributive hashable lens reflection safecopy
         semigroupoids semigroups siphash tagged vector
       ];
       testHaskellDepends = [
         base directory doctest filepath generic-deriving semigroups
         simple-reflect
       ];
       homepage = "http://github.com/analytics/hyperloglog";
       description = "An approximate streaming (constant space) unique object counter";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "hyphenation" = callPackage
    ({ mkDerivation, base, bytestring, Cabal, cabal-doctest, containers
     , doctest, unordered-containers, zlib
     }:
     mkDerivation {
       pname = "hyphenation";
       version = "0.7.1";
       sha256 = "1h5i07v2zlka29dj4zysc47p747j88x6z4zm3zwcr5i8yirm0p52";
       revision = "4";
       editedCabalFile = "0pp7qm40alsfd9z5dvp6l2c7dp9zp0skl9g0iib3jahxs3n8qcrr";
       enableSeparateDataOutput = true;
       setupHaskellDepends = [ base Cabal cabal-doctest ];
       libraryHaskellDepends = [
         base bytestring containers unordered-containers zlib
       ];
       testHaskellDepends = [
         base containers doctest unordered-containers
       ];
       homepage = "http://github.com/ekmett/hyphenation";
       description = "Configurable Knuth-Liang hyphenation";
       license = stdenv.lib.licenses.bsd2;
     }) {};
  "hyraxAbif" = callPackage
    ({ mkDerivation, base, binary, bytestring, directory, filepath
     , hedgehog, hscolour, pretty-show, protolude, text
     }:
     mkDerivation {
       pname = "hyraxAbif";
       version = "0.2.3.10";
       sha256 = "1x800gx7l3wj0xphip8fhzh9pbhc374p2pgjdvhw5qq5wbxc7r3b";
       revision = "2";
       editedCabalFile = "1dwkqlkjg5hbjlwl7cjxmhg1camhlqpaqjrpmkwknscj76hfckvi";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         base binary bytestring directory filepath protolude text
       ];
       executableHaskellDepends = [
         base bytestring hscolour pretty-show protolude text
       ];
       testHaskellDepends = [
         base binary bytestring hedgehog protolude text
       ];
       homepage = "https://github.com/hyraxbio/hyraxAbif/#readme";
       description = "Modules for parsing, generating and manipulating AB1 files";
       license = "(BSD-3-Clause OR Apache-2.0)";
     }) {};
  "iconv" = callPackage
    ({ mkDerivation, base, bytestring }:
     mkDerivation {
       pname = "iconv";
       version = "0.4.1.3";
       sha256 = "0m5m0ph5im443xcz60wm1zp98bnmf8l1b5gfllxwhjriwdl52hin";
       libraryHaskellDepends = [ base bytestring ];
       description = "String encoding conversion";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "identicon" = callPackage
    ({ mkDerivation, base, bytestring, criterion, hspec, JuicyPixels
     , QuickCheck, random, tf-random
     }:
     mkDerivation {
       pname = "identicon";
       version = "0.2.2";
       sha256 = "0qzj2063sh7phbqyxqxf96avz1zcwd1ry06jdqxwkg55q3yb8y9n";
       revision = "3";
       editedCabalFile = "0vya6zm3nnbdv3wmj3dwqwwjgsagql8q17078knhjddv2lm8m49q";
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [ base bytestring JuicyPixels ];
       testHaskellDepends = [
         base bytestring hspec JuicyPixels QuickCheck
       ];
       benchmarkHaskellDepends = [
         base bytestring criterion JuicyPixels random tf-random
       ];
       homepage = "https://github.com/mrkkrp/identicon";
       description = "Flexible generation of identicons";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "idris" = callPackage
    ({ mkDerivation, aeson, annotated-wl-pprint, ansi-terminal
     , ansi-wl-pprint, array, async, base, base64-bytestring, binary
     , blaze-html, blaze-markup, bytestring, Cabal, cheapskate
     , code-page, containers, deepseq, directory, filepath, fingertree
     , fsnotify, gmp, haskeline, ieee754, libffi, megaparsec, mtl
     , network, optparse-applicative, pretty, process, regex-tdfa, safe
     , split, tagged, tasty, tasty-golden, tasty-rerun, terminal-size
     , text, time, transformers, uniplate, unix, unordered-containers
     , utf8-string, vector, vector-binary-instances, zip-archive
     }:
     mkDerivation {
       pname = "idris";
       version = "1.3.1";
       sha256 = "0fn9h58l592j72njwma1ia48h8h87wi2rjqfxs7j2lfmvgfv18fi";
       configureFlags = [ "-fcurses" "-fexeconly" "-fffi" "-fgmp" ];
       isLibrary = true;
       isExecutable = true;
       enableSeparateDataOutput = true;
       setupHaskellDepends = [ base Cabal directory filepath process ];
       libraryHaskellDepends = [
         aeson annotated-wl-pprint ansi-terminal ansi-wl-pprint array async
         base base64-bytestring binary blaze-html blaze-markup bytestring
         cheapskate code-page containers deepseq directory filepath
         fingertree fsnotify haskeline ieee754 libffi megaparsec mtl network
         optparse-applicative pretty process regex-tdfa safe split
         terminal-size text time transformers uniplate unix
         unordered-containers utf8-string vector vector-binary-instances
         zip-archive
       ];
       librarySystemDepends = [ gmp ];
       executableHaskellDepends = [
         base directory filepath haskeline transformers
       ];
       testHaskellDepends = [
         base bytestring containers directory filepath haskeline
         optparse-applicative process tagged tasty tasty-golden tasty-rerun
         time transformers
       ];
       doCheck = false;
       homepage = "http://www.idris-lang.org/";
       description = "Functional Programming Language with Dependent Types";
       license = stdenv.lib.licenses.bsd3;
     }) {inherit (pkgs) gmp;};
  "ieee754" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "ieee754";
       version = "0.8.0";
       sha256 = "1lcs521g9lzy9d7337vg4w7q7s8500rfqy7rcifcz6pm6yfgyb8f";
       libraryHaskellDepends = [ base ];
       homepage = "http://github.com/patperry/hs-ieee754";
       description = "Utilities for dealing with IEEE floating point numbers";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "if" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "if";
       version = "0.1.0.0";
       sha256 = "078lg8b6n4bhlhh6ax4k4n8k8fk7hiwcnzyr4h9zbq6vczl77xi8";
       libraryHaskellDepends = [ base ];
       homepage = "https://github.com/winterland1989/if";
       description = "(?) and (?>) conditional operator";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "iff" = callPackage
    ({ mkDerivation, base, binary, bytestring }:
     mkDerivation {
       pname = "iff";
       version = "0.0.6";
       sha256 = "0dr8w7lqb1yv4zg8mkqjws215pm5h9zd3n2g6wnpwc41hj04b23b";
       libraryHaskellDepends = [ base binary bytestring ];
       homepage = "http://code.haskell.org/~thielema/iff/";
       description = "Constructing and dissecting IFF files";
       license = "GPL";
     }) {};
  "ihaskell" = callPackage
    ({ mkDerivation, aeson, base, base64-bytestring, bytestring, cereal
     , cmdargs, containers, directory, filepath, ghc, ghc-boot
     , ghc-parser, ghc-paths, haskeline, haskell-src-exts, here, hlint
     , hspec, hspec-contrib, http-client, http-client-tls, HUnit
     , ipython-kernel, mtl, parsec, process, random, setenv, shelly
     , split, stm, strict, system-argv0, text, transformers, unix
     , unordered-containers, utf8-string, uuid, vector
     }:
     mkDerivation {
       pname = "ihaskell";
       version = "0.9.1.0";
       sha256 = "1r71bijgfcsgsymg9aqjkgplg8c9g65zddr7dqf7d3mv2bpb5ain";
       isLibrary = true;
       isExecutable = true;
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [
         aeson base base64-bytestring bytestring cereal cmdargs containers
         directory filepath ghc ghc-boot ghc-parser ghc-paths haskeline
         haskell-src-exts hlint http-client http-client-tls ipython-kernel
         mtl parsec process random shelly split stm strict system-argv0 text
         transformers unix unordered-containers utf8-string uuid vector
       ];
       executableHaskellDepends = [
         aeson base bytestring containers directory ghc ipython-kernel
         process strict text transformers unix
       ];
       testHaskellDepends = [
         base directory ghc ghc-paths here hspec hspec-contrib HUnit setenv
         shelly text transformers
       ];
       doCheck = false;
       homepage = "http://github.com/gibiansky/IHaskell";
       description = "A Haskell backend kernel for the IPython project";
       license = stdenv.lib.licenses.mit;
     }) {};
  "ihaskell-hvega" = callPackage
    ({ mkDerivation, aeson, base, hvega, ihaskell, text }:
     mkDerivation {
       pname = "ihaskell-hvega";
       version = "0.1.0.3";
       sha256 = "0dkqw6hs2388jgghpq5xgdsh3gwvv274axj84nawg2blpqf3d4fb";
       libraryHaskellDepends = [ aeson base hvega ihaskell text ];
       homepage = "https://github.com/DougBurke/hvega";
       description = "IHaskell display instance for hvega types";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "ihs" = callPackage
    ({ mkDerivation, base, process }:
     mkDerivation {
       pname = "ihs";
       version = "0.1.0.3";
       sha256 = "1zfmxgb3l7mihzjyggzb30d9b57y2z80yk562z2x2padsqx95gqk";
       isLibrary = false;
       isExecutable = true;
       executableHaskellDepends = [ base process ];
       doHaddock = false;
       homepage = "https://github.com/minad/ihs";
       description = "Interpolated Haskell";
       license = stdenv.lib.licenses.publicDomain;
     }) {};
  "ilist" = callPackage
    ({ mkDerivation, base, criterion, hspec, lens, loop, transformers
     , vector
     }:
     mkDerivation {
       pname = "ilist";
       version = "0.3.1.0";
       sha256 = "15zy584mjk85kr69acs1r7dfsr7g2mgy2bbfyrla5rbp23fy3678";
       libraryHaskellDepends = [ base ];
       testHaskellDepends = [ base hspec transformers ];
       benchmarkHaskellDepends = [
         base criterion lens loop transformers vector
       ];
       homepage = "http://github.com/aelve/ilist";
       description = "Optimised list functions for doing index-related things";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "imagesize-conduit" = callPackage
    ({ mkDerivation, base, bytestring, conduit, conduit-extra
     , exceptions, hspec, resourcet
     }:
     mkDerivation {
       pname = "imagesize-conduit";
       version = "1.1";
       sha256 = "06dc0453l7n3g05pg118y4smlzkl6p56zazpi4dr41dkg12pii9i";
       revision = "3";
       editedCabalFile = "0p4zmizr01pg3d7gb0q88j1alvvlzbdvzyf1wbgajng68a4g0li9";
       libraryHaskellDepends = [
         base bytestring conduit conduit-extra exceptions
       ];
       testHaskellDepends = [
         base bytestring conduit conduit-extra hspec resourcet
       ];
       homepage = "http://github.com/silkapp/imagesize-conduit";
       description = "Determine the size of some common image formats";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "immortal" = callPackage
    ({ mkDerivation, base, stm, tasty, tasty-hunit, transformers
     , unliftio-core
     }:
     mkDerivation {
       pname = "immortal";
       version = "0.3";
       sha256 = "120znjn7jrmcnzgka8zbiih4g8imh732iivjdzzbpj1kgywrvj0i";
       libraryHaskellDepends = [ base stm unliftio-core ];
       testHaskellDepends = [ base stm tasty tasty-hunit transformers ];
       homepage = "https://github.com/feuerbach/immortal";
       description = "Spawn threads that never die (unless told to do so)";
       license = stdenv.lib.licenses.mit;
     }) {};
  "include-file" = callPackage
    ({ mkDerivation, base, bytestring, criterion, random
     , template-haskell
     }:
     mkDerivation {
       pname = "include-file";
       version = "0.1.0.3";
       sha256 = "0a9xwd5ihrw5z8i8mvfmghdjk9nnhif97jdp7jamyzvivhxiz3r0";
       libraryHaskellDepends = [
         base bytestring random template-haskell
       ];
       testHaskellDepends = [ base bytestring ];
       benchmarkHaskellDepends = [ base bytestring criterion ];
       description = "Inclusion of files in executables at compile-time";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "incremental-parser" = callPackage
    ({ mkDerivation, base, bytestring, checkers, criterion, deepseq
     , monoid-subclasses, QuickCheck, tasty, tasty-quickcheck, text
     }:
     mkDerivation {
       pname = "incremental-parser";
       version = "0.3.2.1";
       sha256 = "07banm2lnrhjvihs0iaij0kqgff198qcbah02s3cjyyl70cmllfr";
       libraryHaskellDepends = [ base monoid-subclasses ];
       testHaskellDepends = [
         base checkers monoid-subclasses QuickCheck tasty tasty-quickcheck
       ];
       benchmarkHaskellDepends = [
         base bytestring criterion deepseq monoid-subclasses text
       ];
       homepage = "https://github.com/blamario/incremental-parser";
       description = "Generic parser library capable of providing partial results from partial input";
       license = stdenv.lib.licenses.gpl3;
     }) {};
  "indentation-core" = callPackage
    ({ mkDerivation, base, mtl }:
     mkDerivation {
       pname = "indentation-core";
       version = "0.0.0.2";
       sha256 = "1l1zk5wz9x0m4ird1qk8shi1fkcm3sq2nwkjj6wz2sicp0xkx6h9";
       libraryHaskellDepends = [ base mtl ];
       homepage = "https://bitbucket.org/adamsmd/indentation";
       description = "Indentation sensitive parsing combinators core library";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "indentation-parsec" = callPackage
    ({ mkDerivation, base, indentation-core, mtl, parsec, tasty
     , tasty-hunit
     }:
     mkDerivation {
       pname = "indentation-parsec";
       version = "0.0.0.2";
       sha256 = "1m7jr1s7h4vrx0lbl88gjrpd6zgzalmqzqsv6rn5s17ay5p88dqf";
       libraryHaskellDepends = [ base indentation-core mtl parsec ];
       testHaskellDepends = [ base parsec tasty tasty-hunit ];
       homepage = "https://bitbucket.org/adamsmd/indentation";
       description = "Indentation sensitive parsing combinators for Parsec";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "indents" = callPackage
    ({ mkDerivation, base, mtl, parsec }:
     mkDerivation {
       pname = "indents";
       version = "0.5.0.0";
       sha256 = "1ly3v41jacc6lrsvg4j3m5a6zs90gr8dyif5m6bf34hj1k5cgg0n";
       libraryHaskellDepends = [ base mtl parsec ];
       doCheck = false;
       homepage = "http://github.com/jaspervdj/indents";
       description = "indentation sensitive parser-combinators for parsec";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "indexed-list-literals" = callPackage
    ({ mkDerivation, base, hspec, Only }:
     mkDerivation {
       pname = "indexed-list-literals";
       version = "0.2.1.2";
       sha256 = "043xl356q9n1nw2bw8a8msymy18d6f7nwcyrrpzak9qr75dsx5nq";
       libraryHaskellDepends = [ base Only ];
       testHaskellDepends = [ base hspec ];
       homepage = "https://github.com/davidm-d/indexed-list-literals";
       description = "Type safe indexed list literals";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "inflections" = callPackage
    ({ mkDerivation, base, containers, exceptions, hspec
     , hspec-megaparsec, megaparsec, QuickCheck, text
     , unordered-containers
     }:
     mkDerivation {
       pname = "inflections";
       version = "0.4.0.3";
       sha256 = "028dj9pgs5g6qb9x1hc8r4rn0rznr1ynn79vln48k2llyf2r38dx";
       libraryHaskellDepends = [
         base exceptions megaparsec text unordered-containers
       ];
       testHaskellDepends = [
         base containers hspec hspec-megaparsec megaparsec QuickCheck text
       ];
       homepage = "https://github.com/stackbuilders/inflections-hs";
       description = "Inflections library for Haskell";
       license = stdenv.lib.licenses.mit;
     }) {};
  "influxdb" = callPackage
    ({ mkDerivation, aeson, attoparsec, base, bytestring, Cabal
     , cabal-doctest, clock, containers, doctest, foldl, http-client
     , http-types, lens, network, optional-args, QuickCheck, scientific
     , tagged, template-haskell, text, time, unordered-containers
     , vector
     }:
     mkDerivation {
       pname = "influxdb";
       version = "1.6.1";
       sha256 = "1hfyp284lpvgy0rqn7rjr7c8z0ah8h0vl3xhfrff8x1z1511n2dp";
       isLibrary = true;
       isExecutable = true;
       setupHaskellDepends = [ base Cabal cabal-doctest ];
       libraryHaskellDepends = [
         aeson attoparsec base bytestring clock containers foldl http-client
         http-types lens network optional-args scientific tagged text time
         unordered-containers vector
       ];
       testHaskellDepends = [ base doctest QuickCheck template-haskell ];
       doCheck = false;
       homepage = "https://github.com/maoe/influxdb-haskell";
       description = "Haskell client library for InfluxDB";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "ini" = callPackage
    ({ mkDerivation, attoparsec, base, text, unordered-containers }:
     mkDerivation {
       pname = "ini";
       version = "0.3.6";
       sha256 = "1n9wsl7nz910bc8jx9ps7pvpql4hlnryjkqbdpfq0phjb9sf7fzw";
       revision = "1";
       editedCabalFile = "0gfikdal67aws20i5r4wg4r0lgn844glykcn3nnmbmyvwsks049l";
       libraryHaskellDepends = [
         attoparsec base text unordered-containers
       ];
       homepage = "http://github.com/chrisdone/ini";
       description = "Quick and easy configuration files in the INI format";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "inline-c" = callPackage
    ({ mkDerivation, ansi-wl-pprint, base, bytestring, containers
     , hashable, hspec, mtl, parsec, parsers, QuickCheck, raw-strings-qq
     , regex-posix, template-haskell, transformers, unordered-containers
     , vector
     }:
     mkDerivation {
       pname = "inline-c";
       version = "0.6.1.0";
       sha256 = "0vbfrsqsi7mdziqsnj68bsqlwbqxxhvrmy9rv6w8z18d1m8w3n6h";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         ansi-wl-pprint base bytestring containers hashable mtl parsec
         parsers template-haskell transformers unordered-containers vector
       ];
       testHaskellDepends = [
         ansi-wl-pprint base containers hashable hspec parsers QuickCheck
         raw-strings-qq regex-posix template-haskell transformers
         unordered-containers vector
       ];
       description = "Write Haskell source files including C code inline. No FFI required.";
       license = stdenv.lib.licenses.mit;
     }) {};
  "inline-java" = callPackage
    ({ mkDerivation, base, bytestring, Cabal, directory, filepath, ghc
     , hspec, jni, jvm, language-java, mtl, process, template-haskell
     , temporary, text
     }:
     mkDerivation {
       pname = "inline-java";
       version = "0.8.4";
       sha256 = "1ddgwhk40g23lc71f8wbbfck9pqymil0syi14wsawc25sx6zb52v";
       libraryHaskellDepends = [
         base bytestring Cabal directory filepath ghc jni jvm language-java
         mtl process template-haskell temporary text
       ];
       testHaskellDepends = [ base hspec jni jvm text ];
       homepage = "http://github.com/tweag/inline-java#readme";
       description = "Java interop via inline Java code in Haskell modules";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "inliterate" = callPackage
    ({ mkDerivation, base, blaze-html, cheapskate, containers
     , haskell-src-exts, lucid, lucid-extras, plotlyhs, text, time
     }:
     mkDerivation {
       pname = "inliterate";
       version = "0.1.0";
       sha256 = "17z3s5w49x8j57v6myz2r6i0knnm60ydg3y8d0v008xrwdjcr5id";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         base blaze-html cheapskate containers haskell-src-exts lucid
         lucid-extras plotlyhs text time
       ];
       executableHaskellDepends = [ base text ];
       testHaskellDepends = [ base text ];
       homepage = "https://github.com/diffusionkinetics/open/inliterate";
       description = "Interactive literate programming";
       license = stdenv.lib.licenses.mit;
     }) {};
  "insert-ordered-containers" = callPackage
    ({ mkDerivation, aeson, base, base-compat, hashable, lens
     , QuickCheck, semigroupoids, semigroups, tasty, tasty-quickcheck
     , text, transformers, unordered-containers
     }:
     mkDerivation {
       pname = "insert-ordered-containers";
       version = "0.2.1.0";
       sha256 = "1612f455dw37da9g7bsd1s5kyi84mnr1ifnjw69892amyimi47fp";
       revision = "9";
       editedCabalFile = "02d4zqyb9dbahkpcbpgxylrc5xxc0zbw1awj5w0jyrql2g2b6a5f";
       libraryHaskellDepends = [
         aeson base base-compat hashable lens semigroupoids semigroups text
         transformers unordered-containers
       ];
       testHaskellDepends = [
         aeson base base-compat hashable lens QuickCheck semigroupoids
         semigroups tasty tasty-quickcheck text transformers
         unordered-containers
       ];
       homepage = "https://github.com/phadej/insert-ordered-containers#readme";
       description = "Associative containers retaining insertion order for traversals";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "inspection-testing" = callPackage
    ({ mkDerivation, base, containers, ghc, mtl, template-haskell
     , transformers
     }:
     mkDerivation {
       pname = "inspection-testing";
       version = "0.2.0.1";
       sha256 = "1551dvk63xb4lr2zsyg3ri8v1nsjs050k2jsf8v0vfasx7w9ns8z";
       libraryHaskellDepends = [
         base containers ghc mtl template-haskell transformers
       ];
       testHaskellDepends = [ base ];
       homepage = "https://github.com/nomeata/inspection-testing";
       description = "GHC plugin to do inspection testing";
       license = stdenv.lib.licenses.mit;
     }) {};
  "instance-control" = callPackage
    ({ mkDerivation, base, mtl, transformers }:
     mkDerivation {
       pname = "instance-control";
       version = "0.1.2.0";
       sha256 = "0wvb3hia5n0nmfd5ih17qp6f7517s164c5mhrn29ai7vv20x6vbx";
       libraryHaskellDepends = [ base mtl transformers ];
       homepage = "https://github.com/lazac/instance-control";
       description = "Controls how the compiler searches for instances using type families";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "integer-logarithms" = callPackage
    ({ mkDerivation, array, base, ghc-prim, integer-gmp }:
     mkDerivation {
       pname = "integer-logarithms";
       version = "1.0.2.2";
       sha256 = "1hvzbrh8fm1g9fbavdym52pr5n9f2bnfx1parkfizwqlbj6n51ms";
       revision = "1";
       editedCabalFile = "1684dkh8j2xqsd85bfsmhv3iam37hasjg4x79mvl6xh7scmpfdbw";
       libraryHaskellDepends = [ array base ghc-prim integer-gmp ];
       doCheck = false;
       homepage = "https://github.com/Bodigrim/integer-logarithms";
       description = "Integer logarithms";
       license = stdenv.lib.licenses.mit;
     }) {};
  "integration" = callPackage
    ({ mkDerivation, base, parallel }:
     mkDerivation {
       pname = "integration";
       version = "0.2.1";
       sha256 = "0bsqad6q4kc0wykswwqykcn6nd4wj6yd9dzpg075h2n1mmg3h9qc";
       libraryHaskellDepends = [ base parallel ];
       homepage = "https://github.com/ekmett/integration";
       description = "Fast robust numeric integration via tanh-sinh quadrature";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "intern" = callPackage
    ({ mkDerivation, array, base, bytestring, hashable, text
     , unordered-containers
     }:
     mkDerivation {
       pname = "intern";
       version = "0.9.2";
       sha256 = "081fyiq00cvx4nyagr34kwnag9njv65wdps5j4ydin6sjq7b58wk";
       libraryHaskellDepends = [
         array base bytestring hashable text unordered-containers
       ];
       homepage = "http://github.com/ekmett/intern/";
       description = "Efficient hash-consing for arbitrary data types";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "interpolate" = callPackage
    ({ mkDerivation, base, base-compat, bytestring, haskell-src-meta
     , hspec, QuickCheck, quickcheck-instances, template-haskell, text
     }:
     mkDerivation {
       pname = "interpolate";
       version = "0.2.0";
       sha256 = "1gkaj98yz363v38fv78sqby236mp8yqwqcilx7kr2b9z0w3204bf";
       libraryHaskellDepends = [ base haskell-src-meta template-haskell ];
       testHaskellDepends = [
         base base-compat bytestring haskell-src-meta hspec QuickCheck
         quickcheck-instances template-haskell text
       ];
       homepage = "https://github.com/sol/interpolate#readme";
       description = "String interpolation done right";
       license = stdenv.lib.licenses.mit;
     }) {};
  "interpolatedstring-perl6" = callPackage
    ({ mkDerivation, base, bytestring, Cabal, haskell-src-meta, process
     , template-haskell, text
     }:
     mkDerivation {
       pname = "interpolatedstring-perl6";
       version = "1.0.1";
       sha256 = "0n3j6qvzp6as5ji93rn0sy873w5hdsplik51lkrah42cl95vmbay";
       enableSeparateDataOutput = true;
       setupHaskellDepends = [ base Cabal process ];
       libraryHaskellDepends = [
         base bytestring haskell-src-meta template-haskell text
       ];
       description = "QuasiQuoter for Perl6-style multi-line interpolated strings";
       license = stdenv.lib.licenses.publicDomain;
     }) {};
  "interpolation" = callPackage
    ({ mkDerivation, array, base, containers, QuickCheck, utility-ht }:
     mkDerivation {
       pname = "interpolation";
       version = "0.1.0.3";
       sha256 = "0j9hdzi59lqq92773f8h17awrm9ghr45k876qc7krq87pgbr95z2";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [ base utility-ht ];
       testHaskellDepends = [
         array base containers QuickCheck utility-ht
       ];
       homepage = "http://hub.darcs.net/thielema/interpolation/";
       description = "piecewise linear and cubic Hermite interpolation";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "intervals" = callPackage
    ({ mkDerivation, array, base, Cabal, cabal-doctest, directory
     , distributive, doctest, filepath, ghc-prim, QuickCheck
     , template-haskell
     }:
     mkDerivation {
       pname = "intervals";
       version = "0.8.1";
       sha256 = "00vyxf3ba9d7aas3npfapr53w71fslgh69fczjb25axr66fvzqww";
       revision = "4";
       editedCabalFile = "1qx3q0v13l1zaln9zdk8chxpxhshbz5x0vqm0qda7d1kpv7h6a7r";
       setupHaskellDepends = [ base Cabal cabal-doctest ];
       libraryHaskellDepends = [ array base distributive ghc-prim ];
       testHaskellDepends = [
         base directory doctest filepath QuickCheck template-haskell
       ];
       homepage = "http://github.com/ekmett/intervals";
       description = "Interval Arithmetic";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "intro" = callPackage
    ({ mkDerivation, base, binary, bytestring, containers, deepseq
     , dlist, extra, hashable, lens, mtl, QuickCheck, safe, text
     , transformers, unordered-containers, writer-cps-mtl
     }:
     mkDerivation {
       pname = "intro";
       version = "0.3.2.0";
       sha256 = "0nffkv59ws5ls8smafsvbgnpfhs6bbf6balwn23za1dlb5982ky3";
       libraryHaskellDepends = [
         base binary bytestring containers deepseq dlist extra hashable mtl
         safe text transformers unordered-containers writer-cps-mtl
       ];
       testHaskellDepends = [
         base binary bytestring containers deepseq dlist extra hashable lens
         mtl QuickCheck safe text transformers unordered-containers
         writer-cps-mtl
       ];
       homepage = "https://github.com/minad/intro#readme";
       description = "\"Fixed Prelude\" - Mostly total and safe, provides Text and Monad transformers";
       license = stdenv.lib.licenses.mit;
     }) {};
  "invariant" = callPackage
    ({ mkDerivation, array, base, bifunctors, comonad, containers
     , contravariant, ghc-prim, hspec, hspec-discover, profunctors
     , QuickCheck, semigroups, StateVar, stm, tagged, template-haskell
     , th-abstraction, transformers, transformers-compat
     , unordered-containers
     }:
     mkDerivation {
       pname = "invariant";
       version = "0.5.1";
       sha256 = "0aqj7z55632qdg45074kgn9qfdxzb0a2f8lgjzr0l0i4mm2rr37b";
       revision = "1";
       editedCabalFile = "100gsacbpal53khj94m5qs4aq70hbsp4dz4065czfm49ysd4yqq4";
       libraryHaskellDepends = [
         array base bifunctors comonad containers contravariant ghc-prim
         profunctors semigroups StateVar stm tagged template-haskell
         th-abstraction transformers transformers-compat
         unordered-containers
       ];
       testHaskellDepends = [ base hspec QuickCheck template-haskell ];
       testToolDepends = [ hspec-discover ];
       homepage = "https://github.com/nfrisby/invariant-functors";
       description = "Haskell98 invariant functors";
       license = stdenv.lib.licenses.bsd2;
     }) {};
  "invertible" = callPackage
    ({ mkDerivation, base, haskell-src-meta, invariant, lens
     , partial-isomorphisms, QuickCheck, semigroupoids, template-haskell
     , transformers
     }:
     mkDerivation {
       pname = "invertible";
       version = "0.2.0.5";
       sha256 = "1fwdbg0pimi9hfyp20fsvyxpicjd7jxg4vsh5kykkxviyfhxl2ha";
       libraryHaskellDepends = [
         base haskell-src-meta invariant lens partial-isomorphisms
         semigroupoids template-haskell transformers
       ];
       testHaskellDepends = [ base QuickCheck transformers ];
       description = "bidirectional arrows, bijective functions, and invariant functors";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "invertible-grammar" = callPackage
    ({ mkDerivation, base, bifunctors, containers, mtl, prettyprinter
     , profunctors, semigroups, tagged, template-haskell, text
     , transformers
     }:
     mkDerivation {
       pname = "invertible-grammar";
       version = "0.1.1";
       sha256 = "1vqv0q3096hfclakh7xk1hkwdbpghvllbzd795sgdf438zshr419";
       libraryHaskellDepends = [
         base bifunctors containers mtl prettyprinter profunctors semigroups
         tagged template-haskell text transformers
       ];
       homepage = "https://github.com/esmolanka/invertible-grammar";
       description = "Invertible parsing combinators framework";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "io-choice" = callPackage
    ({ mkDerivation, base, hspec, lifted-base, monad-control
     , template-haskell, transformers, transformers-base
     }:
     mkDerivation {
       pname = "io-choice";
       version = "0.0.7";
       sha256 = "16v6b9r5k2y5vm2s8k3j7xc5wh77nqd8j636mc6wxcxwn3260jir";
       libraryHaskellDepends = [
         base lifted-base monad-control template-haskell transformers
         transformers-base
       ];
       testHaskellDepends = [
         base hspec lifted-base monad-control transformers
       ];
       description = "Choice for IO and lifted IO";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "io-machine" = callPackage
    ({ mkDerivation, base, time }:
     mkDerivation {
       pname = "io-machine";
       version = "0.2.0.0";
       sha256 = "1jqw6g0nm1mx9c6qnbrwr5mpgaiyfjzqwj0r6mzhsvxvzkawip05";
       libraryHaskellDepends = [ base time ];
       testHaskellDepends = [ base ];
       homepage = "https://github.com/YoshikuniJujo/io-machine#readme";
       description = "Easy I/O model to learn IO monad";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "io-manager" = callPackage
    ({ mkDerivation, base, containers }:
     mkDerivation {
       pname = "io-manager";
       version = "0.1.0.2";
       sha256 = "0f21h36z2ls0d6g31pcf4kcyfninaxws8w159zy33bwa19saf2mz";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [ base containers ];
       executableHaskellDepends = [ base containers ];
       description = "Skeleton library around the IO monad";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "io-memoize" = callPackage
    ({ mkDerivation, async, base }:
     mkDerivation {
       pname = "io-memoize";
       version = "1.1.1.0";
       sha256 = "0ga85wdvz67jjx8qh6f687kfikcrfmp7winn13v6na7vlaqs2ly7";
       libraryHaskellDepends = [ async base ];
       homepage = "https://github.com/DanBurton/io-memoize";
       description = "Memoize IO actions";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "io-region" = callPackage
    ({ mkDerivation, base, hspec, stm, transformers }:
     mkDerivation {
       pname = "io-region";
       version = "0.1.1";
       sha256 = "1w8m21zkhbhqr9lsdzwxfpy0jhb2ciybn3bvhyp3zlxkq9k3yc7f";
       libraryHaskellDepends = [ base stm ];
       testHaskellDepends = [ base hspec transformers ];
       homepage = "https://github.com/Yuras/io-region/wiki";
       description = "Exception safe resource management with dynamic regions";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "io-storage" = callPackage
    ({ mkDerivation, base, containers }:
     mkDerivation {
       pname = "io-storage";
       version = "0.3";
       sha256 = "1ga9bd7iri6vlsxnjx765yy3bxc4lbz644wyw88yzvpjgz6ga3cs";
       libraryHaskellDepends = [ base containers ];
       homepage = "http://github.com/willdonnelly/io-storage";
       description = "A key-value store in the IO monad";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "io-streams" = callPackage
    ({ mkDerivation, attoparsec, base, bytestring, bytestring-builder
     , deepseq, directory, filepath, HUnit, mtl, network, primitive
     , process, QuickCheck, test-framework, test-framework-hunit
     , test-framework-quickcheck2, text, time, transformers, vector
     , zlib, zlib-bindings
     }:
     mkDerivation {
       pname = "io-streams";
       version = "1.5.0.1";
       sha256 = "12rcdg2d70644bvn838fxcjkssqj8pssnx5y657si5rijcbkgjsx";
       revision = "2";
       editedCabalFile = "1mcab95d6hm098myh9gp7sh10srigjphgvm8s9pfs7jg5hzghy14";
       configureFlags = [ "-fNoInteractiveTests" ];
       libraryHaskellDepends = [
         attoparsec base bytestring bytestring-builder network primitive
         process text time transformers vector zlib-bindings
       ];
       testHaskellDepends = [
         attoparsec base bytestring bytestring-builder deepseq directory
         filepath HUnit mtl network primitive process QuickCheck
         test-framework test-framework-hunit test-framework-quickcheck2 text
         time transformers vector zlib zlib-bindings
       ];
       description = "Simple, composable, and easy-to-use stream I/O";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "io-streams-haproxy" = callPackage
    ({ mkDerivation, attoparsec, base, bytestring, HUnit, io-streams
     , network, test-framework, test-framework-hunit, transformers
     }:
     mkDerivation {
       pname = "io-streams-haproxy";
       version = "1.0.0.2";
       sha256 = "11nh9q158mgnvvb23s5ffg87lkhl5smk039yl43jghxmb214z0bp";
       revision = "4";
       editedCabalFile = "06c51a057n5bc9xfbp2m4jz5ds4z1xvmsx5mppch6qfwbz7x5i9l";
       libraryHaskellDepends = [
         attoparsec base bytestring io-streams network transformers
       ];
       testHaskellDepends = [
         attoparsec base bytestring HUnit io-streams network test-framework
         test-framework-hunit transformers
       ];
       homepage = "http://snapframework.com/";
       description = "HAProxy protocol 1.5 support for io-streams";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "ip" = callPackage
    ({ mkDerivation, aeson, attoparsec, base, bytestring, criterion
     , hashable, primitive, text, vector
     }:
     mkDerivation {
       pname = "ip";
       version = "1.3.0";
       sha256 = "10dc3b41j11xa9rfqlbbrjs4wjszn1zn50w9cjs4i0yc02fqck4y";
       libraryHaskellDepends = [
         aeson attoparsec base bytestring hashable primitive text vector
       ];
       benchmarkHaskellDepends = [
         attoparsec base bytestring criterion text
       ];
       doCheck = false;
       homepage = "https://github.com/andrewthad/haskell-ip#readme";
       description = "Library for IP and MAC addresses";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "ip6addr" = callPackage
    ({ mkDerivation, base, cmdargs, IPv6Addr, text }:
     mkDerivation {
       pname = "ip6addr";
       version = "1.0.0";
       sha256 = "1wc03z05fiylg6fmi0whj8scnm1n81bzmns02zkv1pvysx9bw1g8";
       isLibrary = false;
       isExecutable = true;
       executableHaskellDepends = [ base cmdargs IPv6Addr text ];
       doHaddock = false;
       homepage = "https://github.com/MichelBoucey/ip6addr";
       description = "Commandline tool to generate IPv6 address text representations";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "iproute" = callPackage
    ({ mkDerivation, appar, base, byteorder, containers, doctest, hspec
     , network, QuickCheck, safe
     }:
     mkDerivation {
       pname = "iproute";
       version = "1.7.7";
       sha256 = "0gab5930nvzrpvisx3x43ydnp2rd4fbmy9cq1zpgqy1adx5gx8z6";
       libraryHaskellDepends = [
         appar base byteorder containers network
       ];
       testHaskellDepends = [
         appar base byteorder containers doctest hspec network QuickCheck
         safe
       ];
       doCheck = false;
       homepage = "http://www.mew.org/~kazu/proj/iproute/";
       description = "IP Routing Table";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "ipython-kernel" = callPackage
    ({ mkDerivation, aeson, base, bytestring, cereal, containers
     , cryptonite, directory, filepath, memory, mtl, process, temporary
     , text, transformers, unordered-containers, uuid, zeromq4-haskell
     }:
     mkDerivation {
       pname = "ipython-kernel";
       version = "0.9.1.0";
       sha256 = "0944riw00i3m8n3cab0g9c14b24xryf9w8ddlddnmxgys4sn8qak";
       isLibrary = true;
       isExecutable = true;
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [
         aeson base bytestring cereal containers cryptonite directory
         filepath memory mtl process temporary text transformers
         unordered-containers uuid zeromq4-haskell
       ];
       homepage = "http://github.com/gibiansky/IHaskell";
       description = "A library for creating kernels for IPython frontends";
       license = stdenv.lib.licenses.mit;
     }) {};
  "irc" = callPackage
    ({ mkDerivation, attoparsec, base, bytestring, HUnit, QuickCheck
     , test-framework, test-framework-hunit, test-framework-quickcheck2
     }:
     mkDerivation {
       pname = "irc";
       version = "0.6.1.0";
       sha256 = "1q9p2qwfy9rsfyaja4x3gjr8ql2ka2ja5qv56b062bdkvzafl5iq";
       libraryHaskellDepends = [ attoparsec base bytestring ];
       testHaskellDepends = [
         base bytestring HUnit QuickCheck test-framework
         test-framework-hunit test-framework-quickcheck2
       ];
       description = "A small library for parsing IRC messages";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "irc-client" = callPackage
    ({ mkDerivation, base, bytestring, conduit, connection, containers
     , contravariant, exceptions, irc-conduit, irc-ctcp, mtl
     , network-conduit-tls, old-locale, profunctors, stm, stm-chans
     , text, time, tls, transformers, x509, x509-store, x509-validation
     }:
     mkDerivation {
       pname = "irc-client";
       version = "1.1.0.5";
       sha256 = "13qc5acpkgd80nazlpac3q2viqp76fhq6qjk7fp5dp1w6bhj9qi7";
       libraryHaskellDepends = [
         base bytestring conduit connection containers contravariant
         exceptions irc-conduit irc-ctcp mtl network-conduit-tls old-locale
         profunctors stm stm-chans text time tls transformers x509
         x509-store x509-validation
       ];
       homepage = "https://github.com/barrucadu/irc-client";
       description = "An IRC client library";
       license = stdenv.lib.licenses.mit;
     }) {};
  "irc-conduit" = callPackage
    ({ mkDerivation, async, base, bytestring, conduit, conduit-extra
     , connection, irc, irc-ctcp, network-conduit-tls, profunctors, text
     , time, tls, transformers, x509-validation
     }:
     mkDerivation {
       pname = "irc-conduit";
       version = "0.3.0.1";
       sha256 = "0lividbrrc2yydqp55xqji8q6wigb49skrzw9vki6iivxcszka5h";
       libraryHaskellDepends = [
         async base bytestring conduit conduit-extra connection irc irc-ctcp
         network-conduit-tls profunctors text time tls transformers
         x509-validation
       ];
       homepage = "https://github.com/barrucadu/irc-conduit";
       description = "Streaming IRC message library using conduits";
       license = stdenv.lib.licenses.mit;
     }) {};
  "irc-ctcp" = callPackage
    ({ mkDerivation, base, bytestring, text }:
     mkDerivation {
       pname = "irc-ctcp";
       version = "0.1.3.0";
       sha256 = "16mp9dpp57id760zc932dszd5r1ncskwwxrp0djka5r1alddjz6n";
       libraryHaskellDepends = [ base bytestring text ];
       homepage = "https://github.com/barrucadu/irc-ctcp";
       description = "A CTCP encoding and decoding library for IRC clients";
       license = stdenv.lib.licenses.mit;
     }) {};
  "irc-dcc" = callPackage
    ({ mkDerivation, attoparsec, base, binary, bytestring
     , hspec-attoparsec, io-streams, iproute, irc-ctcp, mtl, network
     , path, safe-exceptions, tasty, tasty-hspec, tasty-quickcheck
     , transformers, utf8-string
     }:
     mkDerivation {
       pname = "irc-dcc";
       version = "2.0.1";
       sha256 = "1pyj4ngh6rw0k1cd9nlrhwb6rr3jmpiwaxs6crik8gbl6f3s4234";
       revision = "8";
       editedCabalFile = "1ya1bl8pdzbs3gxkq7hsyvkaajf8prrdhr1lx5hm9pi1nqsi879z";
       libraryHaskellDepends = [
         attoparsec base binary bytestring io-streams iproute irc-ctcp mtl
         network path safe-exceptions transformers utf8-string
       ];
       testHaskellDepends = [
         base bytestring hspec-attoparsec iproute network path tasty
         tasty-hspec tasty-quickcheck utf8-string
       ];
       homepage = "https://github.com/JanGe/irc-dcc";
       description = "A DCC message parsing and helper library for IRC clients";
       license = stdenv.lib.licenses.mit;
     }) {};
  "islink" = callPackage
    ({ mkDerivation, base, unordered-containers }:
     mkDerivation {
       pname = "islink";
       version = "0.1.0.0";
       sha256 = "1mxfs8k0znc7v2iynjnhr4k5c9as4ip37ybvxnvjfqy4dld9rgyg";
       libraryHaskellDepends = [ base unordered-containers ];
       homepage = "https://github.com/redneb/islink";
       description = "Check if an HTML element is a link";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "iso3166-country-codes" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "iso3166-country-codes";
       version = "0.20140203.8";
       sha256 = "0dhaddxawpk74dpyz1xm3i9rh8ksiqd36p25isdfzjhvsqff1mml";
       revision = "1";
       editedCabalFile = "0n01pmvkqi0w9l203i1v7kb6bb867plv4h5hmzlkpnhrf5abf0zf";
       libraryHaskellDepends = [ base ];
       description = "A datatype for ISO 3166 country codes";
       license = "LGPL";
     }) {};
  "iso639" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "iso639";
       version = "0.1.0.3";
       sha256 = "1s15vb00nqxnmm59axapipib1snh6q5qhfdw7pgb9vdsz8i86jqj";
       libraryHaskellDepends = [ base ];
       homepage = "https://github.com/HugoDaniel/iso639";
       description = "ISO-639-1 language codes";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "iso8601-time" = callPackage
    ({ mkDerivation, base, hspec, HUnit, time }:
     mkDerivation {
       pname = "iso8601-time";
       version = "0.1.5";
       sha256 = "1j7h1xix7vpb88dnksis14rnvw0p528m3d54fg3h51765d5l9kgj";
       libraryHaskellDepends = [ base time ];
       testHaskellDepends = [ base hspec HUnit time ];
       homepage = "https://github.com/nh2/iso8601-time";
       description = "Convert to/from the ISO 8601 time format";
       license = stdenv.lib.licenses.mit;
     }) {};
  "iterable" = callPackage
    ({ mkDerivation, base, mtl, tagged, template-haskell, vector }:
     mkDerivation {
       pname = "iterable";
       version = "3.0";
       sha256 = "194718jpjwkv3ynlpgjlpvf0iqnj7dkd3zmci363gsa425i3vlbc";
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [
         base mtl tagged template-haskell vector
       ];
       homepage = "https://github.com/BioHaskell/iterable";
       description = "API for hierarchical multilevel collections";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "ix-shapable" = callPackage
    ({ mkDerivation, array, base }:
     mkDerivation {
       pname = "ix-shapable";
       version = "0.1.0";
       sha256 = "08ljlzywnw0h8ijwb6yh4r8l6z7bbknwxv9cjq7lkfx7m2vgy1sh";
       libraryHaskellDepends = [ array base ];
       description = "Reshape multi-dimensional arrays";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "ixset-typed" = callPackage
    ({ mkDerivation, base, containers, deepseq, HUnit, QuickCheck
     , safecopy, syb, tasty, tasty-hunit, tasty-quickcheck
     , template-haskell
     }:
     mkDerivation {
       pname = "ixset-typed";
       version = "0.4.0.1";
       sha256 = "135cfc8d39qv02sga03gsym1yfajf0l5ci1s6q9n1xpb9ignblx8";
       libraryHaskellDepends = [
         base containers deepseq safecopy syb template-haskell
       ];
       testHaskellDepends = [
         base containers HUnit QuickCheck tasty tasty-hunit tasty-quickcheck
       ];
       description = "Efficient relational queries on Haskell sets";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "jack" = callPackage
    ({ mkDerivation, array, base, bytestring, enumset, event-list
     , explicit-exception, libjack2, midi, non-negative, semigroups
     , transformers
     }:
     mkDerivation {
       pname = "jack";
       version = "0.7.1.4";
       sha256 = "018lsa5mgl7vb0hrd4jswa40d6w7alfq082brax8p832zf0v5bj2";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         array base bytestring enumset event-list explicit-exception midi
         non-negative semigroups transformers
       ];
       libraryPkgconfigDepends = [ libjack2 ];
       homepage = "http://www.haskell.org/haskellwiki/JACK";
       description = "Bindings for the JACK Audio Connection Kit";
       license = "GPL";
     }) {inherit (pkgs) libjack2;};
  "jailbreak-cabal" = callPackage
    ({ mkDerivation, base, Cabal }:
     mkDerivation {
       pname = "jailbreak-cabal";
       version = "1.3.3";
       sha256 = "076h7nbf94zfwvfijcpv03r3s2nyynb2y9v354m4bxqz3anhib3b";
       revision = "3";
       editedCabalFile = "0f4gqssh2ayl089zzl8m5rwa66x430dg1q5hfwcfd56r6xr6wi1l";
       isLibrary = false;
       isExecutable = true;
       executableHaskellDepends = [ base Cabal ];
       doHaddock = false;
       homepage = "https://github.com/peti/jailbreak-cabal#readme";
       description = "Strip version restrictions from Cabal files";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "jmacro" = callPackage
    ({ mkDerivation, aeson, base, bytestring, containers
     , haskell-src-exts, haskell-src-meta, mtl, parseargs, parsec
     , regex-posix, safe, syb, template-haskell, text
     , unordered-containers, vector, wl-pprint-text
     }:
     mkDerivation {
       pname = "jmacro";
       version = "0.6.15";
       sha256 = "1b3crf16szj11pcgrg3912xq072vnv0myq6mzg0ypaabdzn3zr7s";
       revision = "2";
       editedCabalFile = "0r16y3sk22vgrciaadrdzjd768mnh08s019ffgk5jma782nz9v7d";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         aeson base bytestring containers haskell-src-exts haskell-src-meta
         mtl parsec regex-posix safe syb template-haskell text
         unordered-containers vector wl-pprint-text
       ];
       executableHaskellDepends = [
         aeson base bytestring containers haskell-src-exts haskell-src-meta
         mtl parseargs parsec regex-posix safe syb template-haskell text
         unordered-containers vector wl-pprint-text
       ];
       description = "QuasiQuotation library for programmatic generation of Javascript code";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "jmacro-rpc" = callPackage
    ({ mkDerivation, aeson, attoparsec, base, blaze-html, bytestring
     , containers, contravariant, jmacro, mtl, scientific, split, text
     , unordered-containers, vector
     }:
     mkDerivation {
       pname = "jmacro-rpc";
       version = "0.3.3";
       sha256 = "0gqyv8y4hjk2fwvzar173hvhgw860as0wijfhxqnxbkhd7f2r4gf";
       libraryHaskellDepends = [
         aeson attoparsec base blaze-html bytestring containers
         contravariant jmacro mtl scientific split text unordered-containers
         vector
       ];
       homepage = "http://hub.darcs.net/gershomb/jmacro";
       description = "JSON-RPC clients and servers using JMacro, and evented client-server Reactive Programming";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "jmacro-rpc-snap" = callPackage
    ({ mkDerivation, aeson, base, bytestring, containers, jmacro
     , jmacro-rpc, mtl, snap-core
     }:
     mkDerivation {
       pname = "jmacro-rpc-snap";
       version = "0.3";
       sha256 = "1syzx2lw4r8knsqhsvilp04wb8a718379cmn0nhjqlwhpaja9bj8";
       libraryHaskellDepends = [
         aeson base bytestring containers jmacro jmacro-rpc mtl snap-core
       ];
       homepage = "http://hub.darcs.net/gershomb/jmacro-rpc";
       description = "Snap backend for jmacro-rpc";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "jni" = callPackage
    ({ mkDerivation, base, bytestring, choice, constraints, containers
     , cpphs, deepseq, inline-c, jdk, singletons
     }:
     mkDerivation {
       pname = "jni";
       version = "0.6.1";
       sha256 = "1z71vp8qskymgd4bjv8wxxjn34n49m28vnph0p0wbxgpz2wpn4hz";
       libraryHaskellDepends = [
         base bytestring choice constraints containers deepseq inline-c
         singletons
       ];
       librarySystemDepends = [ jdk ];
       libraryToolDepends = [ cpphs ];
       homepage = "https://github.com/tweag/inline-java/tree/master/jni#readme";
       description = "Complete JNI raw bindings";
       license = stdenv.lib.licenses.bsd3;
     }) {inherit (pkgs) jdk;};
  "jose" = callPackage
    ({ mkDerivation, aeson, attoparsec, base, base64-bytestring
     , bytestring, concise, containers, cryptonite, hspec, lens, memory
     , monad-time, mtl, network-uri, QuickCheck, quickcheck-instances
     , safe, semigroups, tasty, tasty-hspec, tasty-quickcheck
     , template-haskell, text, time, unordered-containers, vector, x509
     }:
     mkDerivation {
       pname = "jose";
       version = "0.7.0.0";
       sha256 = "051rjqfskizgm9j927zh500q54lii3scldsymgcdfbaw40d0mncc";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         aeson attoparsec base base64-bytestring bytestring concise
         containers cryptonite lens memory monad-time mtl network-uri
         QuickCheck quickcheck-instances safe semigroups template-haskell
         text time unordered-containers vector x509
       ];
       executableHaskellDepends = [ aeson base bytestring lens mtl ];
       testHaskellDepends = [
         aeson attoparsec base base64-bytestring bytestring concise
         containers cryptonite hspec lens memory monad-time mtl network-uri
         QuickCheck quickcheck-instances safe semigroups tasty tasty-hspec
         tasty-quickcheck template-haskell text time unordered-containers
         vector x509
       ];
       homepage = "https://github.com/frasertweedale/hs-jose";
       description = "Javascript Object Signing and Encryption and JSON Web Token library";
       license = stdenv.lib.licenses.asl20;
     }) {};
  "jose-jwt" = callPackage
    ({ mkDerivation, aeson, attoparsec, base, bytestring, cereal
     , containers, criterion, cryptonite, doctest, either, hspec, HUnit
     , memory, mtl, QuickCheck, text, time, transformers
     , transformers-compat, unordered-containers, vector
     }:
     mkDerivation {
       pname = "jose-jwt";
       version = "0.7.8";
       sha256 = "0azkqllqc35hp2d2q50cwk472amhf0q5fkqs04a4kpnj50z6kqfk";
       libraryHaskellDepends = [
         aeson attoparsec base bytestring cereal containers cryptonite
         either memory mtl text time transformers transformers-compat
         unordered-containers vector
       ];
       testHaskellDepends = [
         aeson base bytestring cryptonite doctest either hspec HUnit memory
         mtl QuickCheck text unordered-containers vector
       ];
       benchmarkHaskellDepends = [ base bytestring criterion cryptonite ];
       homepage = "http://github.com/tekul/jose-jwt";
       description = "JSON Object Signing and Encryption Library";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "js-flot" = callPackage
    ({ mkDerivation, base, HTTP }:
     mkDerivation {
       pname = "js-flot";
       version = "0.8.3";
       sha256 = "0yjyzqh3qzhy5h3nql1fckw0gcfb0f4wj9pm85nafpfqp2kg58hv";
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [ base ];
       testHaskellDepends = [ base HTTP ];
       homepage = "https://github.com/ndmitchell/js-flot#readme";
       description = "Obtain minified flot code";
       license = stdenv.lib.licenses.mit;
     }) {};
  "js-jquery" = callPackage
    ({ mkDerivation, base, HTTP }:
     mkDerivation {
       pname = "js-jquery";
       version = "3.3.1";
       sha256 = "16q68jzbs7kp07dnq8cprdcc8fd41rim38039vg0w4x11lgniq70";
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [ base ];
       testHaskellDepends = [ base HTTP ];
       homepage = "https://github.com/ndmitchell/js-jquery#readme";
       description = "Obtain minified jQuery code";
       license = stdenv.lib.licenses.mit;
     }) {};
  "json" = callPackage
    ({ mkDerivation, array, base, bytestring, containers, mtl, parsec
     , pretty, syb, text
     }:
     mkDerivation {
       pname = "json";
       version = "0.9.3";
       sha256 = "1z8s3mfg76p2flqqd2wqsi96l5bg8k8w8m58zlv81pw3k7h1vbwb";
       libraryHaskellDepends = [
         array base bytestring containers mtl parsec pretty syb text
       ];
       description = "Support for serialising Haskell to and from JSON";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "json-autotype" = callPackage
    ({ mkDerivation, aeson, base, bytestring, containers, directory
     , filepath, GenericPretty, hashable, lens, mtl
     , optparse-applicative, pretty, process, QuickCheck, scientific
     , smallcheck, text, uniplate, unordered-containers, vector, yaml
     }:
     mkDerivation {
       pname = "json-autotype";
       version = "2.0.0";
       sha256 = "0mip3k489321sqzzwbv0sbcscv2q9n4lbc63sx8lslsy95da9x68";
       revision = "1";
       editedCabalFile = "00wbcq9bx6sq6i5756ja6pf016xbpk2kflq20ncdv76zycxdkqnm";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         aeson base containers filepath GenericPretty hashable lens mtl
         pretty process scientific text uniplate unordered-containers vector
       ];
       executableHaskellDepends = [
         aeson base bytestring containers filepath GenericPretty hashable
         lens mtl optparse-applicative pretty process scientific text
         uniplate unordered-containers vector yaml
       ];
       testHaskellDepends = [
         aeson base bytestring containers directory filepath GenericPretty
         hashable lens mtl optparse-applicative pretty process QuickCheck
         scientific smallcheck text uniplate unordered-containers vector
       ];
       homepage = "https://github.com/mgajda/json-autotype";
       description = "Automatic type declaration for JSON input data";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "json-feed" = callPackage
    ({ mkDerivation, aeson, base, bytestring, filepath, hspec
     , mime-types, network-uri, tagsoup, text, time
     }:
     mkDerivation {
       pname = "json-feed";
       version = "1.0.5";
       sha256 = "17y8hnqp4ahg7cx6fwfd4y65pz16py1avhfkn4fcfjs06xv465qs";
       libraryHaskellDepends = [
         aeson base bytestring mime-types network-uri tagsoup text time
       ];
       testHaskellDepends = [
         aeson base bytestring filepath hspec mime-types network-uri tagsoup
         text time
       ];
       homepage = "https://github.com/tfausak/json-feed#readme";
       description = "JSON Feed";
       license = stdenv.lib.licenses.mit;
     }) {};
  "json-rpc-client" = callPackage
    ({ mkDerivation, aeson, base, bytestring, HUnit, json-rpc-server
     , mtl, QuickCheck, scientific, test-framework, test-framework-hunit
     , test-framework-quickcheck2, text, unordered-containers, vector
     , vector-algorithms
     }:
     mkDerivation {
       pname = "json-rpc-client";
       version = "0.2.5.0";
       sha256 = "177lrw5m9dxdk6mcay0f92rwyih8q7znwb8m6da6r3zsn30gajak";
       revision = "9";
       editedCabalFile = "04b65m8lhk2g2d5x5i637ff3wkgvf4z6dhn5x1pizsj9y3aq35zm";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         aeson base bytestring json-rpc-server mtl text unordered-containers
         vector vector-algorithms
       ];
       testHaskellDepends = [
         aeson base bytestring HUnit json-rpc-server mtl QuickCheck
         scientific test-framework test-framework-hunit
         test-framework-quickcheck2 text unordered-containers vector
       ];
       homepage = "https://github.com/grayjay/json-rpc-client";
       description = "JSON-RPC 2.0 on the client side.";
       license = stdenv.lib.licenses.mit;
     }) {};
  "json-rpc-generic" = callPackage
    ({ mkDerivation, aeson, aeson-generic-compat, base, containers
     , dlist, QuickCheck, quickcheck-simple, scientific, text
     , transformers, unordered-containers, vector
     }:
     mkDerivation {
       pname = "json-rpc-generic";
       version = "0.2.1.5";
       sha256 = "1h1spyiq5xix3rbjdk37a28l6l46zygvxafdhaa466hyn2j7p4cz";
       libraryHaskellDepends = [
         aeson aeson-generic-compat base containers dlist scientific text
         transformers unordered-containers vector
       ];
       testHaskellDepends = [
         aeson base QuickCheck quickcheck-simple text
       ];
       homepage = "http://github.com/khibino/haskell-json-rpc-generic";
       description = "Generic encoder and decode for JSON-RPC";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "json-rpc-server" = callPackage
    ({ mkDerivation, aeson, base, bytestring, deepseq, HUnit, mtl
     , test-framework, test-framework-hunit, text, unordered-containers
     , vector
     }:
     mkDerivation {
       pname = "json-rpc-server";
       version = "0.2.6.0";
       sha256 = "1xfcxbwri9a5p3xxbc4kvr1kqdnm4c1axd8kgb8dglabffbrk7hn";
       revision = "6";
       editedCabalFile = "1rfabr679pk605v141gm0ynbp3l6x87s3ip3wa49lwnpab495mxs";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         aeson base bytestring deepseq mtl text unordered-containers vector
       ];
       testHaskellDepends = [
         aeson base bytestring HUnit mtl test-framework test-framework-hunit
         text unordered-containers vector
       ];
       homepage = "https://github.com/grayjay/json-rpc-server";
       description = "JSON-RPC 2.0 on the server side.";
       license = stdenv.lib.licenses.mit;
     }) {};
  "json-schema" = callPackage
    ({ mkDerivation, aeson, attoparsec, base, base-compat-batteries
     , bytestring, containers, generic-aeson, generic-deriving, mtl
     , scientific, tasty, tasty-hunit, tasty-th, text, time
     , unordered-containers, vector
     }:
     mkDerivation {
       pname = "json-schema";
       version = "0.7.4.2";
       sha256 = "09bgcc00q1v24rdglw9b24dgi690mlax6abarhcgvgmn22406wp8";
       revision = "1";
       editedCabalFile = "0pwmh48z54n0mrwzmgff95mwy1jbmy1rwsk5kmddby86f0j5873g";
       libraryHaskellDepends = [
         aeson base base-compat-batteries containers generic-aeson
         generic-deriving mtl scientific text time unordered-containers
         vector
       ];
       testHaskellDepends = [
         aeson attoparsec base base-compat-batteries bytestring
         generic-aeson tasty tasty-hunit tasty-th text vector
       ];
       description = "Types and type classes for defining JSON schemas";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "justified-containers" = callPackage
    ({ mkDerivation, base, containers, ghc-prim, hspec, QuickCheck
     , roles, should-not-typecheck
     }:
     mkDerivation {
       pname = "justified-containers";
       version = "0.3.0.0";
       sha256 = "11ryff281gbn46zz7vax97h0qn5xn1mk7gdjpb38xs9ns36c0c6q";
       libraryHaskellDepends = [ base containers roles ];
       testHaskellDepends = [
         base containers ghc-prim hspec QuickCheck should-not-typecheck
       ];
       homepage = "https://github.com/matt-noonan/justified-containers";
       description = "Keyed container types with type-checked proofs of key presence";
       license = stdenv.lib.licenses.bsd2;
     }) {};
  "jvm" = callPackage
    ({ mkDerivation, base, bytestring, choice, constraints, criterion
     , deepseq, distributed-closure, exceptions, hspec, jni, singletons
     , text, vector
     }:
     mkDerivation {
       pname = "jvm";
       version = "0.4.2";
       sha256 = "1z3lk2f7bmhi8bj4v32fymjr2bf9czjd73qm6gk33z4mxknddwbh";
       libraryHaskellDepends = [
         base bytestring choice constraints distributed-closure exceptions
         jni singletons text vector
       ];
       testHaskellDepends = [ base bytestring hspec jni text ];
       benchmarkHaskellDepends = [
         base criterion deepseq jni singletons
       ];
       homepage = "http://github.com/tweag/inline-java/tree/master/jvm#readme";
       description = "Call JVM methods from Haskell";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "jvm-batching" = callPackage
    ({ mkDerivation, base, bytestring, Cabal, criterion, deepseq
     , distributed-closure, hspec, inline-java, jni, jvm, singletons
     , split, text, vector
     }:
     mkDerivation {
       pname = "jvm-batching";
       version = "0.1.1";
       sha256 = "06vxhlpvb8ilj0xm5k7chzpsn0f7m48l7728g2m7likh55rs2dxq";
       setupHaskellDepends = [ base Cabal inline-java ];
       libraryHaskellDepends = [
         base bytestring distributed-closure inline-java jni jvm singletons
         text vector
       ];
       testHaskellDepends = [
         base bytestring hspec inline-java jvm text vector
       ];
       benchmarkHaskellDepends = [
         base criterion deepseq jvm split vector
       ];
       homepage = "http://github.com/tweag/inline-java/tree/master/jvm-batching#readme";
       description = "Provides batched marshalling of values between Java and Haskell";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "jvm-streaming" = callPackage
    ({ mkDerivation, base, Cabal, criterion, deepseq
     , distributed-closure, hspec, inline-java, jni, jvm, jvm-batching
     , singletons, streaming, text, vector
     }:
     mkDerivation {
       pname = "jvm-streaming";
       version = "0.3.1";
       sha256 = "0kgr2l1gcxy2z30xr89fx1f51h5yycphhh3mpf00wahlkdz7q6wd";
       setupHaskellDepends = [ base Cabal inline-java jvm-batching ];
       libraryHaskellDepends = [
         base distributed-closure inline-java jni jvm jvm-batching
         singletons streaming vector
       ];
       testHaskellDepends = [ base hspec inline-java jvm streaming text ];
       benchmarkHaskellDepends = [
         base criterion deepseq jvm streaming text vector
       ];
       doCheck = false;
       homepage = "http://github.com/tweag/inline-java/tree/master/jvm-streaming#readme";
       description = "Expose Java iterators as streams from the streaming package";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "jwt" = callPackage
    ({ mkDerivation, aeson, base, bytestring, containers, cryptonite
     , data-default, doctest, http-types, HUnit, lens, lens-aeson
     , memory, network-uri, QuickCheck, scientific, semigroups, tasty
     , tasty-hunit, tasty-quickcheck, tasty-th, text, time
     , unordered-containers, vector
     }:
     mkDerivation {
       pname = "jwt";
       version = "0.7.2";
       sha256 = "0c8aq9y7chq58xp9qd0w5dgbh2q3ksfidj3b4dm5k68ks89p95hp";
       revision = "1";
       editedCabalFile = "1q8h94yslw6k6zcjbwx94pnji8dcr2w5n1wzgzfb8hb78w2qr1dm";
       libraryHaskellDepends = [
         aeson base bytestring containers cryptonite data-default http-types
         memory network-uri scientific semigroups text time
         unordered-containers vector
       ];
       testHaskellDepends = [
         aeson base bytestring containers cryptonite data-default doctest
         http-types HUnit lens lens-aeson memory network-uri QuickCheck
         scientific semigroups tasty tasty-hunit tasty-quickcheck tasty-th
         text time unordered-containers vector
       ];
       homepage = "https://bitbucket.org/ssaasen/haskell-jwt";
       description = "JSON Web Token (JWT) decoding and encoding";
       license = stdenv.lib.licenses.mit;
     }) {};
  "kan-extensions" = callPackage
    ({ mkDerivation, adjunctions, array, base, comonad, containers
     , contravariant, distributive, free, invariant, mtl, profunctors
     , semigroupoids, tagged, transformers, transformers-compat
     }:
     mkDerivation {
       pname = "kan-extensions";
       version = "5.2";
       sha256 = "1lyvyiwwh962j2nnnsqzlvp5zq6z8p3spvhmji99cjvldxc7wwkb";
       libraryHaskellDepends = [
         adjunctions array base comonad containers contravariant
         distributive free invariant mtl profunctors semigroupoids tagged
         transformers transformers-compat
       ];
       homepage = "http://github.com/ekmett/kan-extensions/";
       description = "Kan extensions, Kan lifts, the Yoneda lemma, and (co)density (co)monads";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "kanji" = callPackage
    ({ mkDerivation, aeson, aeson-pretty, base, containers, criterion
     , deepseq, hashable, HUnit-approx, microlens, microlens-aeson
     , optparse-applicative, tasty, tasty-hunit, text, transformers
     }:
     mkDerivation {
       pname = "kanji";
       version = "3.4.0";
       sha256 = "1wc17b5515vb19ah7wm1zwmpf7b3jgjzrhk21hk8ysr14pcxwifr";
       revision = "2";
       editedCabalFile = "1bcc3kh6kndmkqi3vaxp27mg1qb7xbg1h8pgjc1kk1iawnhl930j";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         aeson base containers deepseq hashable text
       ];
       executableHaskellDepends = [
         aeson aeson-pretty base containers microlens microlens-aeson
         optparse-applicative text transformers
       ];
       testHaskellDepends = [
         aeson base containers HUnit-approx tasty tasty-hunit text
       ];
       benchmarkHaskellDepends = [ aeson base containers criterion text ];
       homepage = "https://github.com/fosskers/kanji";
       description = "Perform 漢字検定 (Japan Kanji Aptitude Test) level analysis on Japanese Kanji";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "kansas-comet" = callPackage
    ({ mkDerivation, aeson, base, containers, data-default-class
     , scotty, stm, text, time, transformers, unordered-containers
     }:
     mkDerivation {
       pname = "kansas-comet";
       version = "0.4";
       sha256 = "1q9rffh6589a5am8mvfzxzwws34vg08rdjxggfabhmg9y9jla6hz";
       revision = "16";
       editedCabalFile = "1fnncjd9wjwrnl0247gizlvwklihjbfk21pad6a4mqnaa3li5672";
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [
         aeson base containers data-default-class scotty stm text time
         transformers unordered-containers
       ];
       homepage = "https://github.com/ku-fpg/kansas-comet/";
       description = "A JavaScript push mechanism based on the comet idiom";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "kawhi" = callPackage
    ({ mkDerivation, aeson, base, bytestring, exceptions, http-client
     , http-conduit, http-types, mtl, safe, scientific, smallcheck
     , tasty, tasty-hunit, tasty-quickcheck, tasty-smallcheck, text
     }:
     mkDerivation {
       pname = "kawhi";
       version = "0.3.0";
       sha256 = "0kx4lbyfh7brfg6vr05xcwa233lzld0pm3isvc4pr8fs7mx3h893";
       libraryHaskellDepends = [
         aeson base bytestring exceptions http-client http-conduit
         http-types mtl safe scientific text
       ];
       testHaskellDepends = [
         aeson base bytestring exceptions http-client http-types mtl
         scientific smallcheck tasty tasty-hunit tasty-quickcheck
         tasty-smallcheck text
       ];
       homepage = "https://github.com/thunky-monk/kawhi";
       description = "stats.NBA.com library";
       license = stdenv.lib.licenses.mit;
     }) {};
  "kdt" = callPackage
    ({ mkDerivation, base, criterion, deepseq, deepseq-generics, heap
     , mersenne-random-pure64, MonadRandom, QuickCheck
     }:
     mkDerivation {
       pname = "kdt";
       version = "0.2.4";
       sha256 = "16lz8zwv964izdbrdm8b2g8p1qdb4yv4f7qpfdi4c0fbq2d8y3xw";
       libraryHaskellDepends = [ base deepseq deepseq-generics heap ];
       testHaskellDepends = [ base deepseq deepseq-generics QuickCheck ];
       benchmarkHaskellDepends = [
         base criterion deepseq deepseq-generics heap mersenne-random-pure64
         MonadRandom QuickCheck
       ];
       homepage = "https://github.com/giogadi/kdt";
       description = "Fast and flexible k-d trees for various types of point queries";
       license = stdenv.lib.licenses.mit;
     }) {};
  "keycode" = callPackage
    ({ mkDerivation, base, containers, ghc-prim, template-haskell }:
     mkDerivation {
       pname = "keycode";
       version = "0.2.2";
       sha256 = "046k8d1h5wwadf5z4pppjkc3g7v2zxlzb06s1xgixc42y5y41yan";
       revision = "3";
       editedCabalFile = "18dgbpf3xwdm3x9j63vsr5q7l028qvifgc6jmjf1ar4p2wv1fzz0";
       libraryHaskellDepends = [
         base containers ghc-prim template-haskell
       ];
       homepage = "https://github.com/RyanGlScott/keycode";
       description = "Maps web browser keycodes to their corresponding keyboard keys";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "keys" = callPackage
    ({ mkDerivation, array, base, comonad, containers, free, hashable
     , semigroupoids, semigroups, tagged, transformers
     , transformers-compat, unordered-containers
     }:
     mkDerivation {
       pname = "keys";
       version = "3.12.1";
       sha256 = "1yqm4gpshsgswx6w78z64c83gpydh6jhgslx2lnc10nzhy0s9kkz";
       libraryHaskellDepends = [
         array base comonad containers free hashable semigroupoids
         semigroups tagged transformers transformers-compat
         unordered-containers
       ];
       homepage = "http://github.com/ekmett/keys/";
       description = "Keyed functors and containers";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "kleene" = callPackage
    ({ mkDerivation, base, base-compat-batteries, containers, lattices
     , MemoTrie, QuickCheck, range-set-list, regex-applicative
     , step-function, text, transformers
     }:
     mkDerivation {
       pname = "kleene";
       version = "0";
       sha256 = "00hbrmsm19azxxql14y6k7h7z8k4azlmy4y0gimyqbx4nb7swln6";
       revision = "1";
       editedCabalFile = "1izdmr7a2d7qssnj732m2qc02inm3hrc882x9nyvz68648pvwwsx";
       libraryHaskellDepends = [
         base base-compat-batteries containers lattices MemoTrie QuickCheck
         range-set-list regex-applicative step-function text transformers
       ];
       homepage = "https://github.com/phadej/kleene";
       description = "Kleene algebra";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "kmeans" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "kmeans";
       version = "0.1.3";
       sha256 = "02rc3bd2cp1fp0fxbzqiy34s5gn38j8hgviilz1584z05jhj97ix";
       libraryHaskellDepends = [ base ];
       description = "K-means clustering algorithm";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "koofr-client" = callPackage
    ({ mkDerivation, aeson, base, bytestring, filepath, http-client
     , http-client-tls, http-types, mtl
     }:
     mkDerivation {
       pname = "koofr-client";
       version = "1.0.0.3";
       sha256 = "1bz7akd7sssn1gzqfvr0y343771zk7dn1n3as0m93wg4ifpz1dia";
       revision = "1";
       editedCabalFile = "0qaipcg9n93z0za2a8jy3mv73a3q2b1dv98v2g5wwcv1qx7rvvhv";
       libraryHaskellDepends = [
         aeson base bytestring filepath http-client http-client-tls
         http-types mtl
       ];
       homepage = "https://github.com/edofic/koofr-api-hs";
       description = "Client to Koofr API";
       license = stdenv.lib.licenses.mit;
     }) {};
  "kraken" = callPackage
    ({ mkDerivation, aeson, base, bytestring, http-client
     , http-client-tls, mtl
     }:
     mkDerivation {
       pname = "kraken";
       version = "0.1.0";
       sha256 = "12l24z6alscbdicp11nfc8fwmlhk5mjdjyh6xdqyvlzphp5yfp1k";
       revision = "2";
       editedCabalFile = "141qx2fb3dimv20qsl2q1bagwcn9i0r72z2ha1w7191m557in319";
       libraryHaskellDepends = [
         aeson base bytestring http-client http-client-tls mtl
       ];
       description = "Kraken.io API client";
       license = stdenv.lib.licenses.mit;
     }) {};
  "l10n" = callPackage
    ({ mkDerivation, base, text, time }:
     mkDerivation {
       pname = "l10n";
       version = "0.1.0.1";
       sha256 = "182w8l9h2zw8lxr1fahnmcasbd09z2z00ii7gkmq2y95dm3k4w0a";
       libraryHaskellDepends = [ base text time ];
       homepage = "https://github.com/louispan/l10n#readme";
       description = "Enables providing localization as typeclass instances in separate files";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "labels" = callPackage
    ({ mkDerivation, base, template-haskell }:
     mkDerivation {
       pname = "labels";
       version = "0.3.3";
       sha256 = "04rh8c9ncd9radarz4fjka9hc3i6crvibpyj3y8qpij0acmw1d76";
       libraryHaskellDepends = [ base template-haskell ];
       homepage = "https://github.com/chrisdone/labels#readme";
       description = "Anonymous records via named tuples";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "lackey" = callPackage
    ({ mkDerivation, base, hspec, servant, servant-foreign, text }:
     mkDerivation {
       pname = "lackey";
       version = "1.0.7";
       sha256 = "0n90m4dsqfp4x4bckwxasg2cmjrzxp2szrlqf43pmp2dsc8g0646";
       libraryHaskellDepends = [ base servant servant-foreign text ];
       testHaskellDepends = [ base hspec servant servant-foreign text ];
       homepage = "https://github.com/tfausak/lackey#readme";
       description = "Generate Ruby clients from Servant APIs";
       license = stdenv.lib.licenses.mit;
     }) {};
  "lambdabot-core" = callPackage
    ({ mkDerivation, base, binary, bytestring, containers
     , dependent-map, dependent-sum, dependent-sum-template, directory
     , edit-distance, filepath, haskeline, hslogger, HTTP, lifted-base
     , monad-control, mtl, network, parsec, prim-uniq, random, random-fu
     , random-source, regex-tdfa, SafeSemaphore, split, syb
     , template-haskell, time, transformers, transformers-base, unix
     , utf8-string, zlib
     }:
     mkDerivation {
       pname = "lambdabot-core";
       version = "5.1.0.4";
       sha256 = "1cnp0w47fp0s1zlyb0d90xj5ynwfmlnzm5inc5lhbichwgqcwfzk";
       libraryHaskellDepends = [
         base binary bytestring containers dependent-map dependent-sum
         dependent-sum-template directory edit-distance filepath haskeline
         hslogger HTTP lifted-base monad-control mtl network parsec
         prim-uniq random random-fu random-source regex-tdfa SafeSemaphore
         split syb template-haskell time transformers transformers-base unix
         utf8-string zlib
       ];
       homepage = "https://wiki.haskell.org/Lambdabot";
       description = "Lambdabot core functionality";
       license = "GPL";
     }) {};
  "lambdabot-irc-plugins" = callPackage
    ({ mkDerivation, base, bytestring, containers, directory, filepath
     , lambdabot-core, lifted-base, mtl, network, SafeSemaphore, split
     , time
     }:
     mkDerivation {
       pname = "lambdabot-irc-plugins";
       version = "5.1.0.4";
       sha256 = "0kscksdqjysk9amxwb1xjh475pbwq22mf9as5kqwn72c8s75ngaf";
       libraryHaskellDepends = [
         base bytestring containers directory filepath lambdabot-core
         lifted-base mtl network SafeSemaphore split time
       ];
       homepage = "https://wiki.haskell.org/Lambdabot";
       description = "IRC plugins for lambdabot";
       license = "GPL";
     }) {};
  "lame" = callPackage
    ({ mkDerivation, base, bytestring, data-default-class, directory
     , exceptions, filepath, hspec, htaglib, mp3lame, temporary, text
     , transformers, wave
     }:
     mkDerivation {
       pname = "lame";
       version = "0.1.1";
       sha256 = "0j35zpfhppb09m6h23awxgsawisvgsnrw7d99f5z3xq2bjihjq5k";
       revision = "4";
       editedCabalFile = "0r364limqm570a8xd82wwpcvmcx2j7nfndg5kad022vz2v5n0smz";
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [
         base bytestring data-default-class directory exceptions filepath
         text transformers wave
       ];
       librarySystemDepends = [ mp3lame ];
       testHaskellDepends = [
         base data-default-class directory filepath hspec htaglib temporary
         text
       ];
       homepage = "https://github.com/mrkkrp/lame";
       description = "Fairly complete high-level binding to LAME encoder";
       license = stdenv.lib.licenses.bsd3;
     }) {mp3lame = null;};
  "language-c" = callPackage
    ({ mkDerivation, alex, array, base, bytestring, containers, deepseq
     , directory, filepath, happy, pretty, process, syb
     }:
     mkDerivation {
       pname = "language-c";
       version = "0.8.2";
       sha256 = "05ff3ywh2lpxgd00nv6y3jnqpdl6bg0f2yn3csd043rv4srd6adp";
       revision = "1";
       editedCabalFile = "1xg49j4bykgdm6l14m65wyz8r3s4v4dqc7a9zjcsr12ffkiv8nam";
       libraryHaskellDepends = [
         array base bytestring containers deepseq directory filepath pretty
         process syb
       ];
       libraryToolDepends = [ alex happy ];
       testHaskellDepends = [ base directory filepath process ];
       homepage = "http://visq.github.io/language-c/";
       description = "Analysis and generation of C code";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "language-c-quote" = callPackage
    ({ mkDerivation, alex, array, base, bytestring, containers
     , exception-mtl, exception-transformers, filepath, happy
     , haskell-src-meta, HUnit, mainland-pretty, mtl, srcloc, syb
     , symbol, template-haskell, test-framework, test-framework-hunit
     }:
     mkDerivation {
       pname = "language-c-quote";
       version = "0.12.2";
       sha256 = "15c6rdj91768jf8lqzf4fkbi8k6kz9gch5w81x6qzy2l256rncgb";
       revision = "1";
       editedCabalFile = "099w1lln1vm000sf06wrmq6gya5sx2w4flrlwqz2c8wwvv8c9j9h";
       libraryHaskellDepends = [
         array base bytestring containers exception-mtl
         exception-transformers filepath haskell-src-meta mainland-pretty
         mtl srcloc syb symbol template-haskell
       ];
       libraryToolDepends = [ alex happy ];
       testHaskellDepends = [
         base bytestring HUnit mainland-pretty srcloc symbol test-framework
         test-framework-hunit
       ];
       homepage = "https://github.com/mainland/language-c-quote";
       description = "C/CUDA/OpenCL/Objective-C quasiquoting library";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "language-docker" = callPackage
    ({ mkDerivation, base, bytestring, containers, directory, filepath
     , free, Glob, hspec, HUnit, megaparsec, mtl, prettyprinter, process
     , QuickCheck, split, template-haskell, text, th-lift, time
     }:
     mkDerivation {
       pname = "language-docker";
       version = "6.0.4";
       sha256 = "1brlqlxa1h7iv2p17h4nb6ly7nr4dr9j815z3yiz0gbj91bgj4c1";
       revision = "1";
       editedCabalFile = "0la3l8m32zmgb4nk4fwchy1abip0k1b0x1i9205dih136g1iaq62";
       libraryHaskellDepends = [
         base bytestring containers free megaparsec mtl prettyprinter split
         template-haskell text th-lift time
       ];
       testHaskellDepends = [
         base bytestring containers directory filepath free Glob hspec HUnit
         megaparsec mtl prettyprinter process QuickCheck split
         template-haskell text th-lift time
       ];
       homepage = "https://github.com/hadolint/language-docker#readme";
       description = "Dockerfile parser, pretty-printer and embedded DSL";
       license = stdenv.lib.licenses.gpl3;
     }) {};
  "language-ecmascript" = callPackage
    ({ mkDerivation, ansi-wl-pprint, base, charset, containers
     , data-default-class, Diff, mtl, parsec, QuickCheck
     , template-haskell, uniplate
     }:
     mkDerivation {
       pname = "language-ecmascript";
       version = "0.19";
       sha256 = "13v5ghw8qc4paacn34skgwmvwisjaykszwjrq3lk4idzvrxln2jp";
       libraryHaskellDepends = [
         ansi-wl-pprint base charset containers data-default-class Diff mtl
         parsec QuickCheck template-haskell uniplate
       ];
       doCheck = false;
       homepage = "http://github.com/jswebtools/language-ecmascript";
       description = "JavaScript parser and pretty-printer library";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "language-haskell-extract" = callPackage
    ({ mkDerivation, base, regex-posix, template-haskell }:
     mkDerivation {
       pname = "language-haskell-extract";
       version = "0.2.4";
       sha256 = "1nxcs7g8a1sp91bzpy4cj6s31k5pvc3gvig04cbrggv5cvjidnhl";
       libraryHaskellDepends = [ base regex-posix template-haskell ];
       homepage = "http://github.com/finnsson/template-helper";
       description = "Module to automatically extract functions from the local code";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "language-java" = callPackage
    ({ mkDerivation, alex, array, base, directory, filepath, mtl
     , parsec, pretty, tasty, tasty-hunit, tasty-quickcheck
     }:
     mkDerivation {
       pname = "language-java";
       version = "0.2.9";
       sha256 = "03hrj8hgyjmw2fvvk4ik30fdmbi3hndpkvf1bqcnpzqy5anwh58x";
       revision = "1";
       editedCabalFile = "0fnbg9b8isyk8dpmggh736mms7a2m65956y1z15wds63imzhs2ik";
       libraryHaskellDepends = [ array base parsec pretty ];
       libraryToolDepends = [ alex ];
       testHaskellDepends = [
         base directory filepath mtl tasty tasty-hunit tasty-quickcheck
       ];
       homepage = "http://github.com/vincenthz/language-java";
       description = "Java source manipulation";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "language-javascript" = callPackage
    ({ mkDerivation, alex, array, base, blaze-builder, bytestring
     , Cabal, containers, happy, hspec, mtl, QuickCheck, text
     , utf8-light, utf8-string
     }:
     mkDerivation {
       pname = "language-javascript";
       version = "0.6.0.11";
       sha256 = "0hv1rj3yarv035mpnnnbqys4sgd0awqlm5hyf29wp051r6dnwxfl";
       libraryHaskellDepends = [
         array base blaze-builder bytestring containers mtl text utf8-string
       ];
       libraryToolDepends = [ alex happy ];
       testHaskellDepends = [
         array base blaze-builder bytestring Cabal containers hspec mtl
         QuickCheck utf8-light utf8-string
       ];
       homepage = "https://github.com/erikd/language-javascript";
       description = "Parser for JavaScript";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "language-nix" = callPackage
    ({ mkDerivation, base, base-compat, Cabal, deepseq, doctest, lens
     , pretty, QuickCheck
     }:
     mkDerivation {
       pname = "language-nix";
       version = "2.1.0.1";
       sha256 = "1kqsw0hk03wdn7mszyjgi38nxk1wmhbxfv6di3irrhsaf807657h";
       revision = "1";
       editedCabalFile = "1zv12p4ralrks0517zs52rzmzmsxxkcxkqz7zijfgcsvh6bsmafi";
       libraryHaskellDepends = [
         base base-compat Cabal deepseq lens pretty QuickCheck
       ];
       testHaskellDepends = [
         base base-compat Cabal deepseq doctest lens pretty QuickCheck
       ];
       homepage = "https://github.com/peti/language-nix#readme";
       description = "Data types and useful functions to represent and manipulate the Nix language";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "language-puppet" = callPackage
    ({ mkDerivation, aeson, ansi-wl-pprint, attoparsec, base
     , base16-bytestring, bytestring, case-insensitive, containers
     , cryptonite, directory, exceptions, filecache, filepath
     , formatting, Glob, hashable, hruby, hslogger, hspec
     , hspec-megaparsec, http-api-data, http-client, lens, lens-aeson
     , megaparsec, memory, mtl, operational, optparse-applicative
     , parallel-io, parsec, pcre-utils, process, protolude, random
     , regex-pcre-builtin, scientific, servant, servant-client, split
     , stm, strict-base-types, temporary, text, time, transformers, unix
     , unordered-containers, vector, yaml
     }:
     mkDerivation {
       pname = "language-puppet";
       version = "1.3.20.1";
       sha256 = "0gak1v8p6fnrac7br2gvz3wg8mymm82gyv4wbdcp5rkj7ncm19vs";
       isLibrary = true;
       isExecutable = true;
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [
         aeson ansi-wl-pprint attoparsec base base16-bytestring bytestring
         case-insensitive containers cryptonite directory exceptions
         filecache filepath formatting hashable hruby hslogger hspec
         http-api-data http-client lens lens-aeson megaparsec memory mtl
         operational parsec pcre-utils process protolude random
         regex-pcre-builtin scientific servant servant-client split stm
         strict-base-types text time transformers unix unordered-containers
         vector yaml
       ];
       executableHaskellDepends = [
         aeson ansi-wl-pprint base bytestring containers Glob hslogger
         http-client lens megaparsec mtl optparse-applicative parallel-io
         regex-pcre-builtin strict-base-types text transformers
         unordered-containers vector yaml
       ];
       testHaskellDepends = [
         base Glob hslogger hspec hspec-megaparsec lens megaparsec mtl
         pcre-utils protolude scientific strict-base-types temporary text
         transformers unordered-containers vector
       ];
       homepage = "http://lpuppet.banquise.net/";
       description = "Tools to parse and evaluate the Puppet DSL";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "lapack-carray" = callPackage
    ({ mkDerivation, base, carray, lapack-ffi, netlib-carray
     , netlib-ffi, storable-complex, transformers
     }:
     mkDerivation {
       pname = "lapack-carray";
       version = "0.0.2";
       sha256 = "1dr4mbhc5y21mbnksyi530rsvckfp4mclhhig2rjhx3b06cksfna";
       libraryHaskellDepends = [
         base carray lapack-ffi netlib-carray netlib-ffi storable-complex
         transformers
       ];
       homepage = "http://hub.darcs.net/thielema/lapack-carray/";
       description = "Auto-generated interface to Fortran LAPACK via CArrays";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "lapack-ffi" = callPackage
    ({ mkDerivation, base, liblapack, netlib-ffi }:
     mkDerivation {
       pname = "lapack-ffi";
       version = "0.0.2";
       sha256 = "11759avf0kzkqy4s24kn556j93l10x28njpg6h14y915pdl35dyl";
       libraryHaskellDepends = [ base netlib-ffi ];
       libraryPkgconfigDepends = [ liblapack ];
       homepage = "http://hub.darcs.net/thielema/lapack-ffi/";
       description = "Auto-generated interface to Fortran LAPACK";
       license = stdenv.lib.licenses.bsd3;
     }) {inherit (pkgs) liblapack;};
  "lapack-ffi-tools" = callPackage
    ({ mkDerivation, base, bytestring, cassava, containers
     , explicit-exception, filepath, non-empty, optparse-applicative
     , parsec, pathtype, transformers, unordered-containers, utility-ht
     , vector
     }:
     mkDerivation {
       pname = "lapack-ffi-tools";
       version = "0.1.1";
       sha256 = "1y3h69mkbjidl146y1w0symk8rgpir5gb5914ymmg83nsyyl16vk";
       isLibrary = false;
       isExecutable = true;
       enableSeparateDataOutput = true;
       executableHaskellDepends = [
         base bytestring cassava containers explicit-exception filepath
         non-empty optparse-applicative parsec pathtype transformers
         unordered-containers utility-ht vector
       ];
       doHaddock = false;
       homepage = "http://hub.darcs.net/thielema/lapack-ffi-tools/";
       description = "Generator for Haskell interface to Fortran LAPACK";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "large-hashable" = callPackage
    ({ mkDerivation, aeson, base, base16-bytestring, byteable, bytes
     , bytestring, cereal, containers, cryptohash, deepseq, hashable
     , HTF, QuickCheck, safecopy, scientific, strict, template-haskell
     , text, time, transformers, unordered-containers, utf8-light
     , vector, void
     }:
     mkDerivation {
       pname = "large-hashable";
       version = "0.1.0.4";
       sha256 = "13k2k8rqbk40whzn4hpa92ypws2c1gh5fb4zh0diy5m0kxfk9hz9";
       libraryHaskellDepends = [
         aeson base base16-bytestring bytes bytestring containers scientific
         strict template-haskell text time transformers unordered-containers
         utf8-light vector void
       ];
       testHaskellDepends = [
         aeson base bytes bytestring containers hashable HTF QuickCheck
         scientific strict text time unordered-containers vector
       ];
       benchmarkHaskellDepends = [
         base base16-bytestring byteable bytes bytestring cereal cryptohash
         deepseq safecopy text transformers
       ];
       homepage = "https://github.com/factisresearch/large-hashable";
       description = "Efficiently hash (large) Haskell values";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "largeword" = callPackage
    ({ mkDerivation, base, binary, bytestring, HUnit, QuickCheck
     , test-framework, test-framework-hunit, test-framework-quickcheck2
     }:
     mkDerivation {
       pname = "largeword";
       version = "1.2.5";
       sha256 = "0ikxklg4w30hyfcnrq8hr348p8s9hg42b9sj9x0byjb6hinv1cq0";
       libraryHaskellDepends = [ base binary ];
       testHaskellDepends = [
         base binary bytestring HUnit QuickCheck test-framework
         test-framework-hunit test-framework-quickcheck2
       ];
       homepage = "https://github.com/idontgetoutmuch/largeword";
       description = "Provides Word128, Word192 and Word256 and a way of producing other large words if required";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "latex" = callPackage
    ({ mkDerivation, base, containers, utility-ht }:
     mkDerivation {
       pname = "latex";
       version = "0.1.0.4";
       sha256 = "10m0l0wlrkkl474sdmi7cl6w6kqyqzcp05h7jdacxhzbxyf8nahw";
       libraryHaskellDepends = [ base containers utility-ht ];
       homepage = "http://www.haskell.org/haskellwiki/LaTeX";
       description = "Parse, format and process LaTeX files";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "lattices" = callPackage
    ({ mkDerivation, base, base-compat, containers, deepseq, hashable
     , QuickCheck, quickcheck-instances, semigroupoids, tagged, tasty
     , tasty-quickcheck, transformers, universe-base
     , universe-instances-base, universe-reverse-instances
     , unordered-containers
     }:
     mkDerivation {
       pname = "lattices";
       version = "1.7.1.1";
       sha256 = "1byx2hmmh2213afdcsjxf3mvq3h9bwkl5wrvzxv1yqvd9jiqjz3r";
       revision = "1";
       editedCabalFile = "18182vlzaz5kzcn2j0k1jmdl8kgqmnpjc3ynsi7v6jdl3vig89dr";
       libraryHaskellDepends = [
         base base-compat containers deepseq hashable semigroupoids tagged
         universe-base universe-reverse-instances unordered-containers
       ];
       testHaskellDepends = [
         base base-compat containers QuickCheck quickcheck-instances tasty
         tasty-quickcheck transformers universe-instances-base
         unordered-containers
       ];
       homepage = "http://github.com/phadej/lattices/";
       description = "Fine-grained library for constructing and manipulating lattices";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "lawful" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "lawful";
       version = "0.1.0.0";
       sha256 = "014drjks30wij31fm371q5d8m6x3fpf3z52dim6zmxxv0r0pjmh0";
       libraryHaskellDepends = [ base ];
       homepage = "https://github.com/matt-noonan/lawful#readme";
       description = "Assert the lawfulness of your typeclass instances";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "lazyio" = callPackage
    ({ mkDerivation, base, transformers, unsafe }:
     mkDerivation {
       pname = "lazyio";
       version = "0.1.0.4";
       sha256 = "0v6g2r4x9m1ksvx62bkn0hndasfh387ylrz67hwkdj61rnyg0m4b";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [ base transformers unsafe ];
       homepage = "http://www.haskell.org/haskellwiki/Lazy_IO";
       description = "Run IO actions lazily while respecting their order";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "lca" = callPackage
    ({ mkDerivation, base, Cabal, cabal-doctest, doctest }:
     mkDerivation {
       pname = "lca";
       version = "0.3.1";
       sha256 = "0kj3zsmzckczp51w70x1aqayk2fay4vcqwz8j6sdv0hdw1d093ca";
       setupHaskellDepends = [ base Cabal cabal-doctest ];
       libraryHaskellDepends = [ base ];
       testHaskellDepends = [ base doctest ];
       homepage = "http://github.com/ekmett/lca/";
       description = "O(log n) persistent online lowest common ancestor search without preprocessing";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "leancheck" = callPackage
    ({ mkDerivation, base, template-haskell }:
     mkDerivation {
       pname = "leancheck";
       version = "0.7.7";
       sha256 = "0ymzs3w7nfagpcyh4f57f1wi1gr72k7pbkh729jrxxqgqhd84bvd";
       libraryHaskellDepends = [ base template-haskell ];
       testHaskellDepends = [ base ];
       homepage = "https://github.com/rudymatela/leancheck#readme";
       description = "Enumerative property-based testing";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "leapseconds-announced" = callPackage
    ({ mkDerivation, base, QuickCheck, time }:
     mkDerivation {
       pname = "leapseconds-announced";
       version = "2017.1.0.1";
       sha256 = "1mm8j994106gyx9p3widkydczn8wcj79m2kiymg9fjkhmxyb4fyd";
       libraryHaskellDepends = [ base time ];
       testHaskellDepends = [ base QuickCheck time ];
       homepage = "https://github.com/bjornbm/leapseconds-announced";
       description = "Leap seconds announced at library release time";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "learn-physics" = callPackage
    ({ mkDerivation, base, gloss, gnuplot, hmatrix, not-gloss
     , spatial-math, vector-space
     }:
     mkDerivation {
       pname = "learn-physics";
       version = "0.6.3";
       sha256 = "0nhc53l963fsviw3yqz7yxwbjwxsrp8s4jckffbg6hl8npakhirh";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         base gloss gnuplot hmatrix not-gloss spatial-math vector-space
       ];
       executableHaskellDepends = [
         base gloss gnuplot not-gloss spatial-math
       ];
       description = "Haskell code for learning physics";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "lens" = callPackage
    ({ mkDerivation, array, base, base-orphans, bifunctors, bytestring
     , Cabal, cabal-doctest, call-stack, comonad, containers
     , contravariant, criterion, deepseq, directory, distributive
     , doctest, exceptions, filepath, free, generic-deriving, ghc-prim
     , hashable, HUnit, kan-extensions, mtl, nats, parallel, profunctors
     , QuickCheck, reflection, semigroupoids, semigroups, simple-reflect
     , tagged, template-haskell, test-framework, test-framework-hunit
     , test-framework-quickcheck2, test-framework-th, text
     , th-abstraction, transformers, transformers-compat
     , unordered-containers, vector, void
     }:
     mkDerivation {
       pname = "lens";
       version = "4.16.1";
       sha256 = "1im4drhbydbawd6i0jsrzpqihnmx4ywpkg7yg94ddwsw3mxwkgpm";
       revision = "2";
       editedCabalFile = "11h83lj5mba4grhz1qx3irz10ysm9c3k7k6i6xv2cr60q8xin3ri";
       setupHaskellDepends = [ base Cabal cabal-doctest filepath ];
       libraryHaskellDepends = [
         array base base-orphans bifunctors bytestring call-stack comonad
         containers contravariant distributive exceptions filepath free
         ghc-prim hashable kan-extensions mtl parallel profunctors
         reflection semigroupoids semigroups tagged template-haskell text
         th-abstraction transformers transformers-compat
         unordered-containers vector void
       ];
       testHaskellDepends = [
         base bytestring containers deepseq directory doctest filepath
         generic-deriving HUnit mtl nats parallel QuickCheck semigroups
         simple-reflect test-framework test-framework-hunit
         test-framework-quickcheck2 test-framework-th text transformers
         unordered-containers vector
       ];
       benchmarkHaskellDepends = [
         base bytestring comonad containers criterion deepseq
         generic-deriving transformers unordered-containers vector
       ];
       homepage = "http://github.com/ekmett/lens/";
       description = "Lenses, Folds and Traversals";
       license = stdenv.lib.licenses.bsd2;
     }) {};
  "lens-action" = callPackage
    ({ mkDerivation, base, Cabal, cabal-doctest, comonad, contravariant
     , directory, doctest, filepath, lens, mtl, profunctors
     , semigroupoids, semigroups, transformers
     }:
     mkDerivation {
       pname = "lens-action";
       version = "0.2.3";
       sha256 = "1q4q190lv6gh3bvdz9n177hwrckkkbfbwcw64b9ksz11gxn8m106";
       setupHaskellDepends = [ base Cabal cabal-doctest ];
       libraryHaskellDepends = [
         base comonad contravariant lens mtl profunctors semigroupoids
         semigroups transformers
       ];
       testHaskellDepends = [ base directory doctest filepath ];
       homepage = "http://github.com/ekmett/lens-action/";
       description = "Monadic Getters and Folds";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "lens-aeson" = callPackage
    ({ mkDerivation, aeson, attoparsec, base, bytestring, Cabal
     , cabal-doctest, doctest, generic-deriving, lens, scientific
     , semigroups, simple-reflect, text, unordered-containers, vector
     }:
     mkDerivation {
       pname = "lens-aeson";
       version = "1.0.2";
       sha256 = "1k028ycmhz7mnjlrap88fqix4nmmpyy6b88m16kv77d3r8sz04a3";
       revision = "6";
       editedCabalFile = "1pg5v8fnlqw1krgi3d2a03a0zkjjdv5yp5f5z6q4mlb5jldz99a8";
       setupHaskellDepends = [ base Cabal cabal-doctest ];
       libraryHaskellDepends = [
         aeson attoparsec base bytestring lens scientific text
         unordered-containers vector
       ];
       testHaskellDepends = [
         base doctest generic-deriving semigroups simple-reflect
       ];
       homepage = "http://github.com/lens/lens-aeson/";
       description = "Law-abiding lenses for aeson";
       license = stdenv.lib.licenses.mit;
     }) {};
  "lens-datetime" = callPackage
    ({ mkDerivation, base, lens, time }:
     mkDerivation {
       pname = "lens-datetime";
       version = "0.3";
       sha256 = "1m6cns38xggw8kcc9h0mf4q024cvc8njm7n33f8gi7hwyxxqs7xv";
       libraryHaskellDepends = [ base lens time ];
       homepage = "https://github.com/nilcons/lens-datetime";
       description = "Lenses for Data.Time.* types";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "lens-family" = callPackage
    ({ mkDerivation, base, containers, lens-family-core, mtl
     , transformers
     }:
     mkDerivation {
       pname = "lens-family";
       version = "1.2.3";
       sha256 = "0a8fvvc3fsi5fzk5bnqvbgdz22xvvw55nyfac6411q0pm6vy4nc0";
       libraryHaskellDepends = [
         base containers lens-family-core mtl transformers
       ];
       description = "Lens Families";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "lens-family-core" = callPackage
    ({ mkDerivation, base, containers, transformers }:
     mkDerivation {
       pname = "lens-family-core";
       version = "1.2.3";
       sha256 = "009rf10pj1cb50v44cc1pq7qvfrmkkk9dikahs9qmvbvgl3mykwi";
       libraryHaskellDepends = [ base containers transformers ];
       description = "Haskell 98 Lens Families";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "lens-family-th" = callPackage
    ({ mkDerivation, base, hspec, template-haskell, transformers }:
     mkDerivation {
       pname = "lens-family-th";
       version = "0.5.0.2";
       sha256 = "1rmhcnnlnll4mq7pqld5qg6crxh74gp0fqiwl6wn8l3ssgx5l9ww";
       libraryHaskellDepends = [ base template-haskell ];
       testHaskellDepends = [ base hspec template-haskell transformers ];
       homepage = "http://github.com/DanBurton/lens-family-th#readme";
       description = "Generate lens-family style lenses";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "lens-labels" = callPackage
    ({ mkDerivation, base, ghc-prim, profunctors, tagged }:
     mkDerivation {
       pname = "lens-labels";
       version = "0.2.0.2";
       sha256 = "1s23klkxckly91yfn194bbd3g8lq2x5ykp2mx6730wh2izzwiblw";
       libraryHaskellDepends = [ base ghc-prim profunctors tagged ];
       homepage = "https://github.com/google/proto-lens#readme";
       description = "Integration of lenses with OverloadedLabels";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "lens-misc" = callPackage
    ({ mkDerivation, base, lens, tagged, template-haskell }:
     mkDerivation {
       pname = "lens-misc";
       version = "0.0.2.0";
       sha256 = "1jyqxi83imkyd318m17p2z84zqaxyb08mk5gy7q7saay2blmz4jr";
       libraryHaskellDepends = [ base lens tagged template-haskell ];
       homepage = "https://github.com/louispan/lens-misc#readme";
       description = "Miscellaneous lens utilities";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "lens-properties" = callPackage
    ({ mkDerivation, base, lens, QuickCheck, transformers }:
     mkDerivation {
       pname = "lens-properties";
       version = "4.11.1";
       sha256 = "1caciyn75na3f25q9qxjl7ibjam22xlhl5k2pqfiak10lxsmnz2g";
       revision = "2";
       editedCabalFile = "1b14fcncz2yby0d4jhx2h0ma6nx0fd1z7hrg1va4h7zn06m99482";
       libraryHaskellDepends = [ base lens QuickCheck transformers ];
       homepage = "http://github.com/ekmett/lens/";
       description = "QuickCheck properties for lens";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "lens-regex" = callPackage
    ({ mkDerivation, array, base, directory, doctest, filepath, lens
     , regex-base, regex-posix, template-haskell
     }:
     mkDerivation {
       pname = "lens-regex";
       version = "0.1.0";
       sha256 = "0hjizjmvdngxn63gs7x87qidh71aqhvyigrnqlbfjqan76pb6m29";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         array base lens regex-base template-haskell
       ];
       testHaskellDepends = [
         base directory doctest filepath regex-posix
       ];
       homepage = "https://github.com/himura/lens-regex";
       description = "Lens powered regular expression";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "lens-simple" = callPackage
    ({ mkDerivation, base, lens-family, lens-family-core
     , lens-family-th, mtl, transformers
     }:
     mkDerivation {
       pname = "lens-simple";
       version = "0.1.0.9";
       sha256 = "0al3bfhrq6lq43s6k0c03vcf126i1naajhd64shgi5s10yw9jgb1";
       libraryHaskellDepends = [
         base lens-family lens-family-core lens-family-th mtl transformers
       ];
       homepage = "https://github.com/michaelt/lens-simple";
       description = "simplified import of elementary lens-family combinators";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "lenz" = callPackage
    ({ mkDerivation, base, base-unicode-symbols, hs-functors
     , transformers
     }:
     mkDerivation {
       pname = "lenz";
       version = "0.3.0.0";
       sha256 = "17a3d91az0qv138q7x8wbka797z9pfxl3mbyydcr7i7p87dk48k3";
       libraryHaskellDepends = [
         base base-unicode-symbols hs-functors transformers
       ];
       description = "Van Laarhoven lenses";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "leveldb-haskell" = callPackage
    ({ mkDerivation, base, bytestring, data-default, directory
     , exceptions, filepath, leveldb, mtl, QuickCheck, resourcet, tasty
     , tasty-quickcheck, temporary, transformers
     }:
     mkDerivation {
       pname = "leveldb-haskell";
       version = "0.6.5";
       sha256 = "0a3csz8zmjjp90ji1yqrc3h7rb1b612i6v4kfwxagswd0s4b05x4";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         base bytestring data-default exceptions filepath resourcet
         transformers
       ];
       librarySystemDepends = [ leveldb ];
       testHaskellDepends = [
         base bytestring data-default directory exceptions mtl QuickCheck
         tasty tasty-quickcheck temporary transformers
       ];
       homepage = "http://github.com/kim/leveldb-haskell";
       description = "Haskell bindings to LevelDB";
       license = stdenv.lib.licenses.bsd3;
     }) {inherit (pkgs) leveldb;};
  "libffi" = callPackage
    ({ mkDerivation, base, bytestring, ffi, libffi }:
     mkDerivation {
       pname = "libffi";
       version = "0.1";
       sha256 = "0g7jnhng3j7z5517aaqga0144aamibsbpgm3yynwyfzkq1kp0f28";
       libraryHaskellDepends = [ base bytestring ];
       librarySystemDepends = [ ffi ];
       libraryPkgconfigDepends = [ libffi ];
       description = "A binding to libffi";
       license = stdenv.lib.licenses.bsd3;
     }) {ffi = null; inherit (pkgs) libffi;};
  "libgit" = callPackage
    ({ mkDerivation, base, mtl, process }:
     mkDerivation {
       pname = "libgit";
       version = "0.3.1";
       sha256 = "08km9y2wqz426c5c6r49ar5snl8ss1w7d55yqivksdkwk3fn0k0x";
       libraryHaskellDepends = [ base mtl process ];
       homepage = "https://github.com/vincenthz/hs-libgit";
       description = "Simple Git Wrapper";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "libgraph" = callPackage
    ({ mkDerivation, array, base, containers, monads-tf, process
     , union-find
     }:
     mkDerivation {
       pname = "libgraph";
       version = "1.14";
       sha256 = "0grzimgy946mnwggmlc3sja567v2s21ymcwzlwf110k11pjqp5xp";
       libraryHaskellDepends = [
         array base containers monads-tf process union-find
       ];
       homepage = "http://maartenfaddegon.nl";
       description = "Store and manipulate data in a graph";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "libmpd" = callPackage
    ({ mkDerivation, attoparsec, base, bytestring, containers
     , data-default-class, filepath, hspec, mtl, network, old-locale
     , QuickCheck, text, time, unix, utf8-string
     }:
     mkDerivation {
       pname = "libmpd";
       version = "0.9.0.9";
       sha256 = "1931m23iqb4wddpdidm4ph746zpaw41kkjzmb074j7yyfpk7x1jv";
       libraryHaskellDepends = [
         attoparsec base bytestring containers data-default-class filepath
         mtl network old-locale text time utf8-string
       ];
       testHaskellDepends = [
         attoparsec base bytestring containers data-default-class filepath
         hspec mtl network old-locale QuickCheck text time unix utf8-string
       ];
       doCheck = false;
       homepage = "http://github.com/vimus/libmpd-haskell#readme";
       description = "An MPD client library";
       license = stdenv.lib.licenses.mit;
     }) {};
  "libxml-sax" = callPackage
    ({ mkDerivation, base, bytestring, libxml2, text, xml-types }:
     mkDerivation {
       pname = "libxml-sax";
       version = "0.7.5";
       sha256 = "0lbdq6lmiyrnzk6gkx09vvp928wj8qnqnqfzy14mfv0drj21f54r";
       libraryHaskellDepends = [ base bytestring text xml-types ];
       librarySystemDepends = [ libxml2 ];
       libraryPkgconfigDepends = [ libxml2 ];
       homepage = "https://john-millikin.com/software/haskell-libxml/";
       description = "Bindings for the libXML2 SAX interface";
       license = stdenv.lib.licenses.mit;
     }) {inherit (pkgs) libxml2;};
  "lift-generics" = callPackage
    ({ mkDerivation, base, base-compat, generic-deriving, ghc-prim
     , hspec, template-haskell
     }:
     mkDerivation {
       pname = "lift-generics";
       version = "0.1.2";
       sha256 = "0kk05dp6n93jgxq4x1lrckjrca6lrwa7qklr3vpzc6iyrlbvv7qf";
       revision = "2";
       editedCabalFile = "171f8cpn0kw9psikx3n7cdwyqfwg8rr8gf1hja6g7pnm0683l5l8";
       libraryHaskellDepends = [
         base generic-deriving ghc-prim template-haskell
       ];
       testHaskellDepends = [
         base base-compat generic-deriving hspec template-haskell
       ];
       homepage = "https://github.com/RyanGlScott/lift-generics";
       description = "GHC.Generics-based Language.Haskell.TH.Syntax.lift implementation";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "lifted-async" = callPackage
    ({ mkDerivation, async, base, constraints, criterion, deepseq
     , HUnit, lifted-base, monad-control, mtl, tasty
     , tasty-expected-failure, tasty-hunit, tasty-th, transformers-base
     }:
     mkDerivation {
       pname = "lifted-async";
       version = "0.10.0.3";
       sha256 = "131bh83yc3jhy0hwgslvs9p9clgl4i2hhvwz2xgx7igpbhsrrl43";
       libraryHaskellDepends = [
         async base constraints lifted-base monad-control transformers-base
       ];
       testHaskellDepends = [
         async base HUnit lifted-base monad-control mtl tasty
         tasty-expected-failure tasty-hunit tasty-th
       ];
       benchmarkHaskellDepends = [ async base criterion deepseq ];
       homepage = "https://github.com/maoe/lifted-async";
       description = "Run lifted IO operations asynchronously and wait for their results";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "lifted-base" = callPackage
    ({ mkDerivation, base, criterion, HUnit, monad-control, monad-peel
     , test-framework, test-framework-hunit, transformers
     , transformers-base, transformers-compat
     }:
     mkDerivation {
       pname = "lifted-base";
       version = "0.2.3.12";
       sha256 = "1i8p8d3rkdh21bhgjjh32vd7qqjr7jq7p59qds0aw2kmargsjd61";
       libraryHaskellDepends = [ base monad-control transformers-base ];
       testHaskellDepends = [
         base HUnit monad-control test-framework test-framework-hunit
         transformers transformers-base transformers-compat
       ];
       benchmarkHaskellDepends = [
         base criterion monad-control monad-peel transformers
       ];
       homepage = "https://github.com/basvandijk/lifted-base";
       description = "lifted IO operations from the base library";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "line" = callPackage
    ({ mkDerivation, aeson, base, base64-bytestring, bytestring
     , cryptohash-sha256, hspec, hspec-wai, http-conduit, http-types
     , QuickCheck, quickcheck-instances, raw-strings-qq, scotty, text
     , time, transformers, wai
     }:
     mkDerivation {
       pname = "line";
       version = "4.0.1";
       sha256 = "0z36847iamf18b38nz6mcps599cnn17046n61y94g1q7rmfsppx1";
       libraryHaskellDepends = [
         aeson base base64-bytestring bytestring cryptohash-sha256
         http-conduit http-types scotty text time transformers wai
       ];
       testHaskellDepends = [
         aeson base base64-bytestring bytestring cryptohash-sha256 hspec
         hspec-wai QuickCheck quickcheck-instances raw-strings-qq scotty
         text time transformers
       ];
       homepage = "https://github.com/utatti/line";
       description = "Haskell SDK for the LINE API";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "linear" = callPackage
    ({ mkDerivation, adjunctions, base, base-orphans, binary, bytes
     , bytestring, Cabal, cabal-doctest, cereal, containers, deepseq
     , distributive, doctest, ghc-prim, hashable, HUnit, lens
     , reflection, semigroupoids, semigroups, simple-reflect, tagged
     , template-haskell, test-framework, test-framework-hunit
     , transformers, transformers-compat, unordered-containers, vector
     , void
     }:
     mkDerivation {
       pname = "linear";
       version = "1.20.8";
       sha256 = "046vkvxlb0s286qr55s0c6db0rlwbm1cmlmwhrrkqbkzhfcipgay";
       setupHaskellDepends = [ base Cabal cabal-doctest ];
       libraryHaskellDepends = [
         adjunctions base base-orphans binary bytes cereal containers
         deepseq distributive ghc-prim hashable lens reflection
         semigroupoids semigroups tagged template-haskell transformers
         transformers-compat unordered-containers vector void
       ];
       testHaskellDepends = [
         base binary bytestring deepseq doctest HUnit lens reflection
         simple-reflect test-framework test-framework-hunit vector
       ];
       homepage = "http://github.com/ekmett/linear/";
       description = "Linear Algebra";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "linked-list-with-iterator" = callPackage
    ({ mkDerivation, base, containers }:
     mkDerivation {
       pname = "linked-list-with-iterator";
       version = "0.1.1.0";
       sha256 = "128vy6rhnhmgr4xggxxxi4s73lz6vb2zkzi85ywzqfhjkp63gbn6";
       libraryHaskellDepends = [ base containers ];
       testHaskellDepends = [ base ];
       homepage = "https://github.com/CindyLinz/Haskell-linked-list-with-iterator#readme";
       description = "A pure linked list which is mutable through iterators";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "linux-file-extents" = callPackage
    ({ mkDerivation, base, unix }:
     mkDerivation {
       pname = "linux-file-extents";
       version = "0.2.0.0";
       sha256 = "1l4vznam1a8vf3nixhbmw38rpzkvmbka0cbdfdsgfrpn03kxjz3c";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [ base unix ];
       homepage = "https://github.com/redneb/linux-file-extents";
       description = "Retrieve file fragmentation information under Linux";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "linux-namespaces" = callPackage
    ({ mkDerivation, base, bytestring, unix }:
     mkDerivation {
       pname = "linux-namespaces";
       version = "0.1.3.0";
       sha256 = "1rvkzfmd07sz46k059ly80cjgwx67igfw8zsw8c6ljsp3hsdn4hl";
       libraryHaskellDepends = [ base bytestring unix ];
       homepage = "https://github.com/redneb/hs-linux-namespaces";
       description = "Work with linux namespaces: create new or enter existing ones";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "list-t" = callPackage
    ({ mkDerivation, base, mmorph, monad-control, mtl, transformers
     , transformers-base
     }:
     mkDerivation {
       pname = "list-t";
       version = "1.0.2";
       sha256 = "08wjng9d1sqjqc6pgq2lh84gcaabqmrslm3slc0rvaxh1lvasv6s";
       libraryHaskellDepends = [
         base mmorph monad-control mtl transformers transformers-base
       ];
       doCheck = false;
       homepage = "https://github.com/nikita-volkov/list-t";
       description = "ListT done right";
       license = stdenv.lib.licenses.mit;
     }) {};
  "listsafe" = callPackage
    ({ mkDerivation, base, exceptions }:
     mkDerivation {
       pname = "listsafe";
       version = "0.1.0.1";
       sha256 = "0scd74fv6gzl7yi5ssb1z9kwwfyx9p39yqprnzbpvspvxm3k41qs";
       libraryHaskellDepends = [ base exceptions ];
       homepage = "https://github.com/ombocomp/listsafe";
       description = "Safe wrappers for partial list functions, supporting MonadThrow";
       license = stdenv.lib.licenses.asl20;
     }) {};
  "llvm-hs" = callPackage
    ({ mkDerivation, array, attoparsec, base, bytestring, Cabal
     , containers, exceptions, llvm-config, llvm-hs-pure, mtl
     , pretty-show, process, QuickCheck, tasty, tasty-hunit
     , tasty-quickcheck, template-haskell, temporary, transformers
     , utf8-string
     }:
     mkDerivation {
       pname = "llvm-hs";
       version = "6.3.0";
       sha256 = "10v13f0pcsjaz7lhpg5wr520qp9rgajbv5c3pqx4v79nmfv797jd";
       revision = "2";
       editedCabalFile = "08rm1y7icxp2bdmv65n5nxg5mkppqpqd3m62n50gk6991kki9qdf";
       setupHaskellDepends = [ base Cabal containers ];
       libraryHaskellDepends = [
         array attoparsec base bytestring containers exceptions llvm-hs-pure
         mtl template-haskell transformers utf8-string
       ];
       libraryToolDepends = [ llvm-config ];
       testHaskellDepends = [
         base bytestring containers llvm-hs-pure mtl pretty-show process
         QuickCheck tasty tasty-hunit tasty-quickcheck temporary
         transformers
       ];
       homepage = "http://github.com/llvm-hs/llvm-hs/";
       description = "General purpose LLVM bindings";
       license = stdenv.lib.licenses.bsd3;
     }) {llvm-config = null;};
  "llvm-hs-pretty" = callPackage
    ({ mkDerivation, array, base, bytestring, directory, filepath
     , llvm-hs, llvm-hs-pure, mtl, prettyprinter, tasty, tasty-golden
     , tasty-hspec, tasty-hunit, text, transformers
     }:
     mkDerivation {
       pname = "llvm-hs-pretty";
       version = "0.5.0.0";
       sha256 = "1715x7wggllp445kkb6f2pkc87qw504yvl2adzz2i4fz8jzm1jhd";
       libraryHaskellDepends = [
         array base bytestring llvm-hs-pure prettyprinter text
       ];
       testHaskellDepends = [
         base directory filepath llvm-hs llvm-hs-pure mtl tasty tasty-golden
         tasty-hspec tasty-hunit text transformers
       ];
       doCheck = false;
       homepage = "https://github.com/llvm-hs/llvm-hs-pretty";
       description = "A pretty printer for LLVM IR";
       license = stdenv.lib.licenses.mit;
     }) {};
  "llvm-hs-pure" = callPackage
    ({ mkDerivation, attoparsec, base, bytestring, containers, fail
     , mtl, tasty, tasty-hunit, tasty-quickcheck, template-haskell
     , transformers, unordered-containers
     }:
     mkDerivation {
       pname = "llvm-hs-pure";
       version = "6.2.1";
       sha256 = "1a9xzg6q4gd6j7dkvpkqpnrmh8y1fabllpjbh0m181v1c52aj23r";
       libraryHaskellDepends = [
         attoparsec base bytestring containers fail mtl template-haskell
         transformers unordered-containers
       ];
       testHaskellDepends = [
         base containers mtl tasty tasty-hunit tasty-quickcheck transformers
       ];
       homepage = "http://github.com/llvm-hs/llvm-hs/";
       description = "Pure Haskell LLVM functionality (no FFI)";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "lmdb" = callPackage
    ({ mkDerivation, array, base, lmdb }:
     mkDerivation {
       pname = "lmdb";
       version = "0.2.5";
       sha256 = "0z8wj06b5ii0w6pls2jlqmd3mhyrplhxd1c6h1my1p0w45b2hmc0";
       libraryHaskellDepends = [ array base ];
       librarySystemDepends = [ lmdb ];
       homepage = "http://github.com/dmbarbour/haskell-lmdb";
       description = "Lightning MDB bindings";
       license = stdenv.lib.licenses.bsd2;
     }) {inherit (pkgs) lmdb;};
  "load-env" = callPackage
    ({ mkDerivation, base, directory, doctest, filepath, hspec, parsec
     , temporary
     }:
     mkDerivation {
       pname = "load-env";
       version = "0.2.0.2";
       sha256 = "063zd2nbwbyndfy1hrir9x270f99wzbyarfj561r9dddak2754w1";
       libraryHaskellDepends = [ base directory filepath parsec ];
       testHaskellDepends = [
         base directory doctest hspec parsec temporary
       ];
       homepage = "https://github.com/pbrisbin/load-env#readme";
       description = "Load environment variables from a file";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "locators" = callPackage
    ({ mkDerivation, base, bytestring, containers, cryptohash, hspec
     , HUnit, QuickCheck
     }:
     mkDerivation {
       pname = "locators";
       version = "0.2.4.4";
       sha256 = "19csw13qbxxv7lr3blx856k2y21sidgpnv56dq45la3f4100jv9d";
       libraryHaskellDepends = [ base bytestring containers cryptohash ];
       testHaskellDepends = [
         base bytestring containers cryptohash hspec HUnit QuickCheck
       ];
       description = "Human exchangable identifiers and locators";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "loch-th" = callPackage
    ({ mkDerivation, base, pretty, template-haskell }:
     mkDerivation {
       pname = "loch-th";
       version = "0.2.2";
       sha256 = "1hvdkcyrlnv65q8x8h0441x30wr9bbfbg3961xd3fy9an5r961fc";
       libraryHaskellDepends = [ base pretty template-haskell ];
       homepage = "https://github.com/liskin/loch-th";
       description = "Support for precise error locations in source files (Template Haskell version)";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "lockfree-queue" = callPackage
    ({ mkDerivation, abstract-deque, abstract-deque-tests
     , atomic-primops, base, bytestring, ghc-prim, HUnit, test-framework
     , test-framework-hunit
     }:
     mkDerivation {
       pname = "lockfree-queue";
       version = "0.2.3.1";
       sha256 = "131s1w6bdd958pg42s2i62xvw4basagir45y3vhbvsp8p9a6lmra";
       libraryHaskellDepends = [
         abstract-deque atomic-primops base bytestring ghc-prim
       ];
       testHaskellDepends = [
         abstract-deque abstract-deque-tests atomic-primops base bytestring
         ghc-prim HUnit test-framework test-framework-hunit
       ];
       homepage = "https://github.com/rrnewton/haskell-lockfree/wiki";
       description = "Michael and Scott lock-free queues";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "log-base" = callPackage
    ({ mkDerivation, aeson, aeson-pretty, base, bytestring, deepseq
     , exceptions, mmorph, monad-control, monad-time, mtl, semigroups
     , stm, text, time, transformers-base, unordered-containers
     }:
     mkDerivation {
       pname = "log-base";
       version = "0.7.4.0";
       sha256 = "06rzvh3g294hpwpxw2syvywrw3rms1chjxqhki8b97ml1nlfnrs0";
       libraryHaskellDepends = [
         aeson aeson-pretty base bytestring deepseq exceptions mmorph
         monad-control monad-time mtl semigroups stm text time
         transformers-base unordered-containers
       ];
       homepage = "https://github.com/scrive/log";
       description = "Structured logging solution (base package)";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "log-domain" = callPackage
    ({ mkDerivation, base, binary, bytes, Cabal, cabal-doctest, cereal
     , comonad, deepseq, distributive, doctest, generic-deriving
     , hashable, semigroupoids, semigroups, simple-reflect, vector
     }:
     mkDerivation {
       pname = "log-domain";
       version = "0.12";
       sha256 = "0zin3zgxrx8v69blqzkd5gjk0nmpmg58caqz2xa8qd4v1fjcp4bi";
       revision = "3";
       editedCabalFile = "19xc24jwfhzy3v26689sc4ma50w4ylqd378dpxphl0nrxili645z";
       setupHaskellDepends = [ base Cabal cabal-doctest ];
       libraryHaskellDepends = [
         base binary bytes cereal comonad deepseq distributive hashable
         semigroupoids semigroups vector
       ];
       testHaskellDepends = [
         base doctest generic-deriving semigroups simple-reflect
       ];
       homepage = "http://github.com/ekmett/log-domain/";
       description = "Log-domain arithmetic";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "log-postgres" = callPackage
    ({ mkDerivation, aeson, aeson-pretty, base, base64-bytestring
     , bytestring, deepseq, hpqtypes, http-client, lifted-base, log-base
     , mtl, semigroups, split, text, text-show, time
     , unordered-containers, vector
     }:
     mkDerivation {
       pname = "log-postgres";
       version = "0.7.0.2";
       sha256 = "16v3wli0jll5j24pdzmya90lyawqv3rcvsfd4z88kgcchds07iji";
       revision = "1";
       editedCabalFile = "1f18nzrh3bxnb58cmd3zyqpwaw2jyfl92dg6qd30zhlvlnkz1q7q";
       libraryHaskellDepends = [
         aeson aeson-pretty base base64-bytestring bytestring deepseq
         hpqtypes http-client lifted-base log-base mtl semigroups split text
         text-show time unordered-containers vector
       ];
       homepage = "https://github.com/scrive/log";
       description = "Structured logging solution (PostgreSQL back end)";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "logfloat" = callPackage
    ({ mkDerivation, array, base }:
     mkDerivation {
       pname = "logfloat";
       version = "0.13.3.3";
       sha256 = "10kza99pzs0ajn6xqd66sm059xp43i2sl0mnd8257q1av1qvsx7p";
       libraryHaskellDepends = [ array base ];
       homepage = "http://code.haskell.org/~wren/";
       description = "Log-domain floating point numbers";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "logger-thread" = callPackage
    ({ mkDerivation, base, fast-logger, protolude, safe-exceptions, stm
     , text, time
     }:
     mkDerivation {
       pname = "logger-thread";
       version = "0.1.0.2";
       sha256 = "0ajaq3mfvzy58b3nmbdhkgsqxdcz76flv710fpwzdkv9380582mc";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         base fast-logger protolude safe-exceptions stm text time
       ];
       executableHaskellDepends = [ base protolude stm ];
       homepage = "https://github.com/joe9/logger-thread#readme";
       description = "Run FastLogger in a thread and direct all queued messages to it";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "logging-effect" = callPackage
    ({ mkDerivation, async, base, bytestring, criterion, exceptions
     , fast-logger, free, lifted-async, monad-control, monad-logger, mtl
     , prettyprinter, semigroups, stm, stm-delay, text, time
     , transformers, transformers-base, unliftio-core
     }:
     mkDerivation {
       pname = "logging-effect";
       version = "1.3.3";
       sha256 = "10pighhav1zmg54gvfnvxcvz83698ziaq9ccs3zqc7jxahmyaslr";
       libraryHaskellDepends = [
         async base exceptions free monad-control mtl prettyprinter
         semigroups stm stm-delay text time transformers transformers-base
         unliftio-core
       ];
       benchmarkHaskellDepends = [
         base bytestring criterion fast-logger lifted-async monad-logger
         prettyprinter text time
       ];
       homepage = "https://github.com/ocharles/logging-effect";
       description = "A mtl-style monad transformer for general purpose & compositional logging";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "logging-facade" = callPackage
    ({ mkDerivation, base, call-stack, hspec, transformers }:
     mkDerivation {
       pname = "logging-facade";
       version = "0.3.0";
       sha256 = "0d0lwxxgd16is9aw6v3ps4r9prv3dj8xscmm45fvzq3nicjiawcf";
       libraryHaskellDepends = [ base call-stack transformers ];
       testHaskellDepends = [ base hspec ];
       homepage = "https://github.com/sol/logging-facade#readme";
       description = "Simple logging abstraction that allows multiple back-ends";
       license = stdenv.lib.licenses.mit;
     }) {};
  "logging-facade-syslog" = callPackage
    ({ mkDerivation, base, hsyslog, logging-facade }:
     mkDerivation {
       pname = "logging-facade-syslog";
       version = "1";
       sha256 = "1acfkmr3cgprij9sfa0hfqyni6s8py22s3n0xa8qhy3syz1j72zb";
       libraryHaskellDepends = [ base hsyslog logging-facade ];
       homepage = "https://github.com/peti/logging-facade-syslog#readme";
       description = "A logging back-end to syslog(3) for the logging-facade library";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "logict" = callPackage
    ({ mkDerivation, base, mtl }:
     mkDerivation {
       pname = "logict";
       version = "0.6.0.2";
       sha256 = "07hnirv6snnym2r7iijlfz00b60jpy2856zvqxh989q0in7bd0hi";
       libraryHaskellDepends = [ base mtl ];
       homepage = "http://code.haskell.org/~dolio/";
       description = "A backtracking logic-programming monad";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "long-double" = callPackage
    ({ mkDerivation, base, integer-gmp }:
     mkDerivation {
       pname = "long-double";
       version = "0.1";
       sha256 = "072yfv1kv83k8qc9apks2czr9p6znk46bbbjmsdbcpzyb8byh64j";
       revision = "1";
       editedCabalFile = "12vmzzrxgb4yqf9axf1fildl4m0dfm3zqxk4vg6k6m5qi6haz1yn";
       libraryHaskellDepends = [ base integer-gmp ];
       homepage = "https://code.mathr.co.uk/long-double";
       description = "FFI bindings for C long double";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "loop" = callPackage
    ({ mkDerivation, base, criterion, foldl, hspec, mtl, random, vector
     }:
     mkDerivation {
       pname = "loop";
       version = "0.3.0";
       sha256 = "1kry1c6jmn96jqsdj46x2z3ibwnn34lf8gyxj80cqa5bpl8215lj";
       libraryHaskellDepends = [ base ];
       testHaskellDepends = [ base hspec mtl ];
       benchmarkHaskellDepends = [
         base criterion foldl mtl random vector
       ];
       homepage = "https://github.com/nh2/loop";
       description = "Fast loops (for when GHC can't optimize forM_)";
       license = stdenv.lib.licenses.mit;
     }) {};
  "lrucache" = callPackage
    ({ mkDerivation, base, containers, contravariant }:
     mkDerivation {
       pname = "lrucache";
       version = "1.2.0.1";
       sha256 = "11avhnjnb89rvn2s41jhh5r40zgp7r6kb5c0hcfiibpabqvv46pw";
       libraryHaskellDepends = [ base containers contravariant ];
       homepage = "http://github.com/chowells79/lrucache";
       description = "a simple, pure LRU cache";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "lrucaching" = callPackage
    ({ mkDerivation, base, base-compat, containers, deepseq, hashable
     , hspec, psqueues, QuickCheck, transformers, vector
     }:
     mkDerivation {
       pname = "lrucaching";
       version = "0.3.3";
       sha256 = "192a2zap1bmxa2y48n48rmngf18fr8k0az4a230hziv3g795yzma";
       revision = "5";
       editedCabalFile = "0dfrgg60nd7l7pfjar1s1g380r4591y6ccv9fyh0n34ymhizk84y";
       libraryHaskellDepends = [
         base base-compat deepseq hashable psqueues vector
       ];
       testHaskellDepends = [
         base containers deepseq hashable hspec QuickCheck transformers
       ];
       homepage = "https://github.com/cocreature/lrucaching#readme";
       description = "LRU cache";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "lucid" = callPackage
    ({ mkDerivation, base, bifunctors, blaze-builder, bytestring
     , containers, criterion, deepseq, hashable, hspec, HUnit, mmorph
     , mtl, parsec, text, transformers, unordered-containers
     }:
     mkDerivation {
       pname = "lucid";
       version = "2.9.11";
       sha256 = "13xz21hf9ywbyqwm33z8pfrjq03rzffhqswi30xsi13rrawj99cc";
       libraryHaskellDepends = [
         base blaze-builder bytestring containers hashable mmorph mtl text
         transformers unordered-containers
       ];
       testHaskellDepends = [
         base bifunctors hspec HUnit mtl parsec text
       ];
       benchmarkHaskellDepends = [
         base blaze-builder bytestring criterion deepseq text transformers
       ];
       homepage = "https://github.com/chrisdone/lucid";
       description = "Clear to write, read and edit DSL for HTML";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "lucid-extras" = callPackage
    ({ mkDerivation, aeson, base, blaze-builder, bytestring, directory
     , lucid, text
     }:
     mkDerivation {
       pname = "lucid-extras";
       version = "0.1.0.1";
       sha256 = "0wyb5pqhphfckmzpnl0xp6fy8fmnwqjqim3h3f3sdjqkqdly5iaw";
       revision = "1";
       editedCabalFile = "030mj3yddbia6dkbl8d6mssi42l3z8gs79z50r78gwiif6mh5dny";
       libraryHaskellDepends = [
         aeson base blaze-builder bytestring lucid text
       ];
       testHaskellDepends = [ base directory lucid ];
       homepage = "https://github.com/diffusionkinetics/open/lucid-extras";
       description = "Generate more HTML with Lucid";
       license = stdenv.lib.licenses.mit;
     }) {};
  "lxd-client-config" = callPackage
    ({ mkDerivation, aeson, base, containers, directory, filepath
     , HUnit, QuickCheck, test-framework, test-framework-hunit
     , test-framework-quickcheck2, text, yaml
     }:
     mkDerivation {
       pname = "lxd-client-config";
       version = "0.1.0.1";
       sha256 = "1kxg42hrgq5w38v1zsq8v9x0ky83c02k8rx2qcyazh7bkg4m4f4h";
       libraryHaskellDepends = [
         aeson base containers directory filepath text yaml
       ];
       testHaskellDepends = [
         base containers HUnit QuickCheck test-framework
         test-framework-hunit test-framework-quickcheck2 text yaml
       ];
       homepage = "https://github.com/hverr/haskell-lxd-client-config#readme";
       description = "Read the configuration file of the standard LXD client";
       license = stdenv.lib.licenses.gpl3;
     }) {};
  "lz4" = callPackage
    ({ mkDerivation, base, bytestring, cereal, criterion, deepseq
     , hspec, HUnit, QuickCheck, quicklz, snappy
     }:
     mkDerivation {
       pname = "lz4";
       version = "0.2.3.1";
       sha256 = "1wck0sl7m873pqnpmn95vrp9jbr7awjdp9rrkqgj0nd3l6z65k4q";
       libraryHaskellDepends = [ base bytestring cereal ];
       testHaskellDepends = [ base bytestring hspec HUnit QuickCheck ];
       benchmarkHaskellDepends = [
         base bytestring criterion deepseq quicklz snappy
       ];
       homepage = "http://github.com/mwotton/lz4hs";
       description = "LZ4 compression for ByteStrings";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "lzma" = callPackage
    ({ mkDerivation, base, bytestring, lzma }:
     mkDerivation {
       pname = "lzma";
       version = "0.0.0.3";
       sha256 = "0i416gqi8j55nd1pqbkxvf3f6hn6fjys6gq98lkkxphva71j30xg";
       revision = "3";
       editedCabalFile = "1sify6gnsalyp6dakfzi0mdy5jcz2kcp9jsdsgkmxd40nfzgd44m";
       libraryHaskellDepends = [ base bytestring ];
       librarySystemDepends = [ lzma ];
       doCheck = false;
       homepage = "https://github.com/hvr/lzma";
       description = "LZMA/XZ compression and decompression";
       license = stdenv.lib.licenses.bsd3;
     }) {inherit (pkgs) lzma;};
  "lzma-conduit" = callPackage
    ({ mkDerivation, base, base-compat, bytestring, conduit, HUnit
     , lzma, QuickCheck, resourcet, test-framework, test-framework-hunit
     , test-framework-quickcheck2, transformers
     }:
     mkDerivation {
       pname = "lzma-conduit";
       version = "1.2.1";
       sha256 = "0hm72da7xk9l3zxjh274yg444vf405djxqbkf3q3p2qhicmxlmg9";
       libraryHaskellDepends = [
         base bytestring conduit lzma resourcet transformers
       ];
       testHaskellDepends = [
         base base-compat bytestring conduit HUnit QuickCheck resourcet
         test-framework test-framework-hunit test-framework-quickcheck2
       ];
       homepage = "http://github.com/alphaHeavy/lzma-conduit";
       description = "Conduit interface for lzma/xz compression";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "machines" = callPackage
    ({ mkDerivation, adjunctions, base, Cabal, cabal-doctest, comonad
     , conduit, containers, criterion, distributive, doctest, mtl, pipes
     , pointed, profunctors, semigroupoids, semigroups, streaming
     , transformers, transformers-compat, void
     }:
     mkDerivation {
       pname = "machines";
       version = "0.6.4";
       sha256 = "0s3pvdklanw6a41pyyqrplm3vid63dpy6vd6qhp86dnb4wp2ppkj";
       setupHaskellDepends = [ base Cabal cabal-doctest ];
       libraryHaskellDepends = [
         adjunctions base comonad containers distributive mtl pointed
         profunctors semigroupoids semigroups transformers
         transformers-compat void
       ];
       testHaskellDepends = [ base doctest ];
       benchmarkHaskellDepends = [
         base conduit criterion mtl pipes streaming
       ];
       homepage = "http://github.com/ekmett/machines/";
       description = "Networked stream transducers";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "machines-binary" = callPackage
    ({ mkDerivation, base, binary, bytestring, machines }:
     mkDerivation {
       pname = "machines-binary";
       version = "0.3.0.3";
       sha256 = "0lh6q99xfmxl53gkxlrbjh1pfbkff8faxr9fycks98cfcmnlbzv0";
       libraryHaskellDepends = [ base binary bytestring machines ];
       homepage = "http://github.com/aloiscochard/machines-binary";
       description = "Binary utilities for the machines library";
       license = stdenv.lib.licenses.asl20;
     }) {};
  "machines-directory" = callPackage
    ({ mkDerivation, base, directory, filepath, machines, machines-io
     , transformers
     }:
     mkDerivation {
       pname = "machines-directory";
       version = "0.2.1.0";
       sha256 = "1d6yfh26g9gs406ywc42ascnxcfcz2isfa6j921xikzndzdhg744";
       libraryHaskellDepends = [
         base directory filepath machines machines-io transformers
       ];
       homepage = "http://github.com/aloiscochard/machines-directory";
       description = "Directory (system) utilities for the machines library";
       license = stdenv.lib.licenses.asl20;
     }) {};
  "machines-io" = callPackage
    ({ mkDerivation, base, bytestring, chunked-data, machines
     , transformers
     }:
     mkDerivation {
       pname = "machines-io";
       version = "0.2.0.13";
       sha256 = "1m7mm3s7inyiy07w8idgwb99k2a9cd1768hkm7ygryllkrg9smsd";
       libraryHaskellDepends = [
         base bytestring chunked-data machines transformers
       ];
       homepage = "http://github.com/aloiscochard/machines-io";
       description = "IO utilities for the machines library";
       license = stdenv.lib.licenses.asl20;
     }) {};
  "magicbane" = callPackage
    ({ mkDerivation, aeson, aeson-qq, attoparsec, base, bytestring
     , conduit, conduit-combinators, data-default, data-has, ekg-core
     , ekg-wai, envy, errors, exceptions, fast-logger, http-api-data
     , http-client, http-client-tls, http-conduit, http-link-header
     , http-types, lifted-base, monad-control, monad-logger
     , monad-metrics, mono-traversable, mtl, network-uri, raw-strings-qq
     , refined, rio, rio-orphans, servant-server, split
     , string-conversions, text, transformers, transformers-base
     , unliftio, unliftio-core, unordered-containers, wai, wai-cli
     , wai-middleware-metrics
     }:
     mkDerivation {
       pname = "magicbane";
       version = "0.3.0";
       sha256 = "1jg6mhi046gdp0mhwzx2n40dv2ysrj8mkif6krb4vg3mdwh39lr0";
       libraryHaskellDepends = [
         aeson aeson-qq attoparsec base bytestring conduit
         conduit-combinators data-default data-has ekg-core ekg-wai envy
         errors exceptions fast-logger http-api-data http-client
         http-client-tls http-conduit http-link-header http-types
         lifted-base monad-control monad-logger monad-metrics
         mono-traversable mtl network-uri raw-strings-qq refined rio
         rio-orphans servant-server split string-conversions text
         transformers transformers-base unliftio unliftio-core
         unordered-containers wai wai-cli wai-middleware-metrics
       ];
       homepage = "https://github.com/myfreeweb/magicbane#readme";
       description = "A web framework that integrates Servant, RIO, EKG, fast-logger, wai-cli…";
       license = stdenv.lib.licenses.publicDomain;
     }) {};
  "main-tester" = callPackage
    ({ mkDerivation, base, bytestring, directory, doctest, hspec
     , hspec-core, QuickCheck, text
     }:
     mkDerivation {
       pname = "main-tester";
       version = "0.1.0.0";
       sha256 = "0sagm9fkdgjv8x602bjj32glcrivjf3yz47gpbbm48k0mk0dj2dc";
       libraryHaskellDepends = [ base bytestring directory ];
       testHaskellDepends = [
         base bytestring doctest hspec hspec-core QuickCheck text
       ];
       doCheck = false;
       homepage = "https://gitlab.com/igrep/main-tester#readme";
       description = "Capture stdout/stderr/exit code, and replace stdin of your main function";
       license = stdenv.lib.licenses.asl20;
     }) {};
  "mainland-pretty" = callPackage
    ({ mkDerivation, base, containers, srcloc, text, transformers }:
     mkDerivation {
       pname = "mainland-pretty";
       version = "0.7";
       sha256 = "1xzavchbp345a63i24hs8632l3xk0c1pxqd32b2i6615cp9pnxqi";
       revision = "1";
       editedCabalFile = "1apyqnbcsbjfkqc1d6mk74pxl12130r6ijwhj555gddls9g0qdf3";
       libraryHaskellDepends = [
         base containers srcloc text transformers
       ];
       homepage = "https://github.com/mainland/mainland-pretty";
       description = "Pretty printing designed for printing source code";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "makefile" = callPackage
    ({ mkDerivation, attoparsec, base, text }:
     mkDerivation {
       pname = "makefile";
       version = "1.1.0.0";
       sha256 = "01swnw8fp2cx5z5xim9apia3yw48six61mhf6p3g0gp99w4i4ypd";
       libraryHaskellDepends = [ attoparsec base text ];
       doCheck = false;
       homepage = "http://github.com/nmattia/mask";
       description = "Simple Makefile parser and generator";
       license = stdenv.lib.licenses.mit;
     }) {};
  "managed" = callPackage
    ({ mkDerivation, base, transformers }:
     mkDerivation {
       pname = "managed";
       version = "1.0.6";
       sha256 = "1kbrw99yh5x5blykmx2n88mplbbi4ss1ij5j17b7asw6q0ihm9zi";
       libraryHaskellDepends = [ base transformers ];
       description = "A monad for managed values";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "mapquest-api" = callPackage
    ({ mkDerivation, aeson, base, bytestring, exceptions, goggles, mtl
     , req, text
     }:
     mkDerivation {
       pname = "mapquest-api";
       version = "0.3.1";
       sha256 = "11bvba2yyif31srkpwc8hzgfks4528l4v2m9jgvyh5hqp4hr4cs3";
       libraryHaskellDepends = [
         aeson base bytestring exceptions goggles mtl req text
       ];
       homepage = "https://github.com/ocramz/mapquest-api";
       description = "Bindings to the MapQuest API";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "markdown" = callPackage
    ({ mkDerivation, attoparsec, base, blaze-html, blaze-markup
     , bytestring, call-stack, conduit, conduit-extra, containers
     , data-default, directory, filepath, hspec, text, transformers
     , xml-conduit, xml-types, xss-sanitize
     }:
     mkDerivation {
       pname = "markdown";
       version = "0.1.17.4";
       sha256 = "1m7xf3r7wvpzdj2zic90w5b6adnjb6mjq9mycbnzcjibpr1fgqy2";
       libraryHaskellDepends = [
         attoparsec base blaze-html blaze-markup conduit conduit-extra
         containers data-default text transformers xml-conduit xml-types
         xss-sanitize
       ];
       testHaskellDepends = [
         base blaze-html bytestring call-stack conduit conduit-extra
         containers directory filepath hspec text transformers
       ];
       homepage = "https://github.com/snoyberg/markdown";
       description = "Convert Markdown to HTML, with XSS protection";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "markdown-unlit" = callPackage
    ({ mkDerivation, base, base-compat, directory, hspec, QuickCheck
     , silently, stringbuilder, temporary
     }:
     mkDerivation {
       pname = "markdown-unlit";
       version = "0.5.0";
       sha256 = "1gy79vr85vcp13rdjh0hz7zv6daqqffww4j0cqn2lpjjh9xhsbg7";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [ base base-compat ];
       executableHaskellDepends = [ base base-compat ];
       testHaskellDepends = [
         base base-compat directory hspec QuickCheck silently stringbuilder
         temporary
       ];
       homepage = "https://github.com/sol/markdown-unlit#readme";
       description = "Literate Haskell support for Markdown";
       license = stdenv.lib.licenses.mit;
     }) {};
  "markov-chain" = callPackage
    ({ mkDerivation, base, containers, random, transformers }:
     mkDerivation {
       pname = "markov-chain";
       version = "0.0.3.4";
       sha256 = "1kcjgfdwca4arngbj7w2g8bpmk5p44dyzrwcw8xmja0s200bhlbf";
       libraryHaskellDepends = [ base containers random transformers ];
       homepage = "http://code.haskell.org/~thielema/markov-chain/";
       description = "Markov Chains for generating random sequences with a user definable behaviour";
       license = "GPL";
     }) {};
  "marvin-interpolate" = callPackage
    ({ mkDerivation, base, haskell-src-meta, hspec, mtl, parsec
     , template-haskell, text
     }:
     mkDerivation {
       pname = "marvin-interpolate";
       version = "1.1.2";
       sha256 = "1kzc83ly479cwm95qpfsixb747xi34ylm49wn8gpvqbh5yyc6h6n";
       libraryHaskellDepends = [
         base haskell-src-meta mtl parsec template-haskell text
       ];
       testHaskellDepends = [ base hspec text ];
       homepage = "http://marvin.readthedocs.io/en/latest/interpolation.html";
       description = "Compile time string interpolation a la Scala and CoffeeScript";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "massiv" = callPackage
    ({ mkDerivation, base, bytestring, data-default, data-default-class
     , deepseq, ghc-prim, hspec, primitive, QuickCheck, safe-exceptions
     , vector
     }:
     mkDerivation {
       pname = "massiv";
       version = "0.2.5.0";
       sha256 = "0r7556mxsqzxg1kp4hrbv3c07xzkf08sycaqbfyy2xrzzczgiy9z";
       libraryHaskellDepends = [
         base bytestring data-default-class deepseq ghc-prim primitive
         vector
       ];
       testHaskellDepends = [
         base bytestring data-default deepseq hspec QuickCheck
         safe-exceptions vector
       ];
       homepage = "https://github.com/lehins/massiv";
       description = "Massiv (Массив) is an Array Library";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "massiv-io" = callPackage
    ({ mkDerivation, base, bytestring, data-default, deepseq, directory
     , filepath, JuicyPixels, massiv, netpbm, process, vector
     }:
     mkDerivation {
       pname = "massiv-io";
       version = "0.1.4.0";
       sha256 = "0yah1g7cm959kzzlqkgbzrx5aswd697518v89z7r5380f6hqq4cc";
       libraryHaskellDepends = [
         base bytestring data-default deepseq directory filepath JuicyPixels
         massiv netpbm process vector
       ];
       homepage = "https://github.com/lehins/massiv";
       description = "Import/export of Image files into massiv Arrays";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "math-functions" = callPackage
    ({ mkDerivation, base, deepseq, erf, HUnit, primitive, QuickCheck
     , test-framework, test-framework-hunit, test-framework-quickcheck2
     , vector, vector-th-unbox
     }:
     mkDerivation {
       pname = "math-functions";
       version = "0.2.1.0";
       sha256 = "1sv5vabsx332v1lpb6v3jv4zrzvpx1n7yprzd8wlcda5vsc5a6zp";
       libraryHaskellDepends = [
         base deepseq primitive vector vector-th-unbox
       ];
       testHaskellDepends = [
         base deepseq erf HUnit primitive QuickCheck test-framework
         test-framework-hunit test-framework-quickcheck2 vector
         vector-th-unbox
       ];
       doCheck = false;
       homepage = "https://github.com/bos/math-functions";
       description = "Special functions and Chebyshev polynomials";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "mathexpr" = callPackage
    ({ mkDerivation, base, data-default-class }:
     mkDerivation {
       pname = "mathexpr";
       version = "0.3.0.0";
       sha256 = "1bbi9368zg50xvhn0lkrza1fpfi1cjz21lxyay6qb9v2r7h0mhr3";
       libraryHaskellDepends = [ base data-default-class ];
       homepage = "https://github.com/mdibaiee/mathexpr";
       description = "Parse and evaluate math expressions with variables and functions";
       license = stdenv.lib.licenses.gpl3;
     }) {};
  "matrices" = callPackage
    ({ mkDerivation, base, criterion, deepseq, primitive, tasty
     , tasty-hunit, tasty-quickcheck, vector
     }:
     mkDerivation {
       pname = "matrices";
       version = "0.4.5";
       sha256 = "15vkkd3jwfdp648lfhskzhnisb1bzqia3asw8fmanpk71l9nyf9d";
       libraryHaskellDepends = [ base deepseq primitive vector ];
       testHaskellDepends = [
         base tasty tasty-hunit tasty-quickcheck vector
       ];
       benchmarkHaskellDepends = [ base criterion vector ];
       description = "native matrix based on vector";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "matrix" = callPackage
    ({ mkDerivation, base, criterion, deepseq, loop, primitive
     , QuickCheck, semigroups, tasty, tasty-quickcheck, vector
     }:
     mkDerivation {
       pname = "matrix";
       version = "0.3.6.1";
       sha256 = "0b1v17rc9q7ni44gkzp124kmc5d6xmlpiqvskgjrq54qpjinr5zs";
       revision = "1";
       editedCabalFile = "0iy0gdgg68ldhgm4lzvzl5pmzflx0r4brdbdkq75rkarm7cigawn";
       libraryHaskellDepends = [
         base deepseq loop primitive semigroups vector
       ];
       testHaskellDepends = [ base QuickCheck tasty tasty-quickcheck ];
       benchmarkHaskellDepends = [ base criterion ];
       description = "A native implementation of matrix operations";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "matrix-market-attoparsec" = callPackage
    ({ mkDerivation, attoparsec, base, bytestring, directory
     , exceptions, hspec, QuickCheck, scientific
     }:
     mkDerivation {
       pname = "matrix-market-attoparsec";
       version = "0.1.0.8";
       sha256 = "0xqa4q4wyjjh55lggsyjhsi0kb5rhk3afzk0qhnhdmnzmf0slhay";
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [
         attoparsec base bytestring exceptions scientific
       ];
       testHaskellDepends = [
         base directory exceptions hspec QuickCheck
       ];
       homepage = "https://github.com/ocramz/matrix-market-attoparsec";
       description = "Parsing and serialization functions for the NIST Matrix Market format";
       license = stdenv.lib.licenses.bsd2;
     }) {};
  "maximal-cliques" = callPackage
    ({ mkDerivation, base, containers, vector }:
     mkDerivation {
       pname = "maximal-cliques";
       version = "0.1.1";
       sha256 = "1sbmykgb5lrd32rih09d8d0r5isz4nh5slfyd93dgln7ag3hb7bh";
       libraryHaskellDepends = [ base containers vector ];
       description = "Enumerate all maximal cliques of a graph";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "mbox" = callPackage
    ({ mkDerivation, base, safe, text, time, time-locale-compat }:
     mkDerivation {
       pname = "mbox";
       version = "0.3.4";
       sha256 = "1pkiagxb013an71d3si3kldgn7rl9l5zi2s3s6hjhfg0pcwbbr6w";
       revision = "1";
       editedCabalFile = "11jikczq21fnhsvr6n33qbb5q6ixbhab4s0js8n39zwgmglighz5";
       libraryHaskellDepends = [ base safe text time time-locale-compat ];
       description = "Read and write standard mailbox files";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "mbox-utility" = callPackage
    ({ mkDerivation, base, bytestring, hsemail, non-empty, old-time
     , parsec, spreadsheet, utility-ht
     }:
     mkDerivation {
       pname = "mbox-utility";
       version = "0.0.1";
       sha256 = "1y792np4i24jlyxfsm4dw3m1bvij5wxj77dkqj2hvclm7kw0kq75";
       isLibrary = false;
       isExecutable = true;
       executableHaskellDepends = [
         base bytestring hsemail non-empty old-time parsec spreadsheet
         utility-ht
       ];
       doHaddock = false;
       description = "List contents of an mbox file containing e-mails";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "mbtiles" = callPackage
    ({ mkDerivation, base, bytestring, directory, HUnit, monad-control
     , mtl, resource-pool, sqlite-simple, text, transformers
     , unordered-containers
     }:
     mkDerivation {
       pname = "mbtiles";
       version = "0.6.0.0";
       sha256 = "0bynkbwq33fqyyv4bkl2y3sx57b73w1pyn292jb5j6jm3h52za5q";
       libraryHaskellDepends = [
         base bytestring directory monad-control mtl resource-pool
         sqlite-simple text transformers unordered-containers
       ];
       testHaskellDepends = [ base HUnit ];
       homepage = "https://github.com/caneroj1/mbtiles#readme";
       description = "Haskell MBTiles client";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "mbug" = callPackage
    ({ mkDerivation, base, bytestring, directory, extra, formatting
     , http-client, http-client-tls, mtl, optparse-applicative, process
     , scalpel-core, tagsoup, text, time, xdg-basedir
     }:
     mkDerivation {
       pname = "mbug";
       version = "1.3";
       sha256 = "1pa3myyd2qrb14797hix4dh0ajpwr49219x5bf030yps6b0hsi91";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         base bytestring directory extra formatting http-client
         http-client-tls mtl optparse-applicative process scalpel-core
         tagsoup text time xdg-basedir
       ];
       executableHaskellDepends = [
         base bytestring directory extra formatting http-client
         http-client-tls mtl optparse-applicative process scalpel-core
         tagsoup text time xdg-basedir
       ];
       homepage = "https://gitlab.com/iu-guest/mbug";
       description = "download bugs mailboxes";
       license = stdenv.lib.licenses.gpl3;
     }) {};
  "mcmc-types" = callPackage
    ({ mkDerivation, base, containers, mwc-probability, transformers }:
     mkDerivation {
       pname = "mcmc-types";
       version = "1.0.3";
       sha256 = "0vpwrszhpl0ygs1qjk9v8gakl4rjia0cl4y3vna7cmh51c1jajrw";
       libraryHaskellDepends = [
         base containers mwc-probability transformers
       ];
       homepage = "http://github.com/jtobin/mcmc-types";
       description = "Common types for sampling";
       license = stdenv.lib.licenses.mit;
     }) {};
  "med-module" = callPackage
    ({ mkDerivation, base, bytestring, storable-endian, transformers
     , utility-ht
     }:
     mkDerivation {
       pname = "med-module";
       version = "0.1.1";
       sha256 = "1qzffgcg29gjc6j0dl9ablgzad3lry28n9kv55kp5lgqm3xp92gp";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         base bytestring storable-endian transformers utility-ht
       ];
       description = "Parse song module files from Amiga MED and OctaMED";
       license = stdenv.lib.licenses.gpl3;
     }) {};
  "median-stream" = callPackage
    ({ mkDerivation, base, heap, QuickCheck }:
     mkDerivation {
       pname = "median-stream";
       version = "0.7.0.0";
       sha256 = "0g8zqyv9scj2ccvj667yn782c3vqc9a25b8a37lsz78qx15w8bz9";
       libraryHaskellDepends = [ base heap ];
       testHaskellDepends = [ base QuickCheck ];
       homepage = "https://github.com/caneroj1/median-stream#readme";
       description = "Constant-time queries for the median of a stream of numeric data";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "mega-sdist" = callPackage
    ({ mkDerivation, base, bytestring, conduit, conduit-extra
     , http-conduit, optparse-simple, rio, rio-orphans, tar-conduit
     , yaml
     }:
     mkDerivation {
       pname = "mega-sdist";
       version = "0.3.3.2";
       sha256 = "0jhlaww753spj5k2mrzrizcb408265wglc7gycdicnashsxc7qd4";
       isLibrary = false;
       isExecutable = true;
       executableHaskellDepends = [
         base bytestring conduit conduit-extra http-conduit optparse-simple
         rio rio-orphans tar-conduit yaml
       ];
       doHaddock = false;
       homepage = "https://github.com/snoyberg/mega-sdist#readme";
       description = "Handles uploading to Hackage from mega repos";
       license = stdenv.lib.licenses.mit;
     }) {};
  "megaparsec" = callPackage
    ({ mkDerivation, base, bytestring, case-insensitive, containers
     , criterion, deepseq, hspec, hspec-discover, hspec-expectations
     , mtl, parser-combinators, QuickCheck, scientific, text
     , transformers, weigh
     }:
     mkDerivation {
       pname = "megaparsec";
       version = "6.5.0";
       sha256 = "12iggy7qpf8x93jm64zf0g215xwy779bqyfyjk2bhmxqqr1yzgdy";
       revision = "4";
       editedCabalFile = "0ij3asi5vwlhbgwsy6nhli9a0qb7926mg809fsgyl1rnhs9fvpx1";
       libraryHaskellDepends = [
         base bytestring case-insensitive containers deepseq mtl
         parser-combinators scientific text transformers
       ];
       testHaskellDepends = [
         base bytestring containers hspec hspec-expectations mtl QuickCheck
         scientific text transformers
       ];
       testToolDepends = [ hspec-discover ];
       benchmarkHaskellDepends = [ base criterion deepseq text weigh ];
       homepage = "https://github.com/mrkkrp/megaparsec";
       description = "Monadic parser combinators";
       license = stdenv.lib.licenses.bsd2;
     }) {};
  "memory" = callPackage
    ({ mkDerivation, base, basement, bytestring, deepseq, foundation
     , ghc-prim
     }:
     mkDerivation {
       pname = "memory";
       version = "0.14.18";
       sha256 = "01rmq3vagxzjmm96qnfxk4f0516cn12bp5m8inn8h5r918bqsigm";
       revision = "1";
       editedCabalFile = "0h4d0avv8kv3my4rim79lcamv2dyibld7w6ianq46nhwgr0h2lzm";
       libraryHaskellDepends = [
         base basement bytestring deepseq ghc-prim
       ];
       testHaskellDepends = [ base basement bytestring foundation ];
       homepage = "https://github.com/vincenthz/hs-memory";
       description = "memory and related abstraction stuff";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "mercury-api" = callPackage
    ({ mkDerivation, ansi-terminal, base, bytestring, clock, directory
     , hashable, HUnit, optparse-applicative, text, unordered-containers
     }:
     mkDerivation {
       pname = "mercury-api";
       version = "0.1.0.1";
       sha256 = "0h5v08k27nqksl3x8r5d4p26zgb4s7k2shgrjkg6bc2n0bn9iqzr";
       revision = "2";
       editedCabalFile = "093c8afmcrnbfliz1ykpyc4w40dli2wig0qi0xcwg8445idwp2kg";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         ansi-terminal base bytestring clock hashable text
         unordered-containers
       ];
       executableHaskellDepends = [
         ansi-terminal base bytestring optparse-applicative text
       ];
       testHaskellDepends = [
         base bytestring directory HUnit optparse-applicative text
       ];
       homepage = "https://github.com/ppelleti/hs-mercury-api";
       description = "Haskell binding to Mercury API for ThingMagic RFID readers";
       license = stdenv.lib.licenses.mit;
     }) {};
  "mersenne-random-pure64" = callPackage
    ({ mkDerivation, base, random, time }:
     mkDerivation {
       pname = "mersenne-random-pure64";
       version = "0.2.2.0";
       sha256 = "1lbmdnlk21qqbzw1g7jph6d21dg3vf5saca3inwv1byxq7fh057g";
       revision = "1";
       editedCabalFile = "0pxq0xz42x60993rl4pr4pia80jv1xcqh6njvjzfvn75018j4gw5";
       configureFlags = [ "-f-small_base" ];
       libraryHaskellDepends = [ base random time ];
       homepage = "http://code.haskell.org/~dons/code/mersenne-random-pure64/";
       description = "Generate high quality pseudorandom numbers purely using a Mersenne Twister";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "messagepack" = callPackage
    ({ mkDerivation, base, bytestring, cereal, containers, deepseq
     , QuickCheck, test-framework, test-framework-quickcheck2
     , test-framework-th
     }:
     mkDerivation {
       pname = "messagepack";
       version = "0.5.4";
       sha256 = "0z2xbfqg9x8ymbr0j81br610ja8f0wd2wvvrnjrk222vbp0915ck";
       revision = "2";
       editedCabalFile = "199x0hqa6h6wqysaip1wc7kivc26f3wkb8y4il70mzmz80skmm29";
       libraryHaskellDepends = [
         base bytestring cereal containers deepseq
       ];
       testHaskellDepends = [
         base bytestring cereal containers QuickCheck test-framework
         test-framework-quickcheck2 test-framework-th
       ];
       homepage = "https://github.com/rodrigosetti/messagepack";
       description = "Serialize instance for Message Pack Object";
       license = stdenv.lib.licenses.mit;
     }) {};
  "messagepack-rpc" = callPackage
    ({ mkDerivation, base, bytestring, cereal, containers, messagepack
     , network-simple
     }:
     mkDerivation {
       pname = "messagepack-rpc";
       version = "0.5.1";
       sha256 = "1g5096h595ajcb6kyb4s1azkwv9cmw2w7r9nvmm4wa388rj60yda";
       revision = "1";
       editedCabalFile = "05p6naaxswmsc3w7k67ydzzwyn60ymp0jbrc0f66p2sajvlnviax";
       libraryHaskellDepends = [
         base bytestring cereal containers messagepack network-simple
       ];
       homepage = "http://github.com/rodrigosetti/messagepack-rpc";
       description = "Message Pack RPC over TCP";
       license = stdenv.lib.licenses.mit;
     }) {};
  "metrics" = callPackage
    ({ mkDerivation, ansi-terminal, async, base, bytestring, containers
     , HUnit, lens, mwc-random, primitive, QuickCheck, text, time
     , transformers, transformers-base, unix-compat
     , unordered-containers, vector, vector-algorithms
     }:
     mkDerivation {
       pname = "metrics";
       version = "0.4.1.1";
       sha256 = "1f2vqwldp457956bx839r9v3xpmp95q42insn2xcdw669rq6wpym";
       libraryHaskellDepends = [
         ansi-terminal base bytestring containers lens mwc-random primitive
         text time transformers transformers-base unix-compat
         unordered-containers vector vector-algorithms
       ];
       testHaskellDepends = [
         async base HUnit lens mwc-random primitive QuickCheck
       ];
       description = "High-performance application metric tracking";
       license = stdenv.lib.licenses.mit;
     }) {};
  "mfsolve" = callPackage
    ({ mkDerivation, base, hashable, mtl, mtl-compat, tasty
     , tasty-hunit, unordered-containers
     }:
     mkDerivation {
       pname = "mfsolve";
       version = "0.3.2.0";
       sha256 = "1wa2m8q49lv0a335ahgx2svkff8vaba65cqlfmmk43ww5x26f893";
       libraryHaskellDepends = [
         base hashable mtl mtl-compat unordered-containers
       ];
       testHaskellDepends = [ base tasty tasty-hunit ];
       description = "Equation solver and calculator à la metafont";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "microformats2-parser" = callPackage
    ({ mkDerivation, aeson, aeson-pretty, aeson-qq, attoparsec, base
     , base-compat, blaze-html, blaze-markup, bytestring, containers
     , data-default, either, errors, hspec
     , hspec-expectations-pretty-diff, html-conduit, lens-aeson, mtl
     , network, network-uri, options, pcre-heavy, raw-strings-qq, safe
     , scotty, tagsoup, template-haskell, text, time, transformers
     , unordered-containers, vector, wai-cli, wai-extra, xml-lens
     , xss-sanitize
     }:
     mkDerivation {
       pname = "microformats2-parser";
       version = "1.0.1.9";
       sha256 = "1lxbw825yg16nmflf93l1sy6mxa3dnd7a5mdalc034brsnf1vish";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         aeson aeson-qq attoparsec base base-compat blaze-markup bytestring
         containers data-default either errors html-conduit lens-aeson
         network-uri pcre-heavy safe tagsoup text time transformers
         unordered-containers vector xml-lens xss-sanitize
       ];
       executableHaskellDepends = [
         aeson aeson-pretty base base-compat blaze-html blaze-markup
         data-default network network-uri options scotty text wai-cli
         wai-extra
       ];
       testHaskellDepends = [
         aeson-qq base base-compat bytestring data-default hspec
         hspec-expectations-pretty-diff html-conduit mtl network-uri
         raw-strings-qq template-haskell text time xml-lens
       ];
       homepage = "https://github.com/myfreeweb/microformats2-parser";
       description = "A Microformats 2 parser";
       license = stdenv.lib.licenses.publicDomain;
     }) {};
  "microlens" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "microlens";
       version = "0.4.9.1";
       sha256 = "0j2nzf0vpx2anvsrg2w0vy2z4jn3kkcs2n6glkzblhn1j9piqh51";
       libraryHaskellDepends = [ base ];
       homepage = "http://github.com/aelve/microlens";
       description = "A tiny lens library with no dependencies. If you're writing an app, you probably want microlens-platform, not this.";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "microlens-aeson" = callPackage
    ({ mkDerivation, aeson, attoparsec, base, bytestring, criterion
     , deepseq, hashable, lens, lens-aeson, microlens, scientific, tasty
     , tasty-hunit, text, unordered-containers, vector
     }:
     mkDerivation {
       pname = "microlens-aeson";
       version = "2.3.0";
       sha256 = "1iahlh505jrlpd9ndkr5asfnzdpp6m6m2lm44ds15461py485wpj";
       revision = "2";
       editedCabalFile = "1ri98vr3bbx0l9b4vpmcwhf8fm5lgj92kw4g0v3jx6xajwwc5dc8";
       libraryHaskellDepends = [
         aeson attoparsec base bytestring deepseq hashable microlens
         scientific text unordered-containers vector
       ];
       testHaskellDepends = [
         aeson base bytestring deepseq hashable microlens tasty tasty-hunit
         text unordered-containers vector
       ];
       benchmarkHaskellDepends = [
         aeson base bytestring criterion deepseq hashable lens lens-aeson
         microlens text unordered-containers vector
       ];
       homepage = "http://github.com/fosskers/microlens-aeson/";
       description = "Law-abiding lenses for Aeson, using microlens";
       license = stdenv.lib.licenses.mit;
     }) {};
  "microlens-contra" = callPackage
    ({ mkDerivation, base, contravariant, microlens }:
     mkDerivation {
       pname = "microlens-contra";
       version = "0.1.0.2";
       sha256 = "1ny9qhvd7rfzdkq4jdcgh4mfia856rsgpdhg8lprfprh6p7lhy5m";
       libraryHaskellDepends = [ base contravariant microlens ];
       homepage = "http://github.com/monadfix/microlens";
       description = "True folds and getters for microlens";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "microlens-ghc" = callPackage
    ({ mkDerivation, array, base, bytestring, containers, microlens
     , transformers
     }:
     mkDerivation {
       pname = "microlens-ghc";
       version = "0.4.9.1";
       sha256 = "03iwgg8zww9irv59l70c8yy7vzxir1zf66y12210xk91k5hq6jrj";
       libraryHaskellDepends = [
         array base bytestring containers microlens transformers
       ];
       homepage = "http://github.com/aelve/microlens";
       description = "microlens + array, bytestring, containers, transformers";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "microlens-mtl" = callPackage
    ({ mkDerivation, base, microlens, mtl, transformers
     , transformers-compat
     }:
     mkDerivation {
       pname = "microlens-mtl";
       version = "0.1.11.1";
       sha256 = "0l6z1gkzwcpv89bxf5vgfrjb6gq2pj7sjjc53nvi5b9alx34zryk";
       libraryHaskellDepends = [
         base microlens mtl transformers transformers-compat
       ];
       homepage = "http://github.com/aelve/microlens";
       description = "microlens support for Reader/Writer/State from mtl";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "microlens-platform" = callPackage
    ({ mkDerivation, base, hashable, microlens, microlens-ghc
     , microlens-mtl, microlens-th, text, unordered-containers, vector
     }:
     mkDerivation {
       pname = "microlens-platform";
       version = "0.3.10";
       sha256 = "1d4nhmgf9jq0ixc7qhwm7aaw3xdr0nalw58d0ydsydgf02cyazwv";
       libraryHaskellDepends = [
         base hashable microlens microlens-ghc microlens-mtl microlens-th
         text unordered-containers vector
       ];
       homepage = "http://github.com/aelve/microlens";
       description = "Feature-complete microlens";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "microlens-th" = callPackage
    ({ mkDerivation, base, containers, microlens, template-haskell
     , th-abstraction, transformers
     }:
     mkDerivation {
       pname = "microlens-th";
       version = "0.4.2.3";
       sha256 = "13qw0pwcgd6f6i39rwgqwcwk1d4da5x7wv3gna7gdlxaq331h41j";
       libraryHaskellDepends = [
         base containers microlens template-haskell th-abstraction
         transformers
       ];
       testHaskellDepends = [ base microlens ];
       homepage = "http://github.com/aelve/microlens";
       description = "Automatic generation of record lenses for microlens";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "microspec" = callPackage
    ({ mkDerivation, base, QuickCheck }:
     mkDerivation {
       pname = "microspec";
       version = "0.1.0.0";
       sha256 = "0hykarba8ccwkslh8cfsxbriw043f8pa4jyhr3hqc5yqfijibr71";
       revision = "1";
       editedCabalFile = "0cnfj3v6fzck57bgrsnmgz8a9azvz04pm3hv17fg12xzchmp07cq";
       libraryHaskellDepends = [ base QuickCheck ];
       description = "Tiny QuickCheck test library with minimal dependencies";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "microstache" = callPackage
    ({ mkDerivation, aeson, base, bytestring, containers, deepseq
     , directory, filepath, hspec, parsec, text, transformers
     , unordered-containers, vector
     }:
     mkDerivation {
       pname = "microstache";
       version = "1.0.1.1";
       sha256 = "0851sqr1ppdj6m822635pa3j6qzdf25gyrhkjs25zdry6518bsax";
       revision = "3";
       editedCabalFile = "1pq0h64vxc7zlncn2ld6k02wi6rfa5ccqc4z0hfkvaldj41y2sb1";
       libraryHaskellDepends = [
         aeson base bytestring containers deepseq directory filepath parsec
         text transformers unordered-containers vector
       ];
       testHaskellDepends = [
         aeson base bytestring containers hspec parsec text
       ];
       homepage = "https://github.com/phadej/microstache";
       description = "Mustache templates for Haskell";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "midi" = callPackage
    ({ mkDerivation, base, binary, bytestring, event-list
     , explicit-exception, monoid-transformer, non-negative, QuickCheck
     , random, semigroups, transformers, utility-ht
     }:
     mkDerivation {
       pname = "midi";
       version = "0.2.2.2";
       sha256 = "0fv9980k35qv9qk73g2mp88xvhchyq0lq37cl7i26gx4f64vaz6y";
       libraryHaskellDepends = [
         base binary bytestring event-list explicit-exception
         monoid-transformer non-negative QuickCheck random semigroups
         transformers utility-ht
       ];
       testHaskellDepends = [
         base bytestring event-list explicit-exception non-negative
         QuickCheck transformers utility-ht
       ];
       homepage = "http://www.haskell.org/haskellwiki/MIDI";
       description = "Handling of MIDI messages and files";
       license = "GPL";
     }) {};
  "mighty-metropolis" = callPackage
    ({ mkDerivation, base, containers, kan-extensions, mcmc-types
     , mwc-probability, pipes, primitive, transformers
     }:
     mkDerivation {
       pname = "mighty-metropolis";
       version = "1.2.0";
       sha256 = "1h3ik18vnya6sm0x1s6hxxx5hky0wm2pqm2g3hllcj02cm5hng4d";
       libraryHaskellDepends = [
         base kan-extensions mcmc-types mwc-probability pipes primitive
         transformers
       ];
       testHaskellDepends = [ base containers mwc-probability ];
       homepage = "http://github.com/jtobin/mighty-metropolis";
       description = "The Metropolis algorithm";
       license = stdenv.lib.licenses.mit;
     }) {};
  "milena" = callPackage
    ({ mkDerivation, base, bytestring, cereal, containers, digest, lens
     , lifted-base, monad-control, mtl, murmur-hash, network, QuickCheck
     , random, resource-pool, semigroups, tasty, tasty-hspec
     , tasty-quickcheck, transformers, zlib
     }:
     mkDerivation {
       pname = "milena";
       version = "0.5.2.3";
       sha256 = "0s3bxj6d3p0fng08da9y2qb8cl967lqhsqplhcwmaj3aai72rj5w";
       libraryHaskellDepends = [
         base bytestring cereal containers digest lens lifted-base
         monad-control mtl murmur-hash network random resource-pool
         semigroups transformers zlib
       ];
       testHaskellDepends = [
         base bytestring lens mtl network QuickCheck semigroups tasty
         tasty-hspec tasty-quickcheck
       ];
       doCheck = false;
       homepage = "https://github.com/adamflott/milena.git#readme";
       description = "A Kafka client for Haskell";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "mime-mail" = callPackage
    ({ mkDerivation, base, base64-bytestring, blaze-builder, bytestring
     , filepath, hspec, process, random, text
     }:
     mkDerivation {
       pname = "mime-mail";
       version = "0.4.14";
       sha256 = "0gmapbjci8nclwm8syg5xfci4nj8cpchb9ry1b7gwhcp9kaw6cln";
       libraryHaskellDepends = [
         base base64-bytestring blaze-builder bytestring filepath process
         random text
       ];
       testHaskellDepends = [ base blaze-builder bytestring hspec text ];
       homepage = "http://github.com/snoyberg/mime-mail";
       description = "Compose MIME email messages";
       license = stdenv.lib.licenses.mit;
     }) {};
  "mime-mail-ses" = callPackage
    ({ mkDerivation, base, base64-bytestring, byteable, bytestring
     , conduit, cryptohash, http-client, http-client-tls, http-conduit
     , http-types, mime-mail, old-locale, text, time, transformers
     , xml-conduit, xml-types
     }:
     mkDerivation {
       pname = "mime-mail-ses";
       version = "0.4.1";
       sha256 = "1w6k4cm5yab9dhg7yn6mp7jzk1zdwpnzc6c1xb3vz3rdwp8jjvx7";
       libraryHaskellDepends = [
         base base64-bytestring byteable bytestring conduit cryptohash
         http-client http-client-tls http-conduit http-types mime-mail
         old-locale text time transformers xml-conduit xml-types
       ];
       homepage = "http://github.com/snoyberg/mime-mail";
       description = "Send mime-mail messages via Amazon SES";
       license = stdenv.lib.licenses.mit;
     }) {};
  "mime-types" = callPackage
    ({ mkDerivation, base, bytestring, containers, text }:
     mkDerivation {
       pname = "mime-types";
       version = "0.1.0.9";
       sha256 = "1lkipa4v73z3l5lqs6sdhl898iq41kyxv2jb9agsajzgd58l6cha";
       libraryHaskellDepends = [ base bytestring containers text ];
       homepage = "https://github.com/yesodweb/wai";
       description = "Basic mime-type handling types and functions";
       license = stdenv.lib.licenses.mit;
     }) {};
  "minimorph" = callPackage
    ({ mkDerivation, base, HUnit, test-framework, test-framework-hunit
     , text
     }:
     mkDerivation {
       pname = "minimorph";
       version = "0.1.6.1";
       sha256 = "0i5qigcj5qpzyg2br8xppd36b5q86y3n457g0hdpv9469d2pnrwl";
       libraryHaskellDepends = [ base text ];
       testHaskellDepends = [
         base HUnit test-framework test-framework-hunit text
       ];
       homepage = "https://github.com/Mikolaj/minimorph";
       description = "English spelling functions with an emphasis on simplicity";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "minio-hs" = callPackage
    ({ mkDerivation, aeson, base, base64-bytestring, bytestring
     , case-insensitive, conduit, conduit-extra, containers, cryptonite
     , cryptonite-conduit, directory, filepath, http-client
     , http-conduit, http-types, ini, memory, protolude, QuickCheck
     , resourcet, tasty, tasty-hunit, tasty-quickcheck, tasty-smallcheck
     , temporary, text, time, transformers, unliftio, unliftio-core
     , xml-conduit
     }:
     mkDerivation {
       pname = "minio-hs";
       version = "1.2.0";
       sha256 = "14qhaiki7g09gkakl1irf0a5fnrcaj2x84vvh09g3dfsgybr851i";
       configureFlags = [ "-f-live-test" ];
       libraryHaskellDepends = [
         aeson base base64-bytestring bytestring case-insensitive conduit
         conduit-extra containers cryptonite cryptonite-conduit directory
         filepath http-client http-conduit http-types ini memory protolude
         resourcet text time transformers unliftio unliftio-core xml-conduit
       ];
       testHaskellDepends = [
         aeson base base64-bytestring bytestring case-insensitive conduit
         conduit-extra containers cryptonite cryptonite-conduit directory
         filepath http-client http-conduit http-types ini memory protolude
         QuickCheck resourcet tasty tasty-hunit tasty-quickcheck
         tasty-smallcheck temporary text time transformers unliftio
         unliftio-core xml-conduit
       ];
       homepage = "https://github.com/minio/minio-hs#readme";
       description = "A Minio Haskell Library for Amazon S3 compatible cloud storage";
       license = stdenv.lib.licenses.asl20;
     }) {};
  "minisat-solver" = callPackage
    ({ mkDerivation, base, containers, transformers }:
     mkDerivation {
       pname = "minisat-solver";
       version = "0.1";
       sha256 = "0zfk1w960lfjfdshxqqigi9s74wb753c6ynf665vkbrlw3g9h861";
       libraryHaskellDepends = [ base containers transformers ];
       homepage = "http://www.mathstat.dal.ca/~selinger/minisat-solver/";
       description = "High-level Haskell bindings for the MiniSat SAT solver";
       license = stdenv.lib.licenses.mit;
     }) {};
  "miniutter" = callPackage
    ({ mkDerivation, base, binary, containers, ghc-prim, HUnit
     , minimorph, test-framework, test-framework-hunit, text
     }:
     mkDerivation {
       pname = "miniutter";
       version = "0.4.7.0";
       sha256 = "10nwg3vw0p8hb8hgc34xspg4vrwf8xyhi22b9j57ms3045marjdd";
       libraryHaskellDepends = [
         base binary containers ghc-prim minimorph text
       ];
       testHaskellDepends = [
         base containers HUnit test-framework test-framework-hunit text
       ];
       homepage = "https://github.com/Mikolaj/miniutter";
       description = "Simple English clause creation from arbitrary words";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "mintty" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "mintty";
       version = "0.1.2";
       sha256 = "1njhz7wjmsk5pbr7gfkl95k50npkmm0iyxp3j93bbsg4rmxzg2kw";
       libraryHaskellDepends = [ base ];
       homepage = "https://github.com/RyanGlScott/mintty";
       description = "A reliable way to detect the presence of a MinTTY console on Windows";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "miso" = callPackage
    ({ mkDerivation, aeson, base, bytestring, containers, http-api-data
     , http-types, lucid, network-uri, servant, servant-lucid, text
     , transformers, vector
     }:
     mkDerivation {
       pname = "miso";
       version = "0.21.2.0";
       sha256 = "061bjvxcs6psh8hj947p4jm9ki9ngrwvn23szvk8i3x4xd87jbfm";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         aeson base bytestring containers http-api-data http-types lucid
         network-uri servant servant-lucid text transformers vector
       ];
       homepage = "http://github.com/dmjio/miso";
       description = "A tasty Haskell front-end framework";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "missing-foreign" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "missing-foreign";
       version = "0.1.1";
       sha256 = "11f8pknbarlj956nmalqhd2v704z7d7xbi61hs1q8vb2p36kc6wy";
       libraryHaskellDepends = [ base ];
       description = "Convenience functions for FFI work";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "mixed-types-num" = callPackage
    ({ mkDerivation, base, convertible, hspec, hspec-smallcheck
     , QuickCheck, smallcheck, template-haskell
     }:
     mkDerivation {
       pname = "mixed-types-num";
       version = "0.3.1.5";
       sha256 = "0n60s5vy6l6mbc5z7di91whb3hn0qav2c98fmb7l7inxq8abzw3w";
       libraryHaskellDepends = [
         base convertible hspec hspec-smallcheck QuickCheck smallcheck
         template-haskell
       ];
       testHaskellDepends = [ base hspec hspec-smallcheck QuickCheck ];
       homepage = "https://github.com/michalkonecny/mixed-types-num";
       description = "Alternative Prelude with numeric and logic expressions typed bottom-up";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "mltool" = callPackage
    ({ mkDerivation, ascii-progress, base, deepseq, hmatrix
     , hmatrix-gsl, hmatrix-morpheus, HUnit, MonadRandom, random
     , test-framework, test-framework-hunit, test-framework-quickcheck2
     , vector
     }:
     mkDerivation {
       pname = "mltool";
       version = "0.2.0.1";
       sha256 = "1zz06c0xv718faygnsgzmhg17xc5hrjsj9xkdaf3qmzbr1gwfvki";
       libraryHaskellDepends = [
         ascii-progress base deepseq hmatrix hmatrix-gsl hmatrix-morpheus
         MonadRandom random vector
       ];
       testHaskellDepends = [
         base hmatrix hmatrix-morpheus HUnit MonadRandom random
         test-framework test-framework-hunit test-framework-quickcheck2
         vector
       ];
       doCheck = false;
       homepage = "https://github.com/aligusnet/mltool";
       description = "Machine Learning Toolbox";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "mmap" = callPackage
    ({ mkDerivation, base, bytestring }:
     mkDerivation {
       pname = "mmap";
       version = "0.5.9";
       sha256 = "1y5mk3yf4b8r6rzmlx1xqn4skaigrqnv08sqq0v7r3nbw42bpz2q";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [ base bytestring ];
       description = "Memory mapped files for POSIX and Windows";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "mmark" = callPackage
    ({ mkDerivation, aeson, base, case-insensitive, containers
     , criterion, data-default-class, deepseq, dlist, email-validate
     , foldl, hashable, hspec, hspec-megaparsec, html-entity-map, lucid
     , megaparsec, microlens, microlens-th, modern-uri, mtl
     , parser-combinators, QuickCheck, text, text-metrics
     , unordered-containers, weigh, yaml
     }:
     mkDerivation {
       pname = "mmark";
       version = "0.0.5.6";
       sha256 = "0d0jxxj0b1jy9mym6389dmm6biiw8kzdh06zj2j0gsjczn2n60zw";
       revision = "6";
       editedCabalFile = "13cn8nkqj0zl26rgs01rspb2mz6gq1a6ax3g5bygdphvwzraswc5";
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [
         aeson base case-insensitive containers data-default-class deepseq
         dlist email-validate foldl hashable html-entity-map lucid
         megaparsec microlens microlens-th modern-uri mtl parser-combinators
         text text-metrics unordered-containers yaml
       ];
       testHaskellDepends = [
         aeson base foldl hspec hspec-megaparsec lucid megaparsec modern-uri
         QuickCheck text
       ];
       benchmarkHaskellDepends = [ base criterion text weigh ];
       doCheck = false;
       homepage = "https://github.com/mmark-md/mmark";
       description = "Strict markdown processor for writers";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "mmark-cli" = callPackage
    ({ mkDerivation, aeson, base, bytestring, directory, gitrev, lucid
     , megaparsec, mmark, mmark-ext, optparse-applicative, stache, text
     , unordered-containers
     }:
     mkDerivation {
       pname = "mmark-cli";
       version = "0.0.3.0";
       sha256 = "0nb17k23bs21qi7a888qp81w682ax2qvih9fbvdkdh6c2n6yklrp";
       revision = "2";
       editedCabalFile = "0i3gvfgm4bfbdyflhhaf4gdr7cbkw51i330f25rgha9k3s4v59w3";
       isLibrary = false;
       isExecutable = true;
       executableHaskellDepends = [
         aeson base bytestring directory gitrev lucid megaparsec mmark
         mmark-ext optparse-applicative stache text unordered-containers
       ];
       doHaddock = false;
       homepage = "https://github.com/mmark-md/mmark-cli";
       description = "Command line interface to MMark markdown processor";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "mmark-ext" = callPackage
    ({ mkDerivation, base, foldl, ghc-syntax-highlighter, hspec
     , hspec-discover, lucid, microlens, mmark, modern-uri, skylighting
     , text
     }:
     mkDerivation {
       pname = "mmark-ext";
       version = "0.2.1.1";
       sha256 = "01av7d9n75mg9yzkxszrvbxjbsv4n0gsdmg3n2620zn40j5lwmcq";
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [
         base foldl ghc-syntax-highlighter lucid microlens mmark modern-uri
         skylighting text
       ];
       testHaskellDepends = [ base hspec lucid mmark skylighting text ];
       testToolDepends = [ hspec-discover ];
       doCheck = false;
       homepage = "https://github.com/mmark-md/mmark-ext";
       description = "Commonly useful extensions for the MMark markdown processor";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "mmorph" = callPackage
    ({ mkDerivation, base, mtl, transformers, transformers-compat }:
     mkDerivation {
       pname = "mmorph";
       version = "1.1.2";
       sha256 = "1gjz1ib968lqybma7my1n19qq6cdj6a7nskrlnwy4jy9jrwzs2n9";
       libraryHaskellDepends = [
         base mtl transformers transformers-compat
       ];
       description = "Monad morphisms";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "mnist-idx" = callPackage
    ({ mkDerivation, base, binary, bytestring, directory, hspec, vector
     }:
     mkDerivation {
       pname = "mnist-idx";
       version = "0.1.2.8";
       sha256 = "1zmjj71bv5yzdjm4hmlkiwcvv810mln090yp8znj2j21hiz1dzs2";
       libraryHaskellDepends = [ base binary bytestring vector ];
       testHaskellDepends = [ base binary directory hspec vector ];
       homepage = "https://github.com/kryoxide/mnist-idx/";
       description = "Read and write IDX data that is used in e.g. the MNIST database.";
       license = stdenv.lib.licenses.lgpl3;
     }) {};
  "mockery" = callPackage
    ({ mkDerivation, base, base-compat, bytestring, directory, filepath
     , hspec, logging-facade, temporary
     }:
     mkDerivation {
       pname = "mockery";
       version = "0.3.5";
       sha256 = "09ypgm3z69gq8mj6y66ss58kbjnk15r8frwcwbqcfbfksfnfv8dp";
       libraryHaskellDepends = [
         base base-compat bytestring directory filepath logging-facade
         temporary
       ];
       testHaskellDepends = [
         base base-compat bytestring directory filepath hspec logging-facade
         temporary
       ];
       description = "Support functions for automated testing";
       license = stdenv.lib.licenses.mit;
     }) {};
  "modern-uri" = callPackage
    ({ mkDerivation, base, bytestring, containers, contravariant
     , criterion, deepseq, exceptions, hspec, hspec-discover
     , hspec-megaparsec, megaparsec, mtl, profunctors, QuickCheck
     , reflection, tagged, template-haskell, text, weigh
     }:
     mkDerivation {
       pname = "modern-uri";
       version = "0.2.2.0";
       sha256 = "1ldl2i34fl7srv72bjxnrbihafq8m8mmk5xca6lhcqwdpx8yakxb";
       libraryHaskellDepends = [
         base bytestring containers contravariant deepseq exceptions
         megaparsec mtl profunctors QuickCheck reflection tagged
         template-haskell text
       ];
       testHaskellDepends = [
         base bytestring hspec hspec-megaparsec megaparsec QuickCheck text
       ];
       testToolDepends = [ hspec-discover ];
       benchmarkHaskellDepends = [
         base bytestring criterion deepseq megaparsec text weigh
       ];
       homepage = "https://github.com/mrkkrp/modern-uri";
       description = "Modern library for working with URIs";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "moesocks" = callPackage
    ({ mkDerivation, aeson, async, attoparsec, base, binary, bytestring
     , containers, cryptohash, hslogger, HsOpenSSL, iproute, lens
     , lens-aeson, mtl, network, optparse-applicative, random, stm
     , strict, text, time, transformers, unordered-containers
     }:
     mkDerivation {
       pname = "moesocks";
       version = "1.0.1.0";
       sha256 = "0g4dih837liigd4v2yj0wnqic2hqgc6zy6yqwpy0v22aa47abcqj";
       isLibrary = false;
       isExecutable = true;
       executableHaskellDepends = [
         aeson async attoparsec base binary bytestring containers cryptohash
         hslogger HsOpenSSL iproute lens lens-aeson mtl network
         optparse-applicative random stm strict text time transformers
         unordered-containers
       ];
       doHaddock = false;
       homepage = "https://github.com/nfjinjing/moesocks";
       description = "A functional firewall killer";
       license = stdenv.lib.licenses.asl20;
     }) {};
  "monad-control" = callPackage
    ({ mkDerivation, base, stm, transformers, transformers-base
     , transformers-compat
     }:
     mkDerivation {
       pname = "monad-control";
       version = "1.0.2.3";
       sha256 = "1c92833gr6cadidjdp8mlznkpp8lyxl0w3y7d19y8yi3klc3843c";
       libraryHaskellDepends = [
         base stm transformers transformers-base transformers-compat
       ];
       homepage = "https://github.com/basvandijk/monad-control";
       description = "Lift control operations, like exception catching, through monad transformers";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "monad-control-aligned" = callPackage
    ({ mkDerivation, base, stm, transformers, transformers-base
     , transformers-compat
     }:
     mkDerivation {
       pname = "monad-control-aligned";
       version = "0.0.1.1";
       sha256 = "1xhiw1g0p8zljhy8yz43ljnwhhqn6dwxqi06mdsfji365p9qzrs4";
       libraryHaskellDepends = [
         base stm transformers transformers-base transformers-compat
       ];
       homepage = "https://github.com/athanclark/monad-control#readme";
       description = "Just like monad-control, except less efficient, and the monadic state terms are all * -> *";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "monad-coroutine" = callPackage
    ({ mkDerivation, base, monad-parallel, transformers
     , transformers-compat
     }:
     mkDerivation {
       pname = "monad-coroutine";
       version = "0.9.0.4";
       sha256 = "1rsxzry8qk5229vx4iw4jrzbbc82m80m1nlxlq73k5k20h9gzq0k";
       libraryHaskellDepends = [
         base monad-parallel transformers transformers-compat
       ];
       homepage = "http://trac.haskell.org/SCC/wiki/monad-coroutine";
       description = "Coroutine monad transformer for suspending and resuming monadic computations";
       license = "GPL";
     }) {};
  "monad-extras" = callPackage
    ({ mkDerivation, base, mmorph, monad-control, stm, transformers
     , transformers-base
     }:
     mkDerivation {
       pname = "monad-extras";
       version = "0.6.0";
       sha256 = "0b2gr2iy8vqw71blbigmgdxnzjw6jv09n38np0k65lcp3b2xfcyz";
       libraryHaskellDepends = [
         base mmorph monad-control stm transformers transformers-base
       ];
       homepage = "http://github.com/jwiegley/monad-extras";
       description = "Extra utility functions for working with monads";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "monad-journal" = callPackage
    ({ mkDerivation, base, monad-control, mtl, transformers
     , transformers-base
     }:
     mkDerivation {
       pname = "monad-journal";
       version = "0.8.1";
       sha256 = "1b05l40832ck44m52izj2lxw0ghi0ip4isb4377vb0b010hc42p2";
       libraryHaskellDepends = [
         base monad-control mtl transformers transformers-base
       ];
       homepage = "http://github.com/phaazon/monad-journal";
       description = "Pure logger typeclass and monad transformer";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "monad-logger" = callPackage
    ({ mkDerivation, base, bytestring, conduit, conduit-extra
     , exceptions, fast-logger, lifted-base, monad-control, monad-loops
     , mtl, resourcet, stm, stm-chans, template-haskell, text
     , transformers, transformers-base, transformers-compat
     , unliftio-core
     }:
     mkDerivation {
       pname = "monad-logger";
       version = "0.3.30";
       sha256 = "102l0v75hbvkmrypiyg4ybb6rbc7nij5nxs1aihmqfdpg04rkkp7";
       libraryHaskellDepends = [
         base bytestring conduit conduit-extra exceptions fast-logger
         lifted-base monad-control monad-loops mtl resourcet stm stm-chans
         template-haskell text transformers transformers-base
         transformers-compat unliftio-core
       ];
       homepage = "https://github.com/snoyberg/monad-logger#readme";
       description = "A class of monads which can log messages";
       license = stdenv.lib.licenses.mit;
     }) {};
  "monad-logger-json" = callPackage
    ({ mkDerivation, aeson, base, monad-logger, template-haskell, text
     }:
     mkDerivation {
       pname = "monad-logger-json";
       version = "0.1.0.0";
       sha256 = "1ap98487lwgvgrrxkjskga86ckbv6rhn2n6pzp403343xx51r1qh";
       libraryHaskellDepends = [
         aeson base monad-logger template-haskell text
       ];
       homepage = "http://github.com/fpco/monad-logger-json";
       description = "JSON-friendly Logging APIs";
       license = stdenv.lib.licenses.mit;
     }) {};
  "monad-logger-prefix" = callPackage
    ({ mkDerivation, base, criterion, doctest, exceptions, Glob, hspec
     , monad-control, monad-logger, mtl, QuickCheck, resourcet, text
     , transformers, transformers-base
     }:
     mkDerivation {
       pname = "monad-logger-prefix";
       version = "0.1.10";
       sha256 = "0xfrl084b45nq7598239ax3v0qck56d75p4jcqlykn8k7822vb53";
       libraryHaskellDepends = [
         base exceptions monad-control monad-logger mtl resourcet text
         transformers transformers-base
       ];
       testHaskellDepends = [ base doctest Glob hspec QuickCheck ];
       benchmarkHaskellDepends = [ base criterion monad-logger ];
       homepage = "https://github.com/parsonsmatt/monad-logger-prefix#readme";
       description = "Add prefixes to your monad-logger output";
       license = stdenv.lib.licenses.asl20;
     }) {};
  "monad-logger-syslog" = callPackage
    ({ mkDerivation, base, bytestring, fast-logger, hsyslog
     , monad-logger, text, transformers
     }:
     mkDerivation {
       pname = "monad-logger-syslog";
       version = "0.1.4.0";
       sha256 = "1jwwpjn35mvl7z05xcykpxdyhaa6mgiighgcr8qzprrmw89kwb05";
       libraryHaskellDepends = [
         base bytestring fast-logger hsyslog monad-logger text transformers
       ];
       homepage = "https://github.com/fpco/monad-logger-syslog";
       description = "syslog output for monad-logger";
       license = stdenv.lib.licenses.mit;
     }) {};
  "monad-loops" = callPackage
    ({ mkDerivation, base, tasty, tasty-hunit }:
     mkDerivation {
       pname = "monad-loops";
       version = "0.4.3";
       sha256 = "062c2sn3hc8h50p1mhqkpyv6x8dydz2zh3ridvlfjq9nqimszaky";
       libraryHaskellDepends = [ base ];
       testHaskellDepends = [ base tasty tasty-hunit ];
       homepage = "https://github.com/mokus0/monad-loops";
       description = "Monadic loops";
       license = stdenv.lib.licenses.publicDomain;
     }) {};
  "monad-memo" = callPackage
    ({ mkDerivation, array, base, containers, criterion, mtl, primitive
     , QuickCheck, random, test-framework, test-framework-quickcheck2
     , transformers, vector
     }:
     mkDerivation {
       pname = "monad-memo";
       version = "0.4.1";
       sha256 = "07gid18rsja7gvk2ccsbwvpz223x59mdk9x9w36bz18cy2pw802c";
       libraryHaskellDepends = [
         array base containers mtl primitive transformers vector
       ];
       testHaskellDepends = [
         array base containers mtl primitive QuickCheck random
         test-framework test-framework-quickcheck2 transformers vector
       ];
       benchmarkHaskellDepends = [
         array base containers criterion mtl primitive transformers vector
       ];
       doCheck = false;
       homepage = "https://github.com/EduardSergeev/monad-memo";
       description = "Memoization monad transformer";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "monad-metrics" = callPackage
    ({ mkDerivation, base, clock, ekg-core, exceptions, hashable
     , microlens, mtl, text, transformers, unordered-containers
     }:
     mkDerivation {
       pname = "monad-metrics";
       version = "0.2.1.2";
       sha256 = "0zxvdx75psdninvh7f7wqj498wav2cjmn94n5a3f5g8nvrs0n4rq";
       libraryHaskellDepends = [
         base clock ekg-core exceptions hashable microlens mtl text
         transformers unordered-containers
       ];
       testHaskellDepends = [ base ];
       homepage = "https://github.com/parsonsmatt/monad-metrics#readme";
       description = "A convenient wrapper around EKG metrics";
       license = stdenv.lib.licenses.mit;
     }) {};
  "monad-par" = callPackage
    ({ mkDerivation, abstract-deque, abstract-par, array, base
     , containers, deepseq, HUnit, monad-par-extras, mtl, mwc-random
     , parallel, QuickCheck, test-framework, test-framework-hunit
     , test-framework-quickcheck2, test-framework-th, time
     }:
     mkDerivation {
       pname = "monad-par";
       version = "0.3.4.8";
       sha256 = "0ldrzqy24fsszvn2a2nr77m2ih7xm0h9bgkjyv1l274aj18xyk7q";
       libraryHaskellDepends = [
         abstract-deque abstract-par array base containers deepseq
         monad-par-extras mtl mwc-random parallel
       ];
       testHaskellDepends = [
         abstract-deque abstract-par array base containers deepseq HUnit
         monad-par-extras mtl mwc-random QuickCheck test-framework
         test-framework-hunit test-framework-quickcheck2 test-framework-th
         time
       ];
       homepage = "https://github.com/simonmar/monad-par";
       description = "A library for parallel programming based on a monad";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "monad-par-extras" = callPackage
    ({ mkDerivation, abstract-par, base, cereal, deepseq, mtl, random
     , transformers
     }:
     mkDerivation {
       pname = "monad-par-extras";
       version = "0.3.3";
       sha256 = "0bl4bd6jzdc5zm20q1g67ppkfh6j6yn8fwj6msjayj621cck67p2";
       libraryHaskellDepends = [
         abstract-par base cereal deepseq mtl random transformers
       ];
       homepage = "https://github.com/simonmar/monad-par";
       description = "Combinators and extra features for Par monads";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "monad-parallel" = callPackage
    ({ mkDerivation, base, parallel, transformers, transformers-compat
     }:
     mkDerivation {
       pname = "monad-parallel";
       version = "0.7.2.3";
       sha256 = "12ahni860pfkdj70f9d0dg2h93gl0d9qav8llcmgh5z7dg1vi3qj";
       libraryHaskellDepends = [
         base parallel transformers transformers-compat
       ];
       homepage = "http://trac.haskell.org/SCC/wiki/monad-parallel";
       description = "Parallel execution of monadic computations";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "monad-peel" = callPackage
    ({ mkDerivation, base, extensible-exceptions, HUnit, test-framework
     , test-framework-hunit, transformers
     }:
     mkDerivation {
       pname = "monad-peel";
       version = "0.2.1.2";
       sha256 = "1x1kr5pk8ksw8xcm19c50jx8m0crf3m3qp73k31dnl9r1w4ykm9d";
       libraryHaskellDepends = [
         base extensible-exceptions transformers
       ];
       testHaskellDepends = [
         base extensible-exceptions HUnit test-framework
         test-framework-hunit transformers
       ];
       homepage = "http://andersk.mit.edu/haskell/monad-peel/";
       description = "Lift control operations like exception catching through monad transformers";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "monad-products" = callPackage
    ({ mkDerivation, base, semigroupoids }:
     mkDerivation {
       pname = "monad-products";
       version = "4.0.1";
       sha256 = "1skcjjkn14fh92l4rx3akxjg1c85jqhnlwvkkzqwz9g15bdy3gq2";
       libraryHaskellDepends = [ base semigroupoids ];
       homepage = "http://github.com/ekmett/monad-products";
       description = "Monad products";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "monad-recorder" = callPackage
    ({ mkDerivation, base, exceptions, hspec, monad-control, mtl
     , transformers, transformers-base
     }:
     mkDerivation {
       pname = "monad-recorder";
       version = "0.1.1";
       sha256 = "05d27h3lx7p4qzby8jrxf6wj5z69s11pgpbkdacxrag0v8vynqq8";
       libraryHaskellDepends = [
         base exceptions monad-control mtl transformers transformers-base
       ];
       testHaskellDepends = [ base hspec ];
       homepage = "http://github.com/harendra-kumar/monad-recorder";
       description = "Record and replay the results of monadic actions";
       license = stdenv.lib.licenses.mit;
     }) {};
  "monad-skeleton" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "monad-skeleton";
       version = "0.1.5";
       sha256 = "17jm69pwysx2kbx06n80iy396nbj5dys9iwdivargfzx7xql0s59";
       libraryHaskellDepends = [ base ];
       homepage = "https://github.com/fumieval/monad-skeleton";
       description = "Monads of program skeleta";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "monad-st" = callPackage
    ({ mkDerivation, base, transformers }:
     mkDerivation {
       pname = "monad-st";
       version = "0.2.4.1";
       sha256 = "025zi9xzliwgyasq5hrfxwzg4ksj3kj0ys2kp62fi1n4ddbih64f";
       libraryHaskellDepends = [ base transformers ];
       homepage = "http://github.com/ekmett/monad-st";
       description = "Provides a MonadST class";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "monad-time" = callPackage
    ({ mkDerivation, base, mtl, time }:
     mkDerivation {
       pname = "monad-time";
       version = "0.3.1.0";
       sha256 = "0z30c0k5bqlz86vwajnm6kj26i09zx6dzqwd00z6ba8hqyzm1x0a";
       libraryHaskellDepends = [ base mtl time ];
       testHaskellDepends = [ base mtl time ];
       homepage = "https://github.com/scrive/monad-time";
       description = "Type class for monads which carry the notion of the current time";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "monad-unlift" = callPackage
    ({ mkDerivation, base, constraints, monad-control, transformers
     , transformers-base
     }:
     mkDerivation {
       pname = "monad-unlift";
       version = "0.2.0";
       sha256 = "03zf2nd00ds12rrbp3qn7pr9vaw1npzswrzcnhc1k0p436366pjb";
       libraryHaskellDepends = [
         base constraints monad-control transformers transformers-base
       ];
       homepage = "https://github.com/fpco/monad-unlift";
       description = "Typeclasses for representing monad transformer unlifting";
       license = stdenv.lib.licenses.mit;
     }) {};
  "monad-unlift-ref" = callPackage
    ({ mkDerivation, base, constraints, exceptions, monad-control
     , monad-unlift, mtl, mutable-containers, resourcet, stm
     , transformers, transformers-base
     }:
     mkDerivation {
       pname = "monad-unlift-ref";
       version = "0.2.1";
       sha256 = "078xjz3a6rgqqgf8zg9ngspixf9pgch845l6gs5ssy3l54wra18g";
       libraryHaskellDepends = [
         base constraints exceptions monad-control monad-unlift mtl
         mutable-containers resourcet stm transformers transformers-base
       ];
       homepage = "https://github.com/fpco/monad-unlift";
       description = "Typeclasses for representing monad transformer unlifting";
       license = stdenv.lib.licenses.mit;
     }) {};
  "monadic-arrays" = callPackage
    ({ mkDerivation, array, base, stm, transformers
     , transformers-compat
     }:
     mkDerivation {
       pname = "monadic-arrays";
       version = "0.2.2";
       sha256 = "183nwb3ji4ak6yf2wahsa92l8ymnhhljxkvp8f6b8wh223318xv6";
       libraryHaskellDepends = [
         array base stm transformers transformers-compat
       ];
       homepage = "http://github.com/ekmett/monadic-arrays/";
       description = "Boxed and unboxed arrays for monad transformers";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "monadlist" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "monadlist";
       version = "0.0.2";
       sha256 = "1zpxqp5zhcpk4358xqrapvkcfyazpdsdlrw3g14518y2kwnfifq6";
       libraryHaskellDepends = [ base ];
       description = "Monadic versions of list functions";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "monads-tf" = callPackage
    ({ mkDerivation, base, transformers }:
     mkDerivation {
       pname = "monads-tf";
       version = "0.1.0.3";
       sha256 = "1wdhskwa6dw8qljbvwpyxj8ca6y95q2np7z4y4q6bpf4anmd5794";
       libraryHaskellDepends = [ base transformers ];
       description = "Monad classes, using type families";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "mongoDB" = callPackage
    ({ mkDerivation, array, base, base16-bytestring, base64-bytestring
     , binary, bson, bytestring, conduit, conduit-extra, containers
     , criterion, cryptohash, data-default-class, hashtables, hspec
     , lifted-base, monad-control, mtl, network, nonce, old-locale
     , parsec, pureMD5, random, random-shuffle, resourcet, stm, tagged
     , text, time, tls, transformers, transformers-base
     }:
     mkDerivation {
       pname = "mongoDB";
       version = "2.4.0.0";
       sha256 = "06g7mvazsymbyzm1zhsyfpbmhvlizidb4lp5l6axfw2wh90h5f7x";
       libraryHaskellDepends = [
         array base base16-bytestring base64-bytestring binary bson
         bytestring conduit conduit-extra containers cryptohash
         data-default-class hashtables lifted-base monad-control mtl network
         nonce parsec pureMD5 random random-shuffle resourcet stm tagged
         text time tls transformers transformers-base
       ];
       testHaskellDepends = [ base hspec mtl old-locale text time ];
       benchmarkHaskellDepends = [
         array base base16-bytestring base64-bytestring binary bson
         bytestring containers criterion cryptohash data-default-class
         hashtables lifted-base monad-control mtl network nonce parsec
         random random-shuffle stm text transformers-base
       ];
       doCheck = false;
       homepage = "https://github.com/mongodb-haskell/mongodb";
       description = "Driver (client) for MongoDB, a free, scalable, fast, document DBMS";
       license = stdenv.lib.licenses.asl20;
     }) {};
  "mono-traversable" = callPackage
    ({ mkDerivation, base, bytestring, containers, foldl, gauge
     , hashable, hspec, HUnit, mwc-random, QuickCheck, semigroups, split
     , text, transformers, unordered-containers, vector
     , vector-algorithms
     }:
     mkDerivation {
       pname = "mono-traversable";
       version = "1.0.10.0";
       sha256 = "04c8gcksxkrfdll2lm3aaj1dgz7snvfa8avsccs3h6v5ygvdp5h0";
       revision = "1";
       editedCabalFile = "1hgwrmq7r8d1nq9283wis67lg0wlid2sgqnr9vpsv2wpnd4n1rdl";
       libraryHaskellDepends = [
         base bytestring containers hashable split text transformers
         unordered-containers vector vector-algorithms
       ];
       testHaskellDepends = [
         base bytestring containers foldl hspec HUnit QuickCheck semigroups
         text transformers unordered-containers vector
       ];
       benchmarkHaskellDepends = [ base gauge mwc-random vector ];
       homepage = "https://github.com/snoyberg/mono-traversable#readme";
       description = "Type classes for mapping, folding, and traversing monomorphic containers";
       license = stdenv.lib.licenses.mit;
     }) {};
  "mono-traversable-instances" = callPackage
    ({ mkDerivation, base, comonad, containers, dlist, dlist-instances
     , mono-traversable, semigroupoids, semigroups, transformers
     , vector-instances
     }:
     mkDerivation {
       pname = "mono-traversable-instances";
       version = "0.1.0.0";
       sha256 = "0zh81hvqnracil2nvkx14xzwv9vavsnx739acp6gycdyrs5jpzxm";
       libraryHaskellDepends = [
         base comonad containers dlist dlist-instances mono-traversable
         semigroupoids semigroups transformers vector-instances
       ];
       homepage = "https://github.com/snoyberg/mono-traversable#readme";
       description = "Extra typeclass instances for mono-traversable";
       license = stdenv.lib.licenses.mit;
     }) {};
  "monoid-extras" = callPackage
    ({ mkDerivation, base, criterion, groups, semigroupoids, semigroups
     }:
     mkDerivation {
       pname = "monoid-extras";
       version = "0.5";
       sha256 = "172d1mfns7agd619rlbb1i9kw2y26kjvivkva06k1r14bar1lmy6";
       revision = "2";
       editedCabalFile = "1q73ghd12fd451zm4m045h8v3y61jmfhj6k890gnv6z7lyb7xwg2";
       libraryHaskellDepends = [ base groups semigroupoids semigroups ];
       benchmarkHaskellDepends = [ base criterion semigroups ];
       description = "Various extra monoid-related definitions and utilities";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "monoid-subclasses" = callPackage
    ({ mkDerivation, base, bytestring, containers, primes, QuickCheck
     , quickcheck-instances, tasty, tasty-quickcheck, text, vector
     }:
     mkDerivation {
       pname = "monoid-subclasses";
       version = "0.4.6.1";
       sha256 = "19mfklkdhyv94pfg5i92h0z90sc99rbgpi8z0w55bz3qhxnqg5yh";
       libraryHaskellDepends = [
         base bytestring containers primes text vector
       ];
       testHaskellDepends = [
         base bytestring containers primes QuickCheck quickcheck-instances
         tasty tasty-quickcheck text vector
       ];
       homepage = "https://github.com/blamario/monoid-subclasses/";
       description = "Subclasses of Monoid";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "monoid-transformer" = callPackage
    ({ mkDerivation, base, semigroups }:
     mkDerivation {
       pname = "monoid-transformer";
       version = "0.0.4";
       sha256 = "1243r77m5ywphwyhw7kn9vb2ha5m5zj375bd61fprdfiwi3z3as3";
       libraryHaskellDepends = [ base semigroups ];
       description = "Monoid counterparts to some ubiquitous monad transformers";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "monoidal-containers" = callPackage
    ({ mkDerivation, base, containers, deepseq, hashable, lens, newtype
     , semigroups, unordered-containers
     }:
     mkDerivation {
       pname = "monoidal-containers";
       version = "0.3.1.0";
       sha256 = "11gpqp4c54q6kmsdfpl0lcrfj6687h51mjpgirl299j6bam2bhs4";
       libraryHaskellDepends = [
         base containers deepseq hashable lens newtype semigroups
         unordered-containers
       ];
       homepage = "http://github.com/bgamari/monoidal-containers";
       description = "Containers with monoidal accumulation";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "morte" = callPackage
    ({ mkDerivation, alex, array, base, binary, code-page, containers
     , criterion, deepseq, Earley, formatting, http-client
     , http-client-tls, microlens, microlens-mtl, mtl
     , optparse-applicative, pipes, QuickCheck, system-fileio
     , system-filepath, tasty, tasty-hunit, tasty-quickcheck, text
     , transformers
     }:
     mkDerivation {
       pname = "morte";
       version = "1.6.20";
       sha256 = "01m382137sa9if332y9aag8fl77f4sd3i8kxz5cp8g1p10iyjjbl";
       isLibrary = true;
       isExecutable = true;
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [
         array base binary containers deepseq Earley formatting http-client
         http-client-tls microlens microlens-mtl pipes system-fileio
         system-filepath text transformers
       ];
       libraryToolDepends = [ alex ];
       executableHaskellDepends = [
         base code-page formatting optparse-applicative text
       ];
       testHaskellDepends = [
         base mtl QuickCheck system-filepath tasty tasty-hunit
         tasty-quickcheck text transformers
       ];
       benchmarkHaskellDepends = [ base criterion system-filepath text ];
       description = "A bare-bones calculus of constructions";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "mountpoints" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "mountpoints";
       version = "1.0.2";
       sha256 = "1hnm31pqcffphyc463wf0vbik9fzm5lb2r4wjdc1y4dqzmjdzz37";
       libraryHaskellDepends = [ base ];
       description = "list mount points";
       license = "LGPL";
     }) {};
  "mstate" = callPackage
    ({ mkDerivation, base, fail, monad-peel, mtl, stm }:
     mkDerivation {
       pname = "mstate";
       version = "0.2.8";
       sha256 = "13jv04skkb0ysxx9gswynp7fg7yz3nwy5zhzp209fbwr9izxcm05";
       libraryHaskellDepends = [ base fail monad-peel mtl stm ];
       description = "MState: A consistent State monad for concurrent applications";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "mtl" = callPackage
    ({ mkDerivation, base, transformers }:
     mkDerivation {
       pname = "mtl";
       version = "2.2.2";
       sha256 = "1xmy5741h8cyy0d91ahvqdz2hykkk20l8br7lg1rccnkis5g80w8";
       libraryHaskellDepends = [ base transformers ];
       homepage = "http://github.com/haskell/mtl";
       description = "Monad classes, using functional dependencies";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "mtl-compat" = callPackage
    ({ mkDerivation, base, mtl }:
     mkDerivation {
       pname = "mtl-compat";
       version = "0.2.1.3";
       sha256 = "15388p9ybdn6digk6cpdsw6havd0yva8vvwl3p7fnc9sb59wln34";
       revision = "4";
       editedCabalFile = "1mfrx8cpx0502sjv0bmlfkl0h46c4krldg8m89k4fj6iawwg2ab5";
       libraryHaskellDepends = [ base mtl ];
       doHaddock = false;
       homepage = "https://github.com/haskell-compat/mtl-compat";
       description = "Backported Control.Monad.Except module from mtl";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "mtl-prelude" = callPackage
    ({ mkDerivation, base, mtl, transformers }:
     mkDerivation {
       pname = "mtl-prelude";
       version = "2.0.3.1";
       sha256 = "0cqjl0mcnj6qgx46qxjygndzlgch4mc0q0sm3wbd4fynjfhdv9n4";
       libraryHaskellDepends = [ base mtl transformers ];
       doCheck = false;
       homepage = "https://github.com/nikita-volkov/mtl-prelude";
       description = "Reexports of most definitions from \"mtl\" and \"transformers\"";
       license = stdenv.lib.licenses.mit;
     }) {};
  "multiarg" = callPackage
    ({ mkDerivation, base, QuickCheck, tasty, tasty-quickcheck
     , tasty-th
     }:
     mkDerivation {
       pname = "multiarg";
       version = "0.30.0.10";
       sha256 = "188pqjpd1l4kwv4gnym6nq6nyfmcrq153bdpqbfjmmh6iqx65yn9";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [ base ];
       testHaskellDepends = [
         base QuickCheck tasty tasty-quickcheck tasty-th
       ];
       homepage = "https://github.com/massysett/multiarg";
       description = "Command lines for options that take multiple arguments";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "multimap" = callPackage
    ({ mkDerivation, base, containers }:
     mkDerivation {
       pname = "multimap";
       version = "1.2.1";
       sha256 = "0d3l5q4yvmywl6i9ip96zz0fvhjdh00mfbbniphbjxsi8wlwack3";
       libraryHaskellDepends = [ base containers ];
       homepage = "http://hub.darcs.net/scravy/multimap";
       description = "A multimap";
       license = stdenv.lib.licenses.mit;
     }) {};
  "multipart" = callPackage
    ({ mkDerivation, base, bytestring, parsec, stringsearch }:
     mkDerivation {
       pname = "multipart";
       version = "0.1.3";
       sha256 = "1x4n4yyva22dhfr1pg5ki112qvvzb4hyd7bwpm189iq4gcp52q4z";
       libraryHaskellDepends = [ base bytestring parsec stringsearch ];
       homepage = "http://www.github.com/silkapp/multipart";
       description = "HTTP multipart split out of the cgi package";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "multistate" = callPackage
    ({ mkDerivation, base, hspec, monad-control, mtl, tagged
     , transformers, transformers-base
     }:
     mkDerivation {
       pname = "multistate";
       version = "0.8.0.1";
       sha256 = "1s9fs29ki3l1df0ddi04ckbich1xid413sm2zx59aqp92dfpimvm";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         base monad-control mtl tagged transformers transformers-base
       ];
       testHaskellDepends = [ base hspec transformers ];
       homepage = "https://github.com/lspitzner/multistate";
       description = "like mtl's ReaderT / WriterT / StateT, but more than one contained value/type";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "murmur-hash" = callPackage
    ({ mkDerivation, base, bytestring }:
     mkDerivation {
       pname = "murmur-hash";
       version = "0.1.0.9";
       sha256 = "1bb58kfnzvx3mpc0rc0dhqc1fk36nm8prd6gvf20gk6lxaadpfc9";
       libraryHaskellDepends = [ base bytestring ];
       homepage = "http://github.com/nominolo/murmur-hash";
       description = "MurmurHash2 implementation for Haskell";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "mustache" = callPackage
    ({ mkDerivation, aeson, base, base-unicode-symbols, bytestring
     , cmdargs, containers, directory, either, filepath, hspec, lens
     , mtl, parsec, process, scientific, tar, template-haskell
     , temporary, text, th-lift, unordered-containers, vector, wreq
     , yaml, zlib
     }:
     mkDerivation {
       pname = "mustache";
       version = "2.3.0";
       sha256 = "1q3vadcvv2pxg6rpp92jq5zy784jxphdfpf6xn9y6wg9g3jn7201";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         aeson base bytestring containers directory either filepath mtl
         parsec scientific template-haskell text th-lift
         unordered-containers vector
       ];
       executableHaskellDepends = [
         aeson base bytestring cmdargs filepath text yaml
       ];
       testHaskellDepends = [
         aeson base base-unicode-symbols bytestring directory filepath hspec
         lens process tar temporary text unordered-containers wreq yaml zlib
       ];
       homepage = "https://github.com/JustusAdam/mustache";
       description = "A mustache template parser library";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "mutable-containers" = callPackage
    ({ mkDerivation, base, containers, gauge, ghc-prim, hspec
     , mono-traversable, primitive, QuickCheck, vector
     }:
     mkDerivation {
       pname = "mutable-containers";
       version = "0.3.4";
       sha256 = "0zhkhlvg9yw45fg3srvzx7j81547djpkfw7higdvlj7fmph6c6b4";
       libraryHaskellDepends = [
         base containers ghc-prim mono-traversable primitive vector
       ];
       testHaskellDepends = [
         base containers hspec primitive QuickCheck vector
       ];
       benchmarkHaskellDepends = [ base containers gauge vector ];
       homepage = "https://github.com/snoyberg/mono-traversable#readme";
       description = "Abstactions and concrete implementations of mutable containers";
       license = stdenv.lib.licenses.mit;
     }) {};
  "mwc-probability" = callPackage
    ({ mkDerivation, base, mwc-random, primitive, transformers }:
     mkDerivation {
       pname = "mwc-probability";
       version = "2.0.4";
       sha256 = "0msi72qp5aps3n4ji565r4rzyjg7svwilsh8lch59y2b4q7fvscz";
       revision = "1";
       editedCabalFile = "1b4wbxkxx0szjgzgn5jc1qap80zx6ispxrd51yxs4z7llv15w5k6";
       libraryHaskellDepends = [ base mwc-random primitive transformers ];
       homepage = "http://github.com/jtobin/mwc-probability";
       description = "Sampling function-based probability distributions";
       license = stdenv.lib.licenses.mit;
     }) {};
  "mwc-probability-transition" = callPackage
    ({ mkDerivation, base, exceptions, ghc-prim, hspec, logging-effect
     , mtl, mwc-probability, primitive, QuickCheck, transformers
     }:
     mkDerivation {
       pname = "mwc-probability-transition";
       version = "0.4";
       sha256 = "0s770dhcj2ig1nj57fmwa1z5q7dbk2mx9rw4civkk9xjygrvci1y";
       libraryHaskellDepends = [
         base exceptions ghc-prim hspec logging-effect mtl mwc-probability
         primitive QuickCheck transformers
       ];
       testHaskellDepends = [
         base hspec logging-effect mwc-probability QuickCheck
       ];
       homepage = "https://github.com/ocramz/mwc-probability-transition";
       description = "A Markov stochastic transition operator with logging";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "mwc-random" = callPackage
    ({ mkDerivation, base, math-functions, primitive, time, vector }:
     mkDerivation {
       pname = "mwc-random";
       version = "0.13.6.0";
       sha256 = "05j7yh0hh9nxic3dijmzv44kc6gzclvamdph7sq7w19wq57k6pq6";
       libraryHaskellDepends = [
         base math-functions primitive time vector
       ];
       homepage = "https://github.com/bos/mwc-random";
       description = "Fast, high quality pseudo random number generation";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "mysql" = callPackage
    ({ mkDerivation, base, bytestring, Cabal, containers, hspec, mysql
     }:
     mkDerivation {
       pname = "mysql";
       version = "0.1.6";
       sha256 = "1vlr4z3ng8sibb7g8363xlhff3811z8b5nmm0ljai6r5r5hrym4y";
       setupHaskellDepends = [ base Cabal ];
       libraryHaskellDepends = [ base bytestring containers ];
       librarySystemDepends = [ mysql ];
       testHaskellDepends = [ base bytestring hspec ];
       doCheck = false;
       homepage = "https://github.com/paul-rouse/mysql";
       description = "A low-level MySQL client library";
       license = stdenv.lib.licenses.bsd3;
     }) {inherit (pkgs) mysql;};
  "mysql-haskell" = callPackage
    ({ mkDerivation, base, binary, binary-ieee754, binary-parsers
     , blaze-textual, bytestring, bytestring-lexing, cryptonite
     , io-streams, memory, monad-loops, network, scientific, tcp-streams
     , text, time, tls, vector, wire-streams, word24
     }:
     mkDerivation {
       pname = "mysql-haskell";
       version = "0.8.3.0";
       sha256 = "1b3sa119m82qmq2mkn0ixhs175i6l92nk4qwvfhh226crj6g5bp9";
       revision = "1";
       editedCabalFile = "1kpfmrwwdaxjqwbsc6m9imlcfi2vvkz62pin5nrvm1fk17isy69v";
       libraryHaskellDepends = [
         base binary binary-ieee754 binary-parsers blaze-textual bytestring
         bytestring-lexing cryptonite io-streams memory monad-loops network
         scientific tcp-streams text time tls vector wire-streams word24
       ];
       doCheck = false;
       homepage = "https://github.com/winterland1989/mysql-haskell";
       description = "pure haskell MySQL driver";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "mysql-haskell-nem" = callPackage
    ({ mkDerivation, base, bytestring, io-streams, mysql-haskell
     , scientific, text, time
     }:
     mkDerivation {
       pname = "mysql-haskell-nem";
       version = "0.1.0.0";
       sha256 = "038zf940jw7xigv6gp8rjg5zch4hdd1rc3w6yypsg5nwdsvnh23s";
       libraryHaskellDepends = [
         base bytestring io-streams mysql-haskell scientific text time
       ];
       homepage = "https://github.com/lorenzo/mysql-haskell-nem#readme";
       description = "Adds a interface like mysql-simple to mysql-haskell";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "mysql-haskell-openssl" = callPackage
    ({ mkDerivation, base, binary, HsOpenSSL, mysql-haskell
     , tcp-streams, tcp-streams-openssl, wire-streams
     }:
     mkDerivation {
       pname = "mysql-haskell-openssl";
       version = "0.8.3.0";
       sha256 = "0pm5vd2gpb1x68n2i5brvspngfplp283jlw9a351z2yrnpwmwd24";
       libraryHaskellDepends = [
         base binary HsOpenSSL mysql-haskell tcp-streams tcp-streams-openssl
         wire-streams
       ];
       homepage = "https://github.com/winterland1989/mysql-haskell";
       description = "TLS support for mysql-haskell package using openssl";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "mysql-simple" = callPackage
    ({ mkDerivation, attoparsec, base, base16-bytestring, blaze-builder
     , blaze-textual, bytestring, containers, hspec, mysql, old-locale
     , pcre-light, text, time
     }:
     mkDerivation {
       pname = "mysql-simple";
       version = "0.4.5";
       sha256 = "1cbwdsxysz6a4182fgkkd869hm44v834lqv2igwsfbx6v0p44g5h";
       libraryHaskellDepends = [
         attoparsec base base16-bytestring blaze-builder blaze-textual
         bytestring containers mysql old-locale pcre-light text time
       ];
       testHaskellDepends = [ base blaze-builder hspec text ];
       doCheck = false;
       homepage = "https://github.com/paul-rouse/mysql-simple";
       description = "A mid-level MySQL client library";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "nagios-check" = callPackage
    ({ mkDerivation, base, bifunctors, exceptions, hspec, mtl
     , QuickCheck, text
     }:
     mkDerivation {
       pname = "nagios-check";
       version = "0.3.2";
       sha256 = "1dv0g25iz61ql9nz9s7krlpa1hjv3iqf4i1wsm1njf8cn5fbij8v";
       libraryHaskellDepends = [ base bifunctors exceptions mtl text ];
       testHaskellDepends = [ base hspec QuickCheck text ];
       homepage = "https://github.com/olorin/haskell-nagios-check";
       description = "Package for writing monitoring plugins";
       license = stdenv.lib.licenses.mit;
     }) {};
  "named" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "named";
       version = "0.1.0.0";
       sha256 = "0n26085hhqcqazwb02j5ippicl04caln935dbsq8sgkaj1imryp7";
       libraryHaskellDepends = [ base ];
       testHaskellDepends = [ base ];
       description = "Named parameters (keyword arguments) for Haskell";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "names-th" = callPackage
    ({ mkDerivation, base, containers, template-haskell }:
     mkDerivation {
       pname = "names-th";
       version = "0.3.0.0";
       sha256 = "09m5zflpk1h7jwz40mijhnpbsd8qnnay1jm3lpfrvdmg49m8zqqb";
       libraryHaskellDepends = [ base containers template-haskell ];
       homepage = "http://khibino.github.io/haskell-relational-record/";
       description = "Manipulate name strings for TH";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "nano-erl" = callPackage
    ({ mkDerivation, base, stm }:
     mkDerivation {
       pname = "nano-erl";
       version = "0.1.0.1";
       sha256 = "04pfk3a9m6fgspyk2vriixldsx2y9p2jcwzfjfvpgjiq5dl602ip";
       libraryHaskellDepends = [ base stm ];
       description = "Small library for Erlang-style actor semantics";
       license = stdenv.lib.licenses.mit;
     }) {};
  "nanospec" = callPackage
    ({ mkDerivation, base, hspec, silently }:
     mkDerivation {
       pname = "nanospec";
       version = "0.2.2";
       sha256 = "1rcmhl9bhyfvanalnf1r86wkx6rq6wdvagnw1h011jcnnb1cq56g";
       libraryHaskellDepends = [ base ];
       testHaskellDepends = [ base hspec silently ];
       homepage = "https://github.com/hspec/nanospec#readme";
       description = "A lightweight implementation of a subset of Hspec's API";
       license = stdenv.lib.licenses.mit;
     }) {};
  "nats" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "nats";
       version = "1.1.2";
       sha256 = "1v40drmhixck3pz3mdfghamh73l4rp71mzcviipv1y8jhrfxilmr";
       revision = "1";
       editedCabalFile = "1jzyysf758lfindlclqpzqcd0lrgrdv0rnz2lg8g1rvv07x2n7zh";
       doHaddock = false;
       homepage = "http://github.com/ekmett/nats/";
       description = "Natural numbers";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "natural-induction" = callPackage
    ({ mkDerivation, base, peano }:
     mkDerivation {
       pname = "natural-induction";
       version = "0.2.0.0";
       sha256 = "1brkmvkwpgqsxra210h8fkb9bpvawmbdwwvvhsd58kzmkd599alr";
       libraryHaskellDepends = [ base peano ];
       description = "Induction over natural numbers";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "natural-sort" = callPackage
    ({ mkDerivation, base, bytestring, parsec, text }:
     mkDerivation {
       pname = "natural-sort";
       version = "0.1.2";
       sha256 = "0l3bkbqzrlpdhzazqqlx71ah0m13ypa0981qvw3sn9q8d0sbfwkv";
       libraryHaskellDepends = [ base bytestring parsec text ];
       homepage = "https://john-millikin.com/software/natural-sort/";
       description = "User-friendly text collation";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "natural-transformation" = callPackage
    ({ mkDerivation, base, containers, quickcheck-instances, tasty
     , tasty-quickcheck
     }:
     mkDerivation {
       pname = "natural-transformation";
       version = "0.4";
       sha256 = "1by8xwjc23l6pa9l4iv7zp82dykpll3vc3hgxk0pgva724n8xhma";
       revision = "7";
       editedCabalFile = "03nkhdrwki9j81clgfck4yl7ylv6dwa7gi77kknzq3s3nqlp728v";
       libraryHaskellDepends = [ base ];
       testHaskellDepends = [
         base containers quickcheck-instances tasty tasty-quickcheck
       ];
       homepage = "https://github.com/ku-fpg/natural-transformation";
       description = "A natural transformation package";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "ndjson-conduit" = callPackage
    ({ mkDerivation, aeson, attoparsec, base, bytestring, conduit }:
     mkDerivation {
       pname = "ndjson-conduit";
       version = "0.1.0.5";
       sha256 = "1ccxliyy0flpby9jix2n8jy1i4jgiap42maqhh9ny53vqkvvhdy0";
       libraryHaskellDepends = [
         aeson attoparsec base bytestring conduit
       ];
       homepage = "https://github.com/srijs/haskell-ndjson-conduit";
       description = "Conduit-based parsing and serialization for newline delimited JSON";
       license = stdenv.lib.licenses.mit;
     }) {};
  "neat-interpolation" = callPackage
    ({ mkDerivation, base, base-prelude, megaparsec, template-haskell
     , text
     }:
     mkDerivation {
       pname = "neat-interpolation";
       version = "0.3.2.2";
       sha256 = "0ffcr6q9bmvlmz5j8s0q08pbqzcfz9pkh8gz52arzscflpncbj5n";
       libraryHaskellDepends = [
         base base-prelude megaparsec template-haskell text
       ];
       doCheck = false;
       homepage = "https://github.com/nikita-volkov/neat-interpolation";
       description = "A quasiquoter for neat and simple multiline text interpolation";
       license = stdenv.lib.licenses.mit;
     }) {};
  "netlib-carray" = callPackage
    ({ mkDerivation, base, carray, netlib-ffi, transformers }:
     mkDerivation {
       pname = "netlib-carray";
       version = "0.0.1.1";
       sha256 = "1vxyffhpayyxwak36b9i7gw35gz61ym9lxnhk45l0h4js3v05iwv";
       libraryHaskellDepends = [ base carray netlib-ffi transformers ];
       homepage = "http://hub.darcs.net/thielema/netlib-carray/";
       description = "Helper modules for CArray wrappers to BLAS and LAPACK";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "netlib-ffi" = callPackage
    ({ mkDerivation, base, storable-complex, transformers }:
     mkDerivation {
       pname = "netlib-ffi";
       version = "0.1";
       sha256 = "0ckwa5r8fx2j7qb5phy6gm3xbg9crr9amglcicdxgnzgjd8aap2h";
       libraryHaskellDepends = [ base storable-complex transformers ];
       homepage = "http://hub.darcs.net/thielema/netlib-ffi/";
       description = "Helper modules for FFI to BLAS and LAPACK";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "netpbm" = callPackage
    ({ mkDerivation, attoparsec, attoparsec-binary, base, bytestring
     , criterion, hspec, HUnit, storable-record, unordered-containers
     , vector, vector-th-unbox
     }:
     mkDerivation {
       pname = "netpbm";
       version = "1.0.2";
       sha256 = "1my2zi26wspzh0pplfhgwj9vmkv41hwvrzl8k1virqsbm6y08sl4";
       revision = "1";
       editedCabalFile = "1vhwjv5c5gxn9l9982da54nzczbmj8rl09xn8ac7rix0zmmyvl50";
       libraryHaskellDepends = [
         attoparsec attoparsec-binary base bytestring storable-record
         unordered-containers vector vector-th-unbox
       ];
       testHaskellDepends = [ base bytestring hspec HUnit vector ];
       benchmarkHaskellDepends = [ base bytestring criterion ];
       homepage = "https://github.com/nh2/haskell-netpbm";
       description = "Loading PBM, PGM, PPM image files";
       license = stdenv.lib.licenses.mit;
     }) {};
  "nettle" = callPackage
    ({ mkDerivation, array, base, byteable, bytestring
     , crypto-cipher-tests, crypto-cipher-types, HUnit, nettle
     , QuickCheck, securemem, tagged, test-framework
     , test-framework-hunit, test-framework-quickcheck2
     }:
     mkDerivation {
       pname = "nettle";
       version = "0.3.0";
       sha256 = "0pbxpxr9xdw3ha5lm9vnsbsvq0kzzsqv6gfk041ijllf1sc0hgyg";
       libraryHaskellDepends = [
         base byteable bytestring crypto-cipher-types securemem tagged
       ];
       libraryPkgconfigDepends = [ nettle ];
       testHaskellDepends = [
         array base bytestring crypto-cipher-tests crypto-cipher-types HUnit
         QuickCheck tagged test-framework test-framework-hunit
         test-framework-quickcheck2
       ];
       doCheck = false;
       homepage = "https://github.com/stbuehler/haskell-nettle";
       description = "safe nettle binding";
       license = stdenv.lib.licenses.mit;
     }) {inherit (pkgs) nettle;};
  "netwire" = callPackage
    ({ mkDerivation, base, containers, deepseq, parallel, profunctors
     , random, semigroups, time, transformers
     }:
     mkDerivation {
       pname = "netwire";
       version = "5.0.3";
       sha256 = "0bi2xyipz11vsai4wghdrh5yywzl0bkinfpmh0qdp77y7qlygpgi";
       libraryHaskellDepends = [
         base containers deepseq parallel profunctors random semigroups time
         transformers
       ];
       homepage = "https://github.com/esoeylemez/netwire";
       description = "Functional reactive programming library";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "netwire-input" = callPackage
    ({ mkDerivation, base, deepseq, netwire }:
     mkDerivation {
       pname = "netwire-input";
       version = "0.0.7";
       sha256 = "1f9xxlcpy2brqn5hv0mdc428fav402jsqa1b8h4s8b09qa3v1ii9";
       libraryHaskellDepends = [ base deepseq netwire ];
       homepage = "https://www.github.com/Mokosha/netwire-input";
       description = "Input handling abstractions for netwire";
       license = stdenv.lib.licenses.mit;
     }) {};
  "netwire-input-glfw" = callPackage
    ({ mkDerivation, base, containers, deepseq, GLFW-b, mtl
     , netwire-input, stm
     }:
     mkDerivation {
       pname = "netwire-input-glfw";
       version = "0.0.10";
       sha256 = "1r186xwr5lycs0snr8amvyxvbq2l5jd9p20v8n12zyjm60kmi90y";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         base containers deepseq GLFW-b mtl netwire-input stm
       ];
       homepage = "https://www.github.com/Mokosha/netwire-input-glfw";
       description = "GLFW instance of netwire-input";
       license = stdenv.lib.licenses.mit;
     }) {};
  "network" = callPackage
    ({ mkDerivation, base, bytestring, doctest, hspec, HUnit, unix }:
     mkDerivation {
       pname = "network";
       version = "2.6.3.6";
       sha256 = "198mam7ahny48p9fajznbqq16a8ya2gw0xm3gnm1si1rmc4hdplv";
       libraryHaskellDepends = [ base bytestring unix ];
       testHaskellDepends = [ base bytestring doctest hspec HUnit ];
       doCheck = false;
       homepage = "https://github.com/haskell/network";
       description = "Low-level networking interface";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "network-anonymous-i2p" = callPackage
    ({ mkDerivation, attoparsec, base, bytestring, exceptions, hspec
     , hspec-attoparsec, hspec-expectations, mtl, network
     , network-attoparsec, network-simple, text, transformers, uuid
     }:
     mkDerivation {
       pname = "network-anonymous-i2p";
       version = "0.10.0";
       sha256 = "0b7z7w105l1yd3xpnnl2z779m5zknf756cslksbbpsy16rn7kxfg";
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [
         attoparsec base bytestring exceptions mtl network
         network-attoparsec network-simple text transformers uuid
       ];
       testHaskellDepends = [
         attoparsec base bytestring exceptions hspec hspec-attoparsec
         hspec-expectations mtl network network-simple transformers uuid
       ];
       doCheck = false;
       homepage = "http://github.com/solatis/haskell-network-anonymous-i2p";
       description = "Haskell API for I2P anonymous networking";
       license = stdenv.lib.licenses.mit;
     }) {};
  "network-anonymous-tor" = callPackage
    ({ mkDerivation, attoparsec, base, base32string, bytestring
     , exceptions, hexstring, hspec, hspec-attoparsec
     , hspec-expectations, network, network-attoparsec, network-simple
     , socks, splice, text, transformers
     }:
     mkDerivation {
       pname = "network-anonymous-tor";
       version = "0.11.0";
       sha256 = "0jbm29795dznmrdkvl95v9xhj8pcmwgsdk2ngaj6zv5a9arybbj1";
       isLibrary = true;
       isExecutable = true;
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [
         attoparsec base base32string bytestring exceptions hexstring
         network network-attoparsec network-simple socks text transformers
       ];
       executableHaskellDepends = [
         base exceptions network network-simple splice
       ];
       testHaskellDepends = [
         attoparsec base base32string bytestring exceptions hspec
         hspec-attoparsec hspec-expectations network network-simple socks
         text transformers
       ];
       homepage = "http://www.leonmergen.com/opensource.html";
       description = "Haskell API for Tor anonymous networking";
       license = stdenv.lib.licenses.mit;
     }) {};
  "network-attoparsec" = callPackage
    ({ mkDerivation, attoparsec, base, bytestring, enclosed-exceptions
     , exceptions, lifted-base, monad-control, mtl, network
     , transformers
     }:
     mkDerivation {
       pname = "network-attoparsec";
       version = "0.12.2";
       sha256 = "1w08py367mmwfg5lff6y9s6hdpg1nbjf7v6vv9s19aw6saxak44p";
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [
         attoparsec base bytestring enclosed-exceptions exceptions
         lifted-base monad-control mtl network transformers
       ];
       doCheck = false;
       homepage = "http://github.com/solatis/haskell-network-attoparsec";
       description = "Utility functions for running a parser against a socket";
       license = stdenv.lib.licenses.mit;
     }) {};
  "network-byte-order" = callPackage
    ({ mkDerivation, base, bytestring, doctest }:
     mkDerivation {
       pname = "network-byte-order";
       version = "0.0.0.0";
       sha256 = "0wfy57ip87ksppggpz26grk4w144yld95mf2y0c6mhcs1l8z3div";
       libraryHaskellDepends = [ base bytestring ];
       testHaskellDepends = [ base bytestring doctest ];
       description = "Network byte order utilities";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "network-conduit-tls" = callPackage
    ({ mkDerivation, base, bytestring, conduit, conduit-extra
     , connection, data-default-class, HUnit, mtl, network
     , streaming-commons, tls, transformers, unliftio-core
     }:
     mkDerivation {
       pname = "network-conduit-tls";
       version = "1.3.2";
       sha256 = "0zxdsf7isv3l2g58vsvi8iwlrgf85v7ksa8636kr6ffycbhn1zgc";
       libraryHaskellDepends = [
         base bytestring conduit conduit-extra connection data-default-class
         network streaming-commons tls transformers unliftio-core
       ];
       testHaskellDepends = [
         base bytestring conduit conduit-extra connection HUnit mtl
       ];
       homepage = "https://github.com/snoyberg/conduit";
       description = "Create TLS-aware network code with conduits";
       license = stdenv.lib.licenses.mit;
     }) {};
  "network-house" = callPackage
    ({ mkDerivation, array, base, containers, mtl }:
     mkDerivation {
       pname = "network-house";
       version = "0.1.0.2";
       sha256 = "0hxbzzdjrxnx9pknsbma7iyfr3pxrsff5n9mhbkpaqaizhibq7q7";
       libraryHaskellDepends = [ array base containers mtl ];
       homepage = "https://github.com/nh2/network-house";
       description = "data and parsers for Ethernet, TCP, UDP, IPv4, IPv6, ICMP, DHCP, TFTP";
       license = stdenv.lib.licenses.gpl2;
     }) {};
  "network-info" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "network-info";
       version = "0.2.0.10";
       sha256 = "0anmgzcpnz7nw3n6vq0r25m1s9l2svpwi83wza0lzkrlbnbzd02n";
       libraryHaskellDepends = [ base ];
       homepage = "http://github.com/jystic/network-info";
       description = "Access the local computer's basic network configuration";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "network-ip" = callPackage
    ({ mkDerivation, base, data-default-class, data-dword, data-endian
     , data-serializer, data-textual, hashable, parsers, tasty
     , tasty-quickcheck, text-printer, type-hint
     }:
     mkDerivation {
       pname = "network-ip";
       version = "0.3.0.2";
       sha256 = "1zjy232pamkd3977cyaq5w5r6ksbpqpgzzlds15zrahjccirs9gf";
       libraryHaskellDepends = [
         base data-default-class data-dword data-endian data-serializer
         data-textual hashable parsers text-printer type-hint
       ];
       testHaskellDepends = [
         base data-dword data-textual parsers tasty tasty-quickcheck
         text-printer
       ];
       homepage = "https://github.com/mvv/network-ip";
       description = "Internet Protocol data structures";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "network-multicast" = callPackage
    ({ mkDerivation, base, network }:
     mkDerivation {
       pname = "network-multicast";
       version = "0.2.0";
       sha256 = "1wkmx5gic0zqghxxdyyrcysfaj1aknj53v50qq6c40d4qfmm0fqg";
       libraryHaskellDepends = [ base network ];
       description = "Simple multicast library";
       license = stdenv.lib.licenses.publicDomain;
     }) {};
  "network-simple" = callPackage
    ({ mkDerivation, base, bytestring, network, safe-exceptions, socks
     , transformers
     }:
     mkDerivation {
       pname = "network-simple";
       version = "0.4.3";
       sha256 = "0a4hag26ry6lg90q4ppchvrm5xaij50jd4633mhfkfq8scgczm8d";
       revision = "1";
       editedCabalFile = "1xyz4b24vgnidvd43cfmf0k6090dayhfcp6n8x894ibd2mq3vash";
       libraryHaskellDepends = [
         base bytestring network safe-exceptions socks transformers
       ];
       homepage = "https://github.com/k0001/network-simple";
       description = "Simple network sockets usage patterns";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "network-simple-tls" = callPackage
    ({ mkDerivation, base, bytestring, data-default, network
     , network-simple, safe-exceptions, tls, transformers, x509
     , x509-store, x509-system, x509-validation
     }:
     mkDerivation {
       pname = "network-simple-tls";
       version = "0.3.1";
       sha256 = "12kwi2jc8g310wrw7ynq2hfhkxhh95qn0fy205g7a48xrw75npyj";
       libraryHaskellDepends = [
         base bytestring data-default network network-simple safe-exceptions
         tls transformers x509 x509-store x509-system x509-validation
       ];
       homepage = "https://github.com/k0001/network-simple-tls";
       description = "Simple interface to TLS secured network sockets";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "network-transport" = callPackage
    ({ mkDerivation, base, binary, bytestring, deepseq, hashable
     , transformers
     }:
     mkDerivation {
       pname = "network-transport";
       version = "0.5.2";
       sha256 = "0m4hixari440lymj43l9q4485gz6i9a768g7mnzwfynn8cmng5g7";
       libraryHaskellDepends = [
         base binary bytestring deepseq hashable transformers
       ];
       homepage = "http://haskell-distributed.github.com";
       description = "Network abstraction layer";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "network-transport-composed" = callPackage
    ({ mkDerivation, base, bytestring, network-transport }:
     mkDerivation {
       pname = "network-transport-composed";
       version = "0.2.1";
       sha256 = "0i2rwl1hwbp87kvnhfc6h0v2zy1hbfgrz0wx1vicd9m76nzbynx3";
       libraryHaskellDepends = [ base bytestring network-transport ];
       homepage = "http://haskell-distributed.github.com";
       description = "Compose network transports";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "network-transport-inmemory" = callPackage
    ({ mkDerivation, base, bytestring, containers, data-accessor
     , network-transport, network-transport-tests, stm
     }:
     mkDerivation {
       pname = "network-transport-inmemory";
       version = "0.5.2";
       sha256 = "0kpgx6r60cczr178ras5ia9xiihrs5a9hnfyv45djmq16faxfic2";
       revision = "1";
       editedCabalFile = "1cls49jpl0hs6pviyn1ga8nhsdgsvqg163sprif0pb21xz848d9k";
       libraryHaskellDepends = [
         base bytestring containers data-accessor network-transport stm
       ];
       testHaskellDepends = [
         base network-transport network-transport-tests
       ];
       homepage = "http://haskell-distributed.github.com";
       description = "In-memory instantiation of Network.Transport";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "network-transport-tests" = callPackage
    ({ mkDerivation, ansi-terminal, base, bytestring, containers, mtl
     , network-transport, random
     }:
     mkDerivation {
       pname = "network-transport-tests";
       version = "0.2.4.2";
       sha256 = "1iyb4zm2iw805qfnlhnlwm2hh1ajhzgzlghsn8g3hnpdgszw896b";
       libraryHaskellDepends = [
         ansi-terminal base bytestring containers mtl network-transport
         random
       ];
       homepage = "http://haskell-distributed.github.com";
       description = "Unit tests for Network.Transport implementations";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "network-uri" = callPackage
    ({ mkDerivation, base, deepseq, HUnit, parsec, test-framework
     , test-framework-hunit, test-framework-quickcheck2
     }:
     mkDerivation {
       pname = "network-uri";
       version = "2.6.1.0";
       sha256 = "1w27zkvn39kjr9lmw9421y8w43h572ycsfafsb7kyvr3a4ihlgj2";
       revision = "1";
       editedCabalFile = "141nj7q0p9wkn5gr41ayc63cgaanr9m59yym47wpxqr3c334bk32";
       libraryHaskellDepends = [ base deepseq parsec ];
       testHaskellDepends = [
         base HUnit test-framework test-framework-hunit
         test-framework-quickcheck2
       ];
       homepage = "https://github.com/haskell/network-uri";
       description = "URI manipulation";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "newtype" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "newtype";
       version = "0.2";
       sha256 = "0ng4i5r73256gzwl6bw57h0abqixj783c3ggph1hk2wsplx0655p";
       libraryHaskellDepends = [ base ];
       description = "A typeclass and set of functions for working with newtypes";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "newtype-generics" = callPackage
    ({ mkDerivation, base, criterion, hspec, hspec-discover, semigroups
     , transformers
     }:
     mkDerivation {
       pname = "newtype-generics";
       version = "0.5.3";
       sha256 = "0igyisw2djg19v9vkna1rwf47k97mvkvk4bbkmswznvbm00z15gj";
       revision = "1";
       editedCabalFile = "1glnwq1lw7780qgahqvh1qfx6k2ciwmbhc2wcc78v3aa3s954c8v";
       libraryHaskellDepends = [ base transformers ];
       testHaskellDepends = [ base hspec ];
       testToolDepends = [ hspec-discover ];
       benchmarkHaskellDepends = [ base criterion semigroups ];
       homepage = "http://github.com/sjakobi/newtype-generics";
       description = "A typeclass and set of functions for working with newtypes";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "next-ref" = callPackage
    ({ mkDerivation, base, stm }:
     mkDerivation {
       pname = "next-ref";
       version = "0.1.0.2";
       sha256 = "17vq4hn6m9wjd06h6px770zjkzfb1mk047a18zb3vmfm2xfg31m5";
       libraryHaskellDepends = [ base stm ];
       doCheck = false;
       description = "A concurrency primitive for a slow consumer";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "nicify-lib" = callPackage
    ({ mkDerivation, base, parsec, transformers }:
     mkDerivation {
       pname = "nicify-lib";
       version = "1.0.1";
       sha256 = "0cp76s0msf1i8a7pkzjl6qgi18n7zdya3pg90ml1dnidg5nzh9kx";
       libraryHaskellDepends = [ base parsec transformers ];
       description = "Pretty print the standard output of default `Show` instances";
       license = stdenv.lib.licenses.mit;
     }) {};
  "nix-paths" = callPackage
    ({ mkDerivation, base, process }:
     mkDerivation {
       pname = "nix-paths";
       version = "1.0.1";
       sha256 = "1y09wl1ihxmc9p926g595f70pdcsx78r3q5n5rna23lpq8xicdxb";
       configureFlags = [ "-fallow-relative-paths" ];
       libraryHaskellDepends = [ base process ];
       homepage = "https://github.com/peti/nix-paths";
       description = "Knowledge of Nix's installation directories";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "non-empty" = callPackage
    ({ mkDerivation, base, containers, deepseq, QuickCheck, utility-ht
     }:
     mkDerivation {
       pname = "non-empty";
       version = "0.3.0.1";
       sha256 = "00zbnpcnmchbbdgyw19m1bl3bdhmw89pp9k0mq3z75nz0i40gg9z";
       revision = "1";
       editedCabalFile = "1628z42q77xjvwpyx3rifqf6mh4y6ivdl0lkhngxwz8c21bnf7d3";
       libraryHaskellDepends = [
         base containers deepseq QuickCheck utility-ht
       ];
       homepage = "http://hub.darcs.net/thielema/non-empty/";
       description = "List-like structures with static restrictions on the number of elements";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "non-empty-sequence" = callPackage
    ({ mkDerivation, base, containers, semigroups }:
     mkDerivation {
       pname = "non-empty-sequence";
       version = "0.2.0.2";
       sha256 = "1qfidlv190wxrrp67h7rcrlczwfv7r0mdbwm31rrf08l1i6618yr";
       libraryHaskellDepends = [ base containers semigroups ];
       homepage = "http://www.github.com/massysett/non-empty-sequence";
       description = "Non-empty sequence";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "non-negative" = callPackage
    ({ mkDerivation, base, QuickCheck, semigroups, utility-ht }:
     mkDerivation {
       pname = "non-negative";
       version = "0.1.2";
       sha256 = "0f01q916dzkl1i0v15qrw9cviycki5g3fgi6x8gs45iwbzssq52n";
       libraryHaskellDepends = [ base QuickCheck semigroups utility-ht ];
       testHaskellDepends = [ base QuickCheck semigroups utility-ht ];
       homepage = "http://code.haskell.org/~thielema/non-negative/";
       description = "Non-negative numbers";
       license = "GPL";
     }) {};
  "nonce" = callPackage
    ({ mkDerivation, base, base64-bytestring, bytestring, entropy, text
     , transformers, unliftio, unliftio-core
     }:
     mkDerivation {
       pname = "nonce";
       version = "1.0.7";
       sha256 = "1q9ph0aq51mvdvydnriqd12sfin36pfb8f588zgac1ybn8r64ksb";
       libraryHaskellDepends = [
         base base64-bytestring bytestring entropy text transformers
         unliftio unliftio-core
       ];
       homepage = "https://github.com/prowdsponsor/nonce";
       description = "Generate cryptographic nonces";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "nondeterminism" = callPackage
    ({ mkDerivation, base, containers, mtl, tasty, tasty-hunit }:
     mkDerivation {
       pname = "nondeterminism";
       version = "1.4";
       sha256 = "1ibxnkbr1lqjpr00cmw1p94cypcplxr0yr6q3aspl0vp08xwjdrh";
       libraryHaskellDepends = [ base containers mtl ];
       testHaskellDepends = [ base tasty tasty-hunit ];
       description = "A monad and monad transformer for nondeterministic computations";
       license = "LGPL";
     }) {};
  "not-gloss" = callPackage
    ({ mkDerivation, base, binary, bmp, bytestring, GLUT, OpenGL
     , OpenGLRaw, spatial-math, time, vector, vector-binary-instances
     }:
     mkDerivation {
       pname = "not-gloss";
       version = "0.7.7.0";
       sha256 = "0pw3igxp71v7yrhsvbkkhk81nv9j2hac2wig16cclnq10kpd2h27";
       libraryHaskellDepends = [
         base binary bmp bytestring GLUT OpenGL OpenGLRaw spatial-math time
         vector vector-binary-instances
       ];
       description = "Painless 3D graphics, no affiliation with gloss";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "nsis" = callPackage
    ({ mkDerivation, base, directory, process, transformers, uniplate
     }:
     mkDerivation {
       pname = "nsis";
       version = "0.3.2";
       sha256 = "1jhmiydkiii350h6gdj8f6k8d0drsbp6a2dji4nik72nca6mp65r";
       libraryHaskellDepends = [ base transformers uniplate ];
       testHaskellDepends = [
         base directory process transformers uniplate
       ];
       doCheck = false;
       homepage = "https://github.com/ndmitchell/nsis#readme";
       description = "DSL for producing Windows Installer using NSIS";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "numbers" = callPackage
    ({ mkDerivation, base, QuickCheck, test-framework
     , test-framework-quickcheck2
     }:
     mkDerivation {
       pname = "numbers";
       version = "3000.2.0.2";
       sha256 = "0xssrf7lbyplkgnbfw1jqkib3w9wgn1d6n85pk86nx63j05y9kph";
       libraryHaskellDepends = [ base ];
       testHaskellDepends = [
         base QuickCheck test-framework test-framework-quickcheck2
       ];
       homepage = "https://github.com/jwiegley/numbers#readme";
       description = "Various number types";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "numeric-extras" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "numeric-extras";
       version = "0.1";
       sha256 = "1mk11c0gz1yjy5b8dvq6czfny57pln0bs7x28fz38qyr44872067";
       libraryHaskellDepends = [ base ];
       homepage = "http://github.com/ekmett/numeric-extras";
       description = "Useful tools from the C standard library";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "numeric-prelude" = callPackage
    ({ mkDerivation, array, base, containers, deepseq, non-negative
     , parsec, QuickCheck, random, semigroups, storable-record
     , utility-ht
     }:
     mkDerivation {
       pname = "numeric-prelude";
       version = "0.4.3.1";
       sha256 = "0531yjw1rzbv3snv1lc955350frgf8526slsxbx3ias71krbdr69";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         array base containers deepseq non-negative parsec QuickCheck random
         semigroups storable-record utility-ht
       ];
       homepage = "http://www.haskell.org/haskellwiki/Numeric_Prelude";
       description = "An experimental alternative hierarchy of numeric type classes";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "numhask" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "numhask";
       version = "0.2.3.1";
       sha256 = "04f1gzfhaikwazvdz0aigf6lz8yk75p8ji9pjb0wsdyxs8mly21k";
       libraryHaskellDepends = [ base ];
       homepage = "https://github.com/tonyday567/numhask#readme";
       description = "numeric classes";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "numhask-prelude" = callPackage
    ({ mkDerivation, base, doctest, numhask, protolude }:
     mkDerivation {
       pname = "numhask-prelude";
       version = "0.1.0.1";
       sha256 = "0px2ijdzll1912h652dvncvjhapwrg2z1dni87w2afzk477mpwdi";
       libraryHaskellDepends = [ base numhask protolude ];
       testHaskellDepends = [ doctest ];
       homepage = "https://github.com/tonyday567/numhask#readme";
       description = "A numeric prelude";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "numhask-range" = callPackage
    ({ mkDerivation, adjunctions, base, distributive, doctest
     , numhask-prelude, numhask-test, protolude, QuickCheck
     , semigroupoids, tasty
     }:
     mkDerivation {
       pname = "numhask-range";
       version = "0.2.3.1";
       sha256 = "1zfw49cgjwbx6v6ljqbl46d1nkiah0p79pjargjsfpfks9ra2qkc";
       libraryHaskellDepends = [
         adjunctions base distributive numhask-prelude protolude QuickCheck
         semigroupoids
       ];
       testHaskellDepends = [
         base doctest numhask-prelude numhask-test tasty
       ];
       homepage = "https://github.com/tonyday567/numhask-range#readme";
       description = "Numbers that are range representations";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "numhask-test" = callPackage
    ({ mkDerivation, base, numhask-prelude, QuickCheck, tasty
     , tasty-quickcheck
     }:
     mkDerivation {
       pname = "numhask-test";
       version = "0.1.0.0";
       sha256 = "1czcgnqxxm835q9m2iw3xyd8qwjpgdpjs1n9zzpd5sk6rklcjx6y";
       libraryHaskellDepends = [
         base numhask-prelude QuickCheck tasty tasty-quickcheck
       ];
       testHaskellDepends = [ base numhask-prelude QuickCheck tasty ];
       homepage = "https://github.com/tonyday567/numhask#readme";
       description = "Laws and tests for numhask";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "numtype-dk" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "numtype-dk";
       version = "0.5.0.2";
       sha256 = "0avkdbhxijcja9i9g3cqh699mys8nhsxgrrpkknycmqpvp07sy4q";
       revision = "1";
       editedCabalFile = "0892xm8vyyvl1glg4vniz8r5ydg1nz3zmbpgk5mxdih6wi6nmpy4";
       libraryHaskellDepends = [ base ];
       homepage = "https://github.com/bjornbm/numtype-dk";
       description = "Type-level integers, using TypeNats, Data Kinds, and Closed Type Families";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "nvim-hs" = callPackage
    ({ mkDerivation, base, bytestring, cereal, cereal-conduit, conduit
     , containers, data-default, deepseq, directory, dyre, filepath
     , foreign-store, hslogger, hspec, hspec-discover, HUnit, megaparsec
     , messagepack, mtl, network, optparse-applicative, prettyprinter
     , prettyprinter-ansi-terminal, process, QuickCheck, resourcet
     , setenv, stm, streaming-commons, template-haskell, text, time
     , time-locale-compat, transformers, transformers-base, unliftio
     , unliftio-core, utf8-string, void
     }:
     mkDerivation {
       pname = "nvim-hs";
       version = "1.0.0.3";
       sha256 = "07pnabrb9hs2l8ajrzcs3wz1m9vfq88wqjirf84ygmmnnd8dva71";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         base bytestring cereal cereal-conduit conduit containers
         data-default deepseq directory dyre filepath foreign-store hslogger
         megaparsec messagepack mtl network optparse-applicative
         prettyprinter prettyprinter-ansi-terminal process resourcet setenv
         stm streaming-commons template-haskell text time time-locale-compat
         transformers transformers-base unliftio unliftio-core utf8-string
         void
       ];
       executableHaskellDepends = [ base data-default ];
       testHaskellDepends = [
         base bytestring cereal cereal-conduit conduit containers
         data-default directory dyre filepath foreign-store hslogger hspec
         hspec-discover HUnit megaparsec messagepack mtl network
         optparse-applicative prettyprinter prettyprinter-ansi-terminal
         process QuickCheck resourcet setenv stm streaming-commons
         template-haskell text time time-locale-compat transformers
         transformers-base unliftio unliftio-core utf8-string
       ];
       testToolDepends = [ hspec-discover ];
       homepage = "https://github.com/neovimhaskell/nvim-hs";
       description = "Haskell plugin backend for neovim";
       license = stdenv.lib.licenses.asl20;
     }) {};
  "nvim-hs-contrib" = callPackage
    ({ mkDerivation, base, bytestring, data-default, directory
     , filepath, hspec, hspec-discover, messagepack, mtl, nvim-hs
     , prettyprinter, prettyprinter-ansi-terminal, QuickCheck, text
     , time, utf8-string, yaml
     }:
     mkDerivation {
       pname = "nvim-hs-contrib";
       version = "1.0.0.0";
       sha256 = "150kg8gkai4cz7yv42vgn3b6rl6p44vfksq897kjaa3b12yjwd5x";
       libraryHaskellDepends = [
         base bytestring data-default directory filepath messagepack mtl
         nvim-hs prettyprinter prettyprinter-ansi-terminal text time
         utf8-string yaml
       ];
       testHaskellDepends = [
         base hspec hspec-discover nvim-hs QuickCheck
       ];
       testToolDepends = [ hspec-discover ];
       homepage = "https://github.com/neovimhaskell/nvim-hs-contrib";
       description = "Haskell plugin backend for neovim";
       license = stdenv.lib.licenses.asl20;
     }) {};
  "o-clock" = callPackage
    ({ mkDerivation, base, ghc-prim }:
     mkDerivation {
       pname = "o-clock";
       version = "1.0.0.1";
       sha256 = "0nmv0zvhd2wd327q268xd8x9swb5v6pm5fn9p5zyn0khja38s6fr";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [ base ghc-prim ];
       executableHaskellDepends = [ base ];
       doCheck = false;
       homepage = "https://github.com/serokell/o-clock";
       description = "Type-safe time library";
       license = stdenv.lib.licenses.mit;
     }) {};
  "oauthenticated" = callPackage
    ({ mkDerivation, aeson, base, base64-bytestring, blaze-builder
     , bytestring, case-insensitive, cryptonite, exceptions, hspec
     , hspec-expectations, http-client, http-client-tls, http-types
     , memory, mtl, network, network-uri, text, time, transformers
     }:
     mkDerivation {
       pname = "oauthenticated";
       version = "0.2.1.0";
       sha256 = "08njax7jchkmha1angh98v0p3haxn8zj12lajl5npcmzlihd0k6l";
       libraryHaskellDepends = [
         aeson base base64-bytestring blaze-builder bytestring
         case-insensitive cryptonite exceptions http-client http-types
         memory mtl network network-uri text time transformers
       ];
       testHaskellDepends = [
         aeson base base64-bytestring blaze-builder bytestring
         case-insensitive cryptonite exceptions hspec hspec-expectations
         http-client http-client-tls http-types memory mtl network
         network-uri text time transformers
       ];
       homepage = "https://github.com/tel/oauthenticated.git#readme";
       description = "Simple OAuth for http-client";
       license = stdenv.lib.licenses.mit;
     }) {};
  "objective" = callPackage
    ({ mkDerivation, base, containers, exceptions, free, hashable
     , monad-skeleton, mtl, profunctors, template-haskell, transformers
     , transformers-compat, unordered-containers, void, witherable
     }:
     mkDerivation {
       pname = "objective";
       version = "1.1.2";
       sha256 = "0i36r3ygwpzb57ga0jjkp9rzikpsp15l777dclp7yi1zvqz2ikrg";
       revision = "1";
       editedCabalFile = "039j3xac9ish0yk4w04bmip6g9p6ndfd9ngh46ya125ms4nhmyj4";
       libraryHaskellDepends = [
         base containers exceptions free hashable monad-skeleton mtl
         profunctors template-haskell transformers transformers-compat
         unordered-containers void witherable
       ];
       homepage = "https://github.com/fumieval/objective";
       description = "Composable objects";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "odbc" = callPackage
    ({ mkDerivation, async, base, bytestring, containers, deepseq
     , formatting, hspec, optparse-applicative, parsec, QuickCheck
     , semigroups, template-haskell, text, time, transformers, unixODBC
     , unliftio-core, weigh
     }:
     mkDerivation {
       pname = "odbc";
       version = "0.2.2";
       sha256 = "0dkkkrv43kl3643i0j4hgj1mcsk1jhrl086dygd6hqb9hd4156k5";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         async base bytestring containers deepseq formatting parsec
         semigroups template-haskell text time transformers unliftio-core
       ];
       librarySystemDepends = [ unixODBC ];
       executableHaskellDepends = [
         base bytestring optparse-applicative text
       ];
       testHaskellDepends = [
         base bytestring hspec parsec QuickCheck text time
       ];
       benchmarkHaskellDepends = [ async base text weigh ];
       doCheck = false;
       homepage = "https://github.com/fpco/odbc";
       description = "Haskell binding to the ODBC API, aimed at SQL Server driver";
       license = stdenv.lib.licenses.bsd3;
     }) {inherit (pkgs) unixODBC;};
  "oeis" = callPackage
    ({ mkDerivation, base, HTTP, HUnit, network, network-uri
     , test-framework, test-framework-hunit
     }:
     mkDerivation {
       pname = "oeis";
       version = "0.3.9";
       sha256 = "13hv0qal024jq52k1rgy3hd9h9s8labkcngr0zk8jpcgi45jqsca";
       revision = "1";
       editedCabalFile = "0rb6l3qblay8aiwaznp35gj7vwmhm87y57wvf3babwrh91s88jaj";
       libraryHaskellDepends = [ base HTTP network network-uri ];
       testHaskellDepends = [
         base HUnit test-framework test-framework-hunit
       ];
       description = "Interface to the Online Encyclopedia of Integer Sequences (OEIS)";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "ofx" = callPackage
    ({ mkDerivation, base, parsec, pretty, time }:
     mkDerivation {
       pname = "ofx";
       version = "0.4.2.0";
       sha256 = "1wcmrlf27s6iyyndzhyyrf9dzyjia0ii8s365y1h75h9kwkf48hf";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [ base parsec pretty time ];
       executableHaskellDepends = [ base parsec pretty time ];
       homepage = "http://www.github.com/massysett/ofx";
       description = "Parser for OFX data";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "old-locale" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "old-locale";
       version = "1.0.0.7";
       sha256 = "0l3viphiszvz5wqzg7a45zp40grwlab941q5ay29iyw8p3v8pbyv";
       revision = "2";
       editedCabalFile = "04b9vn007hlvsrx4ksd3r8r3kbyaj2kvwxchdrmd4370qzi8p6gs";
       libraryHaskellDepends = [ base ];
       description = "locale library";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "old-time" = callPackage
    ({ mkDerivation, base, old-locale }:
     mkDerivation {
       pname = "old-time";
       version = "1.1.0.3";
       sha256 = "1h9b26s3kfh2k0ih4383w90ibji6n0iwamxp6rfp2lbq1y5ibjqw";
       revision = "2";
       editedCabalFile = "1j6ln1dkvhdvnwl33bp0xf9lhc4sybqk0aw42p8cq81xwwzbn7y9";
       libraryHaskellDepends = [ base old-locale ];
       description = "Time library";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "om-elm" = callPackage
    ({ mkDerivation, base, bytestring, Cabal, containers, directory
     , http-types, safe, safe-exceptions, template-haskell, text, unix
     , wai
     }:
     mkDerivation {
       pname = "om-elm";
       version = "1.0.0.3";
       sha256 = "0i674vjbp03nkr76fdi7bjylv264nxwnxw0ija11fkpd1rdg045g";
       libraryHaskellDepends = [
         base bytestring Cabal containers directory http-types safe
         safe-exceptions template-haskell text unix wai
       ];
       homepage = "https://github.com/owensmurray/om-elm";
       description = "Haskell utilities for building embedded Elm programs";
       license = stdenv.lib.licenses.mit;
     }) {};
  "once" = callPackage
    ({ mkDerivation, base, containers, hashable, template-haskell
     , unordered-containers
     }:
     mkDerivation {
       pname = "once";
       version = "0.2";
       sha256 = "1a2833v9mvjjh0m87qc5aj0n5yb8wzg5mrxhlh4g7hgsl4lccgkm";
       libraryHaskellDepends = [
         base containers hashable template-haskell unordered-containers
       ];
       homepage = "https://anonscm.debian.org/cgit/users/kaction-guest/haskell-once.git";
       description = "memoization for IO actions and functions";
       license = stdenv.lib.licenses.gpl3;
     }) {};
  "one-liner" = callPackage
    ({ mkDerivation, base, bifunctors, contravariant, ghc-prim, HUnit
     , profunctors, tagged, transformers
     }:
     mkDerivation {
       pname = "one-liner";
       version = "1.0";
       sha256 = "1diigbl8l0m8q1sl0kxjjqbhl3vkpf0rrzxlbqaamp3ahpmgpx67";
       revision = "1";
       editedCabalFile = "1ijc5mj93zyfj7hh12aw3xh30kc1xsp7wf6rbbfal36yllnl2xhs";
       libraryHaskellDepends = [
         base bifunctors contravariant ghc-prim profunctors tagged
         transformers
       ];
       testHaskellDepends = [ base contravariant HUnit ];
       homepage = "https://github.com/sjoerdvisscher/one-liner";
       description = "Constraint-based generics";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "one-liner-instances" = callPackage
    ({ mkDerivation, base, one-liner, random }:
     mkDerivation {
       pname = "one-liner-instances";
       version = "0.1.2.1";
       sha256 = "1gy900nd5n6cffqw63hlkqg4ly86wjlfqgdcm1zy2nyx7dxg914k";
       libraryHaskellDepends = [ base one-liner random ];
       homepage = "https://github.com/mstksg/one-liner-instances#readme";
       description = "Generics-based implementations for common typeclasses";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "online" = callPackage
    ({ mkDerivation, base, doctest, foldl, numhask-prelude, protolude
     , tasty, tdigest, vector, vector-algorithms
     }:
     mkDerivation {
       pname = "online";
       version = "0.3.0.0";
       sha256 = "056a9dkrzfgj0wf9f9d9d25f6yc03jx9z0p0z5xm8n8brk6b3bds";
       libraryHaskellDepends = [
         base foldl numhask-prelude protolude tdigest vector
         vector-algorithms
       ];
       testHaskellDepends = [ base doctest protolude tasty ];
       homepage = "https://github.com/tonyday567/online#readme";
       description = "online statistics";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "oo-prototypes" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "oo-prototypes";
       version = "0.1.0.0";
       sha256 = "0xpm2adf47clhzpwd833w706mc5xfxwr2wp4aywigy11687f9bly";
       libraryHaskellDepends = [ base ];
       homepage = "https://github.com/yi-editor/oo-prototypes";
       description = "Support for OO-like prototypes";
       license = stdenv.lib.licenses.gpl2;
     }) {};
  "open-browser" = callPackage
    ({ mkDerivation, base, process }:
     mkDerivation {
       pname = "open-browser";
       version = "0.2.1.0";
       sha256 = "0rna8ir2cfp8gk0rd2q60an51jxc08lx4gl0liw8wwqgh1ijxv8b";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [ base process ];
       executableHaskellDepends = [ base ];
       homepage = "https://github.com/rightfold/open-browser";
       description = "Open a web browser from Haskell";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "open-witness" = callPackage
    ({ mkDerivation, base, constraints, hashable, mtl, random, tasty
     , tasty-hunit, template-haskell, transformers, witness
     }:
     mkDerivation {
       pname = "open-witness";
       version = "0.4.0.1";
       sha256 = "04a10cv0iddnvp5my4h00bmmpc2mxz6c5gih5p4iyc7bdq6m0w07";
       libraryHaskellDepends = [
         base constraints hashable random template-haskell transformers
         witness
       ];
       testHaskellDepends = [ base mtl tasty tasty-hunit witness ];
       homepage = "https://github.com/AshleyYakeley/open-witness";
       description = "open witnesses";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "openexr-write" = callPackage
    ({ mkDerivation, base, binary, bytestring, data-binary-ieee754
     , deepseq, directory, hspec, split, vector, vector-split, zlib
     }:
     mkDerivation {
       pname = "openexr-write";
       version = "0.1.0.2";
       sha256 = "1qh5kb3gj746y6s2jggccjgp8qyzdydz016z62854vg39sk5a1ib";
       libraryHaskellDepends = [
         base binary bytestring data-binary-ieee754 deepseq split vector
         vector-split zlib
       ];
       testHaskellDepends = [ base bytestring directory hspec vector ];
       homepage = "git://klacansky.com/openexr-write.git";
       description = "Library for writing images in OpenEXR HDR file format";
       license = stdenv.lib.licenses.publicDomain;
     }) {};
  "openpgp-asciiarmor" = callPackage
    ({ mkDerivation, attoparsec, base, base64-bytestring, binary
     , bytestring, criterion, tasty, tasty-hunit
     }:
     mkDerivation {
       pname = "openpgp-asciiarmor";
       version = "0.1.1";
       sha256 = "01zna9zifixnzgalr3k21g9dv143cn49imawm4q9x37i2r9kybxr";
       libraryHaskellDepends = [
         attoparsec base base64-bytestring binary bytestring
       ];
       testHaskellDepends = [
         attoparsec base base64-bytestring binary bytestring tasty
         tasty-hunit
       ];
       benchmarkHaskellDepends = [ base bytestring criterion ];
       homepage = "http://floss.scru.org/openpgp-asciiarmor";
       description = "OpenPGP (RFC4880) ASCII Armor codec";
       license = stdenv.lib.licenses.isc;
     }) {};
  "opensource" = callPackage
    ({ mkDerivation, aeson, base, bytestring, http-client
     , http-client-tls, tasty, tasty-hunit, text, transformers
     }:
     mkDerivation {
       pname = "opensource";
       version = "0.1.1.0";
       sha256 = "10jlgk1rbpz5h1mbknq0i71k0n4ppp3yd498i7p2l79a9gi6pwqy";
       libraryHaskellDepends = [
         aeson base http-client http-client-tls text transformers
       ];
       testHaskellDepends = [
         aeson base bytestring http-client http-client-tls tasty tasty-hunit
         text transformers
       ];
       homepage = "https://api.opensource.org/";
       description = "Haskell API Wrapper for the Open Source License API";
       license = stdenv.lib.licenses.mit;
     }) {};
  "openssl-streams" = callPackage
    ({ mkDerivation, base, bytestring, HsOpenSSL, HUnit, io-streams
     , network, test-framework, test-framework-hunit
     }:
     mkDerivation {
       pname = "openssl-streams";
       version = "1.2.1.3";
       sha256 = "0pwghr7ygv59k572xsj1j97rilkbjz66qaiyj0ra2wfg6pl70wfw";
       revision = "2";
       editedCabalFile = "1004kgdryflpkp19dv4ikilhcn0xbfc5dsp6v3ib34580pcfj7wy";
       libraryHaskellDepends = [
         base bytestring HsOpenSSL io-streams network
       ];
       testHaskellDepends = [
         base bytestring HsOpenSSL HUnit io-streams network test-framework
         test-framework-hunit
       ];
       description = "OpenSSL network support for io-streams";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "operational" = callPackage
    ({ mkDerivation, base, mtl, random }:
     mkDerivation {
       pname = "operational";
       version = "0.2.3.5";
       sha256 = "1x2abg2q9d26h1vzj40r6k7k3gqgappbs4g9d853vvg77837km4i";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [ base mtl ];
       executableHaskellDepends = [ base mtl random ];
       homepage = "http://wiki.haskell.org/Operational";
       description = "Implementation of difficult monads made easy with operational semantics";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "operational-class" = callPackage
    ({ mkDerivation, base, operational, transformers }:
     mkDerivation {
       pname = "operational-class";
       version = "0.3.0.0";
       sha256 = "02z766b5a6fa7dgmw3qa1xryijf2im9n79gnjq0m5pd2hv5vja4b";
       libraryHaskellDepends = [ base operational transformers ];
       homepage = "https://github.com/srijs/haskell-operational-class";
       description = "MonadProgram typeclass for the operational package";
       license = stdenv.lib.licenses.mit;
     }) {};
  "opml-conduit" = callPackage
    ({ mkDerivation, base, bytestring, case-insensitive, conduit
     , conduit-combinators, containers, data-default, lens-simple
     , mono-traversable, monoid-subclasses, mtl, parsers, QuickCheck
     , quickcheck-instances, resourcet, safe-exceptions, semigroups
     , tasty, tasty-hunit, tasty-quickcheck, text, time, timerep
     , uri-bytestring, xml-conduit, xml-types
     }:
     mkDerivation {
       pname = "opml-conduit";
       version = "0.6.0.4";
       sha256 = "07axacfa0wik2cnpzcnjjp9w6ws8sjhinzxdc4vrxdxaj1v5a2s8";
       revision = "1";
       editedCabalFile = "160sazqsrmm2755642c5y5i38miiglqb66cy5k0hy4k2jkdmjfbi";
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [
         base case-insensitive conduit conduit-combinators containers
         lens-simple mono-traversable monoid-subclasses safe-exceptions
         semigroups text time timerep uri-bytestring xml-conduit xml-types
       ];
       testHaskellDepends = [
         base bytestring conduit conduit-combinators containers data-default
         lens-simple mono-traversable mtl parsers QuickCheck
         quickcheck-instances resourcet semigroups tasty tasty-hunit
         tasty-quickcheck text time uri-bytestring xml-conduit
       ];
       homepage = "https://github.com/k0ral/opml-conduit";
       description = "Streaming parser/renderer for the OPML 2.0 format.";
       license = stdenv.lib.licenses.publicDomain;
     }) {};
  "optional-args" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "optional-args";
       version = "1.0.2";
       sha256 = "1r5hhn6xvc01grggxdyy48daibwzi0aikgidq0ahpa6bfynm8d1f";
       libraryHaskellDepends = [ base ];
       description = "Optional function arguments";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "options" = callPackage
    ({ mkDerivation, base, containers, monads-tf, transformers }:
     mkDerivation {
       pname = "options";
       version = "1.2.1.1";
       sha256 = "0qjs0v1ny52w51n5582d4z8wy9h6n0zw1xb5dh686ff5wadflgi8";
       libraryHaskellDepends = [ base containers monads-tf transformers ];
       doCheck = false;
       homepage = "https://john-millikin.com/software/haskell-options/";
       description = "A powerful and easy-to-use command-line option parser";
       license = stdenv.lib.licenses.mit;
     }) {};
  "optparse-applicative" = callPackage
    ({ mkDerivation, ansi-wl-pprint, base, bytestring, process
     , QuickCheck, transformers, transformers-compat
     }:
     mkDerivation {
       pname = "optparse-applicative";
       version = "0.14.3.0";
       sha256 = "0qvn1s7jwrabbpmqmh6d6iafln3v3h9ddmxj2y4m0njmzq166ivj";
       libraryHaskellDepends = [
         ansi-wl-pprint base process transformers transformers-compat
       ];
       testHaskellDepends = [ base bytestring QuickCheck ];
       homepage = "https://github.com/pcapriotti/optparse-applicative";
       description = "Utilities and combinators for parsing command line options";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "optparse-generic" = callPackage
    ({ mkDerivation, base, bytestring, Only, optparse-applicative
     , semigroups, system-filepath, text, time, transformers, void
     }:
     mkDerivation {
       pname = "optparse-generic";
       version = "1.3.0";
       sha256 = "13rr3hq26dpmbami8vb6d1ig9ywk6jia22sp5dkp6jkfc1c9k4l0";
       libraryHaskellDepends = [
         base bytestring Only optparse-applicative semigroups
         system-filepath text time transformers void
       ];
       description = "Auto-generate a command-line parser for your datatype";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "optparse-simple" = callPackage
    ({ mkDerivation, base, bytestring, directory, githash
     , optparse-applicative, template-haskell, transformers
     }:
     mkDerivation {
       pname = "optparse-simple";
       version = "0.1.1";
       sha256 = "192mw3dn43vcckjbhmmrbs3r6vaaa74xqsp6c5bvmv2wafm1plq3";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         base githash optparse-applicative template-haskell transformers
       ];
       testHaskellDepends = [ base bytestring directory ];
       homepage = "https://github.com/fpco/optparse-simple#readme";
       description = "Simple interface to optparse-applicative";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "optparse-text" = callPackage
    ({ mkDerivation, base, hspec, optparse-applicative, text }:
     mkDerivation {
       pname = "optparse-text";
       version = "0.1.1.0";
       sha256 = "1vw410q7vayfgfbrxpigkpnwm8x1lcdxkh959w9f82l8xkn83h7n";
       libraryHaskellDepends = [ base optparse-applicative text ];
       testHaskellDepends = [ base hspec optparse-applicative text ];
       homepage = "https://github.com/passy/optparse-text#readme";
       description = "Data.Text helpers for optparse-applicative";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "overhang" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "overhang";
       version = "1.0.0";
       sha256 = "07iafybg45130jhwin6jj2fnkgcwra367f5df91xn34kaj9zas0x";
       libraryHaskellDepends = [ base ];
       homepage = "https://github.com/jship/overhang#readme";
       description = "Hang loose with your lambdas!";
       license = stdenv.lib.licenses.mit;
     }) {};
  "packcheck" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "packcheck";
       version = "0.3.1";
       sha256 = "1s171bgqpqh61vaf8s91bbpgn816380bma4wb8in4pnnaf2s0xhv";
       libraryHaskellDepends = [ base ];
       testHaskellDepends = [ base ];
       benchmarkHaskellDepends = [ base ];
       homepage = "https://github.com/harendra-kumar/packcheck";
       description = "Universal build and CI testing for Haskell packages";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "packdeps" = callPackage
    ({ mkDerivation, base, bytestring, Cabal, containers, directory
     , filepath, optparse-applicative, process, semigroups, split, tar
     , text, time
     }:
     mkDerivation {
       pname = "packdeps";
       version = "0.4.5";
       sha256 = "07nsnxxs5y77w0v5dxw9mqgq98s3riws5846qshlnhq4l5q73php";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         base bytestring Cabal containers directory filepath split tar text
         time
       ];
       executableHaskellDepends = [
         base Cabal containers optparse-applicative process semigroups
       ];
       homepage = "http://packdeps.haskellers.com/";
       description = "Check your cabal packages for lagging dependencies";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "pager" = callPackage
    ({ mkDerivation, base, bytestring, conduit, conduit-extra
     , directory, process, resourcet, safe, terminfo, text, transformers
     , unix
     }:
     mkDerivation {
       pname = "pager";
       version = "0.1.1.0";
       sha256 = "1wzfsindjxx61nca36hhldy0y33pgagg506ls9ldvrkvl4n4y7iy";
       isLibrary = true;
       isExecutable = true;
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [
         base bytestring conduit conduit-extra directory process resourcet
         safe terminfo text transformers unix
       ];
       executableHaskellDepends = [ base bytestring conduit-extra text ];
       homepage = "https://github.com/pharpend/pager";
       description = "Open up a pager, like 'less' or 'more'";
       license = stdenv.lib.licenses.bsd2;
     }) {};
  "pagination" = callPackage
    ({ mkDerivation, base, deepseq, exceptions, hspec, QuickCheck }:
     mkDerivation {
       pname = "pagination";
       version = "0.2.1";
       sha256 = "0g90xg5nfrwkrrmsfca5d2xf9y8md6pgh91zjk0dl2l3kvkbmp48";
       revision = "2";
       editedCabalFile = "0wvwi3hymp2vhhpzpycdc65zbsqmi2h0c6r0nf8p5nkgsk4pm1k2";
       libraryHaskellDepends = [ base deepseq exceptions ];
       testHaskellDepends = [ base exceptions hspec QuickCheck ];
       homepage = "https://github.com/mrkkrp/pagination";
       description = "Framework-agnostic pagination boilerplate";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "palette" = callPackage
    ({ mkDerivation, array, base, colour, containers, MonadRandom }:
     mkDerivation {
       pname = "palette";
       version = "0.3.0.1";
       sha256 = "0ylwgb7a0mhffz00hmhx93y4kyjb9xgm96jrfcxl464x8cjka5gi";
       libraryHaskellDepends = [
         array base colour containers MonadRandom
       ];
       homepage = "http://projects.haskell.org/diagrams";
       description = "Utilities for choosing and creating color schemes";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "pandoc" = callPackage
    ({ mkDerivation, aeson, aeson-pretty, base, base64-bytestring
     , binary, blaze-html, blaze-markup, bytestring, Cabal
     , case-insensitive, cmark-gfm, containers, data-default, deepseq
     , directory, doctemplates, exceptions, filepath, Glob
     , haddock-library, hslua, hslua-module-text, HTTP, http-client
     , http-client-tls, http-types, JuicyPixels, mtl, network
     , network-uri, pandoc-types, parsec, process, random, safe
     , scientific, SHA, skylighting, split, syb, tagsoup, temporary
     , texmath, text, time, unix, unordered-containers, vector, xml
     , yaml, zip-archive, zlib
     }:
     mkDerivation {
       pname = "pandoc";
       version = "2.2.1";
       sha256 = "1dqin92w513l7whg5wdgrngnxsj5mb8gppfvn7kjgyv2pdgpy0zy";
       revision = "1";
       editedCabalFile = "16f2c7awxbs17xycl3z1x11h7gc7rfzvw7i3pslsn9nms7rz3s3v";
       configureFlags = [ "-fhttps" "-f-trypandoc" ];
       isLibrary = true;
       isExecutable = true;
       enableSeparateDataOutput = true;
       setupHaskellDepends = [ base Cabal ];
       libraryHaskellDepends = [
         aeson aeson-pretty base base64-bytestring binary blaze-html
         blaze-markup bytestring case-insensitive cmark-gfm containers
         data-default deepseq directory doctemplates exceptions filepath
         Glob haddock-library hslua hslua-module-text HTTP http-client
         http-client-tls http-types JuicyPixels mtl network network-uri
         pandoc-types parsec process random safe scientific SHA skylighting
         split syb tagsoup temporary texmath text time unix
         unordered-containers vector xml yaml zip-archive zlib
       ];
       executableHaskellDepends = [ base ];
       doCheck = false;
       postInstall = ''
         mkdir -p $out/share
         mv $data/*/*/man $out/share/
       '';
       homepage = "https://pandoc.org";
       description = "Conversion between markup formats";
       license = stdenv.lib.licenses.gpl2;
     }) {};
  "pandoc-citeproc" = callPackage
    ({ mkDerivation, aeson, aeson-pretty, attoparsec, base, bytestring
     , Cabal, containers, data-default, directory, filepath, hs-bibutils
     , mtl, old-locale, pandoc, pandoc-types, parsec, process, rfc5051
     , setenv, split, syb, tagsoup, temporary, text, time
     , unordered-containers, vector, xml-conduit, yaml
     }:
     mkDerivation {
       pname = "pandoc-citeproc";
       version = "0.14.8.1";
       sha256 = "04cdx0b9k3xk2ss97vws21pydxcwxffsgh7xrqrnwwc3v7jn80fz";
       isLibrary = true;
       isExecutable = true;
       enableSeparateDataOutput = true;
       setupHaskellDepends = [ base Cabal ];
       libraryHaskellDepends = [
         aeson base bytestring containers data-default directory filepath
         hs-bibutils mtl old-locale pandoc pandoc-types parsec rfc5051
         setenv split syb tagsoup text time unordered-containers vector
         xml-conduit yaml
       ];
       executableHaskellDepends = [
         aeson aeson-pretty attoparsec base bytestring filepath pandoc
         pandoc-types syb text yaml
       ];
       testHaskellDepends = [
         aeson base bytestring containers directory filepath mtl pandoc
         pandoc-types process temporary text yaml
       ];
       doCheck = false;
       homepage = "https://github.com/jgm/pandoc-citeproc";
       description = "Supports using pandoc with citeproc";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "pandoc-types" = callPackage
    ({ mkDerivation, aeson, base, bytestring, containers, criterion
     , deepseq, ghc-prim, HUnit, QuickCheck, string-qq, syb
     , test-framework, test-framework-hunit, test-framework-quickcheck2
     , transformers
     }:
     mkDerivation {
       pname = "pandoc-types";
       version = "1.17.5.4";
       sha256 = "09wk2zskr0r2llsyif3s0x7vix05l1ya7qacsmmkrlhba5naib1j";
       libraryHaskellDepends = [
         aeson base bytestring containers deepseq ghc-prim QuickCheck syb
         transformers
       ];
       testHaskellDepends = [
         aeson base bytestring containers HUnit QuickCheck string-qq syb
         test-framework test-framework-hunit test-framework-quickcheck2
       ];
       benchmarkHaskellDepends = [ base criterion ];
       homepage = "http://johnmacfarlane.net/pandoc";
       description = "Types for representing a structured document";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "pango" = callPackage
    ({ mkDerivation, array, base, Cabal, cairo, containers, directory
     , filepath, glib, gtk2hs-buildtools, mtl, pango, pretty, process
     , text
     }:
     mkDerivation {
       pname = "pango";
       version = "0.13.5.0";
       sha256 = "1s29dmds28ffbcbic8pw3bsixkb6lzjm78j8qv4x3r9l64kvjndz";
       enableSeparateDataOutput = true;
       setupHaskellDepends = [ base Cabal filepath gtk2hs-buildtools ];
       libraryHaskellDepends = [
         array base cairo containers directory glib mtl pretty process text
       ];
       libraryPkgconfigDepends = [ pango ];
       homepage = "http://projects.haskell.org/gtk2hs/";
       description = "Binding to the Pango text rendering engine";
       license = stdenv.lib.licenses.lgpl21;
     }) {inherit (pkgs.gnome2) pango;};
  "papillon" = callPackage
    ({ mkDerivation, base, bytestring, directory, filepath, monads-tf
     , template-haskell, transformers
     }:
     mkDerivation {
       pname = "papillon";
       version = "0.1.0.6";
       sha256 = "1j0sxac7pgwfbgb545ysjsw7haz6m41m6gz5z8v3xawjhx662nib";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         base bytestring monads-tf template-haskell transformers
       ];
       executableHaskellDepends = [
         base directory filepath monads-tf template-haskell transformers
       ];
       homepage = "https://skami.iocikun.jp/haskell/packages/papillon";
       description = "packrat parser";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "parallel" = callPackage
    ({ mkDerivation, array, base, containers, deepseq, ghc-prim }:
     mkDerivation {
       pname = "parallel";
       version = "3.2.2.0";
       sha256 = "1xkfi96w6yfpppd0nw1rnszdxmvifwzm699ilv6332ra3akm610p";
       libraryHaskellDepends = [ array base containers deepseq ghc-prim ];
       description = "Parallel programming library";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "parallel-io" = callPackage
    ({ mkDerivation, base, containers, extensible-exceptions, random }:
     mkDerivation {
       pname = "parallel-io";
       version = "0.3.3";
       sha256 = "0i86x3bf8pjlg6mdg1zg5lcrjpg75pbqs2mrgrbp4z4bkcmw051s";
       revision = "2";
       editedCabalFile = "0mggzni708nzxlsjbibdzf03s3b5lnqj2zi1hnbh1rd4j4jr07ym";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         base containers extensible-exceptions random
       ];
       homepage = "http://batterseapower.github.com/parallel-io";
       description = "Combinators for executing IO actions in parallel on a thread pool";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "parseargs" = callPackage
    ({ mkDerivation, base, containers, process }:
     mkDerivation {
       pname = "parseargs";
       version = "0.2.0.8";
       sha256 = "1mppvhk78g60xpx5bxkazh4ma2wplr4z6cyinf6lf32xq4294y3v";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [ base containers ];
       executableHaskellDepends = [ base containers ];
       testHaskellDepends = [ base process ];
       homepage = "http://github.com/BartMassey/parseargs";
       description = "Full-featured command-line argument parsing library";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "parsec" = callPackage
    ({ mkDerivation, base, bytestring, HUnit, mtl, test-framework
     , test-framework-hunit, text
     }:
     mkDerivation {
       pname = "parsec";
       version = "3.1.13.0";
       sha256 = "1wc09pyn70p8z6llink10c8pqbh6ikyk554911yfwxv1g91swqbq";
       revision = "2";
       editedCabalFile = "032sizm03m2vdqshkv4sdviyka05gqf8gs6r4hqf9did177i0qnm";
       libraryHaskellDepends = [ base bytestring mtl text ];
       testHaskellDepends = [
         base HUnit mtl test-framework test-framework-hunit
       ];
       homepage = "https://github.com/hvr/parsec";
       description = "Monadic parser combinators";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "parsec-numeric" = callPackage
    ({ mkDerivation, base, bytestring, parsec, tasty, tasty-hunit
     , tasty-quickcheck, tasty-th, text
     }:
     mkDerivation {
       pname = "parsec-numeric";
       version = "0.1.0.0";
       sha256 = "0bz5ls9m6ld9v8g641sskzz2ymzibsw9jgf7f8q5wsb3mbj9mpbv";
       libraryHaskellDepends = [ base parsec ];
       testHaskellDepends = [
         base bytestring parsec tasty tasty-hunit tasty-quickcheck tasty-th
         text
       ];
       homepage = "https://github.com/AndrewRademacher/parsec-numeric";
       description = "Parsec combinators for parsing Haskell numeric types";
       license = "unknown";
       hydraPlatforms = stdenv.lib.platforms.none;
     }) {};
  "parser-combinators" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "parser-combinators";
       version = "1.0.0";
       sha256 = "1pwfdsklqwvaynwpdzmx1bs35mp6dpsyaqdnzxnqcrxwf5h8sk75";
       libraryHaskellDepends = [ base ];
       homepage = "https://github.com/mrkkrp/parser-combinators";
       description = "Lightweight package providing commonly useful parser combinators";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "parsers" = callPackage
    ({ mkDerivation, attoparsec, base, base-orphans, binary, bytestring
     , charset, containers, mtl, parsec, QuickCheck
     , quickcheck-instances, scientific, semigroups, text, transformers
     , unordered-containers
     }:
     mkDerivation {
       pname = "parsers";
       version = "0.12.9";
       sha256 = "1r05sc1mcglk8w596kq9a1brfn9c2vll8lq16j07ln0vsz4jzrc1";
       libraryHaskellDepends = [
         attoparsec base base-orphans binary charset containers mtl parsec
         scientific semigroups text transformers unordered-containers
       ];
       testHaskellDepends = [
         attoparsec base bytestring parsec QuickCheck quickcheck-instances
       ];
       homepage = "http://github.com/ekmett/parsers/";
       description = "Parsing combinators";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "partial-handler" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "partial-handler";
       version = "1.0.3";
       sha256 = "0cf1748zyr07zv0ffi44rf5b9f7ygdybbdcl7m7c0zj14kq2miwl";
       libraryHaskellDepends = [ base ];
       doCheck = false;
       homepage = "https://github.com/nikita-volkov/partial-handler";
       description = "A composable exception handler";
       license = stdenv.lib.licenses.mit;
     }) {};
  "partial-isomorphisms" = callPackage
    ({ mkDerivation, base, template-haskell }:
     mkDerivation {
       pname = "partial-isomorphisms";
       version = "0.2.2.1";
       sha256 = "0r51ykq6i11gzypv93bnw8pzn4zdyrabiiqfpbhpvs0rj6k1ymac";
       libraryHaskellDepends = [ base template-haskell ];
       homepage = "http://www.informatik.uni-marburg.de/~rendel/unparse";
       description = "Partial isomorphisms";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "partial-order" = callPackage
    ({ mkDerivation, base, containers }:
     mkDerivation {
       pname = "partial-order";
       version = "0.1.2.1";
       sha256 = "15y3593fl5gabcf0qzyfql30v80sninv1f79dz4v2ll89dzwfzg3";
       libraryHaskellDepends = [ base containers ];
       doCheck = false;
       homepage = "https://github.com/mtesseract/haskell-partial-order";
       description = "Provides typeclass suitable for types admitting a partial order";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "path" = callPackage
    ({ mkDerivation, aeson, base, deepseq, exceptions, filepath
     , hashable, template-haskell
     }:
     mkDerivation {
       pname = "path";
       version = "0.6.1";
       sha256 = "0nayla4k1gb821k8y5b9miflv1bi8f0czf9rqr044nrr2dddi2sb";
       revision = "1";
       editedCabalFile = "05b1zwx2a893h4h5wvgpc5g5pyx71hfmx409rqisd8s1bq1hn463";
       libraryHaskellDepends = [
         aeson base deepseq exceptions filepath hashable template-haskell
       ];
       doCheck = false;
       description = "Support for well-typed paths";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "path-extra" = callPackage
    ({ mkDerivation, attoparsec, base, path, QuickCheck
     , quickcheck-instances, tasty, tasty-quickcheck, text
     }:
     mkDerivation {
       pname = "path-extra";
       version = "0.2.0";
       sha256 = "0fh4m3vidf75j43rk1n46y3bsn0j4247bz71s35651vi9s8vw27b";
       libraryHaskellDepends = [ attoparsec base path text ];
       testHaskellDepends = [
         attoparsec base path QuickCheck quickcheck-instances tasty
         tasty-quickcheck text
       ];
       homepage = "https://github.com/athanclark/path-extra#readme";
       description = "URLs without host information";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "path-io" = callPackage
    ({ mkDerivation, base, containers, directory, dlist, exceptions
     , filepath, hspec, path, temporary, time, transformers, unix-compat
     }:
     mkDerivation {
       pname = "path-io";
       version = "1.3.3";
       sha256 = "1g9m3qliqjk1img894wsb89diym5zrq51qkkrwhz4sbm9a8hbv1a";
       revision = "3";
       editedCabalFile = "1h9hsibbflkxpjl2fqamqiv3x3gasf51apnmklrs9l9x8r32hzcc";
       libraryHaskellDepends = [
         base containers directory dlist exceptions filepath path temporary
         time transformers unix-compat
       ];
       testHaskellDepends = [
         base directory exceptions hspec path transformers unix-compat
       ];
       homepage = "https://github.com/mrkkrp/path-io";
       description = "Interface to ‘directory’ package for users of ‘path’";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "path-pieces" = callPackage
    ({ mkDerivation, base, hspec, HUnit, QuickCheck, text, time }:
     mkDerivation {
       pname = "path-pieces";
       version = "0.2.1";
       sha256 = "0vx3sivcsld76058925hym2j6hm3g71f0qjr7v59f1g2afgx82q8";
       revision = "1";
       editedCabalFile = "0p7wsphh513s8l5d62lzgbhk2l1h6kj5y7bc27qqjsry9g8ah4y7";
       libraryHaskellDepends = [ base text time ];
       testHaskellDepends = [ base hspec HUnit QuickCheck text ];
       description = "Components of paths";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "pathtype" = callPackage
    ({ mkDerivation, base, deepseq, directory, QuickCheck, random
     , semigroups, tagged, time, transformers, utility-ht
     }:
     mkDerivation {
       pname = "pathtype";
       version = "0.8.1";
       sha256 = "03rlj8klzxqimjv44h07xbij0acr63pddxppq9yfjlyggmaxrrnm";
       configureFlags = [ "-f-old-time" ];
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         base deepseq directory QuickCheck semigroups tagged time
         transformers utility-ht
       ];
       testHaskellDepends = [ base random ];
       homepage = "http://hub.darcs.net/thielema/pathtype/";
       description = "Type-safe replacement for System.FilePath etc";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "pathwalk" = callPackage
    ({ mkDerivation, base, directory, filepath, transformers }:
     mkDerivation {
       pname = "pathwalk";
       version = "0.3.1.2";
       sha256 = "148fapj00f59aa2igfq6hwrdcwcyslvrskmfvdia0crid9jd1q3n";
       libraryHaskellDepends = [ base directory filepath transformers ];
       testHaskellDepends = [ base ];
       homepage = "https://github.com/Xe/pathwalk";
       description = "Path walking utilities for Haskell programs";
       license = stdenv.lib.licenses.mit;
     }) {};
  "pattern-arrows" = callPackage
    ({ mkDerivation, base, mtl }:
     mkDerivation {
       pname = "pattern-arrows";
       version = "0.0.2";
       sha256 = "13q7bj19hd60rnjfc05wxlyck8llxy11z3mns8kxg197wxrdkhkg";
       libraryHaskellDepends = [ base mtl ];
       homepage = "http://blog.functorial.com/posts/2013-10-27-Pretty-Printing-Arrows.html";
       description = "Arrows for Pretty Printing";
       license = stdenv.lib.licenses.mit;
     }) {};
  "pcf-font" = callPackage
    ({ mkDerivation, base, binary, bytestring, containers, vector, zlib
     }:
     mkDerivation {
       pname = "pcf-font";
       version = "0.2.2.0";
       sha256 = "1vwqy2zkj0yb0b7hx3hrcfdcg46j67sv9l8ljik8wrm7811d0rwa";
       libraryHaskellDepends = [
         base binary bytestring containers vector zlib
       ];
       homepage = "https://github.com/michael-swan/pcf-font";
       description = "PCF font parsing and rendering library";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "pcf-font-embed" = callPackage
    ({ mkDerivation, base, bytestring, pcf-font, template-haskell
     , vector
     }:
     mkDerivation {
       pname = "pcf-font-embed";
       version = "0.1.2.0";
       sha256 = "0lgx62ig2rvxcv9sgk53pfr8gkfimb1xm6lxpc2rr74mdzp52pf5";
       libraryHaskellDepends = [
         base bytestring pcf-font template-haskell vector
       ];
       homepage = "https://github.com/michael-swan/pcf-font-embed";
       description = "Template Haskell for embedding text rendered using PCF fonts";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "pcg-random" = callPackage
    ({ mkDerivation, base, bytestring, doctest, entropy, primitive
     , random
     }:
     mkDerivation {
       pname = "pcg-random";
       version = "0.1.3.5";
       sha256 = "1920g1babivacds27m0gbjs9mylwiknjykvbrpagzq7r0n4gyhyy";
       libraryHaskellDepends = [
         base bytestring entropy primitive random
       ];
       testHaskellDepends = [ base doctest ];
       homepage = "http://github.com/cchalmers/pcg-random";
       description = "Haskell bindings to the PCG random number generator";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "pcre-heavy" = callPackage
    ({ mkDerivation, base, base-compat, bytestring, doctest, Glob
     , pcre-light, semigroups, string-conversions, template-haskell
     }:
     mkDerivation {
       pname = "pcre-heavy";
       version = "1.0.0.2";
       sha256 = "1lfbjgvl55jh226n307c2w8mrb3l1myzbkjh4j0jfcb8nybzcp4a";
       revision = "1";
       editedCabalFile = "14pprgwxkiaji3rqhsm0fv454wic6qxm7vy4a475yigadb1vz1ls";
       libraryHaskellDepends = [
         base base-compat bytestring pcre-light semigroups
         string-conversions template-haskell
       ];
       testHaskellDepends = [ base doctest Glob ];
       homepage = "https://github.com/myfreeweb/pcre-heavy";
       description = "A regexp (regex) library on top of pcre-light you can actually use";
       license = stdenv.lib.licenses.publicDomain;
     }) {};
  "pcre-light" = callPackage
    ({ mkDerivation, base, bytestring, pcre }:
     mkDerivation {
       pname = "pcre-light";
       version = "0.4.0.4";
       sha256 = "0xcyi1fivwg7a92mch5bcqzmrfxzqj42rmb3m8kgs61x4qwpxj82";
       libraryHaskellDepends = [ base bytestring ];
       libraryPkgconfigDepends = [ pcre ];
       homepage = "https://github.com/Daniel-Diaz/pcre-light";
       description = "Portable regex library for Perl 5 compatible regular expressions";
       license = stdenv.lib.licenses.bsd3;
     }) {inherit (pkgs) pcre;};
  "pcre-utils" = callPackage
    ({ mkDerivation, array, attoparsec, base, bytestring, HUnit, mtl
     , regex-pcre-builtin, vector
     }:
     mkDerivation {
       pname = "pcre-utils";
       version = "0.1.8.1.1";
       sha256 = "1x3db1hab0qwpw9m4564x86qibzg8jl6cj2k88jii3ihcg580ahz";
       libraryHaskellDepends = [
         array attoparsec base bytestring mtl regex-pcre-builtin vector
       ];
       testHaskellDepends = [ base bytestring HUnit regex-pcre-builtin ];
       homepage = "https://github.com/bartavelle/pcre-utils";
       description = "Perl-like substitute and split for PCRE regexps";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "pdfinfo" = callPackage
    ({ mkDerivation, base, mtl, old-locale, process-extras, text, time
     , time-locale-compat
     }:
     mkDerivation {
       pname = "pdfinfo";
       version = "1.5.4";
       sha256 = "04894cwvcn910j2b0j95dc6i9v6xriqa0v97z3vyi9dhi9yiysls";
       libraryHaskellDepends = [
         base mtl old-locale process-extras text time time-locale-compat
       ];
       homepage = "https://github.com/chrisdone/pdfinfo";
       description = "Wrapper around the pdfinfo command";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "peano" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "peano";
       version = "0.1.0.1";
       sha256 = "0yzcxrl41dacvx2wkyxjj7hgvz56l4qb59r4h9rmaqd7jcwx5z9i";
       revision = "2";
       editedCabalFile = "10b0vjc7lnfkscg2c8hhqbvf1xdvgbr3njrs9b4ick91n44vjbhk";
       libraryHaskellDepends = [ base ];
       description = "Peano numbers";
       license = "unknown";
       hydraPlatforms = stdenv.lib.platforms.none;
     }) {};
  "pem" = callPackage
    ({ mkDerivation, base, basement, bytestring, HUnit, memory
     , QuickCheck, test-framework, test-framework-hunit
     , test-framework-quickcheck2
     }:
     mkDerivation {
       pname = "pem";
       version = "0.2.4";
       sha256 = "1m7qjsxrd8m88cvkqmr8kscril500j2a9y0iynvksjyjkhdlq33p";
       libraryHaskellDepends = [ base basement bytestring memory ];
       testHaskellDepends = [
         base bytestring HUnit QuickCheck test-framework
         test-framework-hunit test-framework-quickcheck2
       ];
       homepage = "http://github.com/vincenthz/hs-pem";
       description = "Privacy Enhanced Mail (PEM) format reader and writer";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "perf" = callPackage
    ({ mkDerivation, base, containers, deepseq, doctest, foldl, rdtsc
     , text, time, transformers
     }:
     mkDerivation {
       pname = "perf";
       version = "0.4.1.0";
       sha256 = "1z0128fnqlraj8sj26fsfy9izfr1ld3k5c3sh0471fh36vf507c8";
       libraryHaskellDepends = [
         base containers deepseq foldl rdtsc text time transformers
       ];
       testHaskellDepends = [ base doctest ];
       doCheck = false;
       homepage = "https://github.com/tonyday567/perf#readme";
       description = "Low-level run time measurement";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "perfect-hash-generator" = callPackage
    ({ mkDerivation, base, binary, bytestring, containers, data-ordlist
     , directory, filepath, hashable, HUnit, optparse-applicative
     , random, test-framework, test-framework-hunit, text
     , unordered-containers, vector
     }:
     mkDerivation {
       pname = "perfect-hash-generator";
       version = "0.2.0.6";
       sha256 = "045iyxjnx1yzl9xqk5fv8qxjz29sg2pfndry1v24z6a5r88pcwnz";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         base binary bytestring containers data-ordlist directory filepath
         hashable text unordered-containers vector
       ];
       executableHaskellDepends = [
         base binary bytestring containers hashable optparse-applicative
         random text unordered-containers vector
       ];
       testHaskellDepends = [
         base binary bytestring hashable HUnit optparse-applicative
         test-framework test-framework-hunit text unordered-containers
         vector
       ];
       homepage = "https://github.com/kostmo/perfect-hash-generator#readme";
       description = "Perfect minimal hashing implementation in native Haskell";
       license = stdenv.lib.licenses.asl20;
     }) {};
  "persistable-record" = callPackage
    ({ mkDerivation, array, base, containers, dlist, names-th
     , product-isomorphic, quickcheck-simple, template-haskell
     , th-data-compat, transformers
     }:
     mkDerivation {
       pname = "persistable-record";
       version = "0.6.0.4";
       sha256 = "1ygqllybclw9mm0n05vh635wbz6qlsl2yhas3fxr3xhwsrrvwfkd";
       libraryHaskellDepends = [
         array base containers dlist names-th product-isomorphic
         template-haskell th-data-compat transformers
       ];
       testHaskellDepends = [ base quickcheck-simple ];
       homepage = "http://khibino.github.io/haskell-relational-record/";
       description = "Binding between SQL database values and haskell records";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "persistable-types-HDBC-pg" = callPackage
    ({ mkDerivation, base, bytestring, convertible, dlist, HDBC
     , persistable-record, relational-query, relational-query-HDBC
     , text-postgresql
     }:
     mkDerivation {
       pname = "persistable-types-HDBC-pg";
       version = "0.0.3.5";
       sha256 = "0bzc7kv12mz7kan1ivqpf2k1kwn3f1h74gallfvfrqans3np6p4m";
       libraryHaskellDepends = [
         base bytestring convertible dlist HDBC persistable-record
         relational-query relational-query-HDBC text-postgresql
       ];
       testHaskellDepends = [
         base relational-query relational-query-HDBC text-postgresql
       ];
       homepage = "http://khibino.github.io/haskell-relational-record/";
       description = "HDBC and Relational-Record instances of PostgreSQL extended types";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "persistent" = callPackage
    ({ mkDerivation, aeson, attoparsec, base, base64-bytestring
     , blaze-html, blaze-markup, bytestring, conduit, containers
     , fast-logger, haskell-src-meta, hspec, http-api-data
     , monad-control, monad-logger, mtl, old-locale, path-pieces
     , resource-pool, resourcet, scientific, silently, tagged
     , template-haskell, text, time, transformers, unliftio-core
     , unordered-containers, vector, void
     }:
     mkDerivation {
       pname = "persistent";
       version = "2.8.2";
       sha256 = "1h0yijbf1yiwl50klyafy4ln99j8bib4kgbzviw7fc4y4mwv4sv9";
       revision = "1";
       editedCabalFile = "18a6dfpjakcmyl9qnflgi63rss09zj3xg0py6bliary4y2cqw4fz";
       libraryHaskellDepends = [
         aeson attoparsec base base64-bytestring blaze-html blaze-markup
         bytestring conduit containers fast-logger haskell-src-meta
         http-api-data monad-logger mtl old-locale path-pieces resource-pool
         resourcet scientific silently tagged template-haskell text time
         transformers unliftio-core unordered-containers vector void
       ];
       testHaskellDepends = [
         aeson attoparsec base base64-bytestring blaze-html bytestring
         conduit containers fast-logger hspec http-api-data monad-control
         monad-logger mtl old-locale path-pieces resource-pool resourcet
         scientific tagged template-haskell text time transformers
         unordered-containers vector
       ];
       homepage = "http://www.yesodweb.com/book/persistent";
       description = "Type-safe, multi-backend data serialization";
       license = stdenv.lib.licenses.mit;
     }) {};
  "persistent-iproute" = callPackage
    ({ mkDerivation, aeson, aeson-iproute, base, bytestring
     , http-api-data, iproute, path-pieces, persistent, text
     }:
     mkDerivation {
       pname = "persistent-iproute";
       version = "0.2.3";
       sha256 = "1amzxmwispqi29ln50mfj43i1srl53n5iz7lsq8rxhd1x8fa35gm";
       libraryHaskellDepends = [
         aeson aeson-iproute base bytestring http-api-data iproute
         path-pieces persistent text
       ];
       homepage = "https://github.com/greydot/persistent-iproute";
       description = "Persistent instances for types in iproute";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "persistent-mysql" = callPackage
    ({ mkDerivation, aeson, base, blaze-builder, bytestring, conduit
     , containers, monad-logger, mysql, mysql-simple, persistent
     , resource-pool, resourcet, text, transformers, unliftio-core
     }:
     mkDerivation {
       pname = "persistent-mysql";
       version = "2.8.1";
       sha256 = "0m76hsrgv118bg6sawna6xwg30q8vl84zqa8qc9kll4hzbw2kk40";
       libraryHaskellDepends = [
         aeson base blaze-builder bytestring conduit containers monad-logger
         mysql mysql-simple persistent resource-pool resourcet text
         transformers unliftio-core
       ];
       homepage = "http://www.yesodweb.com/book/persistent";
       description = "Backend for the persistent library using MySQL database server";
       license = stdenv.lib.licenses.mit;
     }) {};
  "persistent-mysql-haskell" = callPackage
    ({ mkDerivation, aeson, base, bytestring, conduit, containers
     , io-streams, monad-logger, mysql-haskell, network, persistent
     , persistent-template, resource-pool, resourcet, text, time, tls
     , transformers, unliftio-core
     }:
     mkDerivation {
       pname = "persistent-mysql-haskell";
       version = "0.4.2";
       sha256 = "012vnfxjqlp352jm5s8glvypgyjligsqfrhb3y0kpzvxlsw4a653";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         aeson base bytestring conduit containers io-streams monad-logger
         mysql-haskell network persistent resource-pool resourcet text time
         tls transformers unliftio-core
       ];
       executableHaskellDepends = [
         base monad-logger persistent persistent-template transformers
       ];
       homepage = "http://www.yesodweb.com/book/persistent";
       description = "A pure haskell backend for the persistent library using MySQL database server";
       license = stdenv.lib.licenses.mit;
     }) {};
  "persistent-postgresql" = callPackage
    ({ mkDerivation, aeson, base, blaze-builder, bytestring, conduit
     , containers, monad-logger, persistent, postgresql-libpq
     , postgresql-simple, resource-pool, resourcet, text, time
     , transformers, unliftio-core
     }:
     mkDerivation {
       pname = "persistent-postgresql";
       version = "2.8.2.0";
       sha256 = "0j9g12fk1rlxhd45frxrj9bkmzrk1qbz611296af8nhxkw5wiwzj";
       libraryHaskellDepends = [
         aeson base blaze-builder bytestring conduit containers monad-logger
         persistent postgresql-libpq postgresql-simple resource-pool
         resourcet text time transformers unliftio-core
       ];
       homepage = "http://www.yesodweb.com/book/persistent";
       description = "Backend for the persistent library using postgresql";
       license = stdenv.lib.licenses.mit;
     }) {};
  "persistent-refs" = callPackage
    ({ mkDerivation, base, containers, mtl, ref-fd, transformers }:
     mkDerivation {
       pname = "persistent-refs";
       version = "0.4";
       sha256 = "1lyhz0cywls91a6crjq5v8x4h4740s73h3blvbkr6fg26kh11cs6";
       libraryHaskellDepends = [
         base containers mtl ref-fd transformers
       ];
       homepage = "https://github.com/acfoltzer/persistent-refs";
       description = "Haskell references backed by an IntMap for persistence and reversibility";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "persistent-sqlite" = callPackage
    ({ mkDerivation, aeson, base, bytestring, conduit, containers
     , hspec, microlens-th, monad-logger, old-locale, persistent
     , persistent-template, resource-pool, resourcet, sqlite, temporary
     , text, time, transformers, unliftio-core, unordered-containers
     }:
     mkDerivation {
       pname = "persistent-sqlite";
       version = "2.8.2";
       sha256 = "1chbmvjz46smhgnzhha3bbkhys3fys6dip1jr4v7xp1jf78zbyp6";
       revision = "1";
       editedCabalFile = "10ck5x420iq1mqy51hywbml84q3hhfgd02mscjnpsp0n2g1j3v0j";
       configureFlags = [ "-fsystemlib" ];
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         aeson base bytestring conduit containers microlens-th monad-logger
         old-locale persistent resource-pool resourcet text time
         transformers unliftio-core unordered-containers
       ];
       librarySystemDepends = [ sqlite ];
       testHaskellDepends = [
         base hspec persistent persistent-template temporary text time
         transformers
       ];
       homepage = "http://www.yesodweb.com/book/persistent";
       description = "Backend for the persistent library using sqlite3";
       license = stdenv.lib.licenses.mit;
     }) {inherit (pkgs) sqlite;};
  "persistent-template" = callPackage
    ({ mkDerivation, aeson, aeson-compat, base, bytestring, containers
     , ghc-prim, hspec, http-api-data, monad-control, monad-logger
     , path-pieces, persistent, QuickCheck, tagged, template-haskell
     , text, transformers, unordered-containers
     }:
     mkDerivation {
       pname = "persistent-template";
       version = "2.5.4";
       sha256 = "008afcy7zbw7bzp9jww8gdldb51kfm0fg4p0x4xcp61gx4679bjc";
       revision = "3";
       editedCabalFile = "12f4pqxwfv2li78sd9s56p66xd0w465cmjycpkqvg8n1rjxkc8vs";
       libraryHaskellDepends = [
         aeson aeson-compat base bytestring containers ghc-prim
         http-api-data monad-control monad-logger path-pieces persistent
         tagged template-haskell text transformers unordered-containers
       ];
       testHaskellDepends = [
         aeson base bytestring hspec persistent QuickCheck text transformers
       ];
       homepage = "http://www.yesodweb.com/book/persistent";
       description = "Type-safe, non-relational, multi-backend persistence";
       license = stdenv.lib.licenses.mit;
     }) {};
  "pg-transact" = callPackage
    ({ mkDerivation, base, bytestring, exceptions, hspec
     , hspec-discover, monad-control, postgresql-simple, tmp-postgres
     , transformers
     }:
     mkDerivation {
       pname = "pg-transact";
       version = "0.1.0.1";
       sha256 = "0zf9mfhpknaa0vggv60gpkfr0ak51n1xbw5lfqx8l8p1kqv3d0jr";
       libraryHaskellDepends = [
         base bytestring exceptions monad-control postgresql-simple
         transformers
       ];
       testHaskellDepends = [
         base bytestring exceptions hspec hspec-discover postgresql-simple
         tmp-postgres
       ];
       testToolDepends = [ hspec-discover ];
       doCheck = false;
       homepage = "https://github.com/jfischoff/pg-transact#readme";
       description = "Another postgresql-simple transaction monad";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "pgp-wordlist" = callPackage
    ({ mkDerivation, base, bytestring, containers, deepseq, doctest
     , HUnit, tasty, tasty-hunit, tasty-quickcheck, text, vector
     }:
     mkDerivation {
       pname = "pgp-wordlist";
       version = "0.1.0.2";
       sha256 = "0ri4m4a18kmnpw2a3vcw7zgjagccqr3snw2qgljg3b92abl6z2z2";
       libraryHaskellDepends = [ base bytestring containers text vector ];
       testHaskellDepends = [
         base bytestring deepseq doctest HUnit tasty tasty-hunit
         tasty-quickcheck text
       ];
       homepage = "https://github.com/quchen/pgp-wordlist";
       description = "Translate between binary data and a human-readable collection of words";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "phantom-state" = callPackage
    ({ mkDerivation, base, criterion, transformers, vector }:
     mkDerivation {
       pname = "phantom-state";
       version = "0.2.1.2";
       sha256 = "049q1ii8rgwwjli16hxs9ak813x2lw5k8y8l7zjsks8hx2cfyy7r";
       libraryHaskellDepends = [ base transformers ];
       benchmarkHaskellDepends = [ base criterion transformers vector ];
       description = "Phantom State Transformer. Like State Monad, but without values.";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "picosat" = callPackage
    ({ mkDerivation, base, containers, random, rdtsc, transformers }:
     mkDerivation {
       pname = "picosat";
       version = "0.1.5";
       sha256 = "0wc6zd1llyb880xvb8712b8mcil3arxnci68q2gmjb0gxa40jj6y";
       libraryHaskellDepends = [ base containers transformers ];
       testHaskellDepends = [ base containers random rdtsc transformers ];
       doCheck = false;
       homepage = "https://github.com/sdiehl/haskell-picosat";
       description = "Bindings to the PicoSAT solver";
       license = stdenv.lib.licenses.mit;
     }) {};
  "pid1" = callPackage
    ({ mkDerivation, base, directory, process, unix }:
     mkDerivation {
       pname = "pid1";
       version = "0.1.2.0";
       sha256 = "0xkz4vdh8cblpl8k2xmqs8vwv2c0vpxdbikcf2dnmzbg9fdvz5wy";
       revision = "1";
       editedCabalFile = "11yg5pjci1d6p5ml0ic4vqn70vjx8vvhqs20rahgfqhh8palkyw9";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [ base directory process unix ];
       executableHaskellDepends = [ base ];
       homepage = "https://github.com/fpco/pid1#readme";
       description = "Do signal handling and orphan reaping for Unix PID1 init processes";
       license = stdenv.lib.licenses.mit;
     }) {};
  "pinboard" = callPackage
    ({ mkDerivation, aeson, base, bytestring, containers, hspec
     , http-client, http-client-tls, http-types, monad-logger, mtl
     , network, profunctors, QuickCheck, random, safe-exceptions
     , semigroups, text, time, transformers, unordered-containers
     , vector
     }:
     mkDerivation {
       pname = "pinboard";
       version = "0.9.12.11";
       sha256 = "12vj9lg7l2nb92j9mydsa8hcy0ql71qnphfhgdm30xrsps79vwd0";
       libraryHaskellDepends = [
         aeson base bytestring containers http-client http-client-tls
         http-types monad-logger mtl network profunctors random
         safe-exceptions text time transformers unordered-containers vector
       ];
       testHaskellDepends = [
         aeson base bytestring containers hspec mtl QuickCheck
         safe-exceptions semigroups text time transformers
         unordered-containers
       ];
       homepage = "https://github.com/jonschoning/pinboard";
       description = "Access to the Pinboard API";
       license = stdenv.lib.licenses.mit;
     }) {};
  "pipes" = callPackage
    ({ mkDerivation, base, exceptions, mmorph, mtl, QuickCheck
     , semigroups, test-framework, test-framework-quickcheck2
     , transformers, void
     }:
     mkDerivation {
       pname = "pipes";
       version = "4.3.9";
       sha256 = "1jqs4x3xw2ya3834p36p1ycx8nxjgn2ypaibhdv97xcw3wsxlk2w";
       revision = "1";
       editedCabalFile = "0mkwbbn8vlrsvm3pl2cyaw1qr9hbjqfm831naj7cbrmiksf2l5aa";
       libraryHaskellDepends = [
         base exceptions mmorph mtl semigroups transformers void
       ];
       testHaskellDepends = [
         base mtl QuickCheck test-framework test-framework-quickcheck2
         transformers
       ];
       description = "Compositional pipelines";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "pipes-aeson" = callPackage
    ({ mkDerivation, aeson, attoparsec, base, bytestring, pipes
     , pipes-attoparsec, pipes-bytestring, pipes-parse, transformers
     }:
     mkDerivation {
       pname = "pipes-aeson";
       version = "0.4.1.8";
       sha256 = "0xdybqszcs14sb02g7garfx8ivmp48fm5rsl4md8vypyjbs1211m";
       libraryHaskellDepends = [
         aeson attoparsec base bytestring pipes pipes-attoparsec
         pipes-bytestring pipes-parse transformers
       ];
       homepage = "https://github.com/k0001/pipes-aeson";
       description = "Encode and decode JSON streams using Aeson and Pipes";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "pipes-attoparsec" = callPackage
    ({ mkDerivation, attoparsec, base, bytestring, HUnit, mmorph, pipes
     , pipes-parse, tasty, tasty-hunit, text, transformers
     }:
     mkDerivation {
       pname = "pipes-attoparsec";
       version = "0.5.1.5";
       sha256 = "1zfaj6jxmld95xi4yxyrj1wl31dqfw464ffyrm54rg4x513b97py";
       libraryHaskellDepends = [
         attoparsec base bytestring pipes pipes-parse text transformers
       ];
       testHaskellDepends = [
         attoparsec base HUnit mmorph pipes pipes-parse tasty tasty-hunit
         text transformers
       ];
       homepage = "https://github.com/k0001/pipes-attoparsec";
       description = "Attoparsec and Pipes integration";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "pipes-binary" = callPackage
    ({ mkDerivation, base, binary, bytestring, ghc-prim
     , lens-family-core, pipes, pipes-bytestring, pipes-parse
     , smallcheck, tasty, tasty-hunit, tasty-smallcheck, transformers
     }:
     mkDerivation {
       pname = "pipes-binary";
       version = "0.4.2";
       sha256 = "1s3462i85zd6byr18mfabfmiapb0yy3fnrsaw6mnasw19kyxjngn";
       libraryHaskellDepends = [
         base binary bytestring ghc-prim pipes pipes-bytestring pipes-parse
         transformers
       ];
       testHaskellDepends = [
         base binary bytestring ghc-prim lens-family-core pipes pipes-parse
         smallcheck tasty tasty-hunit tasty-smallcheck transformers
       ];
       homepage = "https://github.com/k0001/pipes-binary";
       description = "Encode and decode binary streams using the pipes and binary libraries";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "pipes-bytestring" = callPackage
    ({ mkDerivation, base, bytestring, pipes, pipes-group, pipes-parse
     , stringsearch, transformers
     }:
     mkDerivation {
       pname = "pipes-bytestring";
       version = "2.1.6";
       sha256 = "061wcb48mdq694zhwb5xh423ss6f7cccxahc05cifrzkh033gp5i";
       libraryHaskellDepends = [
         base bytestring pipes pipes-group pipes-parse stringsearch
         transformers
       ];
       description = "ByteString support for pipes";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "pipes-category" = callPackage
    ({ mkDerivation, base, hspec, lens, mtl, pipes, pipes-extras
     , transformers
     }:
     mkDerivation {
       pname = "pipes-category";
       version = "0.3.0.0";
       sha256 = "008733qffml0cqgalacrl1r8sdz08rbsz4n2pd5j9xrbxn4xh4a7";
       libraryHaskellDepends = [ base lens mtl pipes pipes-extras ];
       testHaskellDepends = [ base hspec pipes transformers ];
       homepage = "https://github.com/louispan/pipes-category#readme";
       description = "Allows instances for Category, Arrow and ArrowChoice for Pipes";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "pipes-concurrency" = callPackage
    ({ mkDerivation, async, base, contravariant, pipes, semigroups, stm
     , void
     }:
     mkDerivation {
       pname = "pipes-concurrency";
       version = "2.0.12";
       sha256 = "17aqh6p1az09n6b6vs06pxcha5aq6dvqjwskgjcdiz7221vwchs3";
       revision = "1";
       editedCabalFile = "1c1rys2pp7a2z6si925ps610q8a38a6m26s182phwa5nfhyggpaw";
       libraryHaskellDepends = [
         async base contravariant pipes semigroups stm void
       ];
       testHaskellDepends = [ async base pipes stm ];
       description = "Concurrency for the pipes ecosystem";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "pipes-csv" = callPackage
    ({ mkDerivation, base, blaze-builder, bytestring, cassava, HUnit
     , MissingH, pipes, pipes-bytestring, test-framework
     , test-framework-hunit, unordered-containers, vector
     }:
     mkDerivation {
       pname = "pipes-csv";
       version = "1.4.3";
       sha256 = "1cv8vb5jm95h3jqm4xhndgijcivmcxdjppvcs88bpjbfspfzb1cl";
       libraryHaskellDepends = [
         base blaze-builder bytestring cassava pipes unordered-containers
         vector
       ];
       testHaskellDepends = [
         base bytestring cassava HUnit MissingH pipes pipes-bytestring
         test-framework test-framework-hunit vector
       ];
       description = "Fast, streaming csv parser";
       license = stdenv.lib.licenses.mit;
     }) {};
  "pipes-extras" = callPackage
    ({ mkDerivation, base, foldl, HUnit, lens, pipes, test-framework
     , test-framework-hunit, transformers
     }:
     mkDerivation {
       pname = "pipes-extras";
       version = "1.0.15";
       sha256 = "1cyb05bv5xkarab3090ikpjiqm79lr46n3nalplliz8jr4x67a82";
       libraryHaskellDepends = [ base foldl lens pipes transformers ];
       testHaskellDepends = [
         base HUnit pipes test-framework test-framework-hunit transformers
       ];
       description = "Extra utilities for pipes";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "pipes-fastx" = callPackage
    ({ mkDerivation, attoparsec, base, bytestring, pipes
     , pipes-attoparsec, pipes-bytestring
     }:
     mkDerivation {
       pname = "pipes-fastx";
       version = "0.3.0.0";
       sha256 = "0xds11gfacj7m5lz6cssaj4v5z73ycrdmn57f0qxzqdsc2kln9ii";
       libraryHaskellDepends = [
         attoparsec base bytestring pipes pipes-attoparsec pipes-bytestring
       ];
       description = "Streaming parsers for Fasta and Fastq";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "pipes-fluid" = callPackage
    ({ mkDerivation, async, base, constraints, hspec, lens
     , lifted-async, mmorph, monad-control, mtl, pipes
     , pipes-concurrency, pipes-misc, semigroups, stm, these
     , transformers, transformers-base
     }:
     mkDerivation {
       pname = "pipes-fluid";
       version = "0.6.0.1";
       sha256 = "01ig0czixnf5fypnfns2kzna676vd3mr2a52fb9f4cg7yy6qwp8h";
       libraryHaskellDepends = [
         base constraints lens lifted-async monad-control pipes semigroups
         stm these transformers transformers-base
       ];
       testHaskellDepends = [
         async base constraints hspec lens lifted-async mmorph monad-control
         mtl pipes pipes-concurrency pipes-misc stm transformers
       ];
       homepage = "https://github.com/louispan/pipes-fluid#readme";
       description = "Reactively combines Producers so that a value is yielded as soon as possible";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "pipes-group" = callPackage
    ({ mkDerivation, base, doctest, free, lens-family-core, pipes
     , pipes-parse, transformers
     }:
     mkDerivation {
       pname = "pipes-group";
       version = "1.0.12";
       sha256 = "1issfj3syi6lfbcdn3bhlbnlh86s92ldsb04c4ac69xipsgyhwqk";
       libraryHaskellDepends = [
         base free pipes pipes-parse transformers
       ];
       testHaskellDepends = [ base doctest lens-family-core ];
       description = "Group streams into substreams";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "pipes-http" = callPackage
    ({ mkDerivation, base, bytestring, http-client, http-client-tls
     , pipes
     }:
     mkDerivation {
       pname = "pipes-http";
       version = "1.0.5";
       sha256 = "0m9hy9j6nnq2zngz1axbarjc1cwyxw7z36x40qw8yqz1dm39d8a9";
       revision = "1";
       editedCabalFile = "015psgj5wl67p0qdc00nrn717gv354gii70c57n1px5j81b0z5cl";
       libraryHaskellDepends = [
         base bytestring http-client http-client-tls pipes
       ];
       description = "HTTP client with pipes interface";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "pipes-misc" = callPackage
    ({ mkDerivation, base, clock, Decimal, hspec, lens, mmorph, mtl
     , pipes, pipes-category, pipes-concurrency, semigroups, stm
     , transformers
     }:
     mkDerivation {
       pname = "pipes-misc";
       version = "0.5.0.0";
       sha256 = "09ldpgza3yanpbsd6g2nlm352fwynq38sf226yp5kip0dqwpwbjf";
       libraryHaskellDepends = [
         base clock Decimal lens mmorph mtl pipes pipes-category
         pipes-concurrency semigroups stm transformers
       ];
       testHaskellDepends = [
         base hspec lens mmorph pipes pipes-concurrency stm transformers
       ];
       homepage = "https://github.com/louispan/pipes-misc#readme";
       description = "Miscellaneous utilities for pipes, required by glazier-tutorial";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "pipes-network" = callPackage
    ({ mkDerivation, base, bytestring, exceptions, network
     , network-simple, pipes, pipes-safe, transformers
     }:
     mkDerivation {
       pname = "pipes-network";
       version = "0.6.5";
       sha256 = "15f7kn9vpzsm8s108cly80pi6yqpv6v04w032ng0wr9g78an393l";
       libraryHaskellDepends = [
         base bytestring exceptions network network-simple pipes pipes-safe
         transformers
       ];
       homepage = "https://github.com/k0001/pipes-network";
       description = "Use network sockets together with the pipes library";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "pipes-network-tls" = callPackage
    ({ mkDerivation, base, bytestring, network, network-simple
     , network-simple-tls, pipes, pipes-network, pipes-safe, tls
     , transformers
     }:
     mkDerivation {
       pname = "pipes-network-tls";
       version = "0.3";
       sha256 = "1cmsnvgr3ffjxqn7bwj0ghqsxqd4hnhfdn4di6p8q6np2mmllsd2";
       libraryHaskellDepends = [
         base bytestring network network-simple network-simple-tls pipes
         pipes-network pipes-safe tls transformers
       ];
       homepage = "https://github.com/k0001/pipes-network-tls";
       description = "TLS-secured network connections support for pipes";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "pipes-parse" = callPackage
    ({ mkDerivation, base, pipes, transformers }:
     mkDerivation {
       pname = "pipes-parse";
       version = "3.0.8";
       sha256 = "1a87q6l610rhxr23qfzzzif3zpfjhw3mg5gfcyjwqac25hdq73yj";
       libraryHaskellDepends = [ base pipes transformers ];
       description = "Parsing infrastructure for the pipes ecosystem";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "pipes-random" = callPackage
    ({ mkDerivation, base, mwc-random, pipes, vector }:
     mkDerivation {
       pname = "pipes-random";
       version = "1.0.0.4";
       sha256 = "17k510v2f5ziysqh7sknyw3rgxf8iblw800z3hh8gymaszkhfajl";
       revision = "2";
       editedCabalFile = "0czw2qfi05d5kbnwzhzr75j1ag6hfbn9nvbjyifdjradfzjxl2s9";
       libraryHaskellDepends = [ base mwc-random pipes vector ];
       homepage = "https://github.com/fosskers/pipes-random";
       description = "Producers for handling randomness";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "pipes-safe" = callPackage
    ({ mkDerivation, base, containers, exceptions, monad-control, mtl
     , pipes, primitive, transformers, transformers-base
     }:
     mkDerivation {
       pname = "pipes-safe";
       version = "2.2.9";
       sha256 = "160qba0r8lih186qfrpvnx1m2j632x5b7n1x53mif9aag41n9w8p";
       revision = "2";
       editedCabalFile = "1crpzg72nahmffw468d31l23bw3wgi0p3w7ad2pv3jxhy1432c71";
       libraryHaskellDepends = [
         base containers exceptions monad-control mtl pipes primitive
         transformers transformers-base
       ];
       description = "Safety for the pipes ecosystem";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "pipes-wai" = callPackage
    ({ mkDerivation, base, blaze-builder, bytestring, http-types, pipes
     , transformers, wai
     }:
     mkDerivation {
       pname = "pipes-wai";
       version = "3.2.0";
       sha256 = "0akd0n2qgv32pcq717j2xr2g29qmaz2v610ddx7vc4hc2kgp19h4";
       libraryHaskellDepends = [
         base blaze-builder bytestring http-types pipes transformers wai
       ];
       homepage = "http://github.com/iand675/pipes-wai";
       description = "A port of wai-conduit for the pipes ecosystem";
       license = stdenv.lib.licenses.mit;
     }) {};
  "pkcs10" = callPackage
    ({ mkDerivation, asn1-encoding, asn1-parse, asn1-types, base
     , bytestring, cryptonite, pem, QuickCheck, tasty, tasty-hunit
     , tasty-quickcheck, transformers, x509
     }:
     mkDerivation {
       pname = "pkcs10";
       version = "0.2.0.0";
       sha256 = "15328w93rbpxx1wz3agw0271gxcy1ykgr6lcwkqcgi5scwzr4vl9";
       libraryHaskellDepends = [
         asn1-encoding asn1-parse asn1-types base bytestring cryptonite pem
         x509
       ];
       testHaskellDepends = [
         asn1-encoding asn1-parse asn1-types base bytestring cryptonite pem
         QuickCheck tasty tasty-hunit tasty-quickcheck transformers x509
       ];
       doCheck = false;
       homepage = "https://github.com/fcomb/pkcs10-hs#readme";
       description = "PKCS#10 library";
       license = stdenv.lib.licenses.asl20;
     }) {};
  "placeholders" = callPackage
    ({ mkDerivation, base, template-haskell }:
     mkDerivation {
       pname = "placeholders";
       version = "0.1";
       sha256 = "0ih35n2pw5gr9ggj2xz5zfcs4bdk200fdw6q9hdy3xna7maphak5";
       libraryHaskellDepends = [ base template-haskell ];
       homepage = "http://github.com/ahammar/placeholders";
       description = "Placeholders for use while developing Haskell code";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "plot-light" = callPackage
    ({ mkDerivation, base, blaze-markup, blaze-svg, colour, containers
     , exceptions, histogram-fill, hspec, mtl, QuickCheck, scientific
     , text, time, vector
     }:
     mkDerivation {
       pname = "plot-light";
       version = "0.4.3";
       sha256 = "1fwz74a2fh7rgxv7i9kz6izxl1zrpa8bml2dxph7w7hdz1pi3g5b";
       libraryHaskellDepends = [
         base blaze-markup blaze-svg colour containers exceptions
         histogram-fill mtl scientific text time vector
       ];
       testHaskellDepends = [ base hspec QuickCheck ];
       homepage = "https://github.com/ocramz/plot-light";
       description = "A lightweight plotting library, exporting to SVG";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "plotlyhs" = callPackage
    ({ mkDerivation, aeson, base, blaze-html, blaze-markup, bytestring
     , lucid, microlens, microlens-th, text, time
     }:
     mkDerivation {
       pname = "plotlyhs";
       version = "0.2.1";
       sha256 = "1d7cqy22myp6r0x0b00amn64fra0lklb9jy2hd8ic9lxg0nd8pn9";
       libraryHaskellDepends = [
         aeson base blaze-html blaze-markup bytestring lucid microlens
         microlens-th text time
       ];
       homepage = "https://github.com/diffusionkinetics/open/plotlyhs";
       description = "Haskell bindings to Plotly.js";
       license = stdenv.lib.licenses.mit;
     }) {};
  "pointed" = callPackage
    ({ mkDerivation, base, comonad, containers, data-default-class
     , hashable, kan-extensions, semigroupoids, semigroups, stm, tagged
     , transformers, transformers-compat, unordered-containers
     }:
     mkDerivation {
       pname = "pointed";
       version = "5.0.1";
       sha256 = "1p91a762xglckscnhpflxzav8byf49a02mli3983i4kpr2jkaimr";
       revision = "1";
       editedCabalFile = "1ccjmzz3jf5ybrzv7qdwm3qb8rz0yskvi4ackrixyhdk8bg5f3nc";
       libraryHaskellDepends = [
         base comonad containers data-default-class hashable kan-extensions
         semigroupoids semigroups stm tagged transformers
         transformers-compat unordered-containers
       ];
       homepage = "http://github.com/ekmett/pointed/";
       description = "Pointed and copointed data";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "pointedlist" = callPackage
    ({ mkDerivation, base, binary }:
     mkDerivation {
       pname = "pointedlist";
       version = "0.6.1";
       sha256 = "16xsrzqql7i4z6a3xy07sqnbyqdmcar1jiacla58y4mvkkwb0g3l";
       libraryHaskellDepends = [ base binary ];
       description = "A zipper-like comonad which works as a list, tracking a position";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "pointless-fun" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "pointless-fun";
       version = "1.1.0.6";
       sha256 = "0m5hwd0mr7bmb2sbs1qa7l65xrr5h2wjznknsrk1ga08qkd5jp6h";
       libraryHaskellDepends = [ base ];
       homepage = "http://code.haskell.org/~wren/";
       description = "Some common point-free combinators";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "poll" = callPackage
    ({ mkDerivation, base, enumset, utility-ht }:
     mkDerivation {
       pname = "poll";
       version = "0.0.0.1";
       sha256 = "0agdl2bxw7ca05kqyc8dix4kvjdh67i91hn1scmcngjd3gz8gzmr";
       libraryHaskellDepends = [ base enumset utility-ht ];
       description = "Bindings to poll.h";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "poly-arity" = callPackage
    ({ mkDerivation, base, constraints }:
     mkDerivation {
       pname = "poly-arity";
       version = "0.1.0";
       sha256 = "0afxrwq5is4l954kmlqm76g0zpy4jw6vvx2275q8xph4zr2ac46b";
       libraryHaskellDepends = [ base constraints ];
       description = "Tools for working with functions of undetermined arity";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "polynomials-bernstein" = callPackage
    ({ mkDerivation, base, vector }:
     mkDerivation {
       pname = "polynomials-bernstein";
       version = "1.1.2";
       sha256 = "0qkhvid0xgr7223mg2r5crxprwl0yrwqdy8zwkkl0fjkj7kz4l39";
       libraryHaskellDepends = [ base vector ];
       description = "A solver for systems of polynomial equations in bernstein form";
       license = "GPL";
     }) {};
  "polyparse" = callPackage
    ({ mkDerivation, base, bytestring, text }:
     mkDerivation {
       pname = "polyparse";
       version = "1.12";
       sha256 = "05dya1vdvq29hkhkdlsglzhw7bdn51rvs1javs0q75nf99c66k7m";
       revision = "1";
       editedCabalFile = "18daiyj3009wx0bhr87fbgy7xfh68ss9qzn6k3lgmh1z9dfsryrd";
       libraryHaskellDepends = [ base bytestring text ];
       homepage = "http://code.haskell.org/~malcolm/polyparse/";
       description = "A variety of alternative parser combinator libraries";
       license = "LGPL";
     }) {};
  "pooled-io" = callPackage
    ({ mkDerivation, base, concurrent-split, containers, deepseq
     , transformers, unsafe, utility-ht
     }:
     mkDerivation {
       pname = "pooled-io";
       version = "0.0.2.2";
       sha256 = "1g8zppj2s1wfzg5rpdgz15m44ihxhmrx16jx12n4821cdhsm2nrs";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         base concurrent-split containers deepseq transformers unsafe
         utility-ht
       ];
       homepage = "http://hub.darcs.net/thielema/pooled-io/";
       description = "Run jobs on a limited number of threads and support data dependencies";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "portable-lines" = callPackage
    ({ mkDerivation, base, bytestring }:
     mkDerivation {
       pname = "portable-lines";
       version = "0.1";
       sha256 = "1l94p3s56a3kfqc8fzqc52z12rhg3c8xsmgcw1i20dnl8aygalsh";
       libraryHaskellDepends = [ base bytestring ];
       description = "Alternative 'lines' implementation that understands CR-LF and CR";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "post-mess-age" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "post-mess-age";
       version = "0.2.1.0";
       sha256 = "0k6njm7fbj7y6bzqkfpdby4az13i2sqg7lacnn5ry2hkrfqrmxnh";
       libraryHaskellDepends = [ base ];
       description = "Send messages to a handle concurrently without getting them mixed";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "postgresql-binary" = callPackage
    ({ mkDerivation, aeson, base, base-prelude, binary-parser
     , bytestring, bytestring-strict-builder, containers, loch-th
     , network-ip, placeholders, scientific, text, time, transformers
     , unordered-containers, uuid, vector
     }:
     mkDerivation {
       pname = "postgresql-binary";
       version = "0.12.1.2";
       sha256 = "10h5299fxqmfz0kxyvivfy396q35gzg60spnjagyha33kx5m3bc3";
       libraryHaskellDepends = [
         aeson base base-prelude binary-parser bytestring
         bytestring-strict-builder containers loch-th network-ip
         placeholders scientific text time transformers unordered-containers
         uuid vector
       ];
       doCheck = false;
       homepage = "https://github.com/nikita-volkov/postgresql-binary";
       description = "Encoders and decoders for the PostgreSQL's binary format";
       license = stdenv.lib.licenses.mit;
     }) {};
  "postgresql-libpq" = callPackage
    ({ mkDerivation, base, bytestring, Cabal, postgresql, unix }:
     mkDerivation {
       pname = "postgresql-libpq";
       version = "0.9.4.2";
       sha256 = "1y86kysakfcf3zq252yl2llrx3765vxvkdwda4q5ql7ikv3m786f";
       setupHaskellDepends = [ base Cabal ];
       libraryHaskellDepends = [ base bytestring unix ];
       librarySystemDepends = [ postgresql ];
       testHaskellDepends = [ base bytestring ];
       homepage = "https://github.com/phadej/postgresql-libpq";
       description = "low-level binding to libpq";
       license = stdenv.lib.licenses.bsd3;
     }) {inherit (pkgs) postgresql;};
  "postgresql-schema" = callPackage
    ({ mkDerivation, base, basic-prelude, optparse-applicative
     , postgresql-simple, shelly, text, time
     }:
     mkDerivation {
       pname = "postgresql-schema";
       version = "0.1.14";
       sha256 = "0wnmhh8pzs9hzsmqkvr89jbdbbd1j87fnly2c80rsd7wr5qcrpkk";
       isLibrary = true;
       isExecutable = true;
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [
         base basic-prelude postgresql-simple shelly text
       ];
       executableHaskellDepends = [
         base basic-prelude optparse-applicative shelly text time
       ];
       homepage = "https://github.com/mfine/postgresql-schema";
       description = "PostgreSQL Schema Management";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "postgresql-simple" = callPackage
    ({ mkDerivation, aeson, attoparsec, base, base16-bytestring
     , bytestring, bytestring-builder, case-insensitive, containers
     , cryptohash, filepath, hashable, HUnit, postgresql-libpq
     , scientific, tasty, tasty-golden, tasty-hunit, template-haskell
     , text, time, transformers, uuid-types, vector
     }:
     mkDerivation {
       pname = "postgresql-simple";
       version = "0.5.4.0";
       sha256 = "0xrsyx25v5z06qziy32wlb3lvkyci3nxkbb25nis21vkj3kimlgm";
       libraryHaskellDepends = [
         aeson attoparsec base bytestring bytestring-builder
         case-insensitive containers hashable postgresql-libpq scientific
         template-haskell text time transformers uuid-types vector
       ];
       testHaskellDepends = [
         aeson base base16-bytestring bytestring containers cryptohash
         filepath HUnit tasty tasty-golden tasty-hunit text time vector
       ];
       doCheck = false;
       description = "Mid-Level PostgreSQL client library";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "postgresql-simple-migration" = callPackage
    ({ mkDerivation, base, base64-bytestring, bytestring, cryptohash
     , directory, hspec, postgresql-simple, text, time
     }:
     mkDerivation {
       pname = "postgresql-simple-migration";
       version = "0.1.13.1";
       sha256 = "0xblb0k3xnsbvdqrl5k3i6jimj4cskgip6w021byirn8i73s7j8a";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         base base64-bytestring bytestring cryptohash directory
         postgresql-simple time
       ];
       executableHaskellDepends = [
         base base64-bytestring bytestring cryptohash directory
         postgresql-simple text time
       ];
       testHaskellDepends = [ base bytestring hspec postgresql-simple ];
       doCheck = false;
       homepage = "https://github.com/ameingast/postgresql-simple-migration";
       description = "PostgreSQL Schema Migrations";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "postgresql-simple-queue" = callPackage
    ({ mkDerivation, aeson, async, base, bytestring, exceptions, hspec
     , hspec-discover, hspec-expectations-lifted, hspec-pg-transact
     , monad-control, pg-transact, postgresql-simple, random, split, stm
     , text, time, transformers
     }:
     mkDerivation {
       pname = "postgresql-simple-queue";
       version = "1.0.1";
       sha256 = "0gss9s2splrvwgxhkjpqvx0cg9kx9dqpw4aq2wbh8l879v2nj2rk";
       libraryHaskellDepends = [
         aeson base bytestring exceptions monad-control pg-transact
         postgresql-simple random stm text time transformers
       ];
       testHaskellDepends = [
         aeson async base bytestring exceptions hspec hspec-discover
         hspec-expectations-lifted hspec-pg-transact monad-control
         pg-transact postgresql-simple random split stm text time
         transformers
       ];
       testToolDepends = [ hspec-discover ];
       doCheck = false;
       homepage = "https://github.com/jfischoff/postgresql-queue#readme";
       description = "A PostgreSQL backed queue";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "postgresql-simple-url" = callPackage
    ({ mkDerivation, base, network-uri, postgresql-simple, split }:
     mkDerivation {
       pname = "postgresql-simple-url";
       version = "0.2.1.0";
       sha256 = "1jg9gvpidrfy2hqixwqsym1l1mnkafmxwq58jpbzdmrbvryga1qk";
       revision = "1";
       editedCabalFile = "0ck0vrlsyj3vm8sk59jnyyqpvnv1l9mciifdnrzwr981pha147qp";
       libraryHaskellDepends = [
         base network-uri postgresql-simple split
       ];
       doCheck = false;
       homepage = "https://github.com/futurice/postgresql-simple-url";
       description = "Parse postgres:// url into ConnectInfo";
       license = stdenv.lib.licenses.mit;
     }) {};
  "postgresql-transactional" = callPackage
    ({ mkDerivation, base, monad-control, mtl, postgresql-simple }:
     mkDerivation {
       pname = "postgresql-transactional";
       version = "1.1.1";
       sha256 = "1lsyaj19ihn93fz8hhlqsslskcr5dbilyg14pplz4cab2cg2lc7r";
       libraryHaskellDepends = [
         base monad-control mtl postgresql-simple
       ];
       description = "a transactional monad on top of postgresql-simple";
       license = stdenv.lib.licenses.mit;
     }) {};
  "postgresql-typed" = callPackage
    ({ mkDerivation, aeson, array, attoparsec, base, binary, bytestring
     , containers, convertible, cryptonite, haskell-src-meta, HDBC
     , HUnit, memory, network, old-locale, postgresql-binary, QuickCheck
     , scientific, template-haskell, text, time, utf8-string, uuid
     }:
     mkDerivation {
       pname = "postgresql-typed";
       version = "0.5.3.0";
       sha256 = "0apq662lhkjc1xl4alpz20yz20x6mf3gz6li7wb86sp94441rh5k";
       libraryHaskellDepends = [
         aeson array attoparsec base binary bytestring containers cryptonite
         haskell-src-meta HDBC memory network old-locale postgresql-binary
         scientific template-haskell text time utf8-string uuid
       ];
       testHaskellDepends = [
         base bytestring containers convertible HDBC HUnit network
         QuickCheck time
       ];
       doCheck = false;
       homepage = "https://github.com/dylex/postgresql-typed";
       description = "PostgreSQL interface with compile-time SQL type checking, optional HDBC backend";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "pptable" = callPackage
    ({ mkDerivation, base, boxes, containers, generic-deriving, HUnit
     , markdown-unlit, pretty, QuickCheck, syb, tasty, tasty-hunit
     , tasty-quickcheck, vector
     }:
     mkDerivation {
       pname = "pptable";
       version = "0.3.0.0";
       sha256 = "05wkvnk2h3xvjivk8cd6z8xlscipvd2az1v1n4sdianf9r0gzdwq";
       revision = "1";
       editedCabalFile = "0c1srvgwyczbfnw3zw5pbsjqgxifq9yb1h60w3aq91q7iamrvdgb";
       libraryHaskellDepends = [
         base boxes containers generic-deriving pretty syb vector
       ];
       testHaskellDepends = [
         base boxes containers HUnit markdown-unlit QuickCheck tasty
         tasty-hunit tasty-quickcheck vector
       ];
       testToolDepends = [ markdown-unlit ];
       homepage = "https://github.com/gdevanla/pptable#readme";
       description = "Pretty Print containers in a tabular format";
       license = stdenv.lib.licenses.mit;
     }) {};
  "pqueue" = callPackage
    ({ mkDerivation, base, deepseq, QuickCheck }:
     mkDerivation {
       pname = "pqueue";
       version = "1.4.1.2";
       sha256 = "1v4zhv2sc1zsw91hvnarkjhayx2dnf7ccxz6rrhsqpcs0szaranj";
       libraryHaskellDepends = [ base deepseq ];
       testHaskellDepends = [ base deepseq QuickCheck ];
       description = "Reliable, persistent, fast priority queues";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "prefix-units" = callPackage
    ({ mkDerivation, base, Cabal, HUnit, QuickCheck, test-framework
     , test-framework-hunit, test-framework-quickcheck2
     }:
     mkDerivation {
       pname = "prefix-units";
       version = "0.2.0";
       sha256 = "1173fj11rb42l239xj8j0q12dclvspxrbc984r503gd54zwbs2h5";
       libraryHaskellDepends = [ base ];
       testHaskellDepends = [
         base Cabal HUnit QuickCheck test-framework test-framework-hunit
         test-framework-quickcheck2
       ];
       homepage = "https://github.com/iustin/prefix-units";
       description = "A basic library for SI/binary prefix units";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "prelude-compat" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "prelude-compat";
       version = "0.0.0.1";
       sha256 = "1m20zczq6hz6qv48g5pa6spd9p4ylq6w0vc60rzshrbjbdfqgp3v";
       libraryHaskellDepends = [ base ];
       description = "Provide Prelude and Data.List with fixed content across GHC versions";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "prelude-extras" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "prelude-extras";
       version = "0.4.0.3";
       sha256 = "0xzqdf3nl2h0ra4gnslm1m1nsxlsgc0hh6ky3vn578vh11zhifq9";
       libraryHaskellDepends = [ base ];
       homepage = "http://github.com/ekmett/prelude-extras";
       description = "Higher order versions of Prelude classes";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "prelude-safeenum" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "prelude-safeenum";
       version = "0.1.1.2";
       sha256 = "09wp6b7bvnp2wz0kigwm4vfca74phh3bbpqybqdgm60isfaz3yfl";
       libraryHaskellDepends = [ base ];
       homepage = "http://code.haskell.org/~wren/";
       description = "A redefinition of the Prelude's Enum class in order to render it safe";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "present" = callPackage
    ({ mkDerivation, base, template-haskell }:
     mkDerivation {
       pname = "present";
       version = "4.1.0";
       sha256 = "0ys2ibfh518r9rg9bl2m5cmyfxmri47g8wg7q0n5fcbsh4sb7s5s";
       libraryHaskellDepends = [ base template-haskell ];
       homepage = "https://github.com/chrisdone/present";
       description = "Make presentations for data types";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "pretty-class" = callPackage
    ({ mkDerivation, base, pretty }:
     mkDerivation {
       pname = "pretty-class";
       version = "1.0.1.1";
       sha256 = "1qdfp2kpahzflq9a3idwmb0pqs4l7almxn5rbw5gp2pmdx81p3am";
       libraryHaskellDepends = [ base pretty ];
       homepage = "https://github.com/ddssff/pretty-class";
       description = "Pretty printing class similar to Show";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "pretty-hex" = callPackage
    ({ mkDerivation, base, bytestring }:
     mkDerivation {
       pname = "pretty-hex";
       version = "1.0";
       sha256 = "0ylwkvvjvmpprha9nx83xb8gkhyanhk5fffc0r7lb96n4ch5z6pz";
       libraryHaskellDepends = [ base bytestring ];
       description = "A library for hex dumps of ByteStrings";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "pretty-show" = callPackage
    ({ mkDerivation, array, base, filepath, ghc-prim, happy
     , haskell-lexer, pretty, text
     }:
     mkDerivation {
       pname = "pretty-show";
       version = "1.7";
       sha256 = "0br7pkxqqqhby2j2v1g847lgqsrasx56g1jw3dhmjh4flzs6warq";
       isLibrary = true;
       isExecutable = true;
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [
         array base filepath ghc-prim haskell-lexer pretty text
       ];
       libraryToolDepends = [ happy ];
       executableHaskellDepends = [ base ];
       homepage = "http://wiki.github.com/yav/pretty-show";
       description = "Tools for working with derived `Show` instances and generic inspection of values";
       license = stdenv.lib.licenses.mit;
     }) {};
  "pretty-simple" = callPackage
    ({ mkDerivation, ansi-terminal, base, containers, criterion
     , doctest, Glob, mtl, parsec, text, transformers
     }:
     mkDerivation {
       pname = "pretty-simple";
       version = "2.1.0.1";
       sha256 = "1lfkbjpcgyiv915xvhpirhx8x7ng1jgrlxd6zlilcvnpkkm2xacs";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         ansi-terminal base containers mtl parsec text transformers
       ];
       testHaskellDepends = [ base doctest Glob ];
       benchmarkHaskellDepends = [ base criterion text ];
       homepage = "https://github.com/cdepillabout/pretty-simple";
       description = "pretty printer for data types with a 'Show' instance";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "pretty-types" = callPackage
    ({ mkDerivation, base, hspec, mtl, tagged }:
     mkDerivation {
       pname = "pretty-types";
       version = "0.2.3.1";
       sha256 = "0kvqp39q1qydgf6rlrabgjcgv53irdh9xvw2p7hazbls178ljv75";
       libraryHaskellDepends = [ base mtl tagged ];
       testHaskellDepends = [ base hspec tagged ];
       homepage = "https://github.com/sheyll/pretty-types#readme";
       description = "A small pretty printing DSL for complex types";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "prettyclass" = callPackage
    ({ mkDerivation, base, pretty }:
     mkDerivation {
       pname = "prettyclass";
       version = "1.0.0.0";
       sha256 = "11l9ajci7nh1r547hx8hgxrhq8mh5gdq30pdf845wvilg9p48dz5";
       libraryHaskellDepends = [ base pretty ];
       description = "Pretty printing class similar to Show";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "prettyprinter" = callPackage
    ({ mkDerivation, ansi-wl-pprint, base, bytestring, containers
     , criterion, deepseq, doctest, mtl, pgp-wordlist, QuickCheck
     , random, tasty, tasty-hunit, tasty-quickcheck, text, transformers
     }:
     mkDerivation {
       pname = "prettyprinter";
       version = "1.2.1";
       sha256 = "1kvza7jp5n833m8rj0bc35bd2p8wx3fq0iqflm9nbh3wm05kwrg7";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [ base text ];
       testHaskellDepends = [
         base bytestring doctest pgp-wordlist tasty tasty-hunit
         tasty-quickcheck text
       ];
       benchmarkHaskellDepends = [
         ansi-wl-pprint base containers criterion deepseq mtl QuickCheck
         random text transformers
       ];
       homepage = "http://github.com/quchen/prettyprinter";
       description = "A modern, easy to use, well-documented, extensible pretty-printer";
       license = stdenv.lib.licenses.bsd2;
     }) {};
  "prettyprinter-ansi-terminal" = callPackage
    ({ mkDerivation, ansi-terminal, base, doctest, prettyprinter, text
     }:
     mkDerivation {
       pname = "prettyprinter-ansi-terminal";
       version = "1.1.1.2";
       sha256 = "0ha6vz707qzb5ky7kdsnw2zgphg2dnxrpbrxy8gaw119vwhb9q6k";
       libraryHaskellDepends = [ ansi-terminal base prettyprinter text ];
       testHaskellDepends = [ base doctest ];
       homepage = "http://github.com/quchen/prettyprinter";
       description = "ANSI terminal backend for the »prettyprinter« package";
       license = stdenv.lib.licenses.bsd2;
     }) {};
  "prettyprinter-compat-annotated-wl-pprint" = callPackage
    ({ mkDerivation, base, prettyprinter, text }:
     mkDerivation {
       pname = "prettyprinter-compat-annotated-wl-pprint";
       version = "1";
       sha256 = "0zpmpbpnyxqswfb7gdj0kwz7hw606fj1iwkpl1qv0xcxk6n9n99c";
       revision = "3";
       editedCabalFile = "0vzi7id60pfj35xp61akzvfx9x6py45r5b8343i48ljpir91rvgw";
       libraryHaskellDepends = [ base prettyprinter text ];
       homepage = "http://github.com/quchen/prettyprinter";
       description = "Prettyprinter compatibility module for previous users of the annotated-wl-pprint package";
       license = stdenv.lib.licenses.bsd2;
     }) {};
  "prettyprinter-compat-ansi-wl-pprint" = callPackage
    ({ mkDerivation, base, prettyprinter, prettyprinter-ansi-terminal
     , text
     }:
     mkDerivation {
       pname = "prettyprinter-compat-ansi-wl-pprint";
       version = "1.0.1";
       sha256 = "0gzpjddnxl4z8pvb0lyal13jbr94dk900k8g4qwcq9fs26vnnb81";
       revision = "1";
       editedCabalFile = "0rzvap56ygygzs95091ipmcdc7n76sczc2dk88g4nr7zskb2nf1k";
       libraryHaskellDepends = [
         base prettyprinter prettyprinter-ansi-terminal text
       ];
       homepage = "http://github.com/quchen/prettyprinter";
       description = "Drop-in compatibility package to migrate from »ansi-wl-pprint« to »prettyprinter«";
       license = stdenv.lib.licenses.bsd2;
     }) {};
  "prettyprinter-compat-wl-pprint" = callPackage
    ({ mkDerivation, base, prettyprinter, text }:
     mkDerivation {
       pname = "prettyprinter-compat-wl-pprint";
       version = "1.0.0.1";
       sha256 = "17jj8m9s3cp1s1szpy67g7wni9ssid78jqksh3aym7p6ci81y8km";
       revision = "3";
       editedCabalFile = "0cb1i1hmr6wl8lacy3w822h273lapqhp537snxgbmhf9xvfckbpr";
       libraryHaskellDepends = [ base prettyprinter text ];
       homepage = "http://github.com/quchen/prettyprinter";
       description = "Prettyprinter compatibility module for previous users of the wl-pprint package";
       license = stdenv.lib.licenses.bsd2;
     }) {};
  "prettyprinter-convert-ansi-wl-pprint" = callPackage
    ({ mkDerivation, ansi-terminal, ansi-wl-pprint, base, doctest
     , prettyprinter, prettyprinter-ansi-terminal, text
     }:
     mkDerivation {
       pname = "prettyprinter-convert-ansi-wl-pprint";
       version = "1.1";
       sha256 = "03565w1qvqgdr1g2nwj3d2xpqbx04xm45pjfkb9d6jb2fww2v65q";
       revision = "1";
       editedCabalFile = "1c4zcscmvq0vbdgnp7n0avv8si5jshl4kw2qd1lqmhr28kj8x45f";
       libraryHaskellDepends = [
         ansi-terminal ansi-wl-pprint base prettyprinter
         prettyprinter-ansi-terminal text
       ];
       testHaskellDepends = [ base doctest ];
       homepage = "http://github.com/quchen/prettyprinter";
       description = "Converter from »ansi-wl-pprint« documents to »prettyprinter«-based ones";
       license = stdenv.lib.licenses.bsd2;
     }) {};
  "prim-uniq" = callPackage
    ({ mkDerivation, base, dependent-sum, primitive }:
     mkDerivation {
       pname = "prim-uniq";
       version = "0.1.0.1";
       sha256 = "1zssi4zaihjaf3an10ar39d4qb155wcl1j66aymfrr9z2f2rf1gv";
       libraryHaskellDepends = [ base dependent-sum primitive ];
       homepage = "https://github.com/mokus0/prim-uniq";
       description = "Opaque unique identifiers in primitive state monads";
       license = stdenv.lib.licenses.publicDomain;
     }) {};
  "primes" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "primes";
       version = "0.2.1.0";
       sha256 = "0ny6fzr967d1fifk050k95j9snnbjjif2bxf3v9s93k3zdc6bmkl";
       libraryHaskellDepends = [ base ];
       homepage = "http://github.com/sebfisch/primes";
       description = "Efficient, purely functional generation of prime numbers";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "primitive" = callPackage
    ({ mkDerivation, base, ghc-prim, transformers }:
     mkDerivation {
       pname = "primitive";
       version = "0.6.3.0";
       sha256 = "0mcmbnj08wd6zfwn7xk6zf5hy5zwbla5v78pw0dpymqg9s0gzpnd";
       libraryHaskellDepends = [ base ghc-prim transformers ];
       testHaskellDepends = [ base ghc-prim ];
       homepage = "https://github.com/haskell/primitive";
       description = "Primitive memory-related operations";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "probability" = callPackage
    ({ mkDerivation, base, containers, random, transformers, utility-ht
     }:
     mkDerivation {
       pname = "probability";
       version = "0.2.5.2";
       sha256 = "059l9by2zxb92dd2vshxx9f3sm1kazc2i2ll168hfsya9rrqqaqg";
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [
         base containers random transformers utility-ht
       ];
       homepage = "http://www.haskell.org/haskellwiki/Probabilistic_Functional_Programming";
       description = "Probabilistic Functional Programming";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "process-extras" = callPackage
    ({ mkDerivation, base, bytestring, data-default, deepseq
     , generic-deriving, HUnit, ListLike, mtl, process, text
     }:
     mkDerivation {
       pname = "process-extras";
       version = "0.7.4";
       sha256 = "0klqgr37f1z2z6i0a9b0giapmq0p35l5k9kz1p7f0k1597w7agi9";
       libraryHaskellDepends = [
         base bytestring data-default deepseq generic-deriving ListLike mtl
         process text
       ];
       testHaskellDepends = [ base HUnit ];
       homepage = "https://github.com/seereason/process-extras";
       description = "Process extras";
       license = stdenv.lib.licenses.mit;
     }) {};
  "product-isomorphic" = callPackage
    ({ mkDerivation, base, template-haskell, th-data-compat }:
     mkDerivation {
       pname = "product-isomorphic";
       version = "0.0.3.3";
       sha256 = "1fy1a7xvnz47120z7vq5hrdllgard7cd1whkwwmgpwdsmhn3my8y";
       libraryHaskellDepends = [ base template-haskell th-data-compat ];
       testHaskellDepends = [ base template-haskell ];
       homepage = "http://github.com/khibino/haskell-product-isomorphic";
       description = "Weaken applicative functor on products";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "product-profunctors" = callPackage
    ({ mkDerivation, base, bifunctors, contravariant, criterion
     , deepseq, profunctors, tagged, template-haskell
     }:
     mkDerivation {
       pname = "product-profunctors";
       version = "0.10.0.0";
       sha256 = "0s0ssl2900r16992mgl0idkryg3l7psp8nljyg9brr7fqa3pd3dd";
       revision = "1";
       editedCabalFile = "17zi38fzg7yf9i5da2hlch6jw2qhmjcvs9wwkhyvra520605mlya";
       libraryHaskellDepends = [
         base bifunctors contravariant profunctors tagged template-haskell
       ];
       testHaskellDepends = [ base profunctors ];
       benchmarkHaskellDepends = [ base criterion deepseq ];
       homepage = "https://github.com/tomjaguarpaw/product-profunctors";
       description = "product-profunctors";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "profiterole" = callPackage
    ({ mkDerivation, base, containers, directory, extra, filepath
     , ghc-prof, hashable, scientific, text
     }:
     mkDerivation {
       pname = "profiterole";
       version = "0.1";
       sha256 = "1wfj8rmcablya94shhrnx2dbk3pfbhvdv6mk6946fyjfy32di266";
       isLibrary = false;
       isExecutable = true;
       executableHaskellDepends = [
         base containers directory extra filepath ghc-prof hashable
         scientific text
       ];
       doHaddock = false;
       homepage = "https://github.com/ndmitchell/profiterole#readme";
       description = "Restructure GHC profile reports";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "profunctors" = callPackage
    ({ mkDerivation, base, base-orphans, bifunctors, comonad
     , contravariant, distributive, semigroups, tagged, transformers
     }:
     mkDerivation {
       pname = "profunctors";
       version = "5.2.2";
       sha256 = "0s1pwjidbn761xk43pmzyvn99hm3psdifjd78ylki7f97aiyd0g9";
       revision = "2";
       editedCabalFile = "1ywlg9z8nlhd2avgb8c6gbkv8zyk7hvc25926bafyg0m0k8y1amq";
       libraryHaskellDepends = [
         base base-orphans bifunctors comonad contravariant distributive
         semigroups tagged transformers
       ];
       homepage = "http://github.com/ekmett/profunctors/";
       description = "Profunctors";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "project-template" = callPackage
    ({ mkDerivation, base, base64-bytestring, bytestring, conduit
     , conduit-extra, containers, directory, filepath, hspec, mtl
     , QuickCheck, resourcet, text, transformers
     }:
     mkDerivation {
       pname = "project-template";
       version = "0.2.0.1";
       sha256 = "1p69ww4rhah2qxragl615wl4a6mk4x9w09am8knmz3s4lxpljlpb";
       revision = "1";
       editedCabalFile = "0lq3sqnq0nr0gbvgzp0lqdl3j3mqdmdlf8xsw0j3pjh581xj3k0a";
       libraryHaskellDepends = [
         base base64-bytestring bytestring conduit conduit-extra containers
         directory filepath mtl resourcet text transformers
       ];
       testHaskellDepends = [
         base base64-bytestring bytestring conduit containers hspec
         QuickCheck resourcet text transformers
       ];
       homepage = "https://github.com/fpco/haskell-ide";
       description = "Specify Haskell project templates and generate files";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "projectroot" = callPackage
    ({ mkDerivation, base, directory, hspec, QuickCheck }:
     mkDerivation {
       pname = "projectroot";
       version = "0.2.0.1";
       sha256 = "1f0sgrdq83af1wff5pmzfh44rmzmc0k8axhddz7rkl9yaj330xak";
       libraryHaskellDepends = [ base directory ];
       testHaskellDepends = [ base hspec QuickCheck ];
       homepage = "https://github.com/yamadapc/haskell-projectroot";
       description = "Bindings to the projectroot C logic";
       license = stdenv.lib.licenses.mit;
     }) {};
  "prometheus-client" = callPackage
    ({ mkDerivation, atomic-primops, base, bytestring, clock
     , containers, criterion, doctest, hspec, mtl, QuickCheck, random
     , random-shuffle, stm, transformers, utf8-string
     }:
     mkDerivation {
       pname = "prometheus-client";
       version = "0.3.0";
       sha256 = "0nyh90ixf4g54q8qy315fv310rn0sw6rypkj37876isdhq5w8a2z";
       libraryHaskellDepends = [
         atomic-primops base bytestring clock containers mtl stm
         transformers utf8-string
       ];
       testHaskellDepends = [
         atomic-primops base bytestring clock containers doctest hspec mtl
         QuickCheck random-shuffle stm transformers utf8-string
       ];
       benchmarkHaskellDepends = [
         base bytestring criterion random utf8-string
       ];
       homepage = "https://github.com/fimad/prometheus-haskell";
       description = "Haskell client library for http://prometheus.io.";
       license = stdenv.lib.licenses.asl20;
     }) {};
  "promises" = callPackage
    ({ mkDerivation, base, primitive }:
     mkDerivation {
       pname = "promises";
       version = "0.3";
       sha256 = "0q7jjk9dqli4vi46j94gywxp0fp80b7r0k0g4ymyf8n12lcr0z5z";
       libraryHaskellDepends = [ base primitive ];
       homepage = "http://github.com/ekmett/promises/";
       description = "Lazy demand-driven promises";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "prompt" = callPackage
    ({ mkDerivation, base, base-compat, mtl, transformers
     , transformers-compat
     }:
     mkDerivation {
       pname = "prompt";
       version = "0.1.1.2";
       sha256 = "1wjil5rrh2flm3ikjk9f3i6y015vm0bdxndn8mv78l66yhg73db7";
       libraryHaskellDepends = [
         base base-compat mtl transformers transformers-compat
       ];
       homepage = "https://github.com/mstksg/prompt";
       description = "Monad (and transformer) for deferred-effect pure prompt-response queries";
       license = stdenv.lib.licenses.mit;
     }) {};
  "proto-lens" = callPackage
    ({ mkDerivation, attoparsec, base, bytestring, containers
     , data-default-class, deepseq, lens-family, lens-labels, parsec
     , pretty, text, transformers, void
     }:
     mkDerivation {
       pname = "proto-lens";
       version = "0.3.1.0";
       sha256 = "1awlp7101vhqf2hhz3h93mf38lyyfx5ay3gvrdna0k3msykimgw7";
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [
         attoparsec base bytestring containers data-default-class deepseq
         lens-family lens-labels parsec pretty text transformers void
       ];
       homepage = "https://github.com/google/proto-lens#readme";
       description = "A lens-based implementation of protocol buffers in Haskell";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "proto-lens-arbitrary" = callPackage
    ({ mkDerivation, base, bytestring, containers, lens-family
     , proto-lens, QuickCheck, text
     }:
     mkDerivation {
       pname = "proto-lens-arbitrary";
       version = "0.1.2.2";
       sha256 = "128r7g82yx4rs38yd9s4bwcpyiqm5yr4lyci3z88bhqsvkn4438i";
       libraryHaskellDepends = [
         base bytestring containers lens-family proto-lens QuickCheck text
       ];
       homepage = "https://github.com/google/proto-lens#readme";
       description = "Arbitrary instances for proto-lens";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "proto-lens-combinators" = callPackage
    ({ mkDerivation, base, Cabal, data-default-class, lens-family
     , proto-lens-protoc, transformers
     }:
     mkDerivation {
       pname = "proto-lens-combinators";
       version = "0.1.0.11";
       sha256 = "1i2rbvhdvglqg6b4iwr5a0pk7iq78nap491bqg77y4dwd45ipcpb";
       setupHaskellDepends = [ base Cabal proto-lens-protoc ];
       libraryHaskellDepends = [
         base data-default-class lens-family proto-lens-protoc transformers
       ];
       doCheck = false;
       homepage = "https://github.com/google/proto-lens#readme";
       description = "Utilities functions to proto-lens";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "proto-lens-optparse" = callPackage
    ({ mkDerivation, base, optparse-applicative, proto-lens, text }:
     mkDerivation {
       pname = "proto-lens-optparse";
       version = "0.1.1.4";
       sha256 = "1dn5cjwbagcykh1fv99v6mmj7mlnl46nqlwpz1878fy7vl7i8lzh";
       libraryHaskellDepends = [
         base optparse-applicative proto-lens text
       ];
       homepage = "https://github.com/google/proto-lens#readme";
       description = "Adapting proto-lens to optparse-applicative ReadMs";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "proto-lens-protobuf-types" = callPackage
    ({ mkDerivation, base, Cabal, lens-family, proto-lens
     , proto-lens-protoc, protobuf, text
     }:
     mkDerivation {
       pname = "proto-lens-protobuf-types";
       version = "0.3.0.1";
       sha256 = "0630yl73s11dnfripbz5pa25mzpsnjzd278qcm5yiy6zmcz0a6ca";
       setupHaskellDepends = [ base Cabal proto-lens-protoc ];
       libraryHaskellDepends = [
         base lens-family proto-lens proto-lens-protoc text
       ];
       libraryToolDepends = [ protobuf ];
       homepage = "https://github.com/google/proto-lens#readme";
       description = "Basic protocol buffer message types";
       license = stdenv.lib.licenses.bsd3;
     }) {inherit (pkgs) protobuf;};
  "proto-lens-protoc" = callPackage
    ({ mkDerivation, base, bytestring, Cabal, containers
     , data-default-class, deepseq, directory, filepath
     , haskell-src-exts, lens-family, lens-labels, pretty, process
     , proto-lens, protobuf, temporary, text
     }:
     mkDerivation {
       pname = "proto-lens-protoc";
       version = "0.3.1.2";
       sha256 = "15qypl2z5mccmxhq2bl86frzdalpcnsjiw6vypvnr6gxlr7mwhm7";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         base bytestring Cabal containers data-default-class deepseq
         directory filepath haskell-src-exts lens-family lens-labels pretty
         process proto-lens temporary text
       ];
       libraryToolDepends = [ protobuf ];
       executableHaskellDepends = [
         base bytestring containers data-default-class deepseq filepath
         haskell-src-exts lens-family proto-lens text
       ];
       homepage = "https://github.com/google/proto-lens#readme";
       description = "Protocol buffer compiler for the proto-lens library";
       license = stdenv.lib.licenses.bsd3;
     }) {inherit (pkgs) protobuf;};
  "protobuf" = callPackage
    ({ mkDerivation, base, base-orphans, bytestring, cereal, containers
     , data-binary-ieee754, deepseq, hex, HUnit, mtl, QuickCheck, tagged
     , tasty, tasty-hunit, tasty-quickcheck, text, unordered-containers
     }:
     mkDerivation {
       pname = "protobuf";
       version = "0.2.1.2";
       sha256 = "1php9pydbh2jyr5x6h1i218w8kqwys5aniz2zm1hapv6ia8p3j5k";
       libraryHaskellDepends = [
         base base-orphans bytestring cereal data-binary-ieee754 deepseq mtl
         text unordered-containers
       ];
       testHaskellDepends = [
         base bytestring cereal containers hex HUnit mtl QuickCheck tagged
         tasty tasty-hunit tasty-quickcheck text unordered-containers
       ];
       homepage = "https://github.com/alphaHeavy/protobuf";
       description = "Google Protocol Buffers via GHC.Generics";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "protobuf-simple" = callPackage
    ({ mkDerivation, base, binary, bytestring, containers
     , data-binary-ieee754, directory, filepath, hspec, mtl, parsec
     , QuickCheck, quickcheck-instances, split, text
     }:
     mkDerivation {
       pname = "protobuf-simple";
       version = "0.1.1.0";
       sha256 = "1i6dmf9nppjk2xd2s91bmbnb9r915h5ypq5923jpralry2ax6ach";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         base binary bytestring containers data-binary-ieee754 mtl text
       ];
       executableHaskellDepends = [
         base containers directory filepath mtl parsec split text
       ];
       testHaskellDepends = [
         base binary bytestring containers data-binary-ieee754 filepath
         hspec parsec QuickCheck quickcheck-instances split text
       ];
       homepage = "https://github.com/sru-systems/protobuf-simple";
       description = "Simple Protocol Buffers library (proto2)";
       license = stdenv.lib.licenses.mit;
     }) {};
  "protocol-buffers" = callPackage
    ({ mkDerivation, array, base, binary, bytestring, containers
     , directory, filepath, mtl, parsec, syb, utf8-string
     }:
     mkDerivation {
       pname = "protocol-buffers";
       version = "2.4.11";
       sha256 = "1s41iprw4w6g56phrgali2b59isn2s67nzfwr38yfgib3lm4kjs7";
       libraryHaskellDepends = [
         array base binary bytestring containers directory filepath mtl
         parsec syb utf8-string
       ];
       homepage = "https://github.com/k-bx/protocol-buffers";
       description = "Parse Google Protocol Buffer specifications";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "protocol-buffers-descriptor" = callPackage
    ({ mkDerivation, base, bytestring, containers, protocol-buffers }:
     mkDerivation {
       pname = "protocol-buffers-descriptor";
       version = "2.4.11";
       sha256 = "06k8sz0i021mizdgh01rx7v08wc767njwppimgmm2hyg6k4bv450";
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [
         base bytestring containers protocol-buffers
       ];
       homepage = "https://github.com/k-bx/protocol-buffers";
       description = "Text.DescriptorProto.Options and code generated from the Google Protocol Buffer specification";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "protocol-radius" = callPackage
    ({ mkDerivation, base, bytestring, cereal, containers, cryptonite
     , dlist, memory, template-haskell, text, transformers
     }:
     mkDerivation {
       pname = "protocol-radius";
       version = "0.0.1.1";
       sha256 = "0cd1qr5c2s25136lljqj2xfl8anrrc6m1yf8dpscjil2y4r27629";
       libraryHaskellDepends = [
         base bytestring cereal containers cryptonite dlist memory
         template-haskell text transformers
       ];
       description = "parser and printer for radius protocol packet";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "protocol-radius-test" = callPackage
    ({ mkDerivation, base, bytestring, cereal, containers
     , protocol-radius, QuickCheck, quickcheck-simple, transformers
     }:
     mkDerivation {
       pname = "protocol-radius-test";
       version = "0.0.1.0";
       sha256 = "185d85d9gfylcg575rvr43p4p8wzh0mi9frvkm2cn3liwwarmk5m";
       libraryHaskellDepends = [
         base bytestring cereal containers protocol-radius QuickCheck
         quickcheck-simple transformers
       ];
       testHaskellDepends = [ base quickcheck-simple ];
       description = "testsuit of protocol-radius haskell package";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "protolude" = callPackage
    ({ mkDerivation, array, async, base, bytestring, containers
     , deepseq, ghc-prim, hashable, mtl, mtl-compat, stm, text
     , transformers, transformers-compat
     }:
     mkDerivation {
       pname = "protolude";
       version = "0.2.2";
       sha256 = "0z251xxv8rhds981acdf6dr34ac2kc062mbq9gl2nj339grhqpb8";
       libraryHaskellDepends = [
         array async base bytestring containers deepseq ghc-prim hashable
         mtl mtl-compat stm text transformers transformers-compat
       ];
       homepage = "https://github.com/sdiehl/protolude";
       description = "A small prelude";
       license = stdenv.lib.licenses.mit;
     }) {};
  "proxied" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "proxied";
       version = "0.3";
       sha256 = "09pbvf40qykrzmg4lrk5krhx30gzsldk1bz2i6bb6d18bx14skak";
       libraryHaskellDepends = [ base ];
       homepage = "https://github.com/RyanGlScott/proxied";
       description = "Make functions consume Proxy instead of undefined";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "psql-helpers" = callPackage
    ({ mkDerivation, base, postgresql-simple }:
     mkDerivation {
       pname = "psql-helpers";
       version = "0.1.0.0";
       sha256 = "1x0r68mfv56rp87j8ick875wbq3qzkii9ia60amx6xr40x1acg7i";
       libraryHaskellDepends = [ base postgresql-simple ];
       homepage = "http://github.com/agrafix/psql-helpers#readme";
       description = "A small collection of helper functions to generate postgresql queries";
       license = stdenv.lib.licenses.mit;
     }) {};
  "psqueues" = callPackage
    ({ mkDerivation, array, base, deepseq, ghc-prim, hashable, HUnit
     , QuickCheck, tagged, test-framework, test-framework-hunit
     , test-framework-quickcheck2
     }:
     mkDerivation {
       pname = "psqueues";
       version = "0.2.7.0";
       sha256 = "1sjgc9bxh63kkdp59nbirx3xazr02ia5yhp4f4a0jnq1hj465wsc";
       revision = "1";
       editedCabalFile = "0ncag4p7v41x5disbvkwzmv0c7ifc85lmjljzvf8d33arh7b08bj";
       libraryHaskellDepends = [ base deepseq ghc-prim hashable ];
       testHaskellDepends = [
         array base deepseq ghc-prim hashable HUnit QuickCheck tagged
         test-framework test-framework-hunit test-framework-quickcheck2
       ];
       description = "Pure priority search queues";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "publicsuffix" = callPackage
    ({ mkDerivation, base, criterion, filepath, hspec, random
     , template-haskell
     }:
     mkDerivation {
       pname = "publicsuffix";
       version = "0.20180513";
       sha256 = "0wq9hz1z924a5pk17zyaf9nyz5z5fyrlf806rypdxnpvi4q1j7xm";
       libraryHaskellDepends = [ base filepath template-haskell ];
       testHaskellDepends = [ base hspec ];
       benchmarkHaskellDepends = [ base criterion random ];
       homepage = "https://github.com/wereHamster/publicsuffix-haskell/";
       description = "The publicsuffix list exposed as proper Haskell types";
       license = stdenv.lib.licenses.mit;
     }) {};
  "pure-zlib" = callPackage
    ({ mkDerivation, array, base, base-compat, bytestring
     , bytestring-builder, containers, filepath, fingertree, HUnit
     , QuickCheck, tasty, tasty-hunit, tasty-quickcheck, time
     }:
     mkDerivation {
       pname = "pure-zlib";
       version = "0.6.4";
       sha256 = "05rhvhvdn8ly5jldxg3q7ip6zflzqa1wyj8mlcl0scgsngn9lrzb";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         array base base-compat bytestring bytestring-builder containers
         fingertree
       ];
       executableHaskellDepends = [ base base-compat bytestring ];
       testHaskellDepends = [
         base base-compat bytestring filepath HUnit QuickCheck tasty
         tasty-hunit tasty-quickcheck
       ];
       benchmarkHaskellDepends = [ base base-compat bytestring time ];
       homepage = "http://github.com/GaloisInc/pure-zlib";
       description = "A Haskell-only implementation of zlib / DEFLATE";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "pureMD5" = callPackage
    ({ mkDerivation, base, binary, bytestring, cereal, crypto-api
     , crypto-api-tests, pretty-hex, QuickCheck, tagged, test-framework
     , test-framework-quickcheck2
     }:
     mkDerivation {
       pname = "pureMD5";
       version = "2.1.3";
       sha256 = "0zdilz41cla2ck7mcw1a9702gyg2abq94mqahr4vci9sbs53bwxy";
       libraryHaskellDepends = [
         base binary bytestring cereal crypto-api tagged
       ];
       testHaskellDepends = [
         base binary bytestring cereal crypto-api-tests pretty-hex
         QuickCheck test-framework test-framework-quickcheck2
       ];
       description = "A Haskell-only implementation of the MD5 digest (hash) algorithm";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "purescript-bridge" = callPackage
    ({ mkDerivation, base, containers, directory, filepath
     , generic-deriving, hspec, hspec-expectations-pretty-diff, lens
     , mtl, text, transformers
     }:
     mkDerivation {
       pname = "purescript-bridge";
       version = "0.13.0.0";
       sha256 = "0jai0vrfw997w7gjs168bk8n2xjw30hnhd82pch5n58w1sy6n6ib";
       libraryHaskellDepends = [
         base containers directory filepath generic-deriving lens mtl text
         transformers
       ];
       testHaskellDepends = [
         base containers hspec hspec-expectations-pretty-diff text
       ];
       description = "Generate PureScript data types from Haskell data types";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "pushbullet-types" = callPackage
    ({ mkDerivation, aeson, base, http-api-data, microlens
     , microlens-th, scientific, text, time, unordered-containers
     }:
     mkDerivation {
       pname = "pushbullet-types";
       version = "0.4.1.0";
       sha256 = "0ny8nlk50cn6zgikg7xwylkrablj05vcm5gjm9y4zdzhbz7s4qb4";
       libraryHaskellDepends = [
         aeson base http-api-data microlens microlens-th scientific text
         time unordered-containers
       ];
       description = "Datatypes used by the Pushbullet APIs";
       license = stdenv.lib.licenses.mit;
     }) {};
  "qm-interpolated-string" = callPackage
    ({ mkDerivation, base, bytestring, haskell-src-meta, hspec
     , template-haskell, text
     }:
     mkDerivation {
       pname = "qm-interpolated-string";
       version = "0.3.0.0";
       sha256 = "1brbs4qwvb16bkmcg51spjjrzc83hwgi1fbsix25vrri2myk6sz8";
       libraryHaskellDepends = [
         base bytestring haskell-src-meta template-haskell text
       ];
       testHaskellDepends = [ base hspec ];
       homepage = "https://github.com/unclechu/haskell-qm-interpolated-string";
       description = "Implementation of interpolated multiline strings";
       license = stdenv.lib.licenses.publicDomain;
     }) {};
  "qnap-decrypt" = callPackage
    ({ mkDerivation, base, binary, bytestring, cipher-aes128, conduit
     , conduit-extra, crypto-api, directory, filepath, hspec, HUnit
     , optparse-applicative, streaming-commons, tagged, temporary
     , utf8-string
     }:
     mkDerivation {
       pname = "qnap-decrypt";
       version = "0.3.3";
       sha256 = "0gwnpyzyrfw6i8a5arm8q6psjhwa8kl8n94wcglsnl59k1iadfb6";
       isLibrary = true;
       isExecutable = true;
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [
         base binary bytestring cipher-aes128 conduit conduit-extra
         crypto-api directory streaming-commons tagged utf8-string
       ];
       executableHaskellDepends = [
         base binary bytestring cipher-aes128 conduit conduit-extra
         crypto-api directory filepath optparse-applicative
         streaming-commons tagged utf8-string
       ];
       testHaskellDepends = [
         base binary bytestring cipher-aes128 conduit conduit-extra
         crypto-api directory filepath hspec HUnit streaming-commons tagged
         temporary utf8-string
       ];
       homepage = "https://github.com/alexkazik/qnap-decrypt#readme";
       description = "Decrypt files encrypted by QNAP's Hybrid Backup Sync";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "quickbench" = callPackage
    ({ mkDerivation, base, containers, directory, docopt, pretty-show
     , process, safe, split, tabular, time
     }:
     mkDerivation {
       pname = "quickbench";
       version = "1.0";
       sha256 = "09mrhwvz0jnjrxgj3as7d4jl739gakli5crxfmp390x6a0p2bzlb";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         base containers directory docopt pretty-show process safe split
         tabular time
       ];
       executableHaskellDepends = [ base process ];
       testHaskellDepends = [ base ];
       homepage = "https://github.com/simonmichael/quickbench#readme";
       description = "quick & easy benchmarking of command-line programs";
       license = "GPL";
     }) {};
  "quickcheck-arbitrary-adt" = callPackage
    ({ mkDerivation, base, hspec, lens, QuickCheck, template-haskell
     , transformers
     }:
     mkDerivation {
       pname = "quickcheck-arbitrary-adt";
       version = "0.3.1.0";
       sha256 = "1fa5gb111m740q399l7wbr9n03ws9rasq48jhnx7dvvd6qh2wjjw";
       libraryHaskellDepends = [ base QuickCheck ];
       testHaskellDepends = [
         base hspec lens QuickCheck template-haskell transformers
       ];
       homepage = "https://github.com/plow-technologies/quickcheck-arbitrary-adt#readme";
       description = "Generic typeclasses for generating arbitrary ADTs";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "quickcheck-assertions" = callPackage
    ({ mkDerivation, base, hspec, ieee754, pretty-show, QuickCheck }:
     mkDerivation {
       pname = "quickcheck-assertions";
       version = "0.3.0";
       sha256 = "1kyam4cy7qmnizjwjm8jamq43w7f0fs6ljfplwj0ib6wi2kjh0wv";
       libraryHaskellDepends = [ base ieee754 pretty-show QuickCheck ];
       testHaskellDepends = [ base hspec ieee754 QuickCheck ];
       homepage = "https://github.com/s9gf4ult/quickcheck-assertions";
       description = "HUnit like assertions for QuickCheck";
       license = stdenv.lib.licenses.lgpl3;
     }) {};
  "quickcheck-instances" = callPackage
    ({ mkDerivation, array, base, base-compat, bytestring
     , case-insensitive, containers, hashable, old-time, QuickCheck
     , scientific, tagged, text, time, transformers, transformers-compat
     , unordered-containers, uuid-types, vector
     }:
     mkDerivation {
       pname = "quickcheck-instances";
       version = "0.3.19";
       sha256 = "0mls8095ylk5pq2j787ary5lyn4as64414silq3zn4sky3zsx92p";
       libraryHaskellDepends = [
         array base base-compat bytestring case-insensitive containers
         hashable old-time QuickCheck scientific tagged text time
         transformers transformers-compat unordered-containers uuid-types
         vector
       ];
       testHaskellDepends = [
         base containers QuickCheck tagged uuid-types
       ];
       homepage = "https://github.com/phadej/qc-instances";
       description = "Common quickcheck instances";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "quickcheck-io" = callPackage
    ({ mkDerivation, base, HUnit, QuickCheck }:
     mkDerivation {
       pname = "quickcheck-io";
       version = "0.2.0";
       sha256 = "08k4v7pkgjf30pv5j2dfv1gqv6hclxlniyq2sps8zq4zswcr2xzv";
       libraryHaskellDepends = [ base HUnit QuickCheck ];
       homepage = "https://github.com/hspec/quickcheck-io#readme";
       description = "Use HUnit assertions as QuickCheck properties";
       license = stdenv.lib.licenses.mit;
     }) {};
  "quickcheck-simple" = callPackage
    ({ mkDerivation, base, QuickCheck }:
     mkDerivation {
       pname = "quickcheck-simple";
       version = "0.1.0.4";
       sha256 = "0524xkhx2qa6wfl7wf9qdjscr2djl0l08a1bk6ikigcpdabbb3l0";
       libraryHaskellDepends = [ base QuickCheck ];
       description = "Test properties and default-mains for QuickCheck";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "quickcheck-special" = callPackage
    ({ mkDerivation, base, QuickCheck, special-values }:
     mkDerivation {
       pname = "quickcheck-special";
       version = "0.1.0.6";
       sha256 = "1dhwgy1jwglp4y3nbysr1i182415aibqlcsrvwxn2c5x162qjwwm";
       revision = "1";
       editedCabalFile = "1whwmij115vw0qwkzlkc4z4yhj7iwwqjhf5aaxn5np0gh2gzihb3";
       libraryHaskellDepends = [ base QuickCheck special-values ];
       homepage = "https://github.com/minad/quickcheck-special#readme";
       description = "Edge cases and special values for QuickCheck Arbitrary instances";
       license = stdenv.lib.licenses.mit;
     }) {};
  "quickcheck-text" = callPackage
    ({ mkDerivation, base, binary, bytestring, QuickCheck, text }:
     mkDerivation {
       pname = "quickcheck-text";
       version = "0.1.2.1";
       sha256 = "02dbs0k6igmsa1hcw8yfvp09v7038vp4zlsp9706km3cmswgshj4";
       libraryHaskellDepends = [ base binary bytestring QuickCheck text ];
       testHaskellDepends = [ base bytestring QuickCheck text ];
       homepage = "https://github.com/olorin/quickcheck-text";
       description = "Alternative arbitrary instance for Text";
       license = stdenv.lib.licenses.mit;
     }) {};
  "quickcheck-unicode" = callPackage
    ({ mkDerivation, base, QuickCheck }:
     mkDerivation {
       pname = "quickcheck-unicode";
       version = "1.0.1.0";
       sha256 = "0s43s1bzbg3gwsjgm7fpyksd1339f0m26dlw2famxwyzgvm0a80k";
       libraryHaskellDepends = [ base QuickCheck ];
       homepage = "https://github.com/bos/quickcheck-unicode";
       description = "Generator and shrink functions for testing Unicode-related software";
       license = stdenv.lib.licenses.bsd2;
     }) {};
  "quicklz" = callPackage
    ({ mkDerivation, base, bytestring, QuickCheck, test-framework
     , test-framework-quickcheck2
     }:
     mkDerivation {
       pname = "quicklz";
       version = "1.5.0.11";
       sha256 = "17v9bfdp4ib9258r7001naqwss7l6v83by40va3gm3l418vj62qd";
       libraryHaskellDepends = [ base bytestring ];
       testHaskellDepends = [
         base bytestring QuickCheck test-framework
         test-framework-quickcheck2
       ];
       homepage = "http://github.com/thoughtpolice/hs-quicklz";
       description = "QuickLZ compression for ByteStrings";
       license = stdenv.lib.licenses.gpl2;
     }) {};
  "rainbow" = callPackage
    ({ mkDerivation, base, bytestring, lens-simple, process, QuickCheck
     , text
     }:
     mkDerivation {
       pname = "rainbow";
       version = "0.30.0.2";
       sha256 = "1isy1xfgsp25x0254gmqkakc185g87wil3n19w5s1rn3bfq1w0my";
       libraryHaskellDepends = [
         base bytestring lens-simple process text
       ];
       testHaskellDepends = [
         base bytestring lens-simple process QuickCheck text
       ];
       homepage = "https://www.github.com/massysett/rainbow";
       description = "Print text to terminal with colors and effects";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "rainbox" = callPackage
    ({ mkDerivation, base, bytestring, containers, lens-simple
     , QuickCheck, rainbow, tasty, tasty-quickcheck, text
     }:
     mkDerivation {
       pname = "rainbox";
       version = "0.20.0.0";
       sha256 = "07xn8n2wyy7gfc7x725pa9p38m0bapbbk6zcbh31zd67zg962zwk";
       libraryHaskellDepends = [
         base bytestring containers lens-simple rainbow text
       ];
       testHaskellDepends = [
         base bytestring containers lens-simple QuickCheck rainbow tasty
         tasty-quickcheck text
       ];
       homepage = "https://www.github.com/massysett/rainbox";
       description = "Two-dimensional box pretty printing, with colors";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "rakuten" = callPackage
    ({ mkDerivation, aeson, base, bytestring, connection, constraints
     , data-default-class, extensible, http-api-data, http-client
     , http-client-tls, http-types, lens, req, text
     }:
     mkDerivation {
       pname = "rakuten";
       version = "0.1.1.5";
       sha256 = "04qr5rbg0w56nlkama95bavalq3zj24pblbi655vq0vli5ggxgza";
       libraryHaskellDepends = [
         aeson base bytestring connection constraints data-default-class
         extensible http-api-data http-client http-client-tls http-types
         lens req text
       ];
       doCheck = false;
       homepage = "https://github.com/matsubara0507/rakuten#readme";
       description = "The Rakuten API in Haskell";
       license = stdenv.lib.licenses.mit;
     }) {};
  "ramus" = callPackage
    ({ mkDerivation, base, criterion, hspec, QuickCheck, quickcheck-io
     }:
     mkDerivation {
       pname = "ramus";
       version = "0.1.2";
       sha256 = "0kkr1d7mznkyi4xznmnhxvni9y25m6bp4nsn0hb417772v2dvpfw";
       libraryHaskellDepends = [ base ];
       testHaskellDepends = [ base hspec QuickCheck quickcheck-io ];
       benchmarkHaskellDepends = [ base criterion ];
       homepage = "https://github.com/NickSeagull/ramus#readme";
       description = "Elm signal system for Haskell";
       license = stdenv.lib.licenses.mit;
     }) {};
  "random" = callPackage
    ({ mkDerivation, base, time }:
     mkDerivation {
       pname = "random";
       version = "1.1";
       sha256 = "0nis3lbkp8vfx8pkr6v7b7kr5m334bzb0fk9vxqklnp2aw8a865p";
       revision = "1";
       editedCabalFile = "1pv5d7bm2rgap7llp5vjsplrg048gvf0226y0v19gpvdsx7n4rvv";
       libraryHaskellDepends = [ base time ];
       testHaskellDepends = [ base ];
       description = "random number library";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "random-bytestring" = callPackage
    ({ mkDerivation, async, base, bytestring, criterion, cryptonite
     , entropy, ghc-prim, mwc-random, pcg-random, primitive, random
     }:
     mkDerivation {
       pname = "random-bytestring";
       version = "0.1.3.1";
       sha256 = "1d0f3y8n87fyyvlkn1c87d47xi50qn4cn11bnsn052860kyjda1k";
       revision = "1";
       editedCabalFile = "0gk5hcx1j06rklfd2cv63kh5dzjk8hr184riam784c7s9zg3s9a4";
       libraryHaskellDepends = [ base bytestring mwc-random pcg-random ];
       benchmarkHaskellDepends = [
         async base bytestring criterion cryptonite entropy ghc-prim
         mwc-random pcg-random primitive random
       ];
       homepage = "https://www.github.com/larskuhtz/random-bytestring";
       description = "Efficient generation of random bytestrings";
       license = stdenv.lib.licenses.mit;
     }) {};
  "random-fu" = callPackage
    ({ mkDerivation, base, erf, log-domain, math-functions, monad-loops
     , mtl, random-shuffle, random-source, rvar, syb, template-haskell
     , transformers, vector
     }:
     mkDerivation {
       pname = "random-fu";
       version = "0.2.7.0";
       sha256 = "1i5hg74gv6885vnhmyknydhsyrps2h5zjiq4dv992jg3xnrs9cxn";
       libraryHaskellDepends = [
         base erf log-domain math-functions monad-loops mtl random-shuffle
         random-source rvar syb template-haskell transformers vector
       ];
       homepage = "https://github.com/mokus0/random-fu";
       description = "Random number generation";
       license = stdenv.lib.licenses.publicDomain;
     }) {};
  "random-shuffle" = callPackage
    ({ mkDerivation, base, MonadRandom, random }:
     mkDerivation {
       pname = "random-shuffle";
       version = "0.0.4";
       sha256 = "0586bnlh0g2isc44jbjvafkcl4yw6lp1db8x6vr0pza0y08l8w2j";
       libraryHaskellDepends = [ base MonadRandom random ];
       description = "Random shuffle implementation";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "random-source" = callPackage
    ({ mkDerivation, base, flexible-defaults, mersenne-random-pure64
     , mtl, mwc-random, random, stateref, syb, template-haskell
     , th-extras
     }:
     mkDerivation {
       pname = "random-source";
       version = "0.3.0.6";
       sha256 = "0wsv41kpswqml04ym5bq2nan4i637f7h3fmvda2zy506xwxfrpzk";
       libraryHaskellDepends = [
         base flexible-defaults mersenne-random-pure64 mtl mwc-random random
         stateref syb template-haskell th-extras
       ];
       homepage = "https://github.com/mokus0/random-fu";
       description = "Generic basis for random number generators";
       license = stdenv.lib.licenses.publicDomain;
     }) {};
  "random-tree" = callPackage
    ({ mkDerivation, base, containers, lens, MonadRandom, mtl, random
     , random-shuffle, transformers, tree-fun
     }:
     mkDerivation {
       pname = "random-tree";
       version = "0.6.0.5";
       sha256 = "1hhwb4kah1j1hjsqwys24g0csq1hvz0vlgf6z9vwiql4w5y4wq1b";
       libraryHaskellDepends = [
         base containers lens MonadRandom mtl random random-shuffle
         transformers tree-fun
       ];
       description = "Create random trees";
       license = stdenv.lib.licenses.gpl3;
     }) {};
  "range-set-list" = callPackage
    ({ mkDerivation, base, containers, deepseq, hashable }:
     mkDerivation {
       pname = "range-set-list";
       version = "0.1.3";
       sha256 = "1pwnriv5r093qvqzzg9s868613nf92d3h8qmqaqc5qq95hykj6z5";
       revision = "1";
       editedCabalFile = "00ddj7if8lcrqf5c882m4slm15sdwcghz7d2fz222c7jcw1ahvdr";
       libraryHaskellDepends = [ base containers deepseq hashable ];
       doCheck = false;
       homepage = "https://github.com/phadej/range-set-list#readme";
       description = "Memory efficient sets with ranges of elements";
       license = stdenv.lib.licenses.mit;
     }) {};
  "rank1dynamic" = callPackage
    ({ mkDerivation, base, binary, HUnit, test-framework
     , test-framework-hunit
     }:
     mkDerivation {
       pname = "rank1dynamic";
       version = "0.4.0";
       sha256 = "07dbfp0sc32q1p8xh4ap8m3b287r9hh4r8vfsrppdm5pabz4nhiw";
       revision = "1";
       editedCabalFile = "1idh1iz15pzdhrhy19584i9ahz41ijbmf56wbb2wns2kipy6w9lr";
       libraryHaskellDepends = [ base binary ];
       testHaskellDepends = [
         base HUnit test-framework test-framework-hunit
       ];
       homepage = "http://haskell-distributed.github.com";
       description = "Like Data.Dynamic/Data.Typeable but with support for rank-1 polymorphic types";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "rank2classes" = callPackage
    ({ mkDerivation, base, distributive, doctest, tasty, tasty-hunit
     , template-haskell, transformers
     }:
     mkDerivation {
       pname = "rank2classes";
       version = "1.1.0.1";
       sha256 = "1iw2xanyv7rw995sy3c0dvkjl3js4bd7n2hz0x509pkz8hzsa93w";
       libraryHaskellDepends = [
         base distributive template-haskell transformers
       ];
       testHaskellDepends = [
         base distributive doctest tasty tasty-hunit
       ];
       homepage = "https://github.com/blamario/grampa/tree/master/rank2classes";
       description = "standard type constructor class hierarchy, only with methods of rank 2 types";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "rasterific-svg" = callPackage
    ({ mkDerivation, base, binary, bytestring, containers, directory
     , filepath, FontyFruity, JuicyPixels, lens, linear, mtl
     , optparse-applicative, primitive, Rasterific, scientific, svg-tree
     , text, transformers, vector
     }:
     mkDerivation {
       pname = "rasterific-svg";
       version = "0.3.3.2";
       sha256 = "1i0pl1hin1ipi3l0074ywd1khacpbvz3x0frx0j0hmbfiv4n3nq2";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         base binary bytestring containers directory filepath FontyFruity
         JuicyPixels lens linear mtl primitive Rasterific scientific
         svg-tree text transformers vector
       ];
       executableHaskellDepends = [
         base bytestring directory filepath FontyFruity JuicyPixels
         optparse-applicative Rasterific svg-tree
       ];
       description = "SVG renderer based on Rasterific";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "ratel" = callPackage
    ({ mkDerivation, aeson, base, bytestring, case-insensitive
     , containers, filepath, hspec, http-client, http-client-tls
     , http-types, text, uuid
     }:
     mkDerivation {
       pname = "ratel";
       version = "1.0.7";
       sha256 = "1kp6f45wn3a7wnsvj08a3b0kp5wwprw4rjrrqqd22yr9mpwx2z7w";
       libraryHaskellDepends = [
         aeson base bytestring case-insensitive containers http-client
         http-client-tls http-types text uuid
       ];
       testHaskellDepends = [
         aeson base bytestring case-insensitive containers filepath hspec
         http-client http-client-tls http-types text uuid
       ];
       homepage = "https://github.com/tfausak/ratel#readme";
       description = "Notify Honeybadger about exceptions";
       license = stdenv.lib.licenses.mit;
     }) {};
  "ratel-wai" = callPackage
    ({ mkDerivation, base, bytestring, case-insensitive, containers
     , http-client, ratel, wai
     }:
     mkDerivation {
       pname = "ratel-wai";
       version = "1.0.4";
       sha256 = "1cri461f40xa43kwg3wq5k98irfqypsi97xdk9n60yqhc8msca4m";
       libraryHaskellDepends = [
         base bytestring case-insensitive containers http-client ratel wai
       ];
       homepage = "https://github.com/tfausak/ratel-wai#readme";
       description = "Notify Honeybadger about exceptions via a WAI middleware";
       license = stdenv.lib.licenses.mit;
     }) {};
  "ratio-int" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "ratio-int";
       version = "0.1.2";
       sha256 = "06kqr4iyi184sa8y2vdkw5h0pvh5f8lwcqb8mbcn34lpqm961s7g";
       libraryHaskellDepends = [ base ];
       homepage = "https://github.com/RaphaelJ/ratio-int";
       description = "Fast specialisation of Data.Ratio for Int.";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "rattletrap" = callPackage
    ({ mkDerivation, aeson, aeson-pretty, base, binary, binary-bits
     , bytestring, containers, filepath, http-client, http-client-tls
     , HUnit, template-haskell, temporary, text, transformers
     }:
     mkDerivation {
       pname = "rattletrap";
       version = "4.1.2";
       sha256 = "0zmacxdf1k5mnvmrrkkvgjghzr4h948z5g73lavhmfg56i6vpkb2";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         aeson aeson-pretty base binary binary-bits bytestring containers
         filepath http-client http-client-tls template-haskell text
         transformers
       ];
       executableHaskellDepends = [
         aeson aeson-pretty base binary binary-bits bytestring containers
         filepath http-client http-client-tls template-haskell text
         transformers
       ];
       testHaskellDepends = [
         aeson aeson-pretty base binary binary-bits bytestring containers
         filepath http-client http-client-tls HUnit template-haskell
         temporary text transformers
       ];
       doCheck = false;
       homepage = "https://github.com/tfausak/rattletrap#readme";
       description = "Parse and generate Rocket League replays";
       license = stdenv.lib.licenses.mit;
     }) {};
  "raw-strings-qq" = callPackage
    ({ mkDerivation, base, HUnit, template-haskell }:
     mkDerivation {
       pname = "raw-strings-qq";
       version = "1.1";
       sha256 = "1lxy1wy3awf52968iy5y9r5z4qgnn2sxkdrh7js3m9gadb11w09f";
       libraryHaskellDepends = [ base template-haskell ];
       testHaskellDepends = [ base HUnit ];
       homepage = "https://github.com/23Skidoo/raw-strings-qq";
       description = "Raw string literals for Haskell";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "rawfilepath" = callPackage
    ({ mkDerivation, base, bytestring, unix }:
     mkDerivation {
       pname = "rawfilepath";
       version = "0.2.4";
       sha256 = "1lsvpnv1dncxw6a8a9w1jnzxlv2ya69ly4p4qsl720pzyx4ipc6b";
       libraryHaskellDepends = [ base bytestring unix ];
       testHaskellDepends = [ base bytestring ];
       homepage = "https://github.com/xtendo-org/rawfilepath#readme";
       description = "Use RawFilePath instead of FilePath";
       license = stdenv.lib.licenses.asl20;
     }) {};
  "rawstring-qm" = callPackage
    ({ mkDerivation, base, bytestring, template-haskell, text }:
     mkDerivation {
       pname = "rawstring-qm";
       version = "0.2.3.0";
       sha256 = "1zk82akj2p4hl9hqwr30fixqfkjlpnb02qwhhflvcpv8gnxpg88i";
       libraryHaskellDepends = [ base bytestring template-haskell text ];
       homepage = "https://github.com/tolysz/rawstring-qm";
       description = "Simple raw string quotation and dictionary interpolation";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "rcu" = callPackage
    ({ mkDerivation, atomic-primops, base, Cabal, cabal-doctest
     , containers, criterion, deepseq, doctest, fail, ghc-prim, hlint
     , optparse-applicative, parallel, primitive, rdtsc, time
     , transformers
     }:
     mkDerivation {
       pname = "rcu";
       version = "0.2.3";
       sha256 = "17w0y843z5mr095cazfrz1jnf731zjsnd6vhgkx8ppras05vs371";
       isLibrary = true;
       isExecutable = true;
       setupHaskellDepends = [ base Cabal cabal-doctest ];
       libraryHaskellDepends = [
         atomic-primops base fail ghc-prim parallel primitive transformers
       ];
       executableHaskellDepends = [ base transformers ];
       testHaskellDepends = [ base doctest hlint parallel ];
       benchmarkHaskellDepends = [
         base containers criterion deepseq ghc-prim optparse-applicative
         primitive rdtsc time transformers
       ];
       homepage = "http://github.com/ekmett/rcu/";
       description = "Read-Copy-Update for Haskell";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "rdf" = callPackage
    ({ mkDerivation, attoparsec, base, bytestring, criterion, deepseq
     , dlist, fgl, text, transformers
     }:
     mkDerivation {
       pname = "rdf";
       version = "0.1.0.2";
       sha256 = "0vqznprx5r7lqyj8b850pfyy7mvin55l1v4krmi1wyacynv977c8";
       libraryHaskellDepends = [
         attoparsec base bytestring deepseq dlist fgl text transformers
       ];
       benchmarkHaskellDepends = [
         base bytestring criterion deepseq text
       ];
       homepage = "https://github.com/traviswhitaker/rdf";
       description = "Representation and Incremental Processing of RDF Data";
       license = stdenv.lib.licenses.mit;
     }) {};
  "rdtsc" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "rdtsc";
       version = "1.3.0.1";
       sha256 = "0l6r5v6bgqf7lq9j6bf7w362bz7bv4xrsbz90ns60v4dyqjskjal";
       libraryHaskellDepends = [ base ];
       homepage = "https://github.com/mgrabmueller/rdtsc";
       description = "Binding for the rdtsc machine instruction";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "re2" = callPackage
    ({ mkDerivation, base, bytestring, HUnit, re2, vector }:
     mkDerivation {
       pname = "re2";
       version = "0.2";
       sha256 = "0qfmiwy4kc87a736fpzh4cscvldiywq641gb9kvn4hc3sq7dh1k9";
       libraryHaskellDepends = [ base bytestring vector ];
       librarySystemDepends = [ re2 ];
       testHaskellDepends = [ base bytestring HUnit vector ];
       homepage = "https://github.com/rblaze/haskell-re2#readme";
       description = "Bindings to the re2 regular expression library";
       license = stdenv.lib.licenses.mit;
     }) {inherit (pkgs) re2;};
  "read-editor" = callPackage
    ({ mkDerivation, base, directory, process }:
     mkDerivation {
       pname = "read-editor";
       version = "0.1.0.2";
       sha256 = "11bhfyzvw305avnp9abf45jvwflwdh8gshx5l08szyr3d2lfr2pd";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [ base directory process ];
       homepage = "https://github.com/yamadapc/haskell-read-editor";
       description = "Opens a temporary file on the system's EDITOR and returns the resulting edits";
       license = stdenv.lib.licenses.mit;
     }) {};
  "read-env-var" = callPackage
    ({ mkDerivation, base, doctest, exceptions, Glob, transformers }:
     mkDerivation {
       pname = "read-env-var";
       version = "1.0.0.0";
       sha256 = "0p5pw1y6wcq03bdixircf6bb9qjq2aci6bvpmqwfi360dwbwiwq3";
       libraryHaskellDepends = [ base exceptions transformers ];
       testHaskellDepends = [ base doctest Glob ];
       homepage = "https://github.com/cdepillabout/read-env-var#readme";
       description = "Functions for safely reading environment variables";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "readable" = callPackage
    ({ mkDerivation, base, bytestring, text }:
     mkDerivation {
       pname = "readable";
       version = "0.3.1";
       sha256 = "1ja39cg26wy2fs00gi12x7iq5k8i366pbqi3p916skfa5jnkfc3h";
       libraryHaskellDepends = [ base bytestring text ];
       homepage = "https://github.com/mightybyte/readable";
       description = "Reading from Text and ByteString";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "rebase" = callPackage
    ({ mkDerivation, base, base-prelude, bifunctors, bytestring
     , containers, contravariant, contravariant-extras, deepseq, dlist
     , either, fail, hashable, mtl, profunctors, scientific
     , semigroupoids, semigroups, stm, text, time, transformers
     , unordered-containers, uuid, vector, void
     }:
     mkDerivation {
       pname = "rebase";
       version = "1.2.4";
       sha256 = "1gah2qwfpzwamnikbc5h4nv6dgvv9h16di9ka7946za3nibyasya";
       libraryHaskellDepends = [
         base base-prelude bifunctors bytestring containers contravariant
         contravariant-extras deepseq dlist either fail hashable mtl
         profunctors scientific semigroupoids semigroups stm text time
         transformers unordered-containers uuid vector void
       ];
       homepage = "https://github.com/nikita-volkov/rebase";
       description = "A more progressive alternative to the \"base\" package";
       license = stdenv.lib.licenses.mit;
     }) {};
  "record-dot-preprocessor" = callPackage
    ({ mkDerivation, base, extra, filepath }:
     mkDerivation {
       pname = "record-dot-preprocessor";
       version = "0.1.4";
       sha256 = "1mj39kdnf3978cc51hh1fnnr0ax3gnqw4fan0f099b7li5y2xlwx";
       isLibrary = false;
       isExecutable = true;
       executableHaskellDepends = [ base extra filepath ];
       doHaddock = false;
       homepage = "https://github.com/ndmitchell/record-dot-preprocessor#readme";
       description = "Preprocessor to allow record.field syntax";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "recursion-schemes" = callPackage
    ({ mkDerivation, base, base-orphans, comonad, free, HUnit
     , template-haskell, th-abstraction, transformers
     }:
     mkDerivation {
       pname = "recursion-schemes";
       version = "5.0.3";
       sha256 = "17x0kjl3yqanx234mb838yy21gw4if6qgzpi5l0b17m8llvp086v";
       revision = "3";
       editedCabalFile = "05fvpi3dc44h2a097fb9cq1jqdjq2b3sdf5hzfn9g00bid37bb5q";
       libraryHaskellDepends = [
         base base-orphans comonad free template-haskell th-abstraction
         transformers
       ];
       testHaskellDepends = [ base HUnit template-haskell transformers ];
       homepage = "http://github.com/ekmett/recursion-schemes/";
       description = "Generalized bananas, lenses and barbed wire";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "reducers" = callPackage
    ({ mkDerivation, array, base, bytestring, containers, fingertree
     , hashable, semigroupoids, semigroups, text, transformers
     , unordered-containers
     }:
     mkDerivation {
       pname = "reducers";
       version = "3.12.3";
       sha256 = "09wf8pl9ycglcv6qj5ba26gkg2s5iy81hsx9xp0q8na0cwvp71ki";
       libraryHaskellDepends = [
         array base bytestring containers fingertree hashable semigroupoids
         semigroups text transformers unordered-containers
       ];
       homepage = "http://github.com/ekmett/reducers/";
       description = "Semigroups, specialized containers and a general map/reduce framework";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "ref-fd" = callPackage
    ({ mkDerivation, base, stm, transformers }:
     mkDerivation {
       pname = "ref-fd";
       version = "0.4.0.1";
       sha256 = "0dv0bwm952ivs1xi44nq8310k5mqs20i60g1rgwkm7hlpapz25p4";
       libraryHaskellDepends = [ base stm transformers ];
       description = "A type class for monads with references using functional dependencies";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "refact" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "refact";
       version = "0.3.0.2";
       sha256 = "0v0zxcx29b8jxs2kgy9csykqcp8kzhdvyylw2xfwmj4pfxr2kl0a";
       libraryHaskellDepends = [ base ];
       description = "Specify refactorings to perform with apply-refact";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "references" = callPackage
    ({ mkDerivation, array, base, containers, directory, either
     , filepath, HUnit, instance-control, lens, mtl, template-haskell
     , text, transformers, uniplate
     }:
     mkDerivation {
       pname = "references";
       version = "0.3.3.1";
       sha256 = "03n18skl989ksssi2lv50bns1iw9qixacabs9qvli4b36rnn01xw";
       libraryHaskellDepends = [
         array base containers directory either filepath instance-control
         mtl template-haskell text transformers uniplate
       ];
       testHaskellDepends = [
         array base containers directory either filepath HUnit
         instance-control lens mtl template-haskell text transformers
         uniplate
       ];
       homepage = "https://github.com/lazac/references";
       description = "Selectors for reading and updating data";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "refined" = callPackage
    ({ mkDerivation, base, containers, exceptions, mtl, prettyprinter
     , template-haskell, these, transformers
     }:
     mkDerivation {
       pname = "refined";
       version = "0.2.3.0";
       sha256 = "1xc4qg2xibf2j0k6dwjj2sp5s58cj4dwcri6zrn42460wxnvyjk6";
       libraryHaskellDepends = [
         base containers exceptions mtl prettyprinter template-haskell these
         transformers
       ];
       doCheck = false;
       homepage = "https://github.com/nikita-volkov/refined";
       description = "Refinement types with static and runtime checking";
       license = stdenv.lib.licenses.mit;
     }) {};
  "reflection" = callPackage
    ({ mkDerivation, base, template-haskell }:
     mkDerivation {
       pname = "reflection";
       version = "2.1.4";
       sha256 = "0kf4a5ijw6jfnfibjcrpdy9vzh1n6v2pxia8dhyyqdissiwc8bzj";
       libraryHaskellDepends = [ base template-haskell ];
       homepage = "http://github.com/ekmett/reflection";
       description = "Reifies arbitrary terms into types that can be reflected back into terms";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "regex" = callPackage
    ({ mkDerivation, array, base, base-compat, bytestring, containers
     , hashable, regex-base, regex-pcre-builtin, regex-tdfa
     , regex-tdfa-text, template-haskell, text, time, time-locale-compat
     , transformers, unordered-containers, utf8-string
     }:
     mkDerivation {
       pname = "regex";
       version = "1.0.2.0";
       sha256 = "1f2z025hif1fr24b5khq3qxxyvpxrnhyx8xmbms332arw28rpkda";
       libraryHaskellDepends = [
         array base base-compat bytestring containers hashable regex-base
         regex-pcre-builtin regex-tdfa regex-tdfa-text template-haskell text
         time time-locale-compat transformers unordered-containers
         utf8-string
       ];
       homepage = "http://regex.uk";
       description = "Toolkit for regex-base";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "regex-applicative" = callPackage
    ({ mkDerivation, base, containers, smallcheck, tasty, tasty-hunit
     , tasty-smallcheck, transformers
     }:
     mkDerivation {
       pname = "regex-applicative";
       version = "0.3.3";
       sha256 = "1riv7jqf26lbv4rm54sd6mrx8xdh4dvh4xbzymzdfdw13k6a4nb6";
       libraryHaskellDepends = [ base containers transformers ];
       testHaskellDepends = [
         base containers smallcheck tasty tasty-hunit tasty-smallcheck
         transformers
       ];
       homepage = "https://github.com/feuerbach/regex-applicative";
       description = "Regex-based parsing with applicative interface";
       license = stdenv.lib.licenses.mit;
     }) {};
  "regex-applicative-text" = callPackage
    ({ mkDerivation, base, regex-applicative, text }:
     mkDerivation {
       pname = "regex-applicative-text";
       version = "0.1.0.1";
       sha256 = "1ng2qhk4mvpzl8fx91ig7ldv09v9aqdsvn6yl9yjapc6h0ghb4xh";
       revision = "3";
       editedCabalFile = "1h911harqgfgkhdr22cndj2fdsl48sqhn8q0akgjngpf3p8z0bvv";
       libraryHaskellDepends = [ base regex-applicative text ];
       homepage = "https://github.com/phadej/regex-applicative-text#readme";
       description = "regex-applicative on text";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "regex-base" = callPackage
    ({ mkDerivation, array, base, bytestring, containers, mtl }:
     mkDerivation {
       pname = "regex-base";
       version = "0.93.2";
       sha256 = "0y1j4h2pg12c853nzmczs263di7xkkmlnsq5dlp5wgbgl49mgp10";
       libraryHaskellDepends = [ array base bytestring containers mtl ];
       homepage = "http://sourceforge.net/projects/lazy-regex";
       description = "Replaces/Enhances Text.Regex";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "regex-compat" = callPackage
    ({ mkDerivation, array, base, regex-base, regex-posix }:
     mkDerivation {
       pname = "regex-compat";
       version = "0.95.1";
       sha256 = "0fwmima3f04p9y4h3c23493n1xj629ia2dxaisqm6rynljjv2z6m";
       libraryHaskellDepends = [ array base regex-base regex-posix ];
       homepage = "http://sourceforge.net/projects/lazy-regex";
       description = "Replaces/Enhances Text.Regex";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "regex-compat-tdfa" = callPackage
    ({ mkDerivation, array, base, regex-base, regex-tdfa }:
     mkDerivation {
       pname = "regex-compat-tdfa";
       version = "0.95.1.4";
       sha256 = "1p90fn90yhp7fvljjdqjp41cszidcfz4pw7fwvzyx4739b98x8sg";
       libraryHaskellDepends = [ array base regex-base regex-tdfa ];
       homepage = "http://hub.darcs.net/shelarcy/regex-compat-tdfa";
       description = "Unicode Support version of Text.Regex, using regex-tdfa";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "regex-pcre" = callPackage
    ({ mkDerivation, array, base, bytestring, containers, pcre
     , regex-base
     }:
     mkDerivation {
       pname = "regex-pcre";
       version = "0.94.4";
       sha256 = "1h16w994g9s62iwkdqa7bar2n9cfixmkzz2rm8svm960qr57valf";
       libraryHaskellDepends = [
         array base bytestring containers regex-base
       ];
       librarySystemDepends = [ pcre ];
       homepage = "http://hackage.haskell.org/package/regex-pcre";
       description = "Replaces/Enhances Text.Regex";
       license = stdenv.lib.licenses.bsd3;
     }) {inherit (pkgs) pcre;};
  "regex-pcre-builtin" = callPackage
    ({ mkDerivation, array, base, bytestring, containers, regex-base }:
     mkDerivation {
       pname = "regex-pcre-builtin";
       version = "0.94.4.8.8.35";
       sha256 = "0y7as9wqlkykpipka2cfdhmcnin345q01pp0wsva8fwmvsavdl8b";
       libraryHaskellDepends = [
         array base bytestring containers regex-base
       ];
       homepage = "http://hackage.haskell.org/package/regex-pcre";
       description = "Replaces/Enhances Text.Regex";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "regex-pcre-text" = callPackage
    ({ mkDerivation, array, base, bytestring, regex-base
     , regex-pcre-builtin, regex-tdfa-text, text
     }:
     mkDerivation {
       pname = "regex-pcre-text";
       version = "0.94.0.1";
       sha256 = "1gg9v3q05j2wdp93iragg7y5414ydz0zmkm0xyrcz98dn3bix68p";
       libraryHaskellDepends = [
         array base bytestring regex-base regex-pcre-builtin regex-tdfa-text
         text
       ];
       homepage = "https://github.com/cdornan/regex-pcre-text";
       description = "Text-based PCRE API for regex-base";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "regex-posix" = callPackage
    ({ mkDerivation, array, base, bytestring, containers, regex-base }:
     mkDerivation {
       pname = "regex-posix";
       version = "0.95.2";
       sha256 = "0gkhzhj8nvfn1ija31c7xnl6p0gadwii9ihyp219ck2arlhrj0an";
       libraryHaskellDepends = [
         array base bytestring containers regex-base
       ];
       homepage = "http://sourceforge.net/projects/lazy-regex";
       description = "Replaces/Enhances Text.Regex";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "regex-tdfa" = callPackage
    ({ mkDerivation, array, base, bytestring, containers, ghc-prim, mtl
     , parsec, regex-base
     }:
     mkDerivation {
       pname = "regex-tdfa";
       version = "1.2.3.1";
       sha256 = "0l7ajnh4hpgggf2a1r9dg0hx2fy679vd2kada5y7r02hy3nfxala";
       libraryHaskellDepends = [
         array base bytestring containers ghc-prim mtl parsec regex-base
       ];
       homepage = "https://github.com/ChrisKuklewicz/regex-tdfa";
       description = "Replaces/Enhances Text.Regex";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "regex-tdfa-text" = callPackage
    ({ mkDerivation, array, base, regex-base, regex-tdfa, text }:
     mkDerivation {
       pname = "regex-tdfa-text";
       version = "1.0.0.3";
       sha256 = "0090g6lgbdm9lywpqm2d3724nnnh24nx3vnlqr96qc2w486pmmrq";
       libraryHaskellDepends = [ array base regex-base regex-tdfa text ];
       description = "Text interface for regex-tdfa";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "regex-with-pcre" = callPackage
    ({ mkDerivation, base, base-compat, bytestring, containers, regex
     , regex-base, regex-pcre-builtin, regex-pcre-text, regex-tdfa
     , template-haskell, text, transformers, unordered-containers
     }:
     mkDerivation {
       pname = "regex-with-pcre";
       version = "1.0.2.0";
       sha256 = "19vn5w4vhgxv9s6nhlmj4xl8pa16d1a2ygxxyd5b0qg3q27vvisk";
       libraryHaskellDepends = [
         base base-compat bytestring containers regex regex-base
         regex-pcre-builtin regex-pcre-text regex-tdfa template-haskell text
         transformers unordered-containers
       ];
       homepage = "http://regex.uk";
       description = "Toolkit for regex-base";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "reinterpret-cast" = callPackage
    ({ mkDerivation, array, base, criterion, data-binary-ieee754, hspec
     , loop
     }:
     mkDerivation {
       pname = "reinterpret-cast";
       version = "0.1.0";
       sha256 = "1r2k2fyfm5lknfdfs282l274bgaxf4j4dikk4hpwchjbj0n64m2n";
       libraryHaskellDepends = [ array base ];
       testHaskellDepends = [ base data-binary-ieee754 hspec loop ];
       benchmarkHaskellDepends = [ base criterion data-binary-ieee754 ];
       homepage = "https://github.com/nh2/reinterpret-cast";
       description = "Memory reinterpretation casts for Float/Double and Word32/Word64";
       license = stdenv.lib.licenses.mit;
     }) {};
  "relational-query" = callPackage
    ({ mkDerivation, array, base, bytestring, containers, dlist
     , names-th, persistable-record, product-isomorphic
     , quickcheck-simple, sql-words, template-haskell, text
     , th-reify-compat, time, time-locale-compat, transformers
     }:
     mkDerivation {
       pname = "relational-query";
       version = "0.12.1.0";
       sha256 = "1mdd3lh4kpqaa7l0aqnsnwgi95hbwh9p8dx61js8011wl50j9l9k";
       libraryHaskellDepends = [
         array base bytestring containers dlist names-th persistable-record
         product-isomorphic sql-words template-haskell text th-reify-compat
         time time-locale-compat transformers
       ];
       testHaskellDepends = [
         base containers product-isomorphic quickcheck-simple transformers
       ];
       homepage = "http://khibino.github.io/haskell-relational-record/";
       description = "Typeful, Modular, Relational, algebraic query engine";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "relational-query-HDBC" = callPackage
    ({ mkDerivation, base, containers, convertible, dlist, HDBC
     , HDBC-session, names-th, persistable-record, product-isomorphic
     , QuickCheck, quickcheck-simple, relational-query
     , relational-schemas, sql-words, template-haskell, th-data-compat
     , transformers
     }:
     mkDerivation {
       pname = "relational-query-HDBC";
       version = "0.7.1.1";
       sha256 = "0lgzkqx4nhvwrrgdrr423d4yyadf6x8l664030l2xi4zrxjws2mk";
       libraryHaskellDepends = [
         base containers convertible dlist HDBC HDBC-session names-th
         persistable-record product-isomorphic relational-query
         relational-schemas sql-words template-haskell th-data-compat
         transformers
       ];
       testHaskellDepends = [
         base convertible HDBC QuickCheck quickcheck-simple
       ];
       homepage = "http://khibino.github.io/haskell-relational-record/";
       description = "HDBC instance of relational-query and typed query interface for HDBC";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "relational-record" = callPackage
    ({ mkDerivation, base, persistable-record
     , persistable-types-HDBC-pg, product-isomorphic, relational-query
     , relational-query-HDBC
     }:
     mkDerivation {
       pname = "relational-record";
       version = "0.2.2.0";
       sha256 = "1nmkjq5jrs38d0mmdpy8ygkjncg3j5yjbkcv7mxrm8wlqdijdg8b";
       libraryHaskellDepends = [
         base persistable-record persistable-types-HDBC-pg
         product-isomorphic relational-query relational-query-HDBC
       ];
       homepage = "http://khibino.github.io/haskell-relational-record/";
       description = "Meta package of Relational Record";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "relational-schemas" = callPackage
    ({ mkDerivation, base, bytestring, containers, relational-query
     , template-haskell, time
     }:
     mkDerivation {
       pname = "relational-schemas";
       version = "0.1.6.2";
       sha256 = "1c578lz7k06clwn92wi3xl20imn8ddivqblxn0vqrnn5hfkfy8jm";
       libraryHaskellDepends = [
         base bytestring containers relational-query template-haskell time
       ];
       homepage = "http://khibino.github.io/haskell-relational-record/";
       description = "RDBMSs' schema templates for relational-query";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "relude" = callPackage
    ({ mkDerivation, base, bytestring, containers, deepseq, doctest
     , gauge, ghc-prim, Glob, hashable, hedgehog, mtl, stm, tasty
     , tasty-hedgehog, text, transformers, unordered-containers
     , utf8-string
     }:
     mkDerivation {
       pname = "relude";
       version = "0.1.1";
       sha256 = "034hldd9rsqqhhxmnpfabh6v2by47qc5kx1qv77bl8k73fybf9a0";
       revision = "1";
       editedCabalFile = "18vil2wa8xzpf0y5r5zdfylsqmphlappzc7a2ac9lmxngfkbzwyc";
       libraryHaskellDepends = [
         base bytestring containers deepseq ghc-prim hashable mtl stm text
         transformers unordered-containers utf8-string
       ];
       testHaskellDepends = [
         base bytestring doctest Glob hedgehog tasty tasty-hedgehog text
         utf8-string
       ];
       benchmarkHaskellDepends = [
         base containers gauge unordered-containers
       ];
       homepage = "https://github.com/kowainik/relude";
       description = "Custom prelude from Kowainik";
       license = stdenv.lib.licenses.mit;
     }) {};
  "renderable" = callPackage
    ({ mkDerivation, base, containers, hashable, transformers }:
     mkDerivation {
       pname = "renderable";
       version = "0.2.0.1";
       sha256 = "1idn0jg74wm3ksy5n4jk2dzsij64r1byghr6qc03g4d85n6mmsni";
       libraryHaskellDepends = [ base containers hashable transformers ];
       homepage = "https://github.com/schell/renderable";
       description = "An API for managing renderable resources";
       license = stdenv.lib.licenses.mit;
     }) {};
  "repa" = callPackage
    ({ mkDerivation, base, bytestring, ghc-prim, QuickCheck
     , template-haskell, vector
     }:
     mkDerivation {
       pname = "repa";
       version = "3.4.1.4";
       sha256 = "17m3wl4hvf04fxwm4fflhnv41yl9bm263hnbpxc8x6xqwifplq23";
       revision = "1";
       editedCabalFile = "1c5rf3ky5lw9q1ji2y37m721gs7m5liw3j84159ib0w0bb3ddzmi";
       libraryHaskellDepends = [
         base bytestring ghc-prim QuickCheck template-haskell vector
       ];
       homepage = "http://repa.ouroborus.net";
       description = "High performance, regular, shape polymorphic parallel arrays";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "repline" = callPackage
    ({ mkDerivation, base, containers, haskeline, mtl, process }:
     mkDerivation {
       pname = "repline";
       version = "0.1.7.0";
       sha256 = "1pjmkr5lnc6vdy8g90wnxlh1rzq6f3sc0j1facfc42iqi9fh6fjh";
       libraryHaskellDepends = [ base containers haskeline mtl process ];
       homepage = "https://github.com/sdiehl/repline";
       description = "Haskeline wrapper for GHCi-like REPL interfaces";
       license = stdenv.lib.licenses.mit;
     }) {};
  "req" = callPackage
    ({ mkDerivation, aeson, authenticate-oauth, base, blaze-builder
     , bytestring, case-insensitive, connection, data-default-class
     , hspec, hspec-core, hspec-discover, http-api-data, http-client
     , http-client-tls, http-types, monad-control, mtl, QuickCheck
     , retry, text, time, transformers, transformers-base
     , unordered-containers
     }:
     mkDerivation {
       pname = "req";
       version = "1.1.0";
       sha256 = "08jfq1fsqd57l7csw4fg22wppq06wddh8qxxms5z6bay55nqikc7";
       revision = "1";
       editedCabalFile = "1qb458sldda1msrx8hyp31a5ybny2kdymsxhmsyk9i9c5gk0qqib";
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [
         aeson authenticate-oauth base blaze-builder bytestring
         case-insensitive connection data-default-class http-api-data
         http-client http-client-tls http-types monad-control mtl retry text
         time transformers transformers-base
       ];
       testHaskellDepends = [
         aeson base blaze-builder bytestring case-insensitive
         data-default-class hspec hspec-core http-client http-types
         monad-control mtl QuickCheck text time unordered-containers
       ];
       testToolDepends = [ hspec-discover ];
       homepage = "https://github.com/mrkkrp/req";
       description = "Easy-to-use, type-safe, expandable, high-level HTTP client library";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "req-conduit" = callPackage
    ({ mkDerivation, base, bytestring, conduit, conduit-extra, hspec
     , http-client, req, resourcet, temporary, transformers, weigh
     }:
     mkDerivation {
       pname = "req-conduit";
       version = "1.0.0";
       sha256 = "193bv4jp7rrbpb1i9as9s2l978wz5kbz5kvr7ppllif5ppj699qx";
       revision = "3";
       editedCabalFile = "1gnaq7ya4grjwadz58r9g10dybgg50ch89bhbnhyicdins2aa9b2";
       libraryHaskellDepends = [
         base bytestring conduit http-client req resourcet transformers
       ];
       testHaskellDepends = [
         base bytestring conduit conduit-extra hspec req resourcet temporary
         transformers
       ];
       benchmarkHaskellDepends = [
         base bytestring conduit conduit-extra req resourcet temporary weigh
       ];
       homepage = "https://github.com/mrkkrp/req-conduit";
       description = "Conduit helpers for the req HTTP client library";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "req-url-extra" = callPackage
    ({ mkDerivation, aeson, base, data-default-class, hspec, modern-uri
     , req, text
     }:
     mkDerivation {
       pname = "req-url-extra";
       version = "0.1.0.0";
       sha256 = "113xsf37kra3k3jhf2wh37rsgphxz24rsn3dy8zw1cwzsim2dpmk";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [ base modern-uri req ];
       executableHaskellDepends = [
         aeson base data-default-class modern-uri req text
       ];
       testHaskellDepends = [ base hspec modern-uri req ];
       homepage = "https://github.com/rcook/req-url-extra#readme";
       description = "Provides URI/URL helper functions for use with Req";
       license = stdenv.lib.licenses.mit;
     }) {};
  "require" = callPackage
    ({ mkDerivation, base, bytestring, criterion, megaparsec, tasty
     , tasty-hspec, text, universum
     }:
     mkDerivation {
       pname = "require";
       version = "0.2.1";
       sha256 = "0cf19mcjmqn50gz2fc32b67s8za6bb7i2k0h6sj25b457xv9rdx2";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         base bytestring megaparsec text universum
       ];
       executableHaskellDepends = [
         base bytestring megaparsec text universum
       ];
       testHaskellDepends = [
         base bytestring megaparsec tasty tasty-hspec text universum
       ];
       benchmarkHaskellDepends = [
         base bytestring criterion megaparsec text universum
       ];
       homepage = "https://github.com/theam/require#readme";
       description = "Scrap your qualified import clutter";
       license = stdenv.lib.licenses.asl20;
     }) {};
  "reroute" = callPackage
    ({ mkDerivation, base, criterion, deepseq, graph-core, hashable
     , hspec, http-api-data, hvect, mtl, random, regex-compat, text
     , unordered-containers, vector
     }:
     mkDerivation {
       pname = "reroute";
       version = "0.5.0.0";
       sha256 = "1wl7g4z37rwghckwpi34qgg5b3rdy9h1zyf8dcgrm6hdfaabp65r";
       libraryHaskellDepends = [
         base deepseq hashable http-api-data hvect mtl text
         unordered-containers
       ];
       testHaskellDepends = [
         base hspec hvect mtl text unordered-containers vector
       ];
       benchmarkHaskellDepends = [
         base criterion deepseq graph-core hashable http-api-data hvect mtl
         random regex-compat text unordered-containers vector
       ];
       homepage = "http://github.com/agrafix/Spock";
       description = "abstract implementation of typed and untyped web routing";
       license = stdenv.lib.licenses.mit;
     }) {};
  "resolv" = callPackage
    ({ mkDerivation, base, base16-bytestring, binary, bytestring
     , containers
     }:
     mkDerivation {
       pname = "resolv";
       version = "0.1.1.2";
       sha256 = "0wczdy3vmpfcfwjn1m95bygc5d83m97xxmavhdvy5ayn8c402fp4";
       libraryHaskellDepends = [
         base base16-bytestring binary bytestring containers
       ];
       doCheck = false;
       description = "Domain Name Service (DNS) lookup via the libresolv standard library routines";
       license = stdenv.lib.licenses.gpl2;
     }) {};
  "resource-pool" = callPackage
    ({ mkDerivation, base, hashable, monad-control, stm, time
     , transformers, transformers-base, vector
     }:
     mkDerivation {
       pname = "resource-pool";
       version = "0.2.3.2";
       sha256 = "04mw8b9djb14zp4rdi6h7mc3zizh597ffiinfbr4m0m8psifw9w6";
       libraryHaskellDepends = [
         base hashable monad-control stm time transformers transformers-base
         vector
       ];
       homepage = "http://github.com/bos/pool";
       description = "A high-performance striped resource pooling implementation";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "resourcet" = callPackage
    ({ mkDerivation, base, containers, exceptions, hspec, mtl
     , primitive, transformers, unliftio-core
     }:
     mkDerivation {
       pname = "resourcet";
       version = "1.2.2";
       sha256 = "1rfbfcv3r1h29y0yqr3x6a1s04lbc3vzm3jqnfg4f9rqp9d448qk";
       libraryHaskellDepends = [
         base containers exceptions mtl primitive transformers unliftio-core
       ];
       testHaskellDepends = [ base exceptions hspec transformers ];
       homepage = "http://github.com/snoyberg/conduit";
       description = "Deterministic allocation and freeing of scarce resources";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "rest-stringmap" = callPackage
    ({ mkDerivation, aeson, base, containers, hashable, hxt
     , json-schema, tostring, unordered-containers
     }:
     mkDerivation {
       pname = "rest-stringmap";
       version = "0.2.0.7";
       sha256 = "0l2l46c1mqpxq7hi37vjhaihfyapifjaxbzyi1bdhjkybx7n9m32";
       libraryHaskellDepends = [
         aeson base containers hashable hxt json-schema tostring
         unordered-containers
       ];
       description = "Maps with stringy keys that can be transcoded to JSON and XML";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "result" = callPackage
    ({ mkDerivation, base, bifunctors, keys, mtl, transformers }:
     mkDerivation {
       pname = "result";
       version = "0.2.6.0";
       sha256 = "1ibqc5h2vxy4h3sn94jxmjk099fkainnyd2y457g4ldqv9ydj9pm";
       libraryHaskellDepends = [ base bifunctors keys mtl transformers ];
       testHaskellDepends = [ base ];
       homepage = "https://github.com/srijs/haskell-result";
       description = "Encode success or at least one error";
       license = stdenv.lib.licenses.mit;
     }) {};
  "rethinkdb-client-driver" = callPackage
    ({ mkDerivation, aeson, base, binary, bytestring, containers
     , criterion, hashable, hspec, hspec-smallcheck, mtl, network
     , old-locale, scientific, smallcheck, stm, template-haskell, text
     , time, unordered-containers, vector
     }:
     mkDerivation {
       pname = "rethinkdb-client-driver";
       version = "0.0.25";
       sha256 = "15l9z7ki81cv97lajxcbddavbd254c5adcdi8yw6df31rmbc378g";
       revision = "3";
       editedCabalFile = "1g4shgl944fd3qbqkd68jv6vh65plaivci4vjzfs4py7a2p62db1";
       libraryHaskellDepends = [
         aeson base binary bytestring containers hashable mtl network
         old-locale scientific stm template-haskell text time
         unordered-containers vector
       ];
       testHaskellDepends = [
         base hspec hspec-smallcheck smallcheck text time
         unordered-containers vector
       ];
       benchmarkHaskellDepends = [
         base criterion text time unordered-containers vector
       ];
       doCheck = false;
       homepage = "https://github.com/wereHamster/rethinkdb-client-driver";
       description = "Client driver for RethinkDB";
       license = stdenv.lib.licenses.mit;
     }) {};
  "retry" = callPackage
    ({ mkDerivation, base, data-default-class, exceptions, ghc-prim
     , hedgehog, HUnit, mtl, random, stm, tasty, tasty-hedgehog
     , tasty-hunit, time, transformers
     }:
     mkDerivation {
       pname = "retry";
       version = "0.7.7.0";
       sha256 = "0v6irf01xykhv0mwr1k5i08jn77irqbz8h116j8p435d11xc5jrw";
       libraryHaskellDepends = [
         base data-default-class exceptions ghc-prim random transformers
       ];
       testHaskellDepends = [
         base data-default-class exceptions ghc-prim hedgehog HUnit mtl
         random stm tasty tasty-hedgehog tasty-hunit time transformers
       ];
       homepage = "http://github.com/Soostone/retry";
       description = "Retry combinators for monadic actions that may fail";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "rev-state" = callPackage
    ({ mkDerivation, base, mtl }:
     mkDerivation {
       pname = "rev-state";
       version = "0.1.2";
       sha256 = "06gry2ysvdg5q0b86gr8i86xsbxw2yrnld9g7rcp7mppswwhw1zf";
       revision = "2";
       editedCabalFile = "0dfiwf4808vjhayv7xr058rzwl6jmsmhzy03mk48m9kmlqibk3fy";
       libraryHaskellDepends = [ base mtl ];
       testHaskellDepends = [ base ];
       homepage = "https://github.com/DanBurton/rev-state#readme";
       description = "Reverse State monad transformer";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "rfc5051" = callPackage
    ({ mkDerivation, base, bytestring, containers }:
     mkDerivation {
       pname = "rfc5051";
       version = "0.1.0.4";
       sha256 = "1lxkq414ni986ciml4gbvf463fn55z299knky7pq3ixb1qislpb1";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [ base bytestring containers ];
       description = "Simple unicode collation as per RFC5051";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "rhine" = callPackage
    ({ mkDerivation, base, containers, dunai, free, time, transformers
     }:
     mkDerivation {
       pname = "rhine";
       version = "0.4.0.1";
       sha256 = "00xmq61bgq84z8kvnjrh30zffm4q108gbxbndfkl6v63jl0346yj";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         base containers dunai free time transformers
       ];
       executableHaskellDepends = [ base ];
       description = "Functional Reactive Programming with type-level clocks";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "riak" = callPackage
    ({ mkDerivation, aeson, async, attoparsec, base, bifunctors, binary
     , blaze-builder, bytestring, containers, criterion
     , data-default-class, deepseq, enclosed-exceptions, exceptions
     , hashable, HUnit, mersenne-random-pure64, monad-control, mtl
     , network, process, protocol-buffers, pureMD5, QuickCheck, random
     , resource-pool, riak-protobuf, semigroups, stm, tasty, tasty-hunit
     , tasty-quickcheck, template-haskell, text, time, transformers
     , transformers-base, unordered-containers, vector, yaml
     }:
     mkDerivation {
       pname = "riak";
       version = "1.1.2.5";
       sha256 = "1ln7qm6rl8nr4fc1109pk0jmnqhw4dm3q2jfmvd4a34whplzwln7";
       libraryHaskellDepends = [
         aeson async attoparsec base bifunctors binary blaze-builder
         bytestring containers data-default-class deepseq
         enclosed-exceptions exceptions hashable mersenne-random-pure64
         monad-control network protocol-buffers pureMD5 random resource-pool
         riak-protobuf semigroups stm text time transformers
         transformers-base unordered-containers vector
       ];
       testHaskellDepends = [
         aeson base bytestring containers data-default-class HUnit mtl
         process QuickCheck riak-protobuf semigroups tasty tasty-hunit
         tasty-quickcheck template-haskell text yaml
       ];
       benchmarkHaskellDepends = [ base bytestring criterion semigroups ];
       doCheck = false;
       homepage = "http://github.com/riak-haskell-client/riak-haskell-client";
       description = "A Haskell client for the Riak decentralized data store";
       license = "unknown";
       hydraPlatforms = stdenv.lib.platforms.none;
     }) {};
  "riak-protobuf" = callPackage
    ({ mkDerivation, array, base, parsec, protocol-buffers
     , protocol-buffers-descriptor
     }:
     mkDerivation {
       pname = "riak-protobuf";
       version = "0.23.0.0";
       sha256 = "0cyarnp2yqlj98zdbd51krpz3ls75vcl8am6h4wf98b6vdmx1jsx";
       libraryHaskellDepends = [
         array base parsec protocol-buffers protocol-buffers-descriptor
       ];
       homepage = "http://github.com/riak-haskell-client/riak-haskell-client";
       description = "Haskell types for the Riak protocol buffer API";
       license = "unknown";
       hydraPlatforms = stdenv.lib.platforms.none;
     }) {};
  "rio" = callPackage
    ({ mkDerivation, base, bytestring, containers, deepseq, directory
     , exceptions, filepath, hashable, hspec, microlens, mtl, primitive
     , process, text, time, typed-process, unix, unliftio
     , unordered-containers, vector
     }:
     mkDerivation {
       pname = "rio";
       version = "0.1.7.0";
       sha256 = "1caxnqz0afbvs9pm4vrap2jmickf24l4bjqbmxlyvvvjla0wq8zc";
       libraryHaskellDepends = [
         base bytestring containers deepseq directory exceptions filepath
         hashable microlens mtl primitive process text time typed-process
         unix unliftio unordered-containers vector
       ];
       testHaskellDepends = [
         base bytestring containers deepseq directory exceptions filepath
         hashable hspec microlens mtl primitive process text time
         typed-process unix unliftio unordered-containers vector
       ];
       homepage = "https://github.com/commercialhaskell/rio#readme";
       description = "A standard library for Haskell";
       license = stdenv.lib.licenses.mit;
     }) {};
  "rio-orphans" = callPackage
    ({ mkDerivation, base, exceptions, fast-logger, hspec
     , monad-control, monad-logger, resourcet, rio, transformers-base
     }:
     mkDerivation {
       pname = "rio-orphans";
       version = "0.1.1.0";
       sha256 = "0klbshdsv3gq3l7g1d6gq2wxdqjlqxbnwk1lbg5dpbz7yrnjr3by";
       libraryHaskellDepends = [
         base exceptions fast-logger monad-control monad-logger resourcet
         rio transformers-base
       ];
       testHaskellDepends = [
         base exceptions fast-logger hspec monad-control monad-logger
         resourcet rio transformers-base
       ];
       homepage = "https://github.com/commercialhaskell/rio#readme";
       description = "Orphan instances for the RIO type in the rio package";
       license = stdenv.lib.licenses.mit;
     }) {};
  "rng-utils" = callPackage
    ({ mkDerivation, base, bytestring, criterion, hedgehog, random
     , tasty, tasty-hedgehog
     }:
     mkDerivation {
       pname = "rng-utils";
       version = "0.3.0";
       sha256 = "1fj6x5ihjsbw1cypdifccv2nkbx5gvax9aclypanlv5fw2qsr1h8";
       libraryHaskellDepends = [ base bytestring random ];
       testHaskellDepends = [
         base bytestring hedgehog tasty tasty-hedgehog
       ];
       benchmarkHaskellDepends = [ base criterion ];
       homepage = "https://bitbucket.org/soostone/rng-utils";
       description = "RNG within an IORef for convenient concurrent use";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "roles" = callPackage
    ({ mkDerivation, base, containers }:
     mkDerivation {
       pname = "roles";
       version = "0.2.0.0";
       sha256 = "181lmjmvv6285q5zh6cf991jw7d6f0g225vya3iqqb8vn8qjz7g2";
       libraryHaskellDepends = [ base containers ];
       homepage = "http://github.com/matt-noonan/roles/";
       description = "Composable class-based roles";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "rosezipper" = callPackage
    ({ mkDerivation, base, containers }:
     mkDerivation {
       pname = "rosezipper";
       version = "0.2";
       sha256 = "1g6ppa8cappdbq9923lsac504dfjh0ks64gbm6qbihrc34f4zavc";
       libraryHaskellDepends = [ base containers ];
       description = "Generic zipper implementation for Data.Tree";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "rot13" = callPackage
    ({ mkDerivation, base, bytestring, hspec, QuickCheck, text }:
     mkDerivation {
       pname = "rot13";
       version = "0.2.0.1";
       sha256 = "1p6lrjgigzbjigsyfsmx3kxrzm1aws3i708yl4xyh73arhcd89p0";
       libraryHaskellDepends = [ base bytestring text ];
       testHaskellDepends = [ base bytestring hspec QuickCheck text ];
       homepage = "https://github.com/kvanberendonck/codec-rot13";
       description = "Fast ROT13 cipher for Haskell";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "rounded" = callPackage
    ({ mkDerivation, base, ghc-prim, gmp, hgmp, long-double, mpfr
     , reflection, singletons
     }:
     mkDerivation {
       pname = "rounded";
       version = "0.1.0.1";
       sha256 = "04abl192vq1xq7kf9fackcb17wjyxw4068fsks3pxm9dd4iymgls";
       libraryHaskellDepends = [
         base ghc-prim hgmp long-double reflection singletons
       ];
       librarySystemDepends = [ gmp mpfr ];
       testHaskellDepends = [ base long-double ];
       doCheck = false;
       homepage = "https://github.com/ekmett/rounded";
       description = "Correctly-rounded arbitrary-precision floating-point arithmetic";
       license = stdenv.lib.licenses.bsd3;
     }) {inherit (pkgs) gmp; inherit (pkgs) mpfr;};
  "rss-conduit" = callPackage
    ({ mkDerivation, atom-conduit, base, blaze-builder, bytestring
     , conduit, conduit-combinators, containers, data-default
     , dublincore-xml-conduit, lens-simple, mono-traversable, QuickCheck
     , quickcheck-instances, resourcet, safe, safe-exceptions
     , singletons, tasty, tasty-hunit, tasty-quickcheck, text, time
     , timerep, uri-bytestring, vinyl, xml-conduit, xml-types
     }:
     mkDerivation {
       pname = "rss-conduit";
       version = "0.4.2.2";
       sha256 = "1qaz3a9fjq5dqky6jvnnk68xbarrqng7bas9r10qzdpy7g1v17ps";
       revision = "3";
       editedCabalFile = "1fay2p90wx49b2yky0r6x70az3f0c1b2hwy3rzayza8am2i5r0bn";
       libraryHaskellDepends = [
         atom-conduit base conduit conduit-combinators containers
         dublincore-xml-conduit lens-simple safe safe-exceptions singletons
         text time timerep uri-bytestring vinyl xml-conduit xml-types
       ];
       testHaskellDepends = [
         atom-conduit base blaze-builder bytestring conduit
         conduit-combinators data-default dublincore-xml-conduit lens-simple
         mono-traversable QuickCheck quickcheck-instances resourcet
         safe-exceptions singletons tasty tasty-hunit tasty-quickcheck text
         time uri-bytestring vinyl xml-conduit xml-types
       ];
       description = "Streaming parser/renderer for the RSS standard";
       license = stdenv.lib.licenses.publicDomain;
     }) {};
  "runmemo" = callPackage
    ({ mkDerivation, base, data-memocombinators, time }:
     mkDerivation {
       pname = "runmemo";
       version = "1.0.0.1";
       sha256 = "12fn0lsil0rj0pj0ixzppsdw2fmj0cnzci4fh11z9rcggwbz6pms";
       testHaskellDepends = [ base data-memocombinators time ];
       homepage = "https://github.com/DanBurton/runmemo";
       description = "A simple memoization helper library";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "rvar" = callPackage
    ({ mkDerivation, base, MonadPrompt, mtl, random-source
     , transformers
     }:
     mkDerivation {
       pname = "rvar";
       version = "0.2.0.3";
       sha256 = "1h3bii1pamkv7656280i6zx7fpdwgbn2ysfijpd2s65szlpsz2np";
       libraryHaskellDepends = [
         base MonadPrompt mtl random-source transformers
       ];
       homepage = "https://github.com/mokus0/random-fu";
       description = "Random Variables";
       license = stdenv.lib.licenses.publicDomain;
     }) {};
  "s3-signer" = callPackage
    ({ mkDerivation, base, base64-bytestring, blaze-builder, byteable
     , bytestring, case-insensitive, cryptohash, http-types, time
     , utf8-string
     }:
     mkDerivation {
       pname = "s3-signer";
       version = "0.5.0.0";
       sha256 = "1r48j7ni8byzdi0girkj6lf2hp4q85ir2xnqpckzdxd0ppap2dnp";
       libraryHaskellDepends = [
         base base64-bytestring blaze-builder byteable bytestring
         case-insensitive cryptohash http-types time utf8-string
       ];
       doCheck = false;
       homepage = "https://github.com/dmjio/s3-signer";
       description = "Pre-signed Amazon S3 URLs";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "safe" = callPackage
    ({ mkDerivation, base, deepseq, QuickCheck }:
     mkDerivation {
       pname = "safe";
       version = "0.3.17";
       sha256 = "0p3yaf5slvyz1cyy51jq64c5rlp8yzwim8iy2dlnk42if4gc9ibr";
       libraryHaskellDepends = [ base ];
       testHaskellDepends = [ base deepseq QuickCheck ];
       homepage = "https://github.com/ndmitchell/safe#readme";
       description = "Library of safe (exception free) functions";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "safe-exceptions" = callPackage
    ({ mkDerivation, base, deepseq, exceptions, hspec, transformers
     , void
     }:
     mkDerivation {
       pname = "safe-exceptions";
       version = "0.1.7.0";
       sha256 = "0sd0zfsm9pcll5bzzj523rbn45adjrnavdkz52hgmdjjgdcdrk8q";
       revision = "4";
       editedCabalFile = "0fid41gishzsyb47wzxhd5falandfirqcp760hcja81qjpfmqd32";
       libraryHaskellDepends = [ base deepseq exceptions transformers ];
       testHaskellDepends = [ base hspec void ];
       homepage = "https://github.com/fpco/safe-exceptions#readme";
       description = "Safe, consistent, and easy exception handling";
       license = stdenv.lib.licenses.mit;
     }) {};
  "safe-exceptions-checked" = callPackage
    ({ mkDerivation, base, deepseq, hspec, safe-exceptions
     , transformers
     }:
     mkDerivation {
       pname = "safe-exceptions-checked";
       version = "0.1.0";
       sha256 = "0gyaq2pf87dqn0l6n3mi0qamf99y3zj5xxh513c0iqwdh8mma1yq";
       revision = "3";
       editedCabalFile = "004id0k46j545zvkldfcv5qjgxzl35brm9h6fq72y43b9hl2y55f";
       libraryHaskellDepends = [
         base deepseq safe-exceptions transformers
       ];
       testHaskellDepends = [ base hspec ];
       homepage = "https://github.com/mitchellwrosen/safe-exceptions-checked#readme";
       description = "Safe, checked exceptions";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "safe-foldable" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "safe-foldable";
       version = "0.1.0.0";
       sha256 = "1l87j0liv0hgdv3f3d4s4962df5q5xcyhmnfz2fj773r1v62wzya";
       libraryHaskellDepends = [ base ];
       homepage = "https://github.com/tejon/safe-foldable#readme";
       description = "Safe wrappers for null-partial Foldable operations";
       license = stdenv.lib.licenses.mit;
     }) {};
  "safe-money" = callPackage
    ({ mkDerivation, aeson, base, binary, bytestring, cereal
     , constraints, deepseq, hashable, store, tasty, tasty-hunit
     , tasty-quickcheck, text, vector-space, xmlbf
     }:
     mkDerivation {
       pname = "safe-money";
       version = "0.6";
       sha256 = "1l8gn9vscng92s1dkfj2fa55k63jnzcnw590r5a8n7dqwaycpz7r";
       configureFlags = [ "-f-serialise" ];
       libraryHaskellDepends = [
         aeson base binary cereal constraints deepseq hashable store text
         vector-space xmlbf
       ];
       testHaskellDepends = [
         aeson base binary bytestring cereal constraints deepseq hashable
         store tasty tasty-hunit tasty-quickcheck text vector-space xmlbf
       ];
       homepage = "https://github.com/k0001/safe-money";
       description = "Type-safe and lossless encoding and manipulation of money, fiat currencies, crypto currencies and precious metals";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "safecopy" = callPackage
    ({ mkDerivation, array, base, bytestring, cereal, containers, lens
     , lens-action, old-time, QuickCheck, quickcheck-instances, tasty
     , tasty-quickcheck, template-haskell, text, time, vector
     }:
     mkDerivation {
       pname = "safecopy";
       version = "0.9.4.3";
       sha256 = "020z2cdarpy8crz6b871lprgacwi6zsmmwml35ban93hdfjv2zbq";
       libraryHaskellDepends = [
         array base bytestring cereal containers old-time template-haskell
         text time vector
       ];
       testHaskellDepends = [
         array base cereal containers lens lens-action QuickCheck
         quickcheck-instances tasty tasty-quickcheck template-haskell time
         vector
       ];
       homepage = "https://github.com/acid-state/safecopy";
       description = "Binary serialization with version control";
       license = stdenv.lib.licenses.publicDomain;
     }) {};
  "safeio" = callPackage
    ({ mkDerivation, base, bytestring, conduit, conduit-combinators
     , directory, exceptions, filepath, HUnit, resourcet, test-framework
     , test-framework-hunit, test-framework-th, unix
     }:
     mkDerivation {
       pname = "safeio";
       version = "0.0.5.0";
       sha256 = "04g3070cbjdqj0h9l9ii6470xcbn40xfv4fr89a8yvnkdim9nyfm";
       libraryHaskellDepends = [
         base bytestring conduit conduit-combinators directory exceptions
         filepath resourcet unix
       ];
       testHaskellDepends = [
         base bytestring conduit conduit-combinators directory exceptions
         filepath HUnit resourcet test-framework test-framework-hunit
         test-framework-th unix
       ];
       homepage = "https://github.com/luispedro/safeio#readme";
       description = "Write output to disk atomically";
       license = stdenv.lib.licenses.mit;
     }) {};
  "saltine" = callPackage
    ({ mkDerivation, base, bytestring, libsodium, profunctors
     , QuickCheck, semigroups, test-framework
     , test-framework-quickcheck2
     }:
     mkDerivation {
       pname = "saltine";
       version = "0.1.0.2";
       sha256 = "0253m8n6s39fnr8wz1z240kaizw3chfm1fgwp51dgqgk0nwrv67x";
       libraryHaskellDepends = [ base bytestring profunctors ];
       libraryPkgconfigDepends = [ libsodium ];
       testHaskellDepends = [
         base bytestring QuickCheck semigroups test-framework
         test-framework-quickcheck2
       ];
       doCheck = false;
       description = "Cryptography that's easy to digest (NaCl/libsodium bindings)";
       license = stdenv.lib.licenses.mit;
     }) {inherit (pkgs) libsodium;};
  "salve" = callPackage
    ({ mkDerivation, base, doctest }:
     mkDerivation {
       pname = "salve";
       version = "1.0.6";
       sha256 = "1vgpj0yg27n6hw1gb763hgxv99hpq7511n2ihys0qdi0ri8bpj1j";
       libraryHaskellDepends = [ base ];
       testHaskellDepends = [ base doctest ];
       homepage = "https://github.com/tfausak/salve#readme";
       description = "Semantic version numbers and constraints";
       license = stdenv.lib.licenses.mit;
     }) {};
  "sample-frame" = callPackage
    ({ mkDerivation, base, QuickCheck, storable-record }:
     mkDerivation {
       pname = "sample-frame";
       version = "0.0.3";
       sha256 = "0ivj0bcnqqc805np62bdpvh8v4ykmw86ph5rp7k54bbv9wd31bsv";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [ base QuickCheck storable-record ];
       homepage = "http://www.haskell.org/haskellwiki/Synthesizer";
       description = "Handling of samples in an (audio) signal";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "sample-frame-np" = callPackage
    ({ mkDerivation, base, numeric-prelude, sample-frame }:
     mkDerivation {
       pname = "sample-frame-np";
       version = "0.0.4.1";
       sha256 = "091nz5w5511xl8hp2q8dfvs4jz15nkhz22rr97zga0vmn0hpdnxi";
       libraryHaskellDepends = [ base numeric-prelude sample-frame ];
       homepage = "http://www.haskell.org/haskellwiki/Synthesizer";
       description = "Orphan instances for types from sample-frame and numericprelude";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "sampling" = callPackage
    ({ mkDerivation, base, containers, criterion, foldl, mwc-random
     , primitive, vector
     }:
     mkDerivation {
       pname = "sampling";
       version = "0.3.3";
       sha256 = "038fl0mdim3r25jsj8bgvnmkd7iy00hpwbc0yqwijsqyss9xrgn8";
       revision = "1";
       editedCabalFile = "168k8ykppa8pikfxy1gmby63kfzr833vswh8wcchz8li9vkd4w2h";
       libraryHaskellDepends = [
         base containers foldl mwc-random primitive vector
       ];
       testHaskellDepends = [ base ];
       benchmarkHaskellDepends = [ base criterion ];
       homepage = "https://github.com/jtobin/sampling";
       description = "Sample values from collections";
       license = stdenv.lib.licenses.mit;
     }) {};
  "sandi" = callPackage
    ({ mkDerivation, base, bytestring, conduit, criterion, exceptions
     , tasty, tasty-hunit, tasty-quickcheck, tasty-th
     }:
     mkDerivation {
       pname = "sandi";
       version = "0.4.3";
       sha256 = "0ji1zn9nkh8rdm0m9zpxdnz5zw0q0qypzyp2k9fn6j9v08r17p3n";
       libraryHaskellDepends = [ base bytestring conduit exceptions ];
       testHaskellDepends = [
         base bytestring tasty tasty-hunit tasty-quickcheck tasty-th
       ];
       benchmarkHaskellDepends = [ base bytestring criterion ];
       description = "Data encoding library";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "sandman" = callPackage
    ({ mkDerivation, base, Cabal, containers, directory, filepath
     , optparse-applicative, process, text, unix-compat
     }:
     mkDerivation {
       pname = "sandman";
       version = "0.2.0.1";
       sha256 = "0r6f6xw1vzhbhlqi7knv9p0rlfdzhfb5db2vc5ls78n43wz2hza0";
       isLibrary = false;
       isExecutable = true;
       executableHaskellDepends = [
         base Cabal containers directory filepath optparse-applicative
         process text unix-compat
       ];
       doHaddock = false;
       homepage = "https://github.com/abhinav/sandman#readme";
       description = "Manages Cabal sandboxes to avoid rebuilding packages";
       license = stdenv.lib.licenses.mit;
     }) {};
  "say" = callPackage
    ({ mkDerivation, base, bytestring, gauge, hspec, text, transformers
     , unliftio
     }:
     mkDerivation {
       pname = "say";
       version = "0.1.0.1";
       sha256 = "1r5kffjfwpas45g74sip8glrj1m9nygrnxjm7xgw898rq9pnafgn";
       libraryHaskellDepends = [ base bytestring text transformers ];
       testHaskellDepends = [
         base bytestring hspec text transformers unliftio
       ];
       benchmarkHaskellDepends = [
         base bytestring gauge text transformers unliftio
       ];
       homepage = "https://github.com/fpco/say#readme";
       description = "Send textual messages to a Handle in a thread-friendly way";
       license = stdenv.lib.licenses.mit;
     }) {};
  "sbp" = callPackage
    ({ mkDerivation, aeson, array, base, base64-bytestring
     , basic-prelude, binary, binary-conduit, bytestring, conduit
     , conduit-extra, data-binary-ieee754, lens, lens-aeson, monad-loops
     , resourcet, tasty, tasty-hunit, template-haskell, text, time, yaml
     }:
     mkDerivation {
       pname = "sbp";
       version = "2.3.17";
       sha256 = "1zwxq0x9g2l2nkyhbsdgz42wsnr1skm99x3vhd7f7azx17kv3lg6";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         aeson array base base64-bytestring basic-prelude binary bytestring
         data-binary-ieee754 lens lens-aeson monad-loops template-haskell
         text
       ];
       executableHaskellDepends = [
         aeson base basic-prelude binary-conduit bytestring conduit
         conduit-extra resourcet time yaml
       ];
       testHaskellDepends = [ base basic-prelude tasty tasty-hunit ];
       homepage = "https://github.com/swift-nav/libsbp";
       description = "SwiftNav's SBP Library";
       license = stdenv.lib.licenses.lgpl3;
     }) {};
  "sbv" = callPackage
    ({ mkDerivation, array, async, base, bytestring, containers
     , crackNum, deepseq, directory, doctest, filepath, generic-deriving
     , ghc, Glob, hlint, mtl, pretty, process, QuickCheck, random
     , reinterpret-cast, syb, tasty, tasty-golden, tasty-hunit
     , tasty-quickcheck, template-haskell, time, z3
     }:
     mkDerivation {
       pname = "sbv";
       version = "7.12";
       sha256 = "1lbihjy2nbr77xm1jnvqdjqkabpxjlbdddsdvsr7n9a60bjcr2yx";
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [
         array async base containers crackNum deepseq directory filepath
         generic-deriving ghc mtl pretty process QuickCheck random
         reinterpret-cast syb template-haskell time
       ];
       testHaskellDepends = [
         base bytestring containers directory doctest filepath Glob hlint
         mtl QuickCheck random reinterpret-cast syb tasty tasty-golden
         tasty-hunit tasty-quickcheck template-haskell
       ];
       testSystemDepends = [ z3 ];
       homepage = "http://leventerkok.github.com/sbv/";
       description = "SMT Based Verification: Symbolic Haskell theorem prover using SMT solving";
       license = stdenv.lib.licenses.bsd3;
     }) {inherit (pkgs) z3;};
  "scalendar" = callPackage
    ({ mkDerivation, base, containers, hspec, QuickCheck, SCalendar
     , text, time
     }:
     mkDerivation {
       pname = "scalendar";
       version = "1.2.0";
       sha256 = "1b33w7fh9jfsr9wrdvnhc7nvn7km69f4qb03d0hb4zlylf6mxj7m";
       libraryHaskellDepends = [ base containers text time ];
       testHaskellDepends = [
         base containers hspec QuickCheck SCalendar text time
       ];
       homepage = "https://github.com/stackbuilders/scalendar";
       description = "A library for handling calendars and resource availability over time";
       license = stdenv.lib.licenses.mit;
     }) {};
  "scalpel" = callPackage
    ({ mkDerivation, base, bytestring, curl, data-default, scalpel-core
     , tagsoup, text
     }:
     mkDerivation {
       pname = "scalpel";
       version = "0.5.1";
       sha256 = "03cbc0yahs8pzp1jz0mvfnd9sl80zd3ql18l9xswm8kh6m1ndpr0";
       libraryHaskellDepends = [
         base bytestring curl data-default scalpel-core tagsoup text
       ];
       homepage = "https://github.com/fimad/scalpel";
       description = "A high level web scraping library for Haskell";
       license = stdenv.lib.licenses.asl20;
     }) {};
  "scalpel-core" = callPackage
    ({ mkDerivation, base, bytestring, containers, criterion
     , data-default, fail, HUnit, regex-base, regex-tdfa, tagsoup, text
     , vector
     }:
     mkDerivation {
       pname = "scalpel-core";
       version = "0.5.1";
       sha256 = "1a99wazrgpvnjzsjk5az61f54hvppdxrrp2487nzndxpadlbh1cc";
       libraryHaskellDepends = [
         base bytestring containers data-default fail regex-base regex-tdfa
         tagsoup text vector
       ];
       testHaskellDepends = [ base HUnit regex-base regex-tdfa tagsoup ];
       benchmarkHaskellDepends = [ base criterion tagsoup text ];
       homepage = "https://github.com/fimad/scalpel";
       description = "A high level web scraping library for Haskell";
       license = stdenv.lib.licenses.asl20;
     }) {};
  "scanner" = callPackage
    ({ mkDerivation, attoparsec, base, bytestring, cereal, criterion
     , hspec, text
     }:
     mkDerivation {
       pname = "scanner";
       version = "0.2";
       sha256 = "1sd5czkfncadyxlbr13is44ad3kkk6rfwm9fqw8m4aipl1l0s0is";
       libraryHaskellDepends = [ base bytestring ];
       testHaskellDepends = [ base bytestring hspec ];
       benchmarkHaskellDepends = [
         attoparsec base bytestring cereal criterion text
       ];
       homepage = "https://github.com/Yuras/scanner";
       description = "Fast non-backtracking incremental combinator parsing for bytestrings";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "scientific" = callPackage
    ({ mkDerivation, base, binary, bytestring, containers, criterion
     , deepseq, hashable, integer-gmp, integer-logarithms, primitive
     , QuickCheck, smallcheck, tasty, tasty-ant-xml, tasty-hunit
     , tasty-quickcheck, tasty-smallcheck, text
     }:
     mkDerivation {
       pname = "scientific";
       version = "0.3.6.2";
       sha256 = "03ql2f0ac8bsl524idy9xxa3kxisb2sj3avflzw580j5hzy0m397";
       libraryHaskellDepends = [
         base binary bytestring containers deepseq hashable integer-gmp
         integer-logarithms primitive text
       ];
       testHaskellDepends = [
         base binary bytestring QuickCheck smallcheck tasty tasty-ant-xml
         tasty-hunit tasty-quickcheck tasty-smallcheck text
       ];
       benchmarkHaskellDepends = [ base criterion ];
       homepage = "https://github.com/basvandijk/scientific";
       description = "Numbers represented using scientific notation";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "scotty" = callPackage
    ({ mkDerivation, aeson, async, base, blaze-builder, bytestring
     , case-insensitive, data-default-class, directory, exceptions, fail
     , hspec, hspec-discover, hspec-wai, http-types, lifted-base
     , monad-control, mtl, nats, network, regex-compat, text
     , transformers, transformers-base, transformers-compat, wai
     , wai-extra, warp
     }:
     mkDerivation {
       pname = "scotty";
       version = "0.11.2";
       sha256 = "18lxgnj05p4hk7pp4a84biz2dn387a5vxwzyh1kslns1bra6zn0x";
       revision = "1";
       editedCabalFile = "1h4fk7q8x7cvlqq4bbmdh465s6a8955bgchm121fvk08x7rm3yz3";
       configureFlags = [ "-f-hpc-coveralls" ];
       libraryHaskellDepends = [
         aeson base blaze-builder bytestring case-insensitive
         data-default-class exceptions fail http-types monad-control mtl
         nats network regex-compat text transformers transformers-base
         transformers-compat wai wai-extra warp
       ];
       testHaskellDepends = [
         async base bytestring data-default-class directory hspec hspec-wai
         http-types lifted-base network text wai
       ];
       testToolDepends = [ hspec-discover ];
       homepage = "https://github.com/scotty-web/scotty";
       description = "Haskell web framework inspired by Ruby's Sinatra, using WAI and Warp";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "scrypt" = callPackage
    ({ mkDerivation, base, base64-bytestring, bytestring, entropy
     , HUnit, QuickCheck, test-framework, test-framework-hunit
     , test-framework-quickcheck2
     }:
     mkDerivation {
       pname = "scrypt";
       version = "0.5.0";
       sha256 = "1cnrjdq1ncv224dlk236a7w29na8r019d2acrsxlsaiy74iadh1y";
       libraryHaskellDepends = [
         base base64-bytestring bytestring entropy
       ];
       testHaskellDepends = [
         base bytestring HUnit QuickCheck test-framework
         test-framework-hunit test-framework-quickcheck2
       ];
       homepage = "http://github.com/informatikr/scrypt";
       description = "Stronger password hashing via sequential memory-hard functions";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "sdl2" = callPackage
    ({ mkDerivation, base, bytestring, deepseq, exceptions, linear
     , SDL2, StateVar, text, transformers, vector, weigh
     }:
     mkDerivation {
       pname = "sdl2";
       version = "2.4.1.0";
       sha256 = "0p4b12fmxps0sbnkqdfy0qw19s355yrkw7fgw6xz53wzq706k991";
       isLibrary = true;
       isExecutable = true;
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [
         base bytestring exceptions linear StateVar text transformers vector
       ];
       librarySystemDepends = [ SDL2 ];
       libraryPkgconfigDepends = [ SDL2 ];
       testHaskellDepends = [ base deepseq linear vector weigh ];
       doCheck = false;
       description = "Both high- and low-level bindings to the SDL library (version 2.0.4+).";
       license = stdenv.lib.licenses.bsd3;
     }) {inherit (pkgs) SDL2;};
  "sdl2-gfx" = callPackage
    ({ mkDerivation, base, bytestring, lifted-base, linear
     , monad-control, SDL2, sdl2, SDL2_gfx, template-haskell, text
     , transformers, vector
     }:
     mkDerivation {
       pname = "sdl2-gfx";
       version = "0.2";
       sha256 = "03f541vrp1ifn26kzakamlc5f8pr9rfcf808cp6q5mvmlsvi07lc";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         base bytestring lifted-base linear monad-control sdl2
         template-haskell text transformers vector
       ];
       libraryPkgconfigDepends = [ SDL2 SDL2_gfx ];
       executableHaskellDepends = [ base linear sdl2 vector ];
       description = "Bindings to SDL2_gfx";
       license = stdenv.lib.licenses.mit;
     }) {inherit (pkgs) SDL2; inherit (pkgs) SDL2_gfx;};
  "sdl2-image" = callPackage
    ({ mkDerivation, base, bytestring, SDL2, sdl2, SDL2_image
     , template-haskell, text, transformers
     }:
     mkDerivation {
       pname = "sdl2-image";
       version = "2.0.0";
       sha256 = "1pr6dkg73cy9z0w54lrkj9c5bhxj56nl92lxikjy8kz6nyr455rr";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         base bytestring sdl2 template-haskell text transformers
       ];
       libraryPkgconfigDepends = [ SDL2 SDL2_image ];
       executableHaskellDepends = [ base sdl2 text ];
       description = "Bindings to SDL2_image";
       license = stdenv.lib.licenses.mit;
     }) {inherit (pkgs) SDL2; inherit (pkgs) SDL2_image;};
  "sdl2-mixer" = callPackage
    ({ mkDerivation, base, bytestring, data-default-class, lifted-base
     , monad-control, sdl2, SDL2_mixer, template-haskell, vector
     }:
     mkDerivation {
       pname = "sdl2-mixer";
       version = "1.1.0";
       sha256 = "1k8avyccq5l9z7bwxigim312yaancxl1sr3q6a96bcm7pnhiak0g";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         base bytestring data-default-class lifted-base monad-control sdl2
         template-haskell vector
       ];
       librarySystemDepends = [ SDL2_mixer ];
       libraryPkgconfigDepends = [ SDL2_mixer ];
       description = "Bindings to SDL2_mixer";
       license = stdenv.lib.licenses.bsd3;
     }) {inherit (pkgs) SDL2_mixer;};
  "sdl2-ttf" = callPackage
    ({ mkDerivation, base, bytestring, SDL2, sdl2, SDL2_ttf
     , template-haskell, text, transformers
     }:
     mkDerivation {
       pname = "sdl2-ttf";
       version = "2.1.0";
       sha256 = "1xw05jgv6x9xplahwf3jjdq6v3mha4s7bb27kn8x66764glnyrf7";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         base bytestring sdl2 template-haskell text transformers
       ];
       libraryPkgconfigDepends = [ SDL2 SDL2_ttf ];
       description = "Bindings to SDL2_ttf";
       license = stdenv.lib.licenses.bsd3;
     }) {inherit (pkgs) SDL2; inherit (pkgs) SDL2_ttf;};
  "search-algorithms" = callPackage
    ({ mkDerivation, base, containers, doctest, hspec }:
     mkDerivation {
       pname = "search-algorithms";
       version = "0.3.0";
       sha256 = "046v424bvfnvf3hw38k9isdn9f05l4jk8k1fb2p3zn5zgb4h77aa";
       libraryHaskellDepends = [ base containers ];
       testHaskellDepends = [ base containers doctest hspec ];
       homepage = "https://github.com/devonhollowood/search-algorithms#readme";
       description = "Common graph search algorithms";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "securemem" = callPackage
    ({ mkDerivation, base, byteable, bytestring, ghc-prim, memory }:
     mkDerivation {
       pname = "securemem";
       version = "0.1.10";
       sha256 = "19hnw2cfbsfjynxq1bq9f6djbxhsc1k751ml0y1ab3ah913mm29j";
       libraryHaskellDepends = [
         base byteable bytestring ghc-prim memory
       ];
       homepage = "https://github.com/vincenthz/hs-securemem";
       description = "abstraction to an auto scrubbing and const time eq, memory chunk";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "selda" = callPackage
    ({ mkDerivation, base, bytestring, exceptions, hashable, mtl
     , psqueues, text, time, unordered-containers
     }:
     mkDerivation {
       pname = "selda";
       version = "0.2.0.0";
       sha256 = "1l9ad4d1m0ylfihg0hpfxanxil09c658jl1bmgzn8268akqay9nj";
       libraryHaskellDepends = [
         base bytestring exceptions hashable mtl psqueues text time
         unordered-containers
       ];
       homepage = "https://selda.link";
       description = "Multi-backend, high-level EDSL for interacting with SQL databases";
       license = stdenv.lib.licenses.mit;
     }) {};
  "selda-postgresql" = callPackage
    ({ mkDerivation, base, bytestring, exceptions, postgresql-libpq
     , selda, text
     }:
     mkDerivation {
       pname = "selda-postgresql";
       version = "0.1.7.2";
       sha256 = "06z5zrika018433p5l011wxc308zw7l9ilnkgwcykagsnmai4y7z";
       revision = "1";
       editedCabalFile = "08f2xdfpmbwhrwkjaqfmd9k25c3xn3p477d7a1mnnn7kf7328782";
       libraryHaskellDepends = [
         base bytestring exceptions postgresql-libpq selda text
       ];
       homepage = "https://github.com/valderman/selda";
       description = "PostgreSQL backend for the Selda database EDSL";
       license = stdenv.lib.licenses.mit;
     }) {};
  "selda-sqlite" = callPackage
    ({ mkDerivation, base, direct-sqlite, directory, exceptions, selda
     , text
     }:
     mkDerivation {
       pname = "selda-sqlite";
       version = "0.1.6.0";
       sha256 = "1473igqgjs5282rykqj1zg7420mfh3sbqy74nx1cwbm82j8shyy6";
       revision = "2";
       editedCabalFile = "198pg9i0lfx3fwf7b7cw0x5kial6vbf0dqwh18jnh7na3pyn1jr6";
       libraryHaskellDepends = [
         base direct-sqlite directory exceptions selda text
       ];
       homepage = "https://github.com/valderman/selda";
       description = "SQLite backend for the Selda database EDSL";
       license = stdenv.lib.licenses.mit;
     }) {};
  "semigroupoid-extras" = callPackage
    ({ mkDerivation, base, profunctors, semigroupoids }:
     mkDerivation {
       pname = "semigroupoid-extras";
       version = "5";
       sha256 = "0ciq1jnc0d9d8jph9103v04vphiz7xqa69a8f4dmmcf3bjsk6bhh";
       libraryHaskellDepends = [ base profunctors semigroupoids ];
       homepage = "http://github.com/ekmett/semigroupoid-extras";
       description = "Semigroupoids that depend on PolyKinds";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "semigroupoids" = callPackage
    ({ mkDerivation, base, base-orphans, bifunctors, Cabal
     , cabal-doctest, comonad, containers, contravariant, distributive
     , doctest, hashable, semigroups, tagged, template-haskell
     , transformers, transformers-compat, unordered-containers
     }:
     mkDerivation {
       pname = "semigroupoids";
       version = "5.2.2";
       sha256 = "17i96y4iqj8clcs090lf6k0ij3j16nj14vsfwz0mm9nd6i4gbpp4";
       revision = "4";
       editedCabalFile = "0pqfrxzypjq6z8lgdkzq4vhcyqkpk5326hny0r6snpc3gm78r4ij";
       setupHaskellDepends = [ base Cabal cabal-doctest ];
       libraryHaskellDepends = [
         base base-orphans bifunctors comonad containers contravariant
         distributive hashable semigroups tagged template-haskell
         transformers transformers-compat unordered-containers
       ];
       testHaskellDepends = [ base doctest ];
       homepage = "http://github.com/ekmett/semigroupoids";
       description = "Semigroupoids: Category sans id";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "semigroups" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "semigroups";
       version = "0.18.5";
       sha256 = "17g29h62g1k51ghhvzkw72zksjgi6vs6bfipkj81pqw1dsprcamb";
       libraryHaskellDepends = [ base ];
       homepage = "http://github.com/ekmett/semigroups/";
       description = "Anything that associates";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "semiring-simple" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "semiring-simple";
       version = "1.0.0.1";
       sha256 = "0a7xd58jl3dm03z2wv4iyp3dfjnpydn3lmlz25azqna57x9ip3f0";
       libraryHaskellDepends = [ base ];
       description = "A module for dealing with semirings";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "semver" = callPackage
    ({ mkDerivation, attoparsec, base, criterion, deepseq, tasty
     , tasty-hunit, text
     }:
     mkDerivation {
       pname = "semver";
       version = "0.3.3.1";
       sha256 = "1cf8dcxq4s479f826drncqc4hd07hv330zsipkrn0vc30sbkdlrn";
       libraryHaskellDepends = [ attoparsec base deepseq text ];
       testHaskellDepends = [ base tasty tasty-hunit text ];
       benchmarkHaskellDepends = [ base criterion text ];
       homepage = "https://github.com/brendanhay/semver";
       description = "Representation, manipulation, and de/serialisation of Semantic Versions";
       license = "unknown";
       hydraPlatforms = stdenv.lib.platforms.none;
     }) {};
  "sendfile" = callPackage
    ({ mkDerivation, base, bytestring, network }:
     mkDerivation {
       pname = "sendfile";
       version = "0.7.9";
       sha256 = "0hnw1ym81cff49dwww19kgbs4s0kpandbvn6h5cml3y0p1nxybqh";
       libraryHaskellDepends = [ base bytestring network ];
       homepage = "http://hub.darcs.net/stepcut/sendfile";
       description = "A portable sendfile library";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "seqalign" = callPackage
    ({ mkDerivation, base, bytestring, vector }:
     mkDerivation {
       pname = "seqalign";
       version = "0.2.0.4";
       sha256 = "01a3fhymyp7279hym03zzz6qkh5h47nq5y1xglar0n46imjr98af";
       libraryHaskellDepends = [ base bytestring vector ];
       description = "Sequence Alignment";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "serf" = callPackage
    ({ mkDerivation, attoparsec, base, conduit, conduit-extra, mtl
     , operational, process, resourcet, text
     }:
     mkDerivation {
       pname = "serf";
       version = "0.1.1.0";
       sha256 = "0ry0shqmazxcsjxsh6amvz2fky2fy3wwlck7d331j8csz7fwdjfn";
       libraryHaskellDepends = [
         attoparsec base conduit conduit-extra mtl operational process
         resourcet text
       ];
       homepage = "http://github.com/sanetracker/serf";
       description = "Interact with Serf via Haskell";
       license = stdenv.lib.licenses.mit;
     }) {};
  "servant" = callPackage
    ({ mkDerivation, aeson, aeson-compat, attoparsec, base, base-compat
     , bytestring, Cabal, cabal-doctest, case-insensitive, doctest
     , hspec, hspec-discover, http-api-data, http-media, http-types
     , mmorph, mtl, natural-transformation, network-uri, QuickCheck
     , quickcheck-instances, singleton-bool, string-conversions, tagged
     , text, vault
     }:
     mkDerivation {
       pname = "servant";
       version = "0.14.1";
       sha256 = "083layvq76llq3y49k27cdqzxka6mjgw541jhzndxx4avlcjzym7";
       revision = "1";
       editedCabalFile = "1n9lwm77w0xi6jzqrhyn6akf71z140wngj4s5x2zkndq8wmg4rg4";
       setupHaskellDepends = [ base Cabal cabal-doctest ];
       libraryHaskellDepends = [
         aeson attoparsec base base-compat bytestring case-insensitive
         http-api-data http-media http-types mmorph mtl
         natural-transformation network-uri singleton-bool
         string-conversions tagged text vault
       ];
       testHaskellDepends = [
         aeson aeson-compat base base-compat bytestring doctest hspec
         QuickCheck quickcheck-instances string-conversions text
       ];
       testToolDepends = [ hspec-discover ];
       homepage = "http://haskell-servant.readthedocs.org/";
       description = "A family of combinators for defining webservices APIs";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "servant-JuicyPixels" = callPackage
    ({ mkDerivation, base, bytestring, http-media, JuicyPixels, servant
     , servant-server, wai, warp
     }:
     mkDerivation {
       pname = "servant-JuicyPixels";
       version = "0.3.0.4";
       sha256 = "10crrcrxap7751wifbc28kr1kv0rjvrx3wlnkajgv3xpr05g00kv";
       revision = "1";
       editedCabalFile = "185ym0ac6gx7f98pd92ykc1ib305lswzjzvykly4ij9vk85jn0ax";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         base bytestring http-media JuicyPixels servant
       ];
       executableHaskellDepends = [
         base JuicyPixels servant servant-server wai warp
       ];
       homepage = "https://github.com/tvh/servant-JuicyPixels";
       description = "Servant support for JuicyPixels";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "servant-auth" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "servant-auth";
       version = "0.3.2.0";
       sha256 = "12s1m7vqp0ka8nani4cnrb6fad2y5mxji95bba2b6b07ih8xbd3v";
       revision = "1";
       editedCabalFile = "10ss4v45lclf5n0k6rch22zzs59v7p5ppd04dbc97pqxiygpbnd9";
       libraryHaskellDepends = [ base ];
       homepage = "http://github.com/haskell-servant/servant-auth#readme";
       description = "Authentication combinators for servant";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "servant-auth-client" = callPackage
    ({ mkDerivation, aeson, base, bytestring, containers, hspec
     , hspec-discover, http-client, http-types, jose, QuickCheck
     , servant, servant-auth, servant-auth-server, servant-client
     , servant-client-core, servant-server, text, time, transformers
     , wai, warp
     }:
     mkDerivation {
       pname = "servant-auth-client";
       version = "0.3.3.0";
       sha256 = "1pxkwpg1in3anamfvrp8gd7iihng0ikhl4k7ymz5d75ma1qwa2j9";
       revision = "2";
       editedCabalFile = "05ibhx700r0xn746g691ypysnjgxqb0lkq2gjrih5ylzc7nfvv2s";
       libraryHaskellDepends = [
         base bytestring containers servant servant-auth servant-client-core
         text
       ];
       testHaskellDepends = [
         aeson base bytestring hspec http-client http-types jose QuickCheck
         servant servant-auth servant-auth-server servant-client
         servant-server time transformers wai warp
       ];
       testToolDepends = [ hspec-discover ];
       homepage = "http://github.com/haskell-servant/servant-auth#readme";
       description = "servant-client/servant-auth compatibility";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "servant-auth-docs" = callPackage
    ({ mkDerivation, base, Cabal, cabal-doctest, lens, servant
     , servant-auth, servant-docs, text
     }:
     mkDerivation {
       pname = "servant-auth-docs";
       version = "0.2.10.0";
       sha256 = "0j1ynnrb6plrhpb2vzs2p7a9jb41llp0j1jwgap7hjhkwhyc7wxd";
       revision = "2";
       editedCabalFile = "0309a6pc8jj24xwqmzj1yslgij9g212hnaqh2qkcvlm6k6riffil";
       setupHaskellDepends = [ base Cabal cabal-doctest ];
       libraryHaskellDepends = [
         base lens servant servant-auth servant-docs text
       ];
       doCheck = false;
       homepage = "http://github.com/haskell-servant/servant-auth#readme";
       description = "servant-docs/servant-auth compatibility";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "servant-auth-server" = callPackage
    ({ mkDerivation, aeson, base, base64-bytestring, blaze-builder
     , bytestring, bytestring-conversion, case-insensitive, cookie
     , crypto-api, data-default-class, entropy, hspec, hspec-discover
     , http-api-data, http-client, http-types, jose, lens, lens-aeson
     , markdown-unlit, monad-time, mtl, QuickCheck, servant
     , servant-auth, servant-server, tagged, text, time, transformers
     , unordered-containers, wai, warp, wreq
     }:
     mkDerivation {
       pname = "servant-auth-server";
       version = "0.4.0.1";
       sha256 = "196dcnh1ycb23x6wb5m1p3iy8bws2grlx5i9mnnsav9n95yf15n9";
       revision = "1";
       editedCabalFile = "0l35r80yf1i3hjwls9cvhmzrjkgxfs103qcb1m650y77w1h3xr9p";
       libraryHaskellDepends = [
         aeson base base64-bytestring blaze-builder bytestring
         bytestring-conversion case-insensitive cookie crypto-api
         data-default-class entropy http-api-data http-types jose lens
         monad-time mtl servant servant-auth servant-server tagged text time
         unordered-containers wai
       ];
       testHaskellDepends = [
         aeson base bytestring case-insensitive hspec http-client http-types
         jose lens lens-aeson markdown-unlit mtl QuickCheck servant-auth
         servant-server time transformers wai warp wreq
       ];
       testToolDepends = [ hspec-discover markdown-unlit ];
       homepage = "http://github.com/haskell-servant/servant-auth#readme";
       description = "servant-server/servant-auth compatibility";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "servant-auth-swagger" = callPackage
    ({ mkDerivation, base, hspec, hspec-discover, lens, QuickCheck
     , servant, servant-auth, servant-swagger, swagger2, text
     }:
     mkDerivation {
       pname = "servant-auth-swagger";
       version = "0.2.10.0";
       sha256 = "04ndbbhdmpgb8yshki6q2j46a5q8fzvlb4nn8x8gv0mqkriq79sh";
       revision = "1";
       editedCabalFile = "105rniz4cmmwr0ynyv75s4ap1fgfwxy2k5mvvj66gwpvzmj55cnx";
       libraryHaskellDepends = [
         base lens servant servant-auth servant-swagger swagger2 text
       ];
       testHaskellDepends = [
         base hspec lens QuickCheck servant servant-auth servant-swagger
         swagger2 text
       ];
       testToolDepends = [ hspec-discover ];
       homepage = "http://github.com/haskell-servant/servant-auth#readme";
       description = "servant-swagger/servant-auth compatibility";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "servant-blaze" = callPackage
    ({ mkDerivation, base, blaze-html, http-media, servant
     , servant-server, wai, warp
     }:
     mkDerivation {
       pname = "servant-blaze";
       version = "0.8";
       sha256 = "155f20pizgkhn0hczwpxwxw1i99h0l6kfwwhs2r6bmr305aqisj6";
       revision = "2";
       editedCabalFile = "1cfla60vn4kk5gb7fawlp34jr2k6b2fprysq05561wdfv990x4bj";
       libraryHaskellDepends = [ base blaze-html http-media servant ];
       testHaskellDepends = [ base blaze-html servant-server wai warp ];
       homepage = "http://haskell-servant.readthedocs.org/";
       description = "Blaze-html support for servant";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "servant-cassava" = callPackage
    ({ mkDerivation, base, base-compat, bytestring, cassava, http-media
     , servant, servant-server, vector, wai, warp
     }:
     mkDerivation {
       pname = "servant-cassava";
       version = "0.10";
       sha256 = "03jnyghwa5kjbl5j55njmp7as92flw91zs9cgdvb4jrsdy85sb4v";
       revision = "4";
       editedCabalFile = "0kk7vqnh5ycrvhrvhi3ahva6v56fvi17k3qrh8a8qnhx25094jaj";
       libraryHaskellDepends = [
         base base-compat bytestring cassava http-media servant vector
       ];
       testHaskellDepends = [
         base base-compat bytestring cassava http-media servant
         servant-server wai warp
       ];
       homepage = "http://haskell-servant.readthedocs.org/";
       description = "Servant CSV content-type for cassava";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "servant-checked-exceptions" = callPackage
    ({ mkDerivation, aeson, base, bytestring, deepseq, hspec-wai
     , http-media, http-types, profunctors, servant
     , servant-checked-exceptions-core, servant-client
     , servant-client-core, servant-docs, servant-server, tagged, tasty
     , tasty-hspec, tasty-hunit, text, wai, world-peace
     }:
     mkDerivation {
       pname = "servant-checked-exceptions";
       version = "2.0.0.0";
       sha256 = "127nav7z2zkgfgzpjjprqb6s55mbdj9z2p05knjx3mangs2q5wm7";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         aeson base bytestring deepseq http-media http-types profunctors
         servant servant-checked-exceptions-core servant-client
         servant-client-core servant-docs servant-server tagged text wai
         world-peace
       ];
       testHaskellDepends = [
         base bytestring hspec-wai http-types servant servant-server tasty
         tasty-hspec tasty-hunit wai
       ];
       homepage = "https://github.com/cdepillabout/servant-checked-exceptions";
       description = "Checked exceptions for Servant APIs";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "servant-checked-exceptions-core" = callPackage
    ({ mkDerivation, aeson, base, bytestring, deepseq, doctest, Glob
     , http-media, http-types, profunctors, servant, servant-docs
     , tagged, text, world-peace
     }:
     mkDerivation {
       pname = "servant-checked-exceptions-core";
       version = "2.0.0.0";
       sha256 = "0j5j7ai1b7nnsvzal27jy6hamwx5i2pyc1f6mmmb06r40cs53lxa";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         aeson base bytestring deepseq http-media http-types profunctors
         servant servant-docs tagged text world-peace
       ];
       testHaskellDepends = [ base doctest Glob ];
       homepage = "https://github.com/cdepillabout/servant-checked-exceptions";
       description = "Checked exceptions for Servant APIs";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "servant-client" = callPackage
    ({ mkDerivation, aeson, base, base-compat, bytestring, containers
     , exceptions, generics-sop, hspec, hspec-discover, http-api-data
     , http-client, http-media, http-types, HUnit, markdown-unlit
     , monad-control, mtl, network, QuickCheck, semigroupoids, servant
     , servant-client-core, servant-server, stm, text, time
     , transformers, transformers-base, transformers-compat, wai, warp
     }:
     mkDerivation {
       pname = "servant-client";
       version = "0.14";
       sha256 = "0jr2057y7vp6d2jcnisawkajinnqm68h024crh929r9fdka0p1n6";
       revision = "3";
       editedCabalFile = "1rjjqxyyf51bjq8li8yilng5pjd9a5n3d8zniqmfw3hys6dz8n8g";
       libraryHaskellDepends = [
         base base-compat bytestring containers exceptions http-client
         http-media http-types monad-control mtl semigroupoids
         servant-client-core stm text time transformers transformers-base
         transformers-compat
       ];
       testHaskellDepends = [
         aeson base base-compat bytestring generics-sop hspec http-api-data
         http-client http-types HUnit markdown-unlit mtl network QuickCheck
         servant servant-client-core servant-server text transformers
         transformers-compat wai warp
       ];
       testToolDepends = [ hspec-discover markdown-unlit ];
       homepage = "http://haskell-servant.readthedocs.org/";
       description = "automatical derivation of querying functions for servant webservices";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "servant-client-core" = callPackage
    ({ mkDerivation, base, base-compat, base64-bytestring, bytestring
     , containers, deepseq, exceptions, free, generics-sop, hspec
     , hspec-discover, http-api-data, http-media, http-types
     , network-uri, QuickCheck, safe, servant, text
     }:
     mkDerivation {
       pname = "servant-client-core";
       version = "0.14.1";
       sha256 = "0qfpakwl6yj6l2br9wa9zs0v7nzmj4bngspw6p536swx39npnkn2";
       revision = "2";
       editedCabalFile = "02pvrccfwvvy53gma56jcqnbia3pm1pncyghdkjp519bwff9iwvb";
       libraryHaskellDepends = [
         base base-compat base64-bytestring bytestring containers exceptions
         free generics-sop http-api-data http-media http-types network-uri
         safe servant text
       ];
       testHaskellDepends = [ base base-compat deepseq hspec QuickCheck ];
       testToolDepends = [ hspec-discover ];
       homepage = "http://haskell-servant.readthedocs.org/";
       description = "Core functionality and class for client function generation for servant APIs";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "servant-dhall" = callPackage
    ({ mkDerivation, base, base-compat, bytestring, dhall, http-media
     , megaparsec, prettyprinter, servant, servant-server, text, wai
     , warp
     }:
     mkDerivation {
       pname = "servant-dhall";
       version = "0.1.0.1";
       sha256 = "1yriifnflvh4f0vv2mrfv6qw0cv35isrq03q4h43g096ml2wl3ll";
       revision = "3";
       editedCabalFile = "13mq4pwffxqpjirb6rfhzd2xqhm0xyycl98h6kf4j0ic38g3saz1";
       libraryHaskellDepends = [
         base base-compat bytestring dhall http-media megaparsec
         prettyprinter servant text
       ];
       testHaskellDepends = [
         base base-compat bytestring dhall http-media servant servant-server
         wai warp
       ];
       homepage = "http://haskell-servant.readthedocs.org/";
       description = "Servant Dhall content-type";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "servant-docs" = callPackage
    ({ mkDerivation, aeson, aeson-pretty, base, base-compat, bytestring
     , case-insensitive, control-monad-omega, hashable, hspec
     , hspec-discover, http-media, http-types, lens, servant
     , string-conversions, text, unordered-containers
     }:
     mkDerivation {
       pname = "servant-docs";
       version = "0.11.2";
       sha256 = "1x6lvpvlm1lh51y2pmldrjdjjrs5qnq44m2abczr75fjjy6hla3b";
       revision = "6";
       editedCabalFile = "0w9yi4rmfq4irmnia9rl9pb66ix086ic9nd0grspnk54ib7970cl";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         aeson aeson-pretty base base-compat bytestring case-insensitive
         control-monad-omega hashable http-media http-types lens servant
         string-conversions text unordered-containers
       ];
       executableHaskellDepends = [
         aeson base lens servant string-conversions text
       ];
       testHaskellDepends = [
         aeson base hspec lens servant string-conversions
       ];
       testToolDepends = [ hspec-discover ];
       homepage = "http://haskell-servant.readthedocs.org/";
       description = "generate API docs for your servant webservice";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "servant-elm" = callPackage
    ({ mkDerivation, aeson, base, Diff, elm-export, hspec, HUnit, lens
     , servant, servant-foreign, text, wl-pprint-text
     }:
     mkDerivation {
       pname = "servant-elm";
       version = "0.5.0.0";
       sha256 = "0l5rjml46qbnq4p3d7zjk8zl9gnpz8m5n6n8yf8kgy89ybm6xnfr";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         base elm-export lens servant servant-foreign text wl-pprint-text
       ];
       testHaskellDepends = [
         aeson base Diff elm-export hspec HUnit servant text
       ];
       homepage = "http://github.com/mattjbray/servant-elm#readme";
       description = "Automatically derive Elm functions to query servant webservices";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "servant-exceptions" = callPackage
    ({ mkDerivation, aeson, base, exceptions, http-media, http-types
     , mtl, servant, servant-server, text, wai, warp
     }:
     mkDerivation {
       pname = "servant-exceptions";
       version = "0.1.1";
       sha256 = "1qdb6ins7l0ryyrmg9j5pw428rlhkmzpbq5jqawfn01j8vf9yav5";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         aeson base exceptions http-media http-types mtl servant
         servant-server text wai
       ];
       executableHaskellDepends = [
         aeson base exceptions http-types servant-server text warp
       ];
       homepage = "https://github.com/ch1bo/servant-exceptions#readme";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "servant-foreign" = callPackage
    ({ mkDerivation, base, base-compat, hspec, hspec-discover
     , http-types, lens, servant, text
     }:
     mkDerivation {
       pname = "servant-foreign";
       version = "0.11.1";
       sha256 = "01cq938b4szvnapf8c4ir8j09aq25jwgnp3jbfxnja027c1v3735";
       revision = "4";
       editedCabalFile = "1alal6ps1lwl8yd2vwkpmkn4a69blr1ws2cba7mc7a2w63lg1pyz";
       libraryHaskellDepends = [
         base base-compat http-types lens servant text
       ];
       testHaskellDepends = [ base hspec servant ];
       testToolDepends = [ hspec-discover ];
       description = "Helpers for generating clients for servant APIs in any programming language";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "servant-github-webhook" = callPackage
    ({ mkDerivation, aeson, base, base16-bytestring, bytestring
     , cryptonite, github, github-webhooks, http-types, memory, servant
     , servant-server, string-conversions, text, transformers
     , unordered-containers, wai, warp
     }:
     mkDerivation {
       pname = "servant-github-webhook";
       version = "0.4.1.0";
       sha256 = "0v6gd7swhl58x3sqbb5cmn5ac6x1p5mg7jqbwk9ny9bzggz9pglb";
       libraryHaskellDepends = [
         aeson base base16-bytestring bytestring cryptonite github
         github-webhooks http-types memory servant servant-server
         string-conversions text transformers unordered-containers wai
       ];
       testHaskellDepends = [
         aeson base bytestring servant-server text transformers wai warp
       ];
       homepage = "https://github.com/tsani/servant-github-webhook";
       description = "Servant combinators to facilitate writing GitHub webhooks";
       license = stdenv.lib.licenses.mit;
     }) {};
  "servant-js" = callPackage
    ({ mkDerivation, base, base-compat, charset, hspec, hspec-discover
     , hspec-expectations, language-ecmascript, lens, QuickCheck
     , servant, servant-foreign, text
     }:
     mkDerivation {
       pname = "servant-js";
       version = "0.9.3.2";
       sha256 = "1p37520x85rg7rnhazby0x6qas2sh5d79gygmaa5f7jalhkyrq02";
       revision = "3";
       editedCabalFile = "0j5kmqzhkyb1wmvyxz0r20473myzp9bqcdgjbi8i4k1lfvcjsigq";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         base base-compat charset lens servant servant-foreign text
       ];
       testHaskellDepends = [
         base base-compat hspec hspec-expectations language-ecmascript lens
         QuickCheck servant text
       ];
       testToolDepends = [ hspec-discover ];
       homepage = "http://haskell-servant.readthedocs.org/";
       description = "Automatically derive javascript functions to query servant webservices";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "servant-lucid" = callPackage
    ({ mkDerivation, base, http-media, lucid, servant, servant-server
     , text, wai, warp
     }:
     mkDerivation {
       pname = "servant-lucid";
       version = "0.8.1";
       sha256 = "0g8icz12ydyxyv710fhixswdphiri0b44pw5p0dr21cvwbaxawb6";
       revision = "1";
       editedCabalFile = "0jna96jy6nmhk6w5zxdd3qn3vlrnhnvh4s3f2bqkn3c0had5py7d";
       libraryHaskellDepends = [ base http-media lucid servant text ];
       testHaskellDepends = [ base lucid servant-server wai warp ];
       homepage = "http://haskell-servant.readthedocs.org/";
       description = "Servant support for lucid";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "servant-mock" = callPackage
    ({ mkDerivation, aeson, base, base-compat, bytestring
     , bytestring-conversion, hspec, hspec-discover, hspec-wai
     , http-types, QuickCheck, servant, servant-server, transformers
     , wai, warp
     }:
     mkDerivation {
       pname = "servant-mock";
       version = "0.8.4";
       sha256 = "1705fw63lrzw79w1ypcdlf35d8qxx247q8isiqh28wzmc4j3kmnr";
       revision = "3";
       editedCabalFile = "13sbgnzr0yfrbrbvzc6v66lxrgvg3pb7h9alvmg77kmm95gmx8mm";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         base base-compat bytestring http-types QuickCheck servant
         servant-server transformers wai
       ];
       executableHaskellDepends = [
         aeson base QuickCheck servant-server warp
       ];
       testHaskellDepends = [
         aeson base bytestring-conversion hspec hspec-wai QuickCheck servant
         servant-server wai
       ];
       testToolDepends = [ hspec-discover ];
       homepage = "http://haskell-servant.readthedocs.org/";
       description = "Derive a mock server for free from your servant API types";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "servant-pandoc" = callPackage
    ({ mkDerivation, base, bytestring, case-insensitive, http-media
     , lens, pandoc-types, servant-docs, string-conversions, text
     , unordered-containers
     }:
     mkDerivation {
       pname = "servant-pandoc";
       version = "0.5.0.0";
       sha256 = "0qq4ahwl8vc8xgmvbh8qac7751hizgdcbp43gc0kxfs7xpy0kmqj";
       libraryHaskellDepends = [
         base bytestring case-insensitive http-media lens pandoc-types
         servant-docs string-conversions text unordered-containers
       ];
       description = "Use Pandoc to render servant API documentation";
       license = stdenv.lib.licenses.mit;
     }) {};
  "servant-ruby" = callPackage
    ({ mkDerivation, base, casing, doctest, QuickCheck, servant-foreign
     , text
     }:
     mkDerivation {
       pname = "servant-ruby";
       version = "0.8.0.2";
       sha256 = "11h70gpar931qh3v1llp8zzk5922p31bmmfp5ynp7nzxv3zdrim6";
       libraryHaskellDepends = [ base casing servant-foreign text ];
       testHaskellDepends = [ base doctest QuickCheck ];
       homepage = "https://github.com/joneshf/servant-ruby#readme";
       description = "Generate a Ruby client from a Servant API with Net::HTTP";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "servant-server" = callPackage
    ({ mkDerivation, aeson, base, base-compat, base64-bytestring
     , bytestring, Cabal, cabal-doctest, containers, directory, doctest
     , exceptions, filepath, hspec, hspec-discover, hspec-wai
     , http-api-data, http-media, http-types, monad-control, mtl
     , network, network-uri, QuickCheck, resourcet, safe, servant
     , should-not-typecheck, string-conversions, tagged, temporary, text
     , transformers, transformers-base, transformers-compat, wai
     , wai-app-static, wai-extra, warp, word8
     }:
     mkDerivation {
       pname = "servant-server";
       version = "0.14.1";
       sha256 = "1fnxmy6k0ml11035ac4x2knvpraxpc0g076wx3a9k013xyqi0h02";
       revision = "1";
       editedCabalFile = "028vqbmqkc9gjsk34n74ssi0xfn085v26zdvpixgfi5yd7cvfg03";
       isLibrary = true;
       isExecutable = true;
       setupHaskellDepends = [ base Cabal cabal-doctest ];
       libraryHaskellDepends = [
         base base-compat base64-bytestring bytestring containers exceptions
         filepath http-api-data http-media http-types monad-control mtl
         network network-uri resourcet servant string-conversions tagged
         text transformers transformers-base transformers-compat wai
         wai-app-static word8
       ];
       executableHaskellDepends = [ aeson base servant text wai warp ];
       testHaskellDepends = [
         aeson base base-compat base64-bytestring bytestring directory
         doctest hspec hspec-wai http-types mtl QuickCheck resourcet safe
         servant should-not-typecheck string-conversions temporary text
         transformers transformers-compat wai wai-extra
       ];
       testToolDepends = [ hspec-discover ];
       homepage = "http://haskell-servant.readthedocs.org/";
       description = "A family of combinators for defining webservices APIs and serving them";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "servant-static-th" = callPackage
    ({ mkDerivation, base, blaze-html, bytestring, containers
     , directory, doctest, filepath, Glob, hspec-wai, http-media
     , semigroups, servant, servant-blaze, servant-server, tasty
     , tasty-hspec, tasty-hunit, template-haskell, text, wai
     }:
     mkDerivation {
       pname = "servant-static-th";
       version = "0.2.2.0";
       sha256 = "06vl8a9h5gzmfazj390fmxp6p4bwfdszqjdwnpivv03m80lh3v2v";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         base blaze-html bytestring containers directory filepath http-media
         semigroups servant servant-blaze servant-server template-haskell
         text
       ];
       testHaskellDepends = [
         base blaze-html bytestring directory doctest filepath Glob
         hspec-wai servant servant-blaze servant-server tasty tasty-hspec
         tasty-hunit wai
       ];
       homepage = "https://github.com/cdepillabout/servant-static-th";
       description = "Embed a directory of static files in your Servant server";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "servant-streaming" = callPackage
    ({ mkDerivation, base, hspec, http-types, QuickCheck, servant }:
     mkDerivation {
       pname = "servant-streaming";
       version = "0.3.0.0";
       sha256 = "0k2sgh7qhp54050k6xlz4zi5jf29xnar2iv02f4rg1k5fxjlh3cq";
       revision = "3";
       editedCabalFile = "04mc3k97sk0r90m8ca34gqpb2bz8yljp3j613xx7xz90sffqc1hq";
       libraryHaskellDepends = [ base http-types servant ];
       testHaskellDepends = [ base hspec http-types QuickCheck servant ];
       homepage = "http://github.com/plow-technologies/servant-streaming#readme";
       description = "Servant combinators for the 'streaming' package";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "servant-streaming-client" = callPackage
    ({ mkDerivation, base, bytestring, hspec, http-client, http-media
     , http-types, QuickCheck, resourcet, servant, servant-client
     , servant-client-core, servant-server, servant-streaming
     , servant-streaming-server, streaming, warp
     }:
     mkDerivation {
       pname = "servant-streaming-client";
       version = "0.3.0.0";
       sha256 = "1h3haws61m064zziyzn03n0450swffmr46gsv9k88lrpz8lv5qj2";
       revision = "1";
       editedCabalFile = "07xkgnhi8aspnqms5gx67ssw5m595gda8yqypdg2q59wwc6ib68d";
       libraryHaskellDepends = [
         base bytestring http-media http-types resourcet servant
         servant-client-core servant-streaming streaming
       ];
       testHaskellDepends = [
         base bytestring hspec http-client http-media http-types QuickCheck
         resourcet servant servant-client servant-client-core servant-server
         servant-streaming servant-streaming-server streaming warp
       ];
       homepage = "http://github.com/plow-technologies/servant-streaming#readme";
       description = "Client instances for the 'servant-streaming' package";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "servant-streaming-server" = callPackage
    ({ mkDerivation, base, bytestring, directory, hspec, http-media
     , http-types, pipes, pipes-http, QuickCheck, resourcet, servant
     , servant-server, servant-streaming, streaming
     , streaming-bytestring, streaming-wai, wai, warp
     }:
     mkDerivation {
       pname = "servant-streaming-server";
       version = "0.3.0.0";
       sha256 = "0lsh3x6hkbk7p095pkp7ld0m54xlkw0101x6nrxhjvhmw13aiq66";
       revision = "1";
       editedCabalFile = "1xfx22a83xwq2bzv7gm3z9drd5hiq6wz7yyvfpjz1c2dcicwflvm";
       libraryHaskellDepends = [
         base bytestring http-media http-types resourcet servant
         servant-server servant-streaming streaming streaming-wai wai
       ];
       testHaskellDepends = [
         base bytestring directory hspec http-media http-types pipes
         pipes-http QuickCheck resourcet servant servant-server
         servant-streaming streaming streaming-bytestring streaming-wai wai
         warp
       ];
       homepage = "http://github.com/plow-technologies/servant-streaming-server#readme";
       description = "Server instances for the 'servant-streaming' package";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "servant-swagger" = callPackage
    ({ mkDerivation, aeson, aeson-pretty, base, base-compat, bytestring
     , Cabal, cabal-doctest, directory, doctest, filepath, hspec
     , hspec-discover, http-media, insert-ordered-containers, lens
     , QuickCheck, servant, singleton-bool, swagger2, template-haskell
     , text, time, unordered-containers, utf8-string
     }:
     mkDerivation {
       pname = "servant-swagger";
       version = "1.1.6";
       sha256 = "1gx61328ciprc6ps8xzawfj483s28h5z21zmqczqqh3wfvc8h77w";
       setupHaskellDepends = [ base Cabal cabal-doctest ];
       libraryHaskellDepends = [
         aeson aeson-pretty base bytestring hspec http-media
         insert-ordered-containers lens QuickCheck servant singleton-bool
         swagger2 text unordered-containers
       ];
       testHaskellDepends = [
         aeson base base-compat directory doctest filepath hspec lens
         QuickCheck servant swagger2 template-haskell text time utf8-string
       ];
       testToolDepends = [ hspec-discover ];
       doCheck = false;
       homepage = "https://github.com/haskell-servant/servant-swagger";
       description = "Generate Swagger specification for your servant API";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "servant-swagger-ui" = callPackage
    ({ mkDerivation, base, bytestring, file-embed-lzma, servant
     , servant-server, servant-swagger-ui-core, swagger2, text
     }:
     mkDerivation {
       pname = "servant-swagger-ui";
       version = "0.3.0.3.13.2";
       sha256 = "0llkcag9bnhvni6ddar966i0pwql93s5icvw6pxa9ra5v14v7p5n";
       revision = "2";
       editedCabalFile = "0sz08w56f7p74saass6xdzmbpyk78hpa9d79kkd2nclwinajpkgr";
       libraryHaskellDepends = [
         base bytestring file-embed-lzma servant servant-server
         servant-swagger-ui-core swagger2 text
       ];
       homepage = "https://github.com/haskell-servant/servant-swagger-ui";
       description = "Servant swagger ui";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "servant-swagger-ui-core" = callPackage
    ({ mkDerivation, base, blaze-markup, bytestring, http-media
     , servant, servant-blaze, servant-server, swagger2, text
     , transformers, transformers-compat, wai-app-static
     }:
     mkDerivation {
       pname = "servant-swagger-ui-core";
       version = "0.3.1";
       sha256 = "05lnm9p86rd9rxsz7f1zm5vkqzjcq2fd8an7c8y5fk4kxj6rydxb";
       revision = "1";
       editedCabalFile = "10p5yjzvfdn764mszlsx49kb55ygzi5m2mq32l9m91imvj1926b1";
       libraryHaskellDepends = [
         base blaze-markup bytestring http-media servant servant-blaze
         servant-server swagger2 text transformers transformers-compat
         wai-app-static
       ];
       homepage = "https://github.com/haskell-servant/servant-swagger-ui";
       description = "Servant swagger ui core components";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "servant-tracing" = callPackage
    ({ mkDerivation, aeson, async, base, bytestring, bytestring-lexing
     , containers, hashable, http-api-data, http-client, HUnit
     , lifted-base, monad-control, mtl, QuickCheck, random, servant
     , servant-server, tasty, tasty-hunit, tasty-quickcheck, text, time
     , transformers, unordered-containers, wai, warp
     }:
     mkDerivation {
       pname = "servant-tracing";
       version = "0.1.0.2";
       sha256 = "0qpamaf3ydfb8197iz2prjh9nxwxi03cdfsp3jl28rhbqrc2xpry";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         aeson async base bytestring bytestring-lexing containers hashable
         http-api-data http-client lifted-base monad-control mtl random
         servant servant-server text time unordered-containers wai
       ];
       executableHaskellDepends = [
         async base bytestring containers http-client lifted-base
         monad-control mtl servant servant-server text transformers wai warp
       ];
       testHaskellDepends = [
         aeson base containers http-api-data HUnit monad-control mtl
         QuickCheck tasty tasty-hunit tasty-quickcheck text time
         transformers
       ];
       homepage = "https://github.com/ChrisCoffey/haskell-opentracing-light#readme";
       license = stdenv.lib.licenses.mit;
     }) {};
  "servant-websockets" = callPackage
    ({ mkDerivation, aeson, async, base, bytestring, conduit
     , exceptions, resourcet, servant-server, text, wai, wai-websockets
     , warp, websockets
     }:
     mkDerivation {
       pname = "servant-websockets";
       version = "1.1.0";
       sha256 = "0l8a5zc6wiwdfxv2kirb7kxky4zwj71rcrrg1zh07gc3vf4lqf33";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         aeson async base bytestring conduit exceptions resourcet
         servant-server text wai wai-websockets warp websockets
       ];
       executableHaskellDepends = [
         aeson base conduit servant-server text wai warp websockets
       ];
       homepage = "https://github.com/moesenle/servant-websockets#readme";
       description = "Small library providing WebSocket endpoints for servant";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "servant-yaml" = callPackage
    ({ mkDerivation, aeson, base, base-compat, bytestring, http-media
     , servant, servant-server, wai, warp, yaml
     }:
     mkDerivation {
       pname = "servant-yaml";
       version = "0.1.0.0";
       sha256 = "011jxvr2i65bf0kmdn0sxkqgfz628a0sfhzphr1rqsmh8sqdj5y9";
       revision = "22";
       editedCabalFile = "1mi52j2c7960k0qmxqd7238yxgbccb0xgfj3ahh0zfckficn9bk7";
       libraryHaskellDepends = [
         base bytestring http-media servant yaml
       ];
       testHaskellDepends = [
         aeson base base-compat bytestring http-media servant servant-server
         wai warp yaml
       ];
       homepage = "https://github.com/haskell-servant/servant-yaml#readme";
       description = "Servant support for yaml";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "serverless-haskell" = callPackage
    ({ mkDerivation, aeson, aeson-casing, aeson-extra, amazonka-core
     , amazonka-kinesis, amazonka-s3, base, bytestring, case-insensitive
     , hspec, hspec-discover, http-types, iproute, lens, raw-strings-qq
     , text, time, unix, unordered-containers
     }:
     mkDerivation {
       pname = "serverless-haskell";
       version = "0.6.7";
       sha256 = "0p34wd3g1gg7c6yp018164ky1rqz67wq5fcax6fis0hn3g8qgjm9";
       libraryHaskellDepends = [
         aeson aeson-casing aeson-extra amazonka-core amazonka-kinesis
         amazonka-s3 base bytestring case-insensitive http-types iproute
         lens text time unix unordered-containers
       ];
       testHaskellDepends = [
         aeson aeson-casing aeson-extra amazonka-core amazonka-kinesis
         amazonka-s3 base bytestring case-insensitive hspec hspec-discover
         http-types iproute lens raw-strings-qq text time unix
         unordered-containers
       ];
       testToolDepends = [ hspec-discover ];
       homepage = "https://github.com/seek-oss/serverless-haskell#readme";
       description = "Deploying Haskell code onto AWS Lambda using Serverless";
       license = stdenv.lib.licenses.mit;
     }) {};
  "serversession" = callPackage
    ({ mkDerivation, aeson, base, base64-bytestring, bytestring
     , containers, data-default, hashable, hspec, nonce, path-pieces
     , QuickCheck, text, time, transformers, unordered-containers
     }:
     mkDerivation {
       pname = "serversession";
       version = "1.0.1";
       sha256 = "08j8v6a2018bmvwsb7crdg0ajak74jggb073pdpx9s0pf3cfzyrz";
       libraryHaskellDepends = [
         aeson base base64-bytestring bytestring data-default hashable nonce
         path-pieces text time transformers unordered-containers
       ];
       testHaskellDepends = [
         aeson base base64-bytestring bytestring containers data-default
         hspec nonce path-pieces QuickCheck text time transformers
         unordered-containers
       ];
       homepage = "https://github.com/yesodweb/serversession";
       description = "Secure, modular server-side sessions";
       license = stdenv.lib.licenses.mit;
     }) {};
  "serversession-frontend-wai" = callPackage
    ({ mkDerivation, base, bytestring, cookie, data-default
     , path-pieces, serversession, text, time, transformers
     , unordered-containers, vault, wai, wai-session
     }:
     mkDerivation {
       pname = "serversession-frontend-wai";
       version = "1.0";
       sha256 = "0rxifhjirhmhk1x14m6lvpv6dl32g179i4i3xi3dq59r7l716j0b";
       libraryHaskellDepends = [
         base bytestring cookie data-default path-pieces serversession text
         time transformers unordered-containers vault wai wai-session
       ];
       homepage = "https://github.com/yesodweb/serversession";
       description = "wai-session bindings for serversession";
       license = stdenv.lib.licenses.mit;
     }) {};
  "servius" = callPackage
    ({ mkDerivation, base, blaze-builder, blaze-html, bytestring
     , cmark-gfm, http-types, shakespeare, text, wai, wai-app-static
     }:
     mkDerivation {
       pname = "servius";
       version = "1.2.3.0";
       sha256 = "09wbw7lqchpldxgbs580zp5favjcshqmxj5y6lcva36zhlzbdi3j";
       isLibrary = false;
       isExecutable = true;
       executableHaskellDepends = [
         base blaze-builder blaze-html bytestring cmark-gfm http-types
         shakespeare text wai wai-app-static
       ];
       doHaddock = false;
       homepage = "https://github.com/snoyberg/servius#readme";
       description = "Warp web server with template rendering";
       license = stdenv.lib.licenses.mit;
     }) {};
  "ses-html" = callPackage
    ({ mkDerivation, base, base64-bytestring, blaze-html, byteable
     , bytestring, cryptohash, HsOpenSSL, http-streams, tagsoup, time
     }:
     mkDerivation {
       pname = "ses-html";
       version = "0.4.0.0";
       sha256 = "13x0m3i8gs0rapshniwxhzwz0311fzan7k87s6ink3jk7gh6xxyg";
       libraryHaskellDepends = [
         base base64-bytestring blaze-html byteable bytestring cryptohash
         HsOpenSSL http-streams tagsoup time
       ];
       description = "Send HTML formatted emails using Amazon's SES REST API with blaze";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "set-cover" = callPackage
    ({ mkDerivation, base, containers, enummapset, psqueues, semigroups
     , utility-ht
     }:
     mkDerivation {
       pname = "set-cover";
       version = "0.0.9";
       sha256 = "1qbk5y2pg6jlclszd2nras5240r0ahapsibykkcqrxhgq0hgvsxg";
       revision = "2";
       editedCabalFile = "1jpg9iyq0mymdbq392nfmicwfmcmq5mg688ndmhvjx08ljdl54ha";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         base containers enummapset psqueues semigroups utility-ht
       ];
       homepage = "http://hub.darcs.net/thielema/set-cover/";
       description = "Solve exact set cover problems like Sudoku, 8 Queens, Soma Cube, Tetris Cube";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "setenv" = callPackage
    ({ mkDerivation, base, unix }:
     mkDerivation {
       pname = "setenv";
       version = "0.1.1.3";
       sha256 = "0cnbgrvb9byyahb37zlqrj05rj25v190crgcw8wmlgf0mwwxyn73";
       revision = "1";
       editedCabalFile = "0ny4g3kjys0hqg41mnwrsymy1bwhl8l169kis4y4fa58sb06m4f5";
       libraryHaskellDepends = [ base unix ];
       description = "A cross-platform library for setting environment variables";
       license = stdenv.lib.licenses.mit;
     }) {};
  "setlocale" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "setlocale";
       version = "1.0.0.8";
       sha256 = "0sdrsmkhw08483d73ysgm2926fdbhii61br03lqpqw0lfzj4ilbd";
       libraryHaskellDepends = [ base ];
       homepage = "https://bitbucket.org/IchUndNichtDu/haskell-setlocale";
       description = "Haskell bindings to setlocale";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "sexp-grammar" = callPackage
    ({ mkDerivation, alex, array, base, bytestring, containers
     , criterion, deepseq, happy, invertible-grammar, prettyprinter
     , QuickCheck, recursion-schemes, scientific, semigroups, tasty
     , tasty-hunit, tasty-quickcheck, text, utf8-string
     }:
     mkDerivation {
       pname = "sexp-grammar";
       version = "2.0.1";
       sha256 = "0znzxih07yhm0gjbwzm3gdvmrjm2676g7sqjicawc86fwww1rgms";
       libraryHaskellDepends = [
         array base bytestring containers deepseq invertible-grammar
         prettyprinter recursion-schemes scientific semigroups text
         utf8-string
       ];
       libraryToolDepends = [ alex happy ];
       testHaskellDepends = [
         base containers invertible-grammar prettyprinter QuickCheck
         scientific semigroups tasty tasty-hunit tasty-quickcheck text
         utf8-string
       ];
       benchmarkHaskellDepends = [
         base bytestring criterion deepseq text
       ];
       homepage = "https://github.com/esmolanka/sexp-grammar";
       description = "Invertible grammar combinators for S-expressions";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "shake" = callPackage
    ({ mkDerivation, base, binary, bytestring, deepseq, directory
     , extra, filepath, hashable, js-flot, js-jquery, primitive, process
     , QuickCheck, random, time, transformers, unix
     , unordered-containers, utf8-string
     }:
     mkDerivation {
       pname = "shake";
       version = "0.16.4";
       sha256 = "0dhlkcn1zsg1w97vzs1yrpkn6iwhlzh36dwclx2lafzbdjja6cmp";
       isLibrary = true;
       isExecutable = true;
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [
         base binary bytestring deepseq directory extra filepath hashable
         js-flot js-jquery primitive process random time transformers unix
         unordered-containers utf8-string
       ];
       executableHaskellDepends = [
         base binary bytestring deepseq directory extra filepath hashable
         js-flot js-jquery primitive process random time transformers unix
         unordered-containers utf8-string
       ];
       testHaskellDepends = [
         base binary bytestring deepseq directory extra filepath hashable
         js-flot js-jquery primitive process QuickCheck random time
         transformers unix unordered-containers utf8-string
       ];
       doCheck = false;
       homepage = "https://shakebuild.com";
       description = "Build system library, like Make, but more accurate dependencies";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "shake-language-c" = callPackage
    ({ mkDerivation, base, data-default-class, directory, doctest
     , fclabels, hspec, process, shake, split, unordered-containers
     }:
     mkDerivation {
       pname = "shake-language-c";
       version = "0.12.0";
       sha256 = "1c0smbshksjw114m09n5i1ynkhibvd9kix9n7h696p75g40ka7k6";
       libraryHaskellDepends = [
         base data-default-class fclabels process shake split
         unordered-containers
       ];
       testHaskellDepends = [ base directory doctest hspec shake ];
       homepage = "https://github.com/samplecount/shake-language-c";
       description = "Utilities for cross-compiling with Shake";
       license = stdenv.lib.licenses.asl20;
     }) {};
  "shakespeare" = callPackage
    ({ mkDerivation, aeson, base, blaze-html, blaze-markup, bytestring
     , containers, directory, exceptions, ghc-prim, hspec, HUnit, parsec
     , process, scientific, template-haskell, text, time, transformers
     , unordered-containers, vector
     }:
     mkDerivation {
       pname = "shakespeare";
       version = "2.0.20";
       sha256 = "00wybn9dcwi2y1cp87fyvhcqn8filvb8as7k78g1m1c5wpwby3pm";
       libraryHaskellDepends = [
         aeson base blaze-html blaze-markup bytestring containers directory
         exceptions ghc-prim parsec process scientific template-haskell text
         time transformers unordered-containers vector
       ];
       testHaskellDepends = [
         aeson base blaze-html blaze-markup bytestring containers directory
         exceptions ghc-prim hspec HUnit parsec process template-haskell
         text time transformers
       ];
       homepage = "http://www.yesodweb.com/book/shakespearean-templates";
       description = "A toolkit for making compile-time interpolated templates";
       license = stdenv.lib.licenses.mit;
     }) {};
  "shell-conduit" = callPackage
    ({ mkDerivation, async, base, bytestring, conduit, conduit-extra
     , directory, filepath, hspec, hspec-expectations, monads-tf
     , process, resourcet, semigroups, split, template-haskell, text
     , transformers, unix, unliftio
     }:
     mkDerivation {
       pname = "shell-conduit";
       version = "4.7.0";
       sha256 = "0c5yvm08l37qblqks1r23znixxas39gl1d3mlm6rq8a6zfvcacbg";
       libraryHaskellDepends = [
         async base bytestring conduit conduit-extra directory filepath
         monads-tf process resourcet semigroups split template-haskell text
         transformers unix unliftio
       ];
       testHaskellDepends = [
         base bytestring conduit conduit-extra hspec hspec-expectations
         template-haskell
       ];
       homepage = "https://github.com/psibi/shell-conduit";
       description = "Write shell scripts with Conduit";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "shell-escape" = callPackage
    ({ mkDerivation, base, binary, bytestring, containers, vector }:
     mkDerivation {
       pname = "shell-escape";
       version = "0.2.0";
       sha256 = "0jms5hdl8zrpxwypq9998798krspclivprirrcq59r179alrng72";
       libraryHaskellDepends = [
         base binary bytestring containers vector
       ];
       homepage = "http://github.com/solidsnack/shell-escape";
       description = "Shell escaping library";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "shelltestrunner" = callPackage
    ({ mkDerivation, base, cmdargs, Diff, directory, filemanip
     , filepath, HUnit, parsec, pretty-show, process, regex-tdfa, safe
     , test-framework, test-framework-hunit, utf8-string
     }:
     mkDerivation {
       pname = "shelltestrunner";
       version = "1.9";
       sha256 = "1a5kzqbwg6990249ypw0cx6cqj6663as1kbj8nzblcky8j6kbi6b";
       isLibrary = false;
       isExecutable = true;
       executableHaskellDepends = [
         base cmdargs Diff directory filemanip filepath HUnit parsec
         pretty-show process regex-tdfa safe test-framework
         test-framework-hunit utf8-string
       ];
       doHaddock = false;
       homepage = "https://github.com/simonmichael/shelltestrunner";
       description = "Easy, repeatable testing of CLI programs/commands";
       license = "GPL";
     }) {};
  "shelly" = callPackage
    ({ mkDerivation, async, base, bytestring, containers, directory
     , enclosed-exceptions, exceptions, filepath, hspec, hspec-contrib
     , HUnit, lifted-async, lifted-base, monad-control, mtl, process
     , system-fileio, system-filepath, text, time, transformers
     , transformers-base, unix, unix-compat
     }:
     mkDerivation {
       pname = "shelly";
       version = "1.8.1";
       sha256 = "023fbvbqs5gdwm30j5517gbdcc7fvz0md70dgwgpypkskj3i926y";
       revision = "1";
       editedCabalFile = "0crf0m077wky76f5nav2p9q4fa5q4yhv5l4bq9hd073dzdaywhz0";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         async base bytestring containers directory enclosed-exceptions
         exceptions lifted-async lifted-base monad-control mtl process
         system-fileio system-filepath text time transformers
         transformers-base unix unix-compat
       ];
       testHaskellDepends = [
         async base bytestring containers directory enclosed-exceptions
         exceptions filepath hspec hspec-contrib HUnit lifted-async
         lifted-base monad-control mtl process system-fileio system-filepath
         text time transformers transformers-base unix unix-compat
       ];
       homepage = "https://github.com/yesodweb/Shelly.hs";
       description = "shell-like (systems) programming in Haskell";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "shortcut-links" = callPackage
    ({ mkDerivation, base, text }:
     mkDerivation {
       pname = "shortcut-links";
       version = "0.4.2.1";
       sha256 = "1zyy4jma61vg684sa66mpdlq9ylfrfv23d8m0163lbcfpkxfqdhd";
       libraryHaskellDepends = [ base text ];
       homepage = "http://github.com/aelve/shortcut-links";
       description = "Link shortcuts for use in text markup";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "should-not-typecheck" = callPackage
    ({ mkDerivation, base, deepseq, hspec, hspec-expectations, HUnit }:
     mkDerivation {
       pname = "should-not-typecheck";
       version = "2.1.0";
       sha256 = "14fmv0mv2v4fqzynamlrmdj6d1l65aw1srf1wv19nrq7rrqaqf7m";
       libraryHaskellDepends = [ base deepseq HUnit ];
       testHaskellDepends = [
         base deepseq hspec hspec-expectations HUnit
       ];
       homepage = "http://github.com/CRogers/should-not-typecheck";
       description = "A HUnit/hspec assertion library to verify that an expression does not typecheck";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "show-combinators" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "show-combinators";
       version = "0.1.0.0";
       sha256 = "11ihjlpa5hgqhcbwcyclldgddppzgdqsz8hx1hqvamchqx3mgi12";
       revision = "2";
       editedCabalFile = "003ry21snn1b9ip5c1z62hzdy24ckbbb5zf637nxcf9qj07z2xsz";
       libraryHaskellDepends = [ base ];
       testHaskellDepends = [ base ];
       homepage = "https://github.com/Lysxia/show-combinators#readme";
       description = "Combinators to write Show instances";
       license = stdenv.lib.licenses.mit;
     }) {};
  "show-prettyprint" = callPackage
    ({ mkDerivation, ansi-wl-pprint, base, doctest, prettyprinter
     , trifecta
     }:
     mkDerivation {
       pname = "show-prettyprint";
       version = "0.2.2";
       sha256 = "0mdgx484vgf2lif4a58vm8yl8zghxh0533038r76l5xlkc5qczgh";
       libraryHaskellDepends = [
         ansi-wl-pprint base prettyprinter trifecta
       ];
       testHaskellDepends = [ base doctest ];
       homepage = "https://github.com/quchen/show-prettyprint#readme";
       description = "Robust prettyprinter for output of auto-generated Show instances";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "siggy-chardust" = callPackage
    ({ mkDerivation, base, doctest, hlint, smallcheck, tasty
     , tasty-hunit, tasty-quickcheck, tasty-smallcheck
     }:
     mkDerivation {
       pname = "siggy-chardust";
       version = "1.0.0";
       sha256 = "0hssby6mak0bq1fqv47hp6rnw51yz1kgzgsmnvh2k9jfq0y0qwwz";
       revision = "1";
       editedCabalFile = "1lknm1jr6h5qpixc727aj3zbmj4ia21r9lb8gzj50iildgmfk33b";
       libraryHaskellDepends = [ base ];
       testHaskellDepends = [
         base doctest hlint smallcheck tasty tasty-hunit tasty-quickcheck
         tasty-smallcheck
       ];
       homepage = "https://github.com/blockscope/flare-timing/tree/master/siggy-chardust#readme";
       description = "Rounding rationals to significant digits and decimal places";
       license = stdenv.lib.licenses.mpl20;
     }) {};
  "signal" = callPackage
    ({ mkDerivation, base, unix }:
     mkDerivation {
       pname = "signal";
       version = "0.1.0.4";
       sha256 = "1rbnblp2d9cw54jnxjcfjhp0bizvcdcxg9y1b4ky0iskny9dvgy4";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [ base unix ];
       executableHaskellDepends = [ base ];
       homepage = "http://github.com/pmlodawski/signal";
       description = "Multiplatform signal support for Haskell";
       license = stdenv.lib.licenses.mit;
     }) {};
  "silently" = callPackage
    ({ mkDerivation, base, deepseq, directory, nanospec, temporary }:
     mkDerivation {
       pname = "silently";
       version = "1.2.5";
       sha256 = "0f9qm3f7y0hpxn6mddhhg51mm1r134qkvd2kr8r6192ka1ijbxnf";
       libraryHaskellDepends = [ base deepseq directory ];
       testHaskellDepends = [ base deepseq directory nanospec temporary ];
       homepage = "https://github.com/hspec/silently";
       description = "Prevent or capture writing to stdout and other handles";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "simple-cmd" = callPackage
    ({ mkDerivation, base, directory, filepath, process }:
     mkDerivation {
       pname = "simple-cmd";
       version = "0.1.2";
       sha256 = "10jdyl1ghzczxw5bi8s1694fla42s1aknmj5grxndidwzf95b8g6";
       libraryHaskellDepends = [ base directory filepath process ];
       description = "Simple String-based process commands";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "simple-reflect" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "simple-reflect";
       version = "0.3.3";
       sha256 = "0ayvrx5cm8n6db21jiyjmk5h93pw7cz1707hih09hlhk9jh5x0h7";
       libraryHaskellDepends = [ base ];
       homepage = "http://twanvl.nl/blog/haskell/simple-reflection-of-expressions";
       description = "Simple reflection of expressions containing variables";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "simple-sendfile" = callPackage
    ({ mkDerivation, base, bytestring, conduit, conduit-extra
     , directory, hspec, HUnit, network, process, resourcet, unix
     }:
     mkDerivation {
       pname = "simple-sendfile";
       version = "0.2.27";
       sha256 = "1bwwqzcm56m2w4ymsa054sxmpbj76h9pvb0jf8zxp8lr41cp51gn";
       revision = "1";
       editedCabalFile = "040adccwis3yy8af783vjz3a2yb3fcmm49cpzdgikm2293pwyj0p";
       libraryHaskellDepends = [ base bytestring network unix ];
       testHaskellDepends = [
         base bytestring conduit conduit-extra directory hspec HUnit network
         process resourcet unix
       ];
       description = "Cross platform library for the sendfile system call";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "simple-vec3" = callPackage
    ({ mkDerivation, base, criterion, doctest, doctest-driver-gen
     , QuickCheck, tasty, tasty-quickcheck, vector
     }:
     mkDerivation {
       pname = "simple-vec3";
       version = "0.4.0.9";
       sha256 = "1rx4nifv75lpxrdgq6x3a61d56qp0ln9rhf2d10l2ds049dlq0pz";
       libraryHaskellDepends = [ base QuickCheck vector ];
       testHaskellDepends = [
         base doctest doctest-driver-gen tasty tasty-quickcheck
       ];
       benchmarkHaskellDepends = [ base criterion vector ];
       doCheck = false;
       homepage = "https://github.com/dzhus/simple-vec3#readme";
       description = "Three-dimensional vectors of doubles with basic operations";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "simplest-sqlite" = callPackage
    ({ mkDerivation, base, bytestring, exception-hierarchy, sqlite
     , template-haskell, text
     }:
     mkDerivation {
       pname = "simplest-sqlite";
       version = "0.1.0.0";
       sha256 = "0vjx01bls2z99hmynqhxm4j2cq17334wz3pz0gm5saxslkldw2sz";
       libraryHaskellDepends = [
         base bytestring exception-hierarchy template-haskell text
       ];
       librarySystemDepends = [ sqlite ];
       homepage = "comming soon";
       description = "Simplest SQLite3 binding";
       license = stdenv.lib.licenses.bsd3;
     }) {inherit (pkgs) sqlite;};
  "since" = callPackage
    ({ mkDerivation, base, time }:
     mkDerivation {
       pname = "since";
       version = "0.0.0";
       sha256 = "1zy1vwna8a0421l3jvdm8mg36xwgj4xl3p2xkf678ahbzk0179vs";
       libraryHaskellDepends = [ base time ];
       homepage = "https://github.com/athanclark/since#readme";
       description = "Get the number of seconds since the last invocation";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "singleton-bool" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "singleton-bool";
       version = "0.1.4";
       sha256 = "0apvzb6ym0fnm4rx7paz6ivv72ahzn2bxhvyd1drw50ypvicd581";
       revision = "1";
       editedCabalFile = "0ccd49z9xwa8gr8sclmmn0zc4xq39yyjws4zr6lrw3xjql130nsx";
       libraryHaskellDepends = [ base ];
       homepage = "https://github.com/phadej/singleton-bool#readme";
       description = "Type level booleans";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "singleton-nats" = callPackage
    ({ mkDerivation, base, singletons }:
     mkDerivation {
       pname = "singleton-nats";
       version = "0.4.2";
       sha256 = "1wcwks2acnql5ihkjn2543hgdnlw049z8av8x5dp5r552fq6k0cg";
       libraryHaskellDepends = [ base singletons ];
       homepage = "https://github.com/AndrasKovacs/singleton-nats";
       description = "Unary natural numbers relying on the singletons infrastructure";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "singletons" = callPackage
    ({ mkDerivation, base, containers, directory, filepath, ghc-boot-th
     , mtl, process, syb, tasty, tasty-golden, template-haskell, text
     , th-desugar, transformers
     }:
     mkDerivation {
       pname = "singletons";
       version = "2.4.1";
       sha256 = "1kzrl9njvkbvxylk9jg61vy3ksmxmzymci5hdp0ilpsah4620yjx";
       libraryHaskellDepends = [
         base containers ghc-boot-th mtl syb template-haskell text
         th-desugar transformers
       ];
       testHaskellDepends = [
         base directory filepath process tasty tasty-golden
       ];
       doCheck = false;
       homepage = "http://www.github.com/goldfirere/singletons";
       description = "A framework for generating singleton types";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "siphash" = callPackage
    ({ mkDerivation, base, bytestring, cpu, QuickCheck, test-framework
     , test-framework-quickcheck2
     }:
     mkDerivation {
       pname = "siphash";
       version = "1.0.3";
       sha256 = "1wq5dan30ggjgmravy92ylqjvjv1q7mxrmddr7zc8h6aqr0wx0fg";
       revision = "1";
       editedCabalFile = "1q2dy0ywngm9iv7k6d9gnf860m9hpf62q5qvdzmxw5s629gk4afn";
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [ base bytestring cpu ];
       testHaskellDepends = [
         base bytestring QuickCheck test-framework
         test-framework-quickcheck2
       ];
       homepage = "http://github.com/vincenthz/hs-siphash";
       description = "siphash: a fast short input PRF";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "size-based" = callPackage
    ({ mkDerivation, base, dictionary-sharing, template-haskell
     , testing-type-modifiers
     }:
     mkDerivation {
       pname = "size-based";
       version = "0.1.2.0";
       sha256 = "06hmlic0n73ncwlkpx49xlv09bzsrr27ncnp5byhzlknak2gd7vp";
       libraryHaskellDepends = [
         base dictionary-sharing template-haskell testing-type-modifiers
       ];
       description = "Sized functors, for size-based enumerations";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "skein" = callPackage
    ({ mkDerivation, base, bytestring, cereal, crypto-api, filepath
     , hspec, tagged
     }:
     mkDerivation {
       pname = "skein";
       version = "1.0.9.4";
       sha256 = "1jdqdk0rz2wnvw735clnj8jh0a9rkrbqjg7vk3w6wczdql6cm0pq";
       libraryHaskellDepends = [
         base bytestring cereal crypto-api tagged
       ];
       testHaskellDepends = [
         base bytestring cereal crypto-api filepath hspec tagged
       ];
       doCheck = false;
       homepage = "https://github.com/meteficha/skein";
       description = "Skein, a family of cryptographic hash functions. Includes Skein-MAC as well.";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "skylighting" = callPackage
    ({ mkDerivation, aeson, ansi-terminal, attoparsec, base
     , base64-bytestring, binary, blaze-html, bytestring
     , case-insensitive, colour, containers, directory, filepath, hxt
     , mtl, regex-pcre-builtin, safe, skylighting-core, text
     , utf8-string
     }:
     mkDerivation {
       pname = "skylighting";
       version = "0.7.5";
       sha256 = "080kmpqaqh76qqjml34rfm7m6pchdmd2519g6y3kdb3x5vj01qbx";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         aeson ansi-terminal attoparsec base base64-bytestring binary
         blaze-html bytestring case-insensitive colour containers directory
         filepath hxt mtl regex-pcre-builtin safe skylighting-core text
         utf8-string
       ];
       homepage = "https://github.com/jgm/skylighting";
       description = "syntax highlighting library";
       license = stdenv.lib.licenses.gpl2;
     }) {};
  "skylighting-core" = callPackage
    ({ mkDerivation, aeson, ansi-terminal, attoparsec, base
     , base64-bytestring, binary, blaze-html, bytestring
     , case-insensitive, colour, containers, criterion, Diff, directory
     , filepath, HUnit, hxt, mtl, pretty-show, QuickCheck, random
     , regex-pcre-builtin, safe, tasty, tasty-golden, tasty-hunit
     , tasty-quickcheck, text, transformers, utf8-string
     }:
     mkDerivation {
       pname = "skylighting-core";
       version = "0.7.5";
       sha256 = "129q860xk59n8dxsxl7prk0jk3ddl96r9i6r4lsk5l9pbpms41pp";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         aeson ansi-terminal attoparsec base base64-bytestring binary
         blaze-html bytestring case-insensitive colour containers directory
         filepath hxt mtl regex-pcre-builtin safe text transformers
         utf8-string
       ];
       testHaskellDepends = [
         aeson base bytestring containers Diff directory filepath HUnit
         pretty-show QuickCheck random tasty tasty-golden tasty-hunit
         tasty-quickcheck text
       ];
       benchmarkHaskellDepends = [
         base containers criterion directory filepath text
       ];
       homepage = "https://github.com/jgm/skylighting";
       description = "syntax highlighting library";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "slack-web" = callPackage
    ({ mkDerivation, aeson, base, containers, errors, hspec
     , http-api-data, http-client, http-client-tls, megaparsec, mtl
     , servant, servant-client, servant-client-core, text, time
     , transformers
     }:
     mkDerivation {
       pname = "slack-web";
       version = "0.2.0.9";
       sha256 = "1lw7haxp27h6q13763cq1h7ilfv7281q0k794ir66sv2l79jq7a2";
       libraryHaskellDepends = [
         aeson base containers errors http-api-data http-client
         http-client-tls megaparsec mtl servant servant-client
         servant-client-core text time transformers
       ];
       testHaskellDepends = [
         aeson base containers errors hspec http-api-data megaparsec text
         time
       ];
       homepage = "https://github.com/jpvillaisaza/slack-web";
       description = "Bindings for the Slack web API";
       license = stdenv.lib.licenses.mit;
     }) {};
  "slave-thread" = callPackage
    ({ mkDerivation, base, base-prelude, list-t, mmorph
     , partial-handler, stm-containers, transformers
     }:
     mkDerivation {
       pname = "slave-thread";
       version = "1.0.2";
       sha256 = "04sbbdgzsi1ww642b9fgbhx348c0a4qim4ak6bivwpnnimcj0wg4";
       libraryHaskellDepends = [
         base base-prelude list-t mmorph partial-handler stm-containers
         transformers
       ];
       doCheck = false;
       homepage = "https://github.com/nikita-volkov/slave-thread";
       description = "A principal solution to ghost threads and silent exceptions";
       license = stdenv.lib.licenses.mit;
     }) {};
  "smallcheck" = callPackage
    ({ mkDerivation, base, ghc-prim, logict, mtl, pretty }:
     mkDerivation {
       pname = "smallcheck";
       version = "1.1.5";
       sha256 = "195fj7w3v03d1y1nm2ylavzrwxjcdbq0lb6zsw1dwyx5jmwfc84h";
       libraryHaskellDepends = [ base ghc-prim logict mtl pretty ];
       homepage = "https://github.com/feuerbach/smallcheck";
       description = "A property-based testing library";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "smoothie" = callPackage
    ({ mkDerivation, aeson, base, linear, text, vector }:
     mkDerivation {
       pname = "smoothie";
       version = "0.4.2.9";
       sha256 = "0kra42nh86dfp66ngr4bmb8d530nh7b9pra1vlykc0sx9b1zpjnk";
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [ aeson base linear text vector ];
       homepage = "https://github.com/phaazon/smoothie";
       description = "Smooth curves via several interpolation modes";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "smtp-mail" = callPackage
    ({ mkDerivation, array, base, base16-bytestring, base64-bytestring
     , bytestring, cryptohash, filepath, mime-mail, network, text
     }:
     mkDerivation {
       pname = "smtp-mail";
       version = "0.1.4.6";
       sha256 = "1g0lsbd9h8bhk4xddgzm96i8fy233904jnqnl4i94ld2hzpwpnl6";
       libraryHaskellDepends = [
         array base base16-bytestring base64-bytestring bytestring
         cryptohash filepath mime-mail network text
       ];
       homepage = "http://github.com/jhickner/smtp-mail";
       description = "Simple email sending via SMTP";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "snap-blaze" = callPackage
    ({ mkDerivation, base, blaze-html, snap-core }:
     mkDerivation {
       pname = "snap-blaze";
       version = "0.2.1.5";
       sha256 = "0hc8k0cviq7ayjymsfr435bnfw35pa4f80i7x4ypn2539fykavmk";
       libraryHaskellDepends = [ base blaze-html snap-core ];
       homepage = "http://github.com/jaspervdj/snap-blaze";
       description = "blaze-html integration for Snap";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "snap-core" = callPackage
    ({ mkDerivation, attoparsec, base, bytestring, bytestring-builder
     , case-insensitive, containers, deepseq, directory, filepath
     , hashable, HUnit, io-streams, lifted-base, monad-control, mtl
     , network, network-uri, old-locale, parallel, QuickCheck, random
     , readable, regex-posix, test-framework, test-framework-hunit
     , test-framework-quickcheck2, text, time, transformers
     , transformers-base, unix-compat, unordered-containers, vector
     , zlib
     }:
     mkDerivation {
       pname = "snap-core";
       version = "1.0.3.2";
       sha256 = "136q7l4hd5yn5hb507q1ziqx124ma1lkzh5dx0n150p8dx3rhhsc";
       revision = "3";
       editedCabalFile = "0wlhn33r7c9g7j23y006ddq9d87lkmianvvfrbl8jd8mvjvj2gfa";
       libraryHaskellDepends = [
         attoparsec base bytestring bytestring-builder case-insensitive
         containers directory filepath hashable HUnit io-streams lifted-base
         monad-control mtl network network-uri old-locale random readable
         regex-posix text time transformers transformers-base unix-compat
         unordered-containers vector
       ];
       testHaskellDepends = [
         attoparsec base bytestring bytestring-builder case-insensitive
         containers deepseq directory filepath hashable HUnit io-streams
         lifted-base monad-control mtl network network-uri old-locale
         parallel QuickCheck random readable regex-posix test-framework
         test-framework-hunit test-framework-quickcheck2 text time
         transformers transformers-base unix-compat unordered-containers
         vector zlib
       ];
       homepage = "http://snapframework.com/";
       description = "Snap: A Haskell Web Framework (core interfaces and types)";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "snap-server" = callPackage
    ({ mkDerivation, attoparsec, base, base16-bytestring, blaze-builder
     , bytestring, bytestring-builder, case-insensitive, clock
     , containers, criterion, deepseq, directory, filepath, HsOpenSSL
     , http-common, http-streams, HUnit, io-streams, io-streams-haproxy
     , lifted-base, monad-control, mtl, network, old-locale
     , openssl-streams, parallel, QuickCheck, random, snap-core
     , test-framework, test-framework-hunit, test-framework-quickcheck2
     , text, threads, time, transformers, unix, unix-compat, vector
     }:
     mkDerivation {
       pname = "snap-server";
       version = "1.1.0.0";
       sha256 = "0vvw9n8xs272qdlrf3dxhnva41zh3awi7pf022rrjj75lj8a77i4";
       revision = "3";
       editedCabalFile = "0a9d3nqb5rvgm25nak68lp6yj9m6cwhbgdbg5l7ib5i2czcg7yjh";
       configureFlags = [ "-fopenssl" ];
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         attoparsec base blaze-builder bytestring bytestring-builder
         case-insensitive clock containers filepath HsOpenSSL io-streams
         io-streams-haproxy lifted-base mtl network old-locale
         openssl-streams snap-core text time unix unix-compat vector
       ];
       testHaskellDepends = [
         attoparsec base base16-bytestring blaze-builder bytestring
         bytestring-builder case-insensitive clock containers deepseq
         directory filepath HsOpenSSL http-common http-streams HUnit
         io-streams io-streams-haproxy lifted-base monad-control mtl network
         old-locale openssl-streams parallel QuickCheck random snap-core
         test-framework test-framework-hunit test-framework-quickcheck2 text
         threads time transformers unix unix-compat vector
       ];
       benchmarkHaskellDepends = [
         attoparsec base blaze-builder bytestring bytestring-builder
         criterion io-streams io-streams-haproxy snap-core vector
       ];
       homepage = "http://snapframework.com/";
       description = "A web server for the Snap Framework";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "snappy" = callPackage
    ({ mkDerivation, base, bytestring, snappy }:
     mkDerivation {
       pname = "snappy";
       version = "0.2.0.2";
       sha256 = "14fdx0fikkd9krpzqrvas6mjqmmhmh0qwqzvz1kymil7d8rdyr85";
       libraryHaskellDepends = [ base bytestring ];
       librarySystemDepends = [ snappy ];
       doCheck = false;
       homepage = "http://github.com/bos/snappy";
       description = "Bindings to the Google Snappy library for fast compression/decompression";
       license = stdenv.lib.licenses.bsd3;
     }) {inherit (pkgs) snappy;};
  "snowflake" = callPackage
    ({ mkDerivation, base, time }:
     mkDerivation {
       pname = "snowflake";
       version = "0.1.1.1";
       sha256 = "1pfd8lqwv0504hli6fhwiqckcca0x9pnfzmy3kz36w7138rclmpi";
       revision = "1";
       editedCabalFile = "1y5v3nsin8iyxvh0abfhs7ma75p5zjvha0lp41801pdiikacfzha";
       libraryHaskellDepends = [ base time ];
       description = "A loose port of Twitter Snowflake to Haskell. Generates arbitrary precision, unique, time-sortable identifiers.";
       license = stdenv.lib.licenses.asl20;
     }) {};
  "soap" = callPackage
    ({ mkDerivation, base, bytestring, conduit, configurator
     , data-default, exceptions, hspec, http-client, http-types, HUnit
     , iconv, mtl, resourcet, text, unordered-containers, xml-conduit
     , xml-conduit-writer, xml-types
     }:
     mkDerivation {
       pname = "soap";
       version = "0.2.3.6";
       sha256 = "0xmiabnx814rwdwrcipv0kja6ljgwqr4x58sa8s07nrs3ph8xz6d";
       libraryHaskellDepends = [
         base bytestring conduit configurator data-default exceptions
         http-client http-types iconv mtl resourcet text
         unordered-containers xml-conduit xml-conduit-writer xml-types
       ];
       testHaskellDepends = [
         base bytestring hspec HUnit text unordered-containers xml-conduit
         xml-conduit-writer
       ];
       homepage = "https://bitbucket.org/dpwiz/haskell-soap";
       description = "SOAP client tools";
       license = stdenv.lib.licenses.mit;
     }) {};
  "soap-openssl" = callPackage
    ({ mkDerivation, base, configurator, data-default, HsOpenSSL
     , http-client, http-client-openssl, soap, text
     }:
     mkDerivation {
       pname = "soap-openssl";
       version = "0.1.0.2";
       sha256 = "03w389yhybzvc06gpxigibqga9mr7m41rkg1ki3n686j9xzm8210";
       revision = "1";
       editedCabalFile = "1b3aivn9jfaax00id7x4cqvpmd6lgynslchlry0qsmq1lj466cdf";
       libraryHaskellDepends = [
         base configurator data-default HsOpenSSL http-client
         http-client-openssl soap text
       ];
       homepage = "https://bitbucket.org/dpwiz/haskell-soap";
       description = "TLS-enabled SOAP transport (using openssl bindings)";
       license = stdenv.lib.licenses.mit;
     }) {};
  "soap-tls" = callPackage
    ({ mkDerivation, base, configurator, connection, data-default
     , http-client, http-client-tls, soap, text, tls, x509, x509-store
     , x509-validation
     }:
     mkDerivation {
       pname = "soap-tls";
       version = "0.1.1.4";
       sha256 = "051shlb128lsacd2cjm4kpyqkmzdcwcj7ppl7l4n1k5j9g6k72yf";
       libraryHaskellDepends = [
         base configurator connection data-default http-client
         http-client-tls soap text tls x509 x509-store x509-validation
       ];
       homepage = "https://bitbucket.org/dpwiz/haskell-soap";
       description = "TLS-enabled SOAP transport (using tls package)";
       license = stdenv.lib.licenses.mit;
     }) {};
  "socket-activation" = callPackage
    ({ mkDerivation, base, network, transformers, unix }:
     mkDerivation {
       pname = "socket-activation";
       version = "0.1.0.2";
       sha256 = "0fxl9v1mvlv31bhyjl8k1l4f4lr9n0gvcnsfr2m65m3c557pp7mr";
       libraryHaskellDepends = [ base network transformers unix ];
       homepage = "https://github.com/ddfisher/haskell-socket-activation";
       description = "systemd socket activation library";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "socks" = callPackage
    ({ mkDerivation, base, bytestring, cereal, network }:
     mkDerivation {
       pname = "socks";
       version = "0.5.6";
       sha256 = "0f44qy74i0n6ll3jym0a2ipafkpw1h67amcpqmj8iq95h21wsqzs";
       libraryHaskellDepends = [ base bytestring cereal network ];
       homepage = "http://github.com/vincenthz/hs-socks";
       description = "Socks proxy (ver 5)";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "sort" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "sort";
       version = "1.0.0.0";
       sha256 = "03bpyn0mimfyilfjs26b9c8sclbzsbardjhy6d822jybg548kqyf";
       libraryHaskellDepends = [ base ];
       homepage = "https://github.com/cdornan/sort";
       description = "A Haskell sorting toolkit";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "sorted-list" = callPackage
    ({ mkDerivation, base, criterion, deepseq }:
     mkDerivation {
       pname = "sorted-list";
       version = "0.2.1.0";
       sha256 = "1x2ygkh32q2kk5g7b7hnrl8z8azvgwsj36f3ndg79pzhghapdr5l";
       libraryHaskellDepends = [ base deepseq ];
       benchmarkHaskellDepends = [ base criterion ];
       homepage = "https://github.com/Daniel-Diaz/sorted-list/blob/master/README.md";
       description = "Type-enforced sorted lists and related functions";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "sourcemap" = callPackage
    ({ mkDerivation, aeson, attoparsec, base, bytestring, criterion
     , process, random, text, unordered-containers, utf8-string
     }:
     mkDerivation {
       pname = "sourcemap";
       version = "0.1.6";
       sha256 = "0ynfm44ym8y592wnzdwa0d05dbkffyyg5sm26y5ylzpynk64r85r";
       revision = "1";
       editedCabalFile = "1f7q44ar6qfip8fsllg43jyn7r15ifn2r0vz32cbmx0sb0d38dax";
       libraryHaskellDepends = [
         aeson attoparsec base bytestring process text unordered-containers
         utf8-string
       ];
       testHaskellDepends = [
         aeson base bytestring process text unordered-containers utf8-string
       ];
       benchmarkHaskellDepends = [ base bytestring criterion random ];
       doCheck = false;
       description = "Implementation of source maps as proposed by Google and Mozilla";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "sox" = callPackage
    ({ mkDerivation, base, containers, explicit-exception
     , extensible-exceptions, process, sample-frame, semigroups
     , transformers, unix, utility-ht
     }:
     mkDerivation {
       pname = "sox";
       version = "0.2.3.1";
       sha256 = "0idab4rsqj4zjm7dlzbf38rzpvkp1z9psrkl4lrp2qp1s53sp9kh";
       libraryHaskellDepends = [
         base containers explicit-exception extensible-exceptions process
         sample-frame semigroups transformers unix utility-ht
       ];
       homepage = "http://www.haskell.org/haskellwiki/Sox";
       description = "Play, write, read, convert audio signals using Sox";
       license = "GPL";
     }) {};
  "soxlib" = callPackage
    ({ mkDerivation, base, bytestring, explicit-exception
     , extensible-exceptions, sample-frame, sox, storablevector
     , transformers, utility-ht
     }:
     mkDerivation {
       pname = "soxlib";
       version = "0.0.3.1";
       sha256 = "0f7ci58yls5rhq1vy1q1imlsgkbvadv8646fvvymg0jq2mjwgsfd";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         base bytestring explicit-exception extensible-exceptions
         sample-frame storablevector transformers utility-ht
       ];
       libraryPkgconfigDepends = [ sox ];
       homepage = "http://www.haskell.org/haskellwiki/Sox";
       description = "Write, read, convert audio signals using libsox";
       license = stdenv.lib.licenses.bsd3;
     }) {inherit (pkgs) sox;};
  "sparkle" = callPackage
    ({ mkDerivation, base, binary, bytestring, Cabal, choice
     , constraints, distributed-closure, filepath, inline-java, jni, jvm
     , jvm-streaming, process, regex-tdfa, singletons, streaming
     , temporary, text, unix, vector, zip-archive
     }:
     mkDerivation {
       pname = "sparkle";
       version = "0.7.4";
       sha256 = "174rs21fgj43rq3nshzgff6mydi93n26nkcq9cadq0bzcasc2n3q";
       isLibrary = true;
       isExecutable = true;
       setupHaskellDepends = [ base Cabal inline-java jvm-streaming ];
       libraryHaskellDepends = [
         base binary bytestring choice constraints distributed-closure
         inline-java jni jvm jvm-streaming singletons streaming text vector
       ];
       executableHaskellDepends = [
         base bytestring filepath process regex-tdfa temporary text unix
         zip-archive
       ];
       homepage = "http://github.com/tweag/sparkle#readme";
       description = "Distributed Apache Spark applications in Haskell";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "sparse-linear-algebra" = callPackage
    ({ mkDerivation, base, containers, exceptions, hspec
     , matrix-market-attoparsec, mtl, mwc-random, primitive, QuickCheck
     , scientific, transformers, vector, vector-algorithms
     }:
     mkDerivation {
       pname = "sparse-linear-algebra";
       version = "0.3.1";
       sha256 = "1jfwydr0pzph932h7jvnmp1d8qqrhxsq7rbb6cjbmga55s5pfqn7";
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [
         base containers exceptions hspec mtl primitive QuickCheck
         transformers vector vector-algorithms
       ];
       testHaskellDepends = [
         base containers exceptions hspec matrix-market-attoparsec mtl
         mwc-random primitive QuickCheck scientific
       ];
       homepage = "https://github.com/ocramz/sparse-linear-algebra";
       description = "Numerical computing in native Haskell";
       license = stdenv.lib.licenses.gpl3;
     }) {};
  "spatial-math" = callPackage
    ({ mkDerivation, base, binary, cereal, doctest, ghc-prim, lens
     , linear, QuickCheck, test-framework, test-framework-quickcheck2
     , TypeCompose
     }:
     mkDerivation {
       pname = "spatial-math";
       version = "0.5.0.1";
       sha256 = "0454q9laaasdqrd74cjcxfcl5z7jcfvnzpdg81gl58y2ay8z4769";
       libraryHaskellDepends = [
         base binary cereal ghc-prim lens linear TypeCompose
       ];
       testHaskellDepends = [
         base doctest QuickCheck test-framework test-framework-quickcheck2
       ];
       description = "3d math including quaternions/euler angles/dcms and utility functions";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "special-values" = callPackage
    ({ mkDerivation, base, bytestring, ieee754, scientific, text }:
     mkDerivation {
       pname = "special-values";
       version = "0.1.0.0";
       sha256 = "1kkdw2c4d2hha99v9f89ahmifjxp7fxmxyfwq9a8xk6s0h9xs51w";
       libraryHaskellDepends = [
         base bytestring ieee754 scientific text
       ];
       homepage = "https://github.com/minad/special-values#readme";
       description = "Typeclass providing special values";
       license = stdenv.lib.licenses.mit;
     }) {};
  "speculate" = callPackage
    ({ mkDerivation, base, cmdargs, containers, leancheck }:
     mkDerivation {
       pname = "speculate";
       version = "0.3.5";
       sha256 = "0i7a6mq0f46iihq7kd3a1780pqqhmmdi706c42y4dmmj32nb4v3h";
       libraryHaskellDepends = [ base cmdargs containers leancheck ];
       testHaskellDepends = [ base leancheck ];
       benchmarkHaskellDepends = [ base leancheck ];
       homepage = "https://github.com/rudymatela/speculate#readme";
       description = "discovery of properties about Haskell functions";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "speculation" = callPackage
    ({ mkDerivation, base, ghc-prim, stm, transformers }:
     mkDerivation {
       pname = "speculation";
       version = "1.5.0.3";
       sha256 = "0gsdxgi1bw33z7v23m2fq8ynqxz06swjv4ikl8mqmlp0hwd69gvk";
       libraryHaskellDepends = [ base ghc-prim stm transformers ];
       homepage = "http://github.com/ekmett/speculation";
       description = "A framework for safe, programmable, speculative parallelism";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "speedy-slice" = callPackage
    ({ mkDerivation, base, containers, kan-extensions, lens, mcmc-types
     , mwc-probability, pipes, primitive, transformers
     }:
     mkDerivation {
       pname = "speedy-slice";
       version = "0.3.0";
       sha256 = "16982nx9br5v37vzmww2di1vmj7y8g59myvhiw3l1fc1nq88mgzg";
       libraryHaskellDepends = [
         base kan-extensions lens mcmc-types mwc-probability pipes primitive
         transformers
       ];
       testHaskellDepends = [ base containers mwc-probability ];
       homepage = "http://github.com/jtobin/speedy-slice";
       description = "Speedy slice sampling";
       license = stdenv.lib.licenses.mit;
     }) {};
  "sphinx" = callPackage
    ({ mkDerivation, base, binary, bytestring, data-binary-ieee754
     , network, text, text-icu, xml
     }:
     mkDerivation {
       pname = "sphinx";
       version = "0.6.0.2";
       sha256 = "1px6lxxy7a34jni83l68nnhw40751g6pmvazplhc4wbfrv37gabn";
       libraryHaskellDepends = [
         base binary bytestring data-binary-ieee754 network text text-icu
         xml
       ];
       homepage = "https://github.com/gregwebs/haskell-sphinx-client";
       description = "Haskell bindings to the Sphinx full-text searching daemon";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "splice" = callPackage
    ({ mkDerivation, base, network }:
     mkDerivation {
       pname = "splice";
       version = "0.6.1.1";
       sha256 = "0lsfkm4vfipzbnqpf3yli6fwrv5a5mwbs149dfzhs7spa9kbxyl1";
       libraryHaskellDepends = [ base network ];
       homepage = "http://corsis.github.com/splice/";
       description = "Cross-platform Socket to Socket Data Splicing";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "split" = callPackage
    ({ mkDerivation, base, QuickCheck }:
     mkDerivation {
       pname = "split";
       version = "0.2.3.3";
       sha256 = "04qlmkcyklznl03gsjg95b4nzb6i96gdapqg60rny9szgi7ngk8x";
       revision = "1";
       editedCabalFile = "0vz2ylx81nfq2981msig080j7n41xf2lrxzf3hj1x3g3cllb3izi";
       libraryHaskellDepends = [ base ];
       testHaskellDepends = [ base QuickCheck ];
       description = "Combinator library for splitting lists";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "splitmix" = callPackage
    ({ mkDerivation, async, base, base-compat-batteries, bytestring
     , deepseq, process, random, tf-random, time, vector
     }:
     mkDerivation {
       pname = "splitmix";
       version = "0.0.1";
       sha256 = "0bvpx3hnyhz449s2c2mi5h78024yysnqldfwp7m0qr21m41q0v1a";
       revision = "1";
       editedCabalFile = "0c38sajdpqcmicdh4lfy6vpg8wnzpiyamvbximdsqs605frs3mqs";
       libraryHaskellDepends = [ base deepseq random time ];
       testHaskellDepends = [
         async base base-compat-batteries bytestring deepseq process random
         tf-random vector
       ];
       description = "Fast Splittable PRNG";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "spoon" = callPackage
    ({ mkDerivation, base, deepseq }:
     mkDerivation {
       pname = "spoon";
       version = "0.3.1";
       sha256 = "1m41k0mfy6fpfrv2ym4m5jsjaj9xdfl2iqpppd3c4d0fffv51cxr";
       revision = "1";
       editedCabalFile = "09s5jjcsg4g4qxchq9g2l4i9d5zh3rixpkbiysqcgl69kj8mwv74";
       libraryHaskellDepends = [ base deepseq ];
       description = "Catch errors thrown from pure computations";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "spreadsheet" = callPackage
    ({ mkDerivation, base, explicit-exception, transformers, utility-ht
     }:
     mkDerivation {
       pname = "spreadsheet";
       version = "0.1.3.8";
       sha256 = "0rd7qi6wy17fcz1a6pfqjxl3z816r8p6gyvz4zq85kgkjpkicrv4";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         base explicit-exception transformers utility-ht
       ];
       homepage = "http://www.haskell.org/haskellwiki/Spreadsheet";
       description = "Read and write spreadsheets from and to CSV files in a lazy way";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "sql-words" = callPackage
    ({ mkDerivation, base, QuickCheck, quickcheck-simple }:
     mkDerivation {
       pname = "sql-words";
       version = "0.1.6.2";
       sha256 = "0f7bvmz2ppq6pwgi3klxzpilnj899ssrsf52r99g9apqz065lsiz";
       libraryHaskellDepends = [ base ];
       testHaskellDepends = [ base QuickCheck quickcheck-simple ];
       homepage = "http://khibino.github.io/haskell-relational-record/";
       description = "SQL keywords data constructors into OverloadedString";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "sqlite-simple" = callPackage
    ({ mkDerivation, attoparsec, base, base16-bytestring, blaze-builder
     , blaze-textual, bytestring, containers, direct-sqlite, HUnit, Only
     , semigroups, template-haskell, text, time, transformers
     }:
     mkDerivation {
       pname = "sqlite-simple";
       version = "0.4.16.0";
       sha256 = "1pih3nbfczyb91smci2dg9p1wvjsqiv5f5y97q6vqzlns64a3lk0";
       libraryHaskellDepends = [
         attoparsec base blaze-builder blaze-textual bytestring containers
         direct-sqlite Only semigroups template-haskell text time
         transformers
       ];
       testHaskellDepends = [
         base base16-bytestring bytestring direct-sqlite HUnit text time
       ];
       homepage = "http://github.com/nurpax/sqlite-simple";
       description = "Mid-Level SQLite client library";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "sqlite-simple-errors" = callPackage
    ({ mkDerivation, base, mtl, parsec, sqlite-simple, text }:
     mkDerivation {
       pname = "sqlite-simple-errors";
       version = "0.6.1.0";
       sha256 = "0vvim8zcrl3yqhf30j69x59qs5f6sdx5bvy4ihwmimkldm5gh0ai";
       libraryHaskellDepends = [ base parsec sqlite-simple text ];
       testHaskellDepends = [ base mtl sqlite-simple text ];
       homepage = "https://github.com/caneroj1/sqlite-simple-errors";
       description = "Wrapper around errors from sqlite-simple";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "squeal-postgresql" = callPackage
    ({ mkDerivation, aeson, base, binary-parser, bytestring
     , bytestring-strict-builder, deepseq, doctest, generics-sop
     , lifted-base, mmorph, monad-control, mtl, network-ip
     , postgresql-binary, postgresql-libpq, profunctors, resource-pool
     , scientific, text, time, transformers, transformers-base
     , uuid-types, vector
     }:
     mkDerivation {
       pname = "squeal-postgresql";
       version = "0.3.2.0";
       sha256 = "022bh32r5cgkiical5jc7ax9im5a3nfl8v2cxc7v1rkq6ag2rclq";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         aeson base binary-parser bytestring bytestring-strict-builder
         deepseq generics-sop lifted-base mmorph monad-control mtl
         network-ip postgresql-binary postgresql-libpq profunctors
         resource-pool scientific text time transformers transformers-base
         uuid-types vector
       ];
       executableHaskellDepends = [
         base bytestring generics-sop mtl text transformers
         transformers-base vector
       ];
       testHaskellDepends = [ base doctest ];
       doCheck = false;
       homepage = "https://github.com/morphismtech/squeal";
       description = "Squeal PostgreSQL Library";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "srcloc" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "srcloc";
       version = "0.5.1.2";
       sha256 = "0vn0zqsk191ghh2993hls05hp7kvnskaafnfrrqhfbmpdg7dp7h6";
       libraryHaskellDepends = [ base ];
       homepage = "https://github.com/mainland/srcloc";
       description = "Data types for managing source code locations";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "stache" = callPackage
    ({ mkDerivation, aeson, base, bytestring, containers, criterion
     , deepseq, directory, file-embed, filepath, hspec, hspec-megaparsec
     , megaparsec, mtl, template-haskell, text, unordered-containers
     , vector, yaml
     }:
     mkDerivation {
       pname = "stache";
       version = "1.2.1";
       sha256 = "0fqipjyin2hpklm0gaab4qhcfj9gzkpb2g948sqzf1n6alkxvyvb";
       revision = "8";
       editedCabalFile = "0jz9cg3w71nvxc4y6hrwjayxl2291q5xm5r4qrhz1ag1lvzk26yn";
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [
         aeson base bytestring containers deepseq directory filepath
         megaparsec mtl template-haskell text unordered-containers vector
       ];
       testHaskellDepends = [
         aeson base bytestring containers file-embed hspec hspec-megaparsec
         megaparsec template-haskell text yaml
       ];
       benchmarkHaskellDepends = [
         aeson base criterion deepseq megaparsec text
       ];
       homepage = "https://github.com/stackbuilders/stache";
       description = "Mustache templates for Haskell";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "stack" = callPackage
    ({ mkDerivation, aeson, annotated-wl-pprint, ansi-terminal, async
     , attoparsec, base, base64-bytestring, bindings-uname, bytestring
     , Cabal, conduit, conduit-extra, containers, cryptonite
     , cryptonite-conduit, deepseq, directory, echo, exceptions, extra
     , file-embed, filelock, filepath, fsnotify, generic-deriving
     , hackage-security, hashable, hpack, hpc, hspec, http-client
     , http-client-tls, http-conduit, http-types, memory, microlens
     , mintty, monad-logger, mono-traversable, mtl, mustache
     , neat-interpolation, network-uri, open-browser
     , optparse-applicative, path, path-io, persistent
     , persistent-sqlite, persistent-template, pretty, primitive
     , process, project-template, QuickCheck, regex-applicative-text
     , resourcet, retry, rio, semigroups, smallcheck, split, stm, store
     , store-core, streaming-commons, tar, template-haskell, temporary
     , text, text-metrics, th-reify-many, time, tls, transformers
     , typed-process, unicode-transforms, unix, unix-compat, unliftio
     , unordered-containers, vector, yaml, zip-archive, zlib
     }:
     mkDerivation {
       pname = "stack";
       version = "1.7.1";
       sha256 = "17rjc9fz1hn56jz4bnhhm50h5x71r69jizlw6dx7kfvm57hg5i0r";
       revision = "10";
       editedCabalFile = "1985lm9m6pm9mi4h4m2nrn9v2rnnfh14slcnqgyxy6k934xqvg35";
       configureFlags = [
         "-fdisable-git-info" "-fhide-dependency-versions"
         "-fsupported-build"
       ];
       isLibrary = true;
       isExecutable = true;
       setupHaskellDepends = [ base Cabal filepath ];
       libraryHaskellDepends = [
         aeson annotated-wl-pprint ansi-terminal async attoparsec base
         base64-bytestring bindings-uname bytestring Cabal conduit
         conduit-extra containers cryptonite cryptonite-conduit deepseq
         directory echo exceptions extra file-embed filelock filepath
         fsnotify generic-deriving hackage-security hashable hpack hpc
         http-client http-client-tls http-conduit http-types memory
         microlens mintty monad-logger mono-traversable mtl mustache
         neat-interpolation network-uri open-browser optparse-applicative
         path path-io persistent persistent-sqlite persistent-template
         pretty primitive process project-template regex-applicative-text
         resourcet retry rio semigroups split stm store store-core
         streaming-commons tar template-haskell temporary text text-metrics
         th-reify-many time tls transformers typed-process
         unicode-transforms unix unix-compat unliftio unordered-containers
         vector yaml zip-archive zlib
       ];
       executableHaskellDepends = [
         aeson annotated-wl-pprint ansi-terminal async attoparsec base
         base64-bytestring bindings-uname bytestring Cabal conduit
         conduit-extra containers cryptonite cryptonite-conduit deepseq
         directory echo exceptions extra file-embed filelock filepath
         fsnotify generic-deriving hackage-security hashable hpack hpc
         http-client http-client-tls http-conduit http-types memory
         microlens mintty monad-logger mono-traversable mtl mustache
         neat-interpolation network-uri open-browser optparse-applicative
         path path-io persistent persistent-sqlite persistent-template
         pretty primitive process project-template regex-applicative-text
         resourcet retry rio semigroups split stm store store-core
         streaming-commons tar template-haskell temporary text text-metrics
         th-reify-many time tls transformers typed-process
         unicode-transforms unix unix-compat unliftio unordered-containers
         vector yaml zip-archive zlib
       ];
       testHaskellDepends = [
         aeson annotated-wl-pprint ansi-terminal async attoparsec base
         base64-bytestring bindings-uname bytestring Cabal conduit
         conduit-extra containers cryptonite cryptonite-conduit deepseq
         directory echo exceptions extra file-embed filelock filepath
         fsnotify generic-deriving hackage-security hashable hpack hpc hspec
         http-client http-client-tls http-conduit http-types memory
         microlens mintty monad-logger mono-traversable mtl mustache
         neat-interpolation network-uri open-browser optparse-applicative
         path path-io persistent persistent-sqlite persistent-template
         pretty primitive process project-template QuickCheck
         regex-applicative-text resourcet retry rio semigroups smallcheck
         split stm store store-core streaming-commons tar template-haskell
         temporary text text-metrics th-reify-many time tls transformers
         typed-process unicode-transforms unix unix-compat unliftio
         unordered-containers vector yaml zip-archive zlib
       ];
       doCheck = false;
       preCheck = "export HOME=$TMPDIR";
       postInstall = ''
         exe=$out/bin/stack
         mkdir -p $out/share/bash-completion/completions
         $exe --bash-completion-script $exe >$out/share/bash-completion/completions/stack
       '';
       homepage = "http://haskellstack.org";
       description = "The Haskell Tool Stack";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "starter" = callPackage
    ({ mkDerivation, base, fsnotify }:
     mkDerivation {
       pname = "starter";
       version = "0.3.0";
       sha256 = "14rxrs1gjsm26m7rk4rj9b2389zca0j24kjl7sfznqpxgk99qmpx";
       libraryHaskellDepends = [ base fsnotify ];
       homepage = "https://github.com/rkaippully/starter#readme";
       description = "Develop applications without restarts";
       license = stdenv.lib.licenses.mpl20;
     }) {};
  "state-codes" = callPackage
    ({ mkDerivation, aeson, base, hspec, QuickCheck, shakespeare, text
     }:
     mkDerivation {
       pname = "state-codes";
       version = "0.1.3";
       sha256 = "18gls0gyk3iz9i03zw31x3xhi5m1y2r98qkkrah8kz07fsbxqrqn";
       libraryHaskellDepends = [ aeson base shakespeare text ];
       testHaskellDepends = [ aeson base hspec QuickCheck text ];
       homepage = "https://github.com/acamino/state-codes#README";
       description = "ISO 3166-2:US state codes and i18n names";
       license = stdenv.lib.licenses.mit;
     }) {};
  "stateref" = callPackage
    ({ mkDerivation, base, mtl, stm }:
     mkDerivation {
       pname = "stateref";
       version = "0.3";
       sha256 = "0hdpw6g255lj7jjvgqwhjdpzmka546vda5qjvry8gjj6nfm91lvx";
       libraryHaskellDepends = [ base mtl stm ];
       homepage = "http://code.haskell.org/~mokus/stateref/";
       description = "Abstraction for things that work like IORef";
       license = stdenv.lib.licenses.publicDomain;
     }) {};
  "statestack" = callPackage
    ({ mkDerivation, base, mtl, transformers, transformers-compat }:
     mkDerivation {
       pname = "statestack";
       version = "0.2.0.5";
       sha256 = "0rjzx9iy5mx5igir6gvslznnx3gpxlb1xy1n8h4cn54cn3wxrspl";
       revision = "3";
       editedCabalFile = "0s9v88gcc5wnfj4c6xq86asadmh4y8z8ycv2wz5nwfwfazfgzcy3";
       libraryHaskellDepends = [
         base mtl transformers transformers-compat
       ];
       description = "Simple State-like monad transformer with saveable and restorable state";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "static-canvas" = callPackage
    ({ mkDerivation, base, double-conversion, free, mtl, text }:
     mkDerivation {
       pname = "static-canvas";
       version = "0.2.0.3";
       sha256 = "0jfp3nk9flzjw0qjkbh7rk7q0g6dsmgqb2xwrfmg5pnf13gj821p";
       revision = "1";
       editedCabalFile = "1z3mi5z590xxmipd5fxylcmf39rrwvmwva2rkk6km1nxb5kfasl7";
       libraryHaskellDepends = [ base double-conversion free mtl text ];
       homepage = "https://github.com/jeffreyrosenbluth/static-canvas";
       description = "DSL to generate HTML5 Canvas javascript";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "static-text" = callPackage
    ({ mkDerivation, base, bytestring, template-haskell, text, vector
     }:
     mkDerivation {
       pname = "static-text";
       version = "0.2.0.3";
       sha256 = "189x85skhzms3iydzh4gd5hmklx7ps2skzymls514drg8cz7m7ar";
       libraryHaskellDepends = [
         base bytestring template-haskell text vector
       ];
       doCheck = false;
       homepage = "https://github.com/dzhus/static-text#readme";
       description = "Lists, Texts, ByteStrings and Vectors of statically known length";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "statistics" = callPackage
    ({ mkDerivation, aeson, base, base-orphans, binary, deepseq, erf
     , HUnit, ieee754, math-functions, monad-par, mwc-random, primitive
     , QuickCheck, test-framework, test-framework-hunit
     , test-framework-quickcheck2, vector, vector-algorithms
     , vector-binary-instances, vector-th-unbox
     }:
     mkDerivation {
       pname = "statistics";
       version = "0.14.0.2";
       sha256 = "0y27gafkib0x0fn39qfn2rkgsfrm09ng35sbb5dwr7rclhnxz59l";
       revision = "2";
       editedCabalFile = "1bx70yqkn62ii17fjv3pig4hklrzkqd09zj67zzjiyjzmn04fir3";
       libraryHaskellDepends = [
         aeson base base-orphans binary deepseq erf math-functions monad-par
         mwc-random primitive vector vector-algorithms
         vector-binary-instances vector-th-unbox
       ];
       testHaskellDepends = [
         aeson base binary erf HUnit ieee754 math-functions mwc-random
         primitive QuickCheck test-framework test-framework-hunit
         test-framework-quickcheck2 vector vector-algorithms
       ];
       doCheck = false;
       homepage = "https://github.com/bos/statistics";
       description = "A library of statistical types, data, and functions";
       license = stdenv.lib.licenses.bsd2;
     }) {};
  "stb-image-redux" = callPackage
    ({ mkDerivation, base, vector }:
     mkDerivation {
       pname = "stb-image-redux";
       version = "0.2.1.2";
       sha256 = "1s23f38za0zv9vzj4qn5qq2ajhgr6g9gsd2nck2hmkqfjpw1mx1v";
       libraryHaskellDepends = [ base vector ];
       doCheck = false;
       homepage = "https://github.com/typedrat/stb-image-redux#readme";
       description = "Image loading and writing microlibrary";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "step-function" = callPackage
    ({ mkDerivation, base, base-compat-batteries, containers, deepseq
     , QuickCheck
     }:
     mkDerivation {
       pname = "step-function";
       version = "0.2";
       sha256 = "1mg7zqqs32zdh1x1738kk0yydyksbhx3y3x8n31f7byk5fvzqq6j";
       revision = "1";
       editedCabalFile = "03ga9vwaxsf0c73fciavkm925l7lkgya1a6xghyb8ainrav0bfq4";
       libraryHaskellDepends = [
         base base-compat-batteries containers deepseq QuickCheck
       ];
       testHaskellDepends = [ base QuickCheck ];
       homepage = "https://github.com/jonpetterbergman/step-function";
       description = "Staircase functions or piecewise constant functions";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "stm" = callPackage
    ({ mkDerivation, array, base }:
     mkDerivation {
       pname = "stm";
       version = "2.4.5.1";
       sha256 = "1x53lg07j6d42vnmmk2f9sfqx2v4hxjk3hm11fccjdi70s0c5w3c";
       libraryHaskellDepends = [ array base ];
       homepage = "https://wiki.haskell.org/Software_transactional_memory";
       description = "Software Transactional Memory";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "stm-chans" = callPackage
    ({ mkDerivation, base, Cabal, stm }:
     mkDerivation {
       pname = "stm-chans";
       version = "3.0.0.4";
       sha256 = "0f27sp09yha43xk9q55sc185jyjs5h7gq2dhsyx6bm9kz9dzqi13";
       revision = "1";
       editedCabalFile = "0v9axxcfszqdmf3dhjxy34ybh22x3r5c48mdnbvjh5i5lp7g7vp2";
       setupHaskellDepends = [ base Cabal ];
       libraryHaskellDepends = [ base stm ];
       homepage = "http://code.haskell.org/~wren/";
       description = "Additional types of channels for STM";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "stm-conduit" = callPackage
    ({ mkDerivation, async, base, cereal, cereal-conduit, conduit
     , conduit-extra, directory, doctest, exceptions, HUnit, monad-loops
     , QuickCheck, resourcet, stm, stm-chans, test-framework
     , test-framework-hunit, test-framework-quickcheck2, transformers
     , unliftio
     }:
     mkDerivation {
       pname = "stm-conduit";
       version = "4.0.1";
       sha256 = "0hhlxvpp7mah8dcvkknh6skx44jfk3092zz2w52zlr255bkmn3p8";
       libraryHaskellDepends = [
         async base cereal cereal-conduit conduit conduit-extra directory
         exceptions monad-loops resourcet stm stm-chans transformers
         unliftio
       ];
       testHaskellDepends = [
         base conduit directory doctest HUnit QuickCheck resourcet stm
         stm-chans test-framework test-framework-hunit
         test-framework-quickcheck2 transformers unliftio
       ];
       homepage = "https://github.com/cgaebel/stm-conduit";
       description = "Introduces conduits to channels, and promotes using conduits concurrently";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "stm-containers" = callPackage
    ({ mkDerivation, base, base-prelude, focus, hashable, list-t
     , primitive, transformers
     }:
     mkDerivation {
       pname = "stm-containers";
       version = "0.2.16";
       sha256 = "0bsha98j8ryzcrcs3n1iyrvx7b37ipc66f7qxkhnkp3wch32y139";
       libraryHaskellDepends = [
         base base-prelude focus hashable list-t primitive transformers
       ];
       doCheck = false;
       homepage = "https://github.com/nikita-volkov/stm-containers";
       description = "Containers for STM";
       license = stdenv.lib.licenses.mit;
     }) {};
  "stm-delay" = callPackage
    ({ mkDerivation, base, stm }:
     mkDerivation {
       pname = "stm-delay";
       version = "0.1.1.1";
       sha256 = "0cla21v89gcvmr1iwzibq13v1yq02xg4h6k9l6kcprj7mhd5hcmi";
       libraryHaskellDepends = [ base stm ];
       testHaskellDepends = [ base stm ];
       doCheck = false;
       homepage = "https://github.com/joeyadams/haskell-stm-delay";
       description = "Updatable one-shot timer polled with STM";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "stm-extras" = callPackage
    ({ mkDerivation, base, stm }:
     mkDerivation {
       pname = "stm-extras";
       version = "0.1.0.3";
       sha256 = "0pmpf1r8q1favrbgvrnggvs93vwvml79yfqbs4xjqnjsglahl8c8";
       libraryHaskellDepends = [ base stm ];
       homepage = "https://github.com/louispan/stm-extras#readme";
       description = "Extra STM functions";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "stm-split" = callPackage
    ({ mkDerivation, base, stm }:
     mkDerivation {
       pname = "stm-split";
       version = "0.0.2.1";
       sha256 = "06c41p01x62p79bzwryjxr34l7cj65gl227fwwsvd9l6ihk8grp8";
       libraryHaskellDepends = [ base stm ];
       description = "TMVars, TVars and TChans with distinguished input and output side";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "stm-stats" = callPackage
    ({ mkDerivation, base, containers, stm, template-haskell, time }:
     mkDerivation {
       pname = "stm-stats";
       version = "0.2.0.0";
       sha256 = "0i8ky2l8lvh7nymxglvbifp0ylbyjw20p75avzb51zpzx6qkjkqa";
       libraryHaskellDepends = [
         base containers stm template-haskell time
       ];
       description = "retry statistics for STM transactions";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "stopwatch" = callPackage
    ({ mkDerivation, base, clock, hspec, transformers }:
     mkDerivation {
       pname = "stopwatch";
       version = "0.1.0.5";
       sha256 = "0q9l27cpfz5hs3ggxij0lk8p3vrgkjg1binhv2nwss4dvygdc7j6";
       libraryHaskellDepends = [ base clock transformers ];
       testHaskellDepends = [ base clock hspec ];
       homepage = "https://github.com/debug-ito/stopwatch";
       description = "A simple stopwatch utility";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "storable-complex" = callPackage
    ({ mkDerivation, base, base-orphans }:
     mkDerivation {
       pname = "storable-complex";
       version = "0.2.3.0";
       sha256 = "0fnwbfmd5vsaaqvf9182qdcjrzcfjd1zhdyvjwzifbwvn6r9kx4s";
       libraryHaskellDepends = [ base base-orphans ];
       homepage = "https://github.com/cartazio/storable-complex";
       description = "Storable instance for Complex";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "storable-endian" = callPackage
    ({ mkDerivation, base, byteorder }:
     mkDerivation {
       pname = "storable-endian";
       version = "0.2.6";
       sha256 = "12allvahkgx1nr10z4gp07gwaxqf52n4yyzihdxiilsf127sqhrp";
       revision = "1";
       editedCabalFile = "12f8sscsvsarlwz3p6kk9vbvqsbyhs8lhafgn9h7c0z6pz1amrya";
       libraryHaskellDepends = [ base byteorder ];
       description = "Storable instances with endianness";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "storable-record" = callPackage
    ({ mkDerivation, base, semigroups, transformers, utility-ht }:
     mkDerivation {
       pname = "storable-record";
       version = "0.0.4";
       sha256 = "0hjs1km0fc9ch0i1rbycxia5w3939hk4p4md73ikgg4aipqb5zyf";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         base semigroups transformers utility-ht
       ];
       homepage = "http://code.haskell.org/~thielema/storable-record/";
       description = "Elegant definition of Storable instances for records";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "storable-tuple" = callPackage
    ({ mkDerivation, base, base-orphans, storable-record, utility-ht }:
     mkDerivation {
       pname = "storable-tuple";
       version = "0.0.3.3";
       sha256 = "0dfzhxgkn1l6ls7zh6iifhyvhm8l47n40z0ar23c6ibsa94w1ynw";
       libraryHaskellDepends = [
         base base-orphans storable-record utility-ht
       ];
       homepage = "http://code.haskell.org/~thielema/storable-tuple/";
       description = "Storable instance for pairs and triples";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "storablevector" = callPackage
    ({ mkDerivation, base, bytestring, deepseq, non-negative
     , QuickCheck, random, sample-frame, semigroups, syb, transformers
     , unsafe, utility-ht
     }:
     mkDerivation {
       pname = "storablevector";
       version = "0.2.13";
       sha256 = "1zmr738vwnhnyxbikayqnaz31ilv2qlmscp6iqgl7adcfbal4dzq";
       libraryHaskellDepends = [
         base deepseq non-negative QuickCheck semigroups syb transformers
         unsafe utility-ht
       ];
       testHaskellDepends = [
         base bytestring QuickCheck random utility-ht
       ];
       benchmarkHaskellDepends = [
         base deepseq sample-frame unsafe utility-ht
       ];
       homepage = "http://www.haskell.org/haskellwiki/Storable_Vector";
       description = "Fast, packed, strict storable arrays with a list interface like ByteString";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "store" = callPackage
    ({ mkDerivation, array, async, base, base-orphans
     , base64-bytestring, bifunctors, bytestring, containers
     , contravariant, criterion, cryptohash, deepseq, directory
     , filepath, free, ghc-prim, hashable, hspec, hspec-smallcheck
     , integer-gmp, lifted-base, monad-control, mono-traversable
     , network, primitive, resourcet, safe, semigroups, smallcheck
     , store-core, syb, template-haskell, text, th-lift
     , th-lift-instances, th-orphans, th-reify-many, th-utilities, time
     , transformers, unordered-containers, vector, void
     }:
     mkDerivation {
       pname = "store";
       version = "0.5.0.1";
       sha256 = "0dpm7752p8lhlwq5nlhqxwq1c5nyi97rnj83j2im3i9wvs2qb3i3";
       libraryHaskellDepends = [
         array async base base-orphans base64-bytestring bifunctors
         bytestring containers contravariant cryptohash deepseq directory
         filepath free ghc-prim hashable hspec hspec-smallcheck integer-gmp
         lifted-base monad-control mono-traversable network primitive
         resourcet safe semigroups smallcheck store-core syb
         template-haskell text th-lift th-lift-instances th-orphans
         th-reify-many th-utilities time transformers unordered-containers
         vector void
       ];
       benchmarkHaskellDepends = [
         array async base base-orphans base64-bytestring bifunctors
         bytestring containers contravariant criterion cryptohash deepseq
         directory filepath free ghc-prim hashable hspec hspec-smallcheck
         integer-gmp lifted-base monad-control mono-traversable network
         primitive resourcet safe semigroups smallcheck store-core syb
         template-haskell text th-lift th-lift-instances th-orphans
         th-reify-many th-utilities time transformers unordered-containers
         vector void
       ];
       doCheck = false;
       homepage = "https://github.com/fpco/store#readme";
       description = "Fast binary serialization";
       license = stdenv.lib.licenses.mit;
     }) {};
  "store-core" = callPackage
    ({ mkDerivation, base, bytestring, ghc-prim, primitive, text
     , transformers
     }:
     mkDerivation {
       pname = "store-core";
       version = "0.4.4";
       sha256 = "1489ydwmq3vd9lz193m5w277wvb9g74ssc1ncfjdry2g0y6czbjv";
       libraryHaskellDepends = [
         base bytestring ghc-prim primitive text transformers
       ];
       homepage = "https://github.com/fpco/store#readme";
       description = "Fast and lightweight binary serialization";
       license = stdenv.lib.licenses.mit;
     }) {};
  "stratosphere" = callPackage
    ({ mkDerivation, aeson, aeson-pretty, base, bytestring, containers
     , hashable, hspec, hspec-discover, lens, template-haskell, text
     , unordered-containers
     }:
     mkDerivation {
       pname = "stratosphere";
       version = "0.24.4";
       sha256 = "0n4gry4vgqb64vy9ncyz3hcsjv31a869al5kbwgzi7pd7rp61zla";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         aeson aeson-pretty base bytestring containers hashable lens
         template-haskell text unordered-containers
       ];
       testHaskellDepends = [
         aeson aeson-pretty base bytestring containers hashable hspec
         hspec-discover lens template-haskell text unordered-containers
       ];
       testToolDepends = [ hspec-discover ];
       homepage = "https://github.com/frontrowed/stratosphere#readme";
       description = "EDSL for AWS CloudFormation";
       license = stdenv.lib.licenses.mit;
     }) {};
  "streaming" = callPackage
    ({ mkDerivation, base, containers, ghc-prim, mmorph, mtl
     , semigroups, transformers, transformers-base
     }:
     mkDerivation {
       pname = "streaming";
       version = "0.2.2.0";
       sha256 = "04fdw4f51yb16bv3b7z97vqxbns8rv2ag2aphglm29jsd527fsss";
       libraryHaskellDepends = [
         base containers ghc-prim mmorph mtl semigroups transformers
         transformers-base
       ];
       homepage = "https://github.com/haskell-streaming/streaming";
       description = "an elementary streaming prelude and general stream type";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "streaming-attoparsec" = callPackage
    ({ mkDerivation, attoparsec, base, bytestring, streaming
     , streaming-bytestring, tasty, tasty-hunit
     }:
     mkDerivation {
       pname = "streaming-attoparsec";
       version = "1.0.0";
       sha256 = "00k1vwqr7ns7s4r6xvq59kpwimqd0f02jj0ay4zg167dd5994a7z";
       revision = "2";
       editedCabalFile = "07hqs8nn1rhsqckqmw46yp19kd0vk35q139al6yq0k1dzpvsrcsx";
       libraryHaskellDepends = [
         attoparsec base bytestring streaming streaming-bytestring
       ];
       testHaskellDepends = [
         attoparsec base bytestring streaming streaming-bytestring tasty
         tasty-hunit
       ];
       homepage = "https://github.com/haskell-streaming/streaming-attoparsec";
       description = "Attoparsec integration for the streaming ecosystem";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "streaming-bytestring" = callPackage
    ({ mkDerivation, base, bytestring, deepseq, exceptions, mmorph, mtl
     , resourcet, smallcheck, streaming, tasty, tasty-smallcheck
     , transformers, transformers-base
     }:
     mkDerivation {
       pname = "streaming-bytestring";
       version = "0.1.6";
       sha256 = "1lsklavhk6wcsgjr2rcwkkv827gnd9spv4zwz5i5zf3njvy27my1";
       libraryHaskellDepends = [
         base bytestring deepseq exceptions mmorph mtl resourcet streaming
         transformers transformers-base
       ];
       testHaskellDepends = [
         base bytestring smallcheck streaming tasty tasty-smallcheck
         transformers
       ];
       homepage = "https://github.com/haskell-streaming/streaming-bytestring";
       description = "effectful byte steams, or: bytestring io done right";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "streaming-commons" = callPackage
    ({ mkDerivation, array, async, base, bytestring, deepseq, directory
     , gauge, hspec, network, process, QuickCheck, random, stm, text
     , transformers, unix, zlib
     }:
     mkDerivation {
       pname = "streaming-commons";
       version = "0.2.1.0";
       sha256 = "13fn6qmpiggwpn8lczyydgp77cyzfypwds7wxskrwir4i5cgxlfq";
       libraryHaskellDepends = [
         array async base bytestring directory network process random stm
         text transformers unix zlib
       ];
       testHaskellDepends = [
         array async base bytestring deepseq hspec network QuickCheck text
         unix zlib
       ];
       benchmarkHaskellDepends = [ base bytestring deepseq gauge text ];
       homepage = "https://github.com/fpco/streaming-commons";
       description = "Common lower-level functions needed by various streaming data libraries";
       license = stdenv.lib.licenses.mit;
     }) {};
  "streaming-wai" = callPackage
    ({ mkDerivation, base, bytestring, bytestring-builder, http-types
     , streaming, wai
     }:
     mkDerivation {
       pname = "streaming-wai";
       version = "0.1.1";
       sha256 = "0c5gpxnpfz4hk7ypigdnq1w7h6wslzfpib1y3drj67fchqiiid1m";
       libraryHaskellDepends = [
         base bytestring bytestring-builder http-types streaming wai
       ];
       homepage = "http://github.com/jb55/streaming-wai";
       description = "Streaming Wai utilities";
       license = stdenv.lib.licenses.mit;
     }) {};
  "streamly" = callPackage
    ({ mkDerivation, atomic-primops, base, containers, deepseq
     , exceptions, gauge, heaps, hspec, lockfree-queue, monad-control
     , mtl, QuickCheck, random, transformers, transformers-base
     }:
     mkDerivation {
       pname = "streamly";
       version = "0.3.0";
       sha256 = "0ssp66w8qbfbx9p6hdgvddp3d82i1b4b0n9jbji6cyvf7v8b7m1k";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         atomic-primops base containers exceptions heaps lockfree-queue
         monad-control mtl transformers transformers-base
       ];
       testHaskellDepends = [
         base containers exceptions hspec mtl QuickCheck random transformers
       ];
       benchmarkHaskellDepends = [ base deepseq gauge random ];
       homepage = "https://github.com/composewell/streamly";
       description = "Beautiful Streaming, Concurrent and Reactive Composition";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "streamproc" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "streamproc";
       version = "1.6.2";
       sha256 = "1wl44n4nav4h203mzfdf1bd5nh4v23dib54lvxka1rl3zymgyvp7";
       libraryHaskellDepends = [ base ];
       homepage = "http://github.com/peti/streamproc";
       description = "Stream Processer Arrow";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "streams" = callPackage
    ({ mkDerivation, adjunctions, base, comonad, distributive
     , semigroupoids, semigroups
     }:
     mkDerivation {
       pname = "streams";
       version = "3.3";
       sha256 = "0h2fjlcsqnwwsqdk371m6drb119rx76b122mmwkd7zl3d86zhcr9";
       libraryHaskellDepends = [
         adjunctions base comonad distributive semigroupoids semigroups
       ];
       homepage = "http://github.com/ekmett/streams/issues";
       description = "Various Haskell 2010 stream comonads";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "strict" = callPackage
    ({ mkDerivation, array, base }:
     mkDerivation {
       pname = "strict";
       version = "0.3.2";
       sha256 = "08cjajqz9h47fkq98mlf3rc8n5ghbmnmgn8pfsl3bdldjdkmmlrc";
       libraryHaskellDepends = [ array base ];
       homepage = "http://www.cse.unsw.edu.au/~rl/code/strict.html";
       description = "Strict data types and String IO";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "strict-base-types" = callPackage
    ({ mkDerivation, aeson, base, bifunctors, binary, deepseq, ghc-prim
     , hashable, lens, QuickCheck, strict
     }:
     mkDerivation {
       pname = "strict-base-types";
       version = "0.6.1";
       sha256 = "0yihvjijag9g55ihrgqj0vwn6ksvscj3r0n2zzxz2qbxrhx6m1pq";
       libraryHaskellDepends = [
         aeson base bifunctors binary deepseq ghc-prim hashable lens
         QuickCheck strict
       ];
       homepage = "https://github.com/meiersi/strict-base-types";
       description = "Strict variants of the types provided in base";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "strict-concurrency" = callPackage
    ({ mkDerivation, base, deepseq }:
     mkDerivation {
       pname = "strict-concurrency";
       version = "0.2.4.3";
       sha256 = "1h2nk5fn6gclzkwn5mbkb7gcqisms8y5m3kr64hd9lska3n39n82";
       libraryHaskellDepends = [ base deepseq ];
       homepage = "https://github.com/ygale/strict-concurrency";
       description = "Strict concurrency abstractions";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "string-class" = callPackage
    ({ mkDerivation, base, bytestring, tagged, text }:
     mkDerivation {
       pname = "string-class";
       version = "0.1.7.0";
       sha256 = "1s0bj0wvwriw4516za6ar7w7zsz5mmnf1dba0ch239n27rb00nwf";
       libraryHaskellDepends = [ base bytestring tagged text ];
       homepage = "https://github.com/string-class/string-class";
       description = "String class library";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "string-combinators" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "string-combinators";
       version = "0.6.0.5";
       sha256 = "07ky2z5f1l5mb7r3rvyraak0bzciq4krkg5lv8g0a5vxpnzlm4cl";
       libraryHaskellDepends = [ base ];
       homepage = "https://github.com/basvandijk/string-combinators";
       description = "Polymorphic functions to build and combine stringlike values";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "string-conv" = callPackage
    ({ mkDerivation, base, bytestring, text }:
     mkDerivation {
       pname = "string-conv";
       version = "0.1.2";
       sha256 = "0fb04bm384rpiq7kd7v783z1sriqialvjyn0f6dg2si9dwza0ngj";
       libraryHaskellDepends = [ base bytestring text ];
       homepage = "https://github.com/Soostone/string-conv";
       description = "Standardized conversion between string types";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "string-conversions" = callPackage
    ({ mkDerivation, base, bytestring, deepseq, hspec, QuickCheck
     , quickcheck-instances, text, utf8-string
     }:
     mkDerivation {
       pname = "string-conversions";
       version = "0.4.0.1";
       sha256 = "150rdank90h7v08x0wq4dffjbxv2daf5v9sqfs5mab76kinwxg26";
       libraryHaskellDepends = [ base bytestring text utf8-string ];
       testHaskellDepends = [
         base bytestring deepseq hspec QuickCheck quickcheck-instances text
         utf8-string
       ];
       homepage = "https://github.com/soenkehahn/string-conversions#readme";
       description = "Simplifies dealing with different types for strings";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "string-qq" = callPackage
    ({ mkDerivation, base, Cabal, process, template-haskell }:
     mkDerivation {
       pname = "string-qq";
       version = "0.0.2";
       sha256 = "0662m3i5xrdrr95w829bszkhp88mj9iy1zya54vk2sl5hz9wlmwp";
       revision = "1";
       editedCabalFile = "1flc6mr1nnv8mx69cy1ilwk5gxsidcns82vjdg8dcs8z5axg95kp";
       enableSeparateDataOutput = true;
       setupHaskellDepends = [ base Cabal process ];
       libraryHaskellDepends = [ base template-haskell ];
       description = "QuasiQuoter for non-interpolated strings, texts and bytestrings";
       license = stdenv.lib.licenses.publicDomain;
     }) {};
  "string-transform" = callPackage
    ({ mkDerivation, base, bytestring, tasty, tasty-hunit
     , tasty-smallcheck, text, utf8-string
     }:
     mkDerivation {
       pname = "string-transform";
       version = "1.1.0";
       sha256 = "1f76aiimm2knc68g08dc9j495mjkas87jw8w27silrsq3pzayzad";
       libraryHaskellDepends = [ base bytestring text utf8-string ];
       testHaskellDepends = [
         base bytestring tasty tasty-hunit tasty-smallcheck text utf8-string
       ];
       homepage = "https://github.com/ncaq/string-transform#readme";
       description = "simple and easy haskell string transform wrapper";
       license = stdenv.lib.licenses.mit;
     }) {};
  "stringbuilder" = callPackage
    ({ mkDerivation, base, hspec, QuickCheck }:
     mkDerivation {
       pname = "stringbuilder";
       version = "0.5.1";
       sha256 = "1fh3csx1wcssn8xyvl4ip4aprh9l4qyz2kk8mgjvqvc0vb2bsy6q";
       libraryHaskellDepends = [ base ];
       testHaskellDepends = [ base hspec QuickCheck ];
       description = "A writer monad for multi-line string literals";
       license = stdenv.lib.licenses.mit;
     }) {};
  "stringsearch" = callPackage
    ({ mkDerivation, array, base, bytestring, containers }:
     mkDerivation {
       pname = "stringsearch";
       version = "0.3.6.6";
       sha256 = "0jpy9xjcjdbpi3wk6mg7xwd7wfi2mma70p97v1ij5i8bj9qijpr9";
       revision = "1";
       editedCabalFile = "0z5pz5dccapz9k39r2zmf056m0x2m2lj3jahhnw3mfxlmps07378";
       libraryHaskellDepends = [ array base bytestring containers ];
       homepage = "https://bitbucket.org/dafis/stringsearch";
       description = "Fast searching, splitting and replacing of ByteStrings";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "strive" = callPackage
    ({ mkDerivation, aeson, base, bytestring, data-default, gpolyline
     , http-client, http-client-tls, http-types, markdown-unlit
     , template-haskell, text, time, transformers
     }:
     mkDerivation {
       pname = "strive";
       version = "5.0.7";
       sha256 = "0hxy5znrfcls6bd8hjil97mya3w8zkppfd4jrz0ayz7zidbws5kg";
       libraryHaskellDepends = [
         aeson base bytestring data-default gpolyline http-client
         http-client-tls http-types template-haskell text time transformers
       ];
       testHaskellDepends = [
         aeson base bytestring data-default gpolyline http-client
         http-client-tls http-types markdown-unlit template-haskell text
         time transformers
       ];
       testToolDepends = [ markdown-unlit ];
       homepage = "https://github.com/tfausak/strive#readme";
       description = "A client for the Strava V3 API";
       license = stdenv.lib.licenses.mit;
     }) {};
  "structs" = callPackage
    ({ mkDerivation, base, Cabal, cabal-doctest, deepseq, directory
     , doctest, filepath, ghc-prim, hlint, parallel, primitive
     , template-haskell
     }:
     mkDerivation {
       pname = "structs";
       version = "0.1.1";
       sha256 = "0hdajhvd6i81dchdyd42fa17pm53jd7g3irqjfardbbmjx0sqq6z";
       revision = "2";
       editedCabalFile = "1v9gmnj17cm4p491rizvw9xdj255lk1y24gz6s8bqcz56sdb4d4s";
       setupHaskellDepends = [ base Cabal cabal-doctest ];
       libraryHaskellDepends = [
         base deepseq ghc-prim primitive template-haskell
       ];
       testHaskellDepends = [
         base directory doctest filepath hlint parallel
       ];
       homepage = "http://github.com/ekmett/structs/";
       description = "Strict GC'd imperative object-oriented programming with cheap pointers";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "stylish-haskell" = callPackage
    ({ mkDerivation, aeson, base, bytestring, containers, directory
     , file-embed, filepath, haskell-src-exts, HUnit, mtl
     , optparse-applicative, semigroups, strict, syb, test-framework
     , test-framework-hunit, yaml
     }:
     mkDerivation {
       pname = "stylish-haskell";
       version = "0.9.2.0";
       sha256 = "16r2nm1y0s5ybrq2pzsq00nfq7k0i70nyg7ynmhx76lld82i17yv";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         aeson base bytestring containers directory file-embed filepath
         haskell-src-exts mtl semigroups syb yaml
       ];
       executableHaskellDepends = [
         aeson base bytestring containers directory file-embed filepath
         haskell-src-exts mtl optparse-applicative strict syb yaml
       ];
       testHaskellDepends = [
         aeson base bytestring containers directory file-embed filepath
         haskell-src-exts HUnit mtl syb test-framework test-framework-hunit
         yaml
       ];
       homepage = "https://github.com/jaspervdj/stylish-haskell";
       description = "Haskell code prettifier";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "sum-type-boilerplate" = callPackage
    ({ mkDerivation, base, hspec, template-haskell }:
     mkDerivation {
       pname = "sum-type-boilerplate";
       version = "0.1.1";
       sha256 = "17xby0mqdsbax0afrfr3p8c6cj5r94byy8gprgyrmq84qqadls9i";
       libraryHaskellDepends = [ base template-haskell ];
       testHaskellDepends = [ base hspec template-haskell ];
       homepage = "https://github.com/jdreaver/sum-type-boilerplate#readme";
       description = "Library for reducing the boilerplate involved with sum types";
       license = stdenv.lib.licenses.mit;
     }) {};
  "sundown" = callPackage
    ({ mkDerivation, base, bytestring, text }:
     mkDerivation {
       pname = "sundown";
       version = "0.6";
       sha256 = "09xh3pbyarflfjk17bn2isgpmsq49d6gmq7z918kf4c32fc7x6yb";
       libraryHaskellDepends = [ base bytestring text ];
       homepage = "https://github.com/bitonic/sundown";
       description = "Bindings to the sundown markdown library";
       license = stdenv.lib.licenses.publicDomain;
     }) {};
  "superbuffer" = callPackage
    ({ mkDerivation, base, bytestring }:
     mkDerivation {
       pname = "superbuffer";
       version = "0.3.1.1";
       sha256 = "0y3c2v2ca5lzz6265bcn9g04j6aihm7kw8w91ywfl7bkg1agp9fp";
       libraryHaskellDepends = [ base bytestring ];
       doCheck = false;
       homepage = "https://github.com/agrafix/superbuffer#readme";
       description = "Efficiently build a bytestring from smaller chunks";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "svg-builder" = callPackage
    ({ mkDerivation, base, blaze-builder, bytestring, hashable, text
     , unordered-containers
     }:
     mkDerivation {
       pname = "svg-builder";
       version = "0.1.1";
       sha256 = "1k420f497lzkymmxin88ql6ib8dziic43avykv31yq65rgrf7l2g";
       revision = "1";
       editedCabalFile = "1bhp9gvid2iis411k1vvyj5krzc4ahxcqcd9cwx9h37jxg180xw1";
       libraryHaskellDepends = [
         base blaze-builder bytestring hashable text unordered-containers
       ];
       homepage = "https://github.com/diagrams/svg-builder.git";
       description = "DSL for building SVG";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "svg-tree" = callPackage
    ({ mkDerivation, attoparsec, base, bytestring, containers
     , JuicyPixels, lens, linear, mtl, scientific, text, transformers
     , vector, xml
     }:
     mkDerivation {
       pname = "svg-tree";
       version = "0.6.2.3";
       sha256 = "0snvv2l7fpj7nl1sxnpxz5h2xpskjxxl0l2c7bqkwhcj7571br99";
       libraryHaskellDepends = [
         attoparsec base bytestring containers JuicyPixels lens linear mtl
         scientific text transformers vector xml
       ];
       description = "SVG file loader and serializer";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "swagger" = callPackage
    ({ mkDerivation, aeson, base, bytestring, tasty, tasty-hunit, text
     , time, transformers
     }:
     mkDerivation {
       pname = "swagger";
       version = "0.3.0";
       sha256 = "1l2liyiycbix23yayf8zq1fndavfjc06529s8sr3w8hd5ar4y567";
       libraryHaskellDepends = [
         aeson base bytestring text time transformers
       ];
       testHaskellDepends = [ aeson base bytestring tasty tasty-hunit ];
       description = "Implementation of swagger data model";
       license = "unknown";
       hydraPlatforms = stdenv.lib.platforms.none;
     }) {};
  "swagger2" = callPackage
    ({ mkDerivation, aeson, aeson-qq, base, base-compat-batteries
     , bytestring, Cabal, cabal-doctest, containers, doctest
     , generics-sop, Glob, hashable, hspec, hspec-discover, http-media
     , HUnit, insert-ordered-containers, lens, mtl, network, QuickCheck
     , quickcheck-instances, scientific, template-haskell, text, time
     , transformers, transformers-compat, unordered-containers
     , uuid-types, vector
     }:
     mkDerivation {
       pname = "swagger2";
       version = "2.2.2";
       sha256 = "1jkfmfrldqrfqqnjf0g4spd03w9xjmi35k33xnhsmfj122455lw2";
       revision = "3";
       editedCabalFile = "187jl8slpyr6blcxnhdp7wf85ab54pgqnbl11n816xg6fyqy7ylk";
       setupHaskellDepends = [ base Cabal cabal-doctest ];
       libraryHaskellDepends = [
         aeson base base-compat-batteries bytestring containers generics-sop
         hashable http-media insert-ordered-containers lens mtl network
         scientific template-haskell text time transformers
         transformers-compat unordered-containers uuid-types vector
       ];
       testHaskellDepends = [
         aeson aeson-qq base base-compat-batteries bytestring containers
         doctest Glob hashable hspec HUnit insert-ordered-containers lens
         mtl QuickCheck quickcheck-instances text time unordered-containers
         vector
       ];
       testToolDepends = [ hspec-discover ];
       homepage = "https://github.com/GetShopTV/swagger2";
       description = "Swagger 2.0 data model";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "swish" = callPackage
    ({ mkDerivation, base, containers, directory, filepath, hashable
     , HUnit, intern, mtl, network-uri, old-locale, polyparse
     , semigroups, test-framework, test-framework-hunit, text, time
     }:
     mkDerivation {
       pname = "swish";
       version = "0.9.2.1";
       sha256 = "0zrzihgwn5lg23zmg2iqwilpfj6r77rh1am8g6rwkyf42bgvwhzg";
       isLibrary = true;
       isExecutable = true;
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [
         base containers directory filepath hashable intern mtl network-uri
         old-locale polyparse semigroups text time
       ];
       executableHaskellDepends = [ base ];
       testHaskellDepends = [
         base containers hashable HUnit network-uri old-locale semigroups
         test-framework test-framework-hunit text time
       ];
       homepage = "https://bitbucket.org/doug_burke/swish/wiki/Home";
       description = "A semantic web toolkit";
       license = stdenv.lib.licenses.lgpl21;
     }) {};
  "syb" = callPackage
    ({ mkDerivation, base, containers, HUnit, mtl }:
     mkDerivation {
       pname = "syb";
       version = "0.7";
       sha256 = "1da2zz7gqm4xbkx5vpd74dayx1svaxyl145fl14mq15lbb77sxdq";
       libraryHaskellDepends = [ base ];
       testHaskellDepends = [ base containers HUnit mtl ];
       homepage = "http://www.cs.uu.nl/wiki/GenericProgramming/SYB";
       description = "Scrap Your Boilerplate";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "symbol" = callPackage
    ({ mkDerivation, base, containers, deepseq }:
     mkDerivation {
       pname = "symbol";
       version = "0.2.4";
       sha256 = "0cc8kdm68pirb0s7n46v0yvw5b718qf7qip40jkg5q3c3xsafx6h";
       revision = "2";
       editedCabalFile = "0jdbaap11pkgb6m98v57k7qnx62pqxy7pa2i7293ywa4q305qgm1";
       libraryHaskellDepends = [ base containers deepseq ];
       homepage = "http://www.cs.drexel.edu/~mainland/";
       description = "A 'Symbol' type for fast symbol comparison";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "symengine" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "symengine";
       version = "0.1.2.0";
       sha256 = "1x42rbkc2lq06iqwkwwh5h4y9xl0xf1qfg47n62ax1j6j9mgfn8a";
       libraryHaskellDepends = [ base ];
       doCheck = false;
       homepage = "http://github.com/symengine/symengine.hs#readme";
       description = "SymEngine symbolic mathematics engine for Haskell";
       license = stdenv.lib.licenses.mit;
     }) {};
  "sysinfo" = callPackage
    ({ mkDerivation, base, hspec, hspec-expectations }:
     mkDerivation {
       pname = "sysinfo";
       version = "0.1.1";
       sha256 = "0afa9nv1sf1c4w2d9ysm0ass4a48na1mb3x9ri3nb5c6s7r41ns6";
       libraryHaskellDepends = [ base ];
       testHaskellDepends = [ base hspec hspec-expectations ];
       homepage = "https://github.com/psibi/sysinfo#readme";
       description = "Haskell Interface for getting overall system statistics";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "system-argv0" = callPackage
    ({ mkDerivation, base, bytestring, system-filepath, text }:
     mkDerivation {
       pname = "system-argv0";
       version = "0.1.1";
       sha256 = "1ijfry2r3cypp3zmws6dczk21m4n86fkxjld7yl19gjp46fxllbd";
       libraryHaskellDepends = [ base bytestring system-filepath text ];
       homepage = "https://john-millikin.com/software/haskell-filesystem/";
       description = "Get argv[0] as a FilePath";
       license = stdenv.lib.licenses.mit;
     }) {};
  "system-fileio" = callPackage
    ({ mkDerivation, base, bytestring, system-filepath, text, time
     , unix
     }:
     mkDerivation {
       pname = "system-fileio";
       version = "0.3.16.4";
       sha256 = "1iy6g1f35gzyj12g9mdiw4zf75mmxpv1l8cyaldgyscsl648pr9l";
       libraryHaskellDepends = [
         base bytestring system-filepath text time unix
       ];
       doCheck = false;
       homepage = "https://github.com/fpco/haskell-filesystem";
       description = "Consistent filesystem interaction across GHC versions (deprecated)";
       license = stdenv.lib.licenses.mit;
     }) {};
  "system-filepath" = callPackage
    ({ mkDerivation, base, bytestring, Cabal, deepseq, text }:
     mkDerivation {
       pname = "system-filepath";
       version = "0.4.14";
       sha256 = "14yras4pz2dh55xpwmazcgxijvi8913pjgzb9iw50mjq1lycwmhn";
       revision = "1";
       editedCabalFile = "18llfvisghrn9w9yfgacqn51gs50a0lngah3bmg852h0swj7vkp8";
       setupHaskellDepends = [ base Cabal ];
       libraryHaskellDepends = [ base bytestring deepseq text ];
       doCheck = false;
       homepage = "https://github.com/fpco/haskell-filesystem";
       description = "High-level, byte-based file and directory path manipulations (deprecated)";
       license = stdenv.lib.licenses.mit;
     }) {};
  "tabular" = callPackage
    ({ mkDerivation, base, csv, html, mtl }:
     mkDerivation {
       pname = "tabular";
       version = "0.2.2.7";
       sha256 = "1ysgq7rrks7f98nnvxil8xz1q27hxdgz4szbjhqwzbwd209dmy0k";
       libraryHaskellDepends = [ base csv html mtl ];
       homepage = "http://hub.darcs.net/kowey/tabular";
       description = "Two-dimensional data tables with rendering functions";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "tagchup" = callPackage
    ({ mkDerivation, base, bytestring, containers, data-accessor
     , explicit-exception, non-empty, old-time, transformers, utility-ht
     , xml-basic
     }:
     mkDerivation {
       pname = "tagchup";
       version = "0.4.1.1";
       sha256 = "127ffhggdcbapizddhzwy538h3znppvr28mh9y2lv9ihbwcfxd75";
       isLibrary = true;
       isExecutable = true;
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [
         base bytestring containers data-accessor explicit-exception
         non-empty transformers utility-ht xml-basic
       ];
       testHaskellDepends = [ base xml-basic ];
       benchmarkHaskellDepends = [
         base bytestring containers data-accessor explicit-exception
         old-time transformers utility-ht xml-basic
       ];
       homepage = "http://code.haskell.org/~thielema/tagchup/";
       description = "alternative package for processing of tag soups";
       license = "GPL";
     }) {};
  "tagged" = callPackage
    ({ mkDerivation, base, deepseq, template-haskell, transformers
     , transformers-compat
     }:
     mkDerivation {
       pname = "tagged";
       version = "0.8.5";
       sha256 = "16cdzh0bw16nvjnyyy5j9s60malhz4nnazw96vxb0xzdap4m2z74";
       revision = "2";
       editedCabalFile = "0r2knfcq0b4s652vlvlnfwxlc2mkc2ra9kl8bp4zdn1awmfy0ia5";
       libraryHaskellDepends = [
         base deepseq template-haskell transformers transformers-compat
       ];
       homepage = "http://github.com/ekmett/tagged";
       description = "Haskell 98 phantom types to avoid unsafely passing dummy arguments";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "tagged-binary" = callPackage
    ({ mkDerivation, base, base-compat, binary, bytestring, pureMD5 }:
     mkDerivation {
       pname = "tagged-binary";
       version = "0.2.0.1";
       sha256 = "0nv41x5ijw5wdb2nyfgxyspbgmk9qisp32fs1izzp3c3jl4smkvj";
       libraryHaskellDepends = [
         base base-compat binary bytestring pureMD5
       ];
       description = "Provides tools for serializing data tagged with type information";
       license = stdenv.lib.licenses.mit;
     }) {};
  "tagged-identity" = callPackage
    ({ mkDerivation, base, mtl, transformers }:
     mkDerivation {
       pname = "tagged-identity";
       version = "0.1.2";
       sha256 = "0402snxl1cpi7yq03aqkp036hjcrrqiy0if3c3bz6ljls7yxfvci";
       libraryHaskellDepends = [ base mtl transformers ];
       homepage = "https://github.com/mrkkrp/tagged-identity";
       description = "Trivial monad transformer that allows identical monad stacks have different types";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "tagged-transformer" = callPackage
    ({ mkDerivation, base, comonad, contravariant, distributive
     , exceptions, mtl, reflection, semigroupoids, tagged
     }:
     mkDerivation {
       pname = "tagged-transformer";
       version = "0.8.1";
       sha256 = "1ffwxr312vi3fqhgnad5b6gqkgz3j27c30z551j8zisjx0hn3zx0";
       libraryHaskellDepends = [
         base comonad contravariant distributive exceptions mtl reflection
         semigroupoids tagged
       ];
       homepage = "http://github.com/ekmett/tagged-transformer";
       description = "Monad transformer carrying an extra phantom type tag";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "tagshare" = callPackage
    ({ mkDerivation, base, containers, mtl }:
     mkDerivation {
       pname = "tagshare";
       version = "0.0";
       sha256 = "1q3chp1rmwmxa8rxv7548wsvbqbng6grrnv1587p08385sp4ncfj";
       libraryHaskellDepends = [ base containers mtl ];
       description = "TagShare - explicit sharing with tags";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "tagsoup" = callPackage
    ({ mkDerivation, base, bytestring, containers, deepseq, directory
     , process, QuickCheck, text, time
     }:
     mkDerivation {
       pname = "tagsoup";
       version = "0.14.7";
       sha256 = "09gcy5fd5nsk1b7zdrf7yb329fyr8hq5apd6w3cyh3nxd60z504r";
       libraryHaskellDepends = [ base bytestring containers text ];
       testHaskellDepends = [
         base bytestring deepseq directory process QuickCheck time
       ];
       homepage = "https://github.com/ndmitchell/tagsoup#readme";
       description = "Parsing and extracting information from (possibly malformed) HTML/XML documents";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "tagstream-conduit" = callPackage
    ({ mkDerivation, attoparsec, base, blaze-builder, bytestring
     , case-insensitive, conduit, conduit-extra, data-default, hspec
     , HUnit, QuickCheck, resourcet, text, transformers, xml-conduit
     }:
     mkDerivation {
       pname = "tagstream-conduit";
       version = "0.5.5.3";
       sha256 = "1arlf7qil9bzcqykda8yyrnncm29jsfjvz5kbcdrbbhqpbqfi5mj";
       libraryHaskellDepends = [
         attoparsec base blaze-builder bytestring case-insensitive conduit
         conduit-extra data-default resourcet text transformers xml-conduit
       ];
       testHaskellDepends = [
         base bytestring conduit hspec HUnit QuickCheck resourcet text
       ];
       homepage = "http://github.com/yihuang/tagstream-conduit";
       description = "streamlined html tag parser";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "tao" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "tao";
       version = "1.0.0";
       sha256 = "0iqsah4l87bd25cpk575hsq5qbx506gz1ajf6fyv6pmi0sb1w2hb";
       libraryHaskellDepends = [ base ];
       homepage = "https://github.com/jship/tao#readme";
       description = "Type-level assertion operators";
       license = stdenv.lib.licenses.mit;
     }) {};
  "tao-example" = callPackage
    ({ mkDerivation, base, tao }:
     mkDerivation {
       pname = "tao-example";
       version = "1.0.0";
       sha256 = "1ch09fgj46fy5h33rcqlbkm02v8cq246bpxswxfdj8p9g1dkkpk5";
       libraryHaskellDepends = [ base tao ];
       homepage = "https://github.com/jship/tao#readme";
       description = "Example usage of the tao package";
       license = stdenv.lib.licenses.mit;
     }) {};
  "tar" = callPackage
    ({ mkDerivation, array, base, bytestring, containers, criterion
     , deepseq, directory, filepath, time
     }:
     mkDerivation {
       pname = "tar";
       version = "0.5.1.0";
       sha256 = "0s2brvaxg5fki2jdkccmnpssiy6a3wjh24p6a3dkkdvjcixnk7f8";
       revision = "1";
       editedCabalFile = "1lydbwsmccf2av0g61j07bx7r5mzbcfgwvmh0qwg3a91857x264x";
       configureFlags = [ "-f-old-time" ];
       libraryHaskellDepends = [
         array base bytestring containers deepseq directory filepath time
       ];
       benchmarkHaskellDepends = [
         array base bytestring containers criterion deepseq directory
         filepath time
       ];
       doCheck = false;
       description = "Reading, writing and manipulating \".tar\" archive files.";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "tar-conduit" = callPackage
    ({ mkDerivation, base, bytestring, conduit, conduit-combinators
     , conduit-extra, containers, criterion, deepseq, directory
     , filepath, hspec, QuickCheck, safe-exceptions, text, unix, weigh
     }:
     mkDerivation {
       pname = "tar-conduit";
       version = "0.2.5";
       sha256 = "0gnklkw9qv496m8nxm1mlfddyiw8c5lsj5pcshxv7c6rv9n3vva3";
       libraryHaskellDepends = [
         base bytestring conduit conduit-combinators directory filepath
         safe-exceptions text unix
       ];
       testHaskellDepends = [
         base bytestring conduit conduit-combinators conduit-extra
         containers deepseq directory filepath hspec QuickCheck weigh
       ];
       benchmarkHaskellDepends = [
         base bytestring conduit conduit-combinators containers criterion
         deepseq directory filepath hspec
       ];
       homepage = "https://github.com/snoyberg/tar-conduit#readme";
       description = "Extract and create tar files using conduit for streaming";
       license = stdenv.lib.licenses.mit;
     }) {};
  "tardis" = callPackage
    ({ mkDerivation, base, mmorph, mtl }:
     mkDerivation {
       pname = "tardis";
       version = "0.4.1.0";
       sha256 = "1nd54pff1n6ds5jqa98qrby06d3ziw2rhb3j5lvw4mahsynsnwp6";
       revision = "1";
       editedCabalFile = "1wp6vp90g19hv8r2l83ava7qxf0933gb7ni2zgyfa66vlvxvhibv";
       libraryHaskellDepends = [ base mmorph mtl ];
       homepage = "https://github.com/DanBurton/tardis";
       description = "Bidirectional state monad transformer";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "tasty" = callPackage
    ({ mkDerivation, ansi-terminal, async, base, clock, containers, mtl
     , optparse-applicative, stm, tagged, unbounded-delays, unix
     , wcwidth
     }:
     mkDerivation {
       pname = "tasty";
       version = "1.1.0.4";
       sha256 = "1gzf1gqi5p78m8rc21g9a8glc69r68igxr9n4qn4bs6wqyi3ykiv";
       libraryHaskellDepends = [
         ansi-terminal async base clock containers mtl optparse-applicative
         stm tagged unbounded-delays unix wcwidth
       ];
       homepage = "https://github.com/feuerbach/tasty";
       description = "Modern and extensible testing framework";
       license = stdenv.lib.licenses.mit;
     }) {};
  "tasty-ant-xml" = callPackage
    ({ mkDerivation, base, containers, directory, filepath
     , generic-deriving, ghc-prim, mtl, stm, tagged, tasty, transformers
     , xml
     }:
     mkDerivation {
       pname = "tasty-ant-xml";
       version = "1.1.5";
       sha256 = "1px562a9c3vn0qxy8zs8mkp73nfqca17hdwhv5p7qgawpjafxk32";
       libraryHaskellDepends = [
         base containers directory filepath generic-deriving ghc-prim mtl
         stm tagged tasty transformers xml
       ];
       homepage = "http://github.com/ocharles/tasty-ant-xml";
       description = "Render tasty output to XML for Jenkins";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "tasty-dejafu" = callPackage
    ({ mkDerivation, base, dejafu, random, tagged, tasty }:
     mkDerivation {
       pname = "tasty-dejafu";
       version = "1.2.0.8";
       sha256 = "0v9939w2vppa3zfgmyzgb4880cx5z9hw5cssg25qg6ymr6rczdr4";
       libraryHaskellDepends = [ base dejafu random tagged tasty ];
       homepage = "https://github.com/barrucadu/dejafu";
       description = "Deja Fu support for the Tasty test framework";
       license = stdenv.lib.licenses.mit;
     }) {};
  "tasty-discover" = callPackage
    ({ mkDerivation, base, containers, directory, filepath, Glob
     , hedgehog, tasty, tasty-hedgehog, tasty-hspec, tasty-hunit
     , tasty-quickcheck, tasty-smallcheck
     }:
     mkDerivation {
       pname = "tasty-discover";
       version = "4.2.1";
       sha256 = "0ghxrjkqp4w6i47pvdsd25zs6sj10rw4ybkf0pxr598l8qw5nv5y";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         base containers directory filepath Glob
       ];
       executableHaskellDepends = [
         base containers directory filepath Glob
       ];
       testHaskellDepends = [
         base containers directory filepath Glob hedgehog tasty
         tasty-hedgehog tasty-hspec tasty-hunit tasty-quickcheck
         tasty-smallcheck
       ];
       homepage = "http://git.coop/lwm/tasty-discover";
       description = "Test discovery for the tasty framework";
       license = stdenv.lib.licenses.mit;
     }) {};
  "tasty-expected-failure" = callPackage
    ({ mkDerivation, base, tagged, tasty }:
     mkDerivation {
       pname = "tasty-expected-failure";
       version = "0.11.1.1";
       sha256 = "1i2s809m644b7hgiblqay9j364r3fjj1rwbrahsn1pgr5q6mr6ji";
       revision = "1";
       editedCabalFile = "1b3fn7d3zwhhwm3gp8cmmsdcrvn9dhshd665xrx1mk6cmy4m8k16";
       libraryHaskellDepends = [ base tagged tasty ];
       homepage = "http://github.com/nomeata/tasty-expected-failure";
       description = "Mark tasty tests as failure expected";
       license = stdenv.lib.licenses.mit;
     }) {};
  "tasty-golden" = callPackage
    ({ mkDerivation, async, base, bytestring, containers, deepseq
     , directory, filepath, mtl, optparse-applicative, process, tagged
     , tasty, tasty-hunit, temporary, temporary-rc
     }:
     mkDerivation {
       pname = "tasty-golden";
       version = "2.3.2";
       sha256 = "0k3ibjhjc9vcwzrjnl4rnwvfm8l81q347nb7dgvcib6n5wm3s404";
       libraryHaskellDepends = [
         async base bytestring containers deepseq directory filepath mtl
         optparse-applicative process tagged tasty temporary
       ];
       testHaskellDepends = [
         base directory filepath process tasty tasty-hunit temporary-rc
       ];
       homepage = "https://github.com/feuerbach/tasty-golden";
       description = "Golden tests support for tasty";
       license = stdenv.lib.licenses.mit;
     }) {};
  "tasty-hedgehog" = callPackage
    ({ mkDerivation, base, hedgehog, tagged, tasty
     , tasty-expected-failure
     }:
     mkDerivation {
       pname = "tasty-hedgehog";
       version = "0.2.0.0";
       sha256 = "10m1akbiblnjq9ljk469725k30b254d36d267rk51z2f171py42s";
       revision = "6";
       editedCabalFile = "0d7s1474pvnyad6ilr5rvpama7s468ya9ns4ksbl0827z9vvga43";
       libraryHaskellDepends = [ base hedgehog tagged tasty ];
       testHaskellDepends = [
         base hedgehog tasty tasty-expected-failure
       ];
       homepage = "https://github.com/qfpl/tasty-hedgehog";
       description = "Integration for tasty and hedgehog";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "tasty-hspec" = callPackage
    ({ mkDerivation, base, hspec, hspec-core, QuickCheck, tasty
     , tasty-quickcheck, tasty-smallcheck
     }:
     mkDerivation {
       pname = "tasty-hspec";
       version = "1.1.5.1";
       sha256 = "0i9kdzjpk750sa078jj3iyhp72k0177zk7vxl131r6dkyz09x27y";
       revision = "1";
       editedCabalFile = "18k4p273qnvfmk5cbm89rjqr0v03v0q22q7bbl7z3bxpwnnkmhqf";
       libraryHaskellDepends = [
         base hspec hspec-core QuickCheck tasty tasty-quickcheck
         tasty-smallcheck
       ];
       homepage = "https://github.com/mitchellwrosen/tasty-hspec";
       description = "Hspec support for the Tasty test framework";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "tasty-hunit" = callPackage
    ({ mkDerivation, base, call-stack, tasty }:
     mkDerivation {
       pname = "tasty-hunit";
       version = "0.10.0.1";
       sha256 = "0j3hgga6c3s8h5snzivb8a75h96207ia2rlbxzj07xbf4zpkp44g";
       libraryHaskellDepends = [ base call-stack tasty ];
       homepage = "https://github.com/feuerbach/tasty";
       description = "HUnit support for the Tasty test framework";
       license = stdenv.lib.licenses.mit;
     }) {};
  "tasty-kat" = callPackage
    ({ mkDerivation, base, bytestring, mtl, tasty, tasty-hunit
     , tasty-quickcheck
     }:
     mkDerivation {
       pname = "tasty-kat";
       version = "0.0.3";
       sha256 = "14yvlpli6cv6bn3kh8mlfp4x1l6ns4fvmfv6hmj75cvxyzq029d7";
       libraryHaskellDepends = [ base bytestring tasty ];
       testHaskellDepends = [
         base bytestring mtl tasty tasty-hunit tasty-quickcheck
       ];
       homepage = "https://github.com/vincenthz/tasty-kat";
       description = "Known Answer Tests (KAT) framework for tasty";
       license = stdenv.lib.licenses.mit;
     }) {};
  "tasty-program" = callPackage
    ({ mkDerivation, base, deepseq, directory, filepath, process, tasty
     }:
     mkDerivation {
       pname = "tasty-program";
       version = "1.0.5";
       sha256 = "1i19b1pps1hwqs7djx859ddcdmqfzgyzyi72db62jw03bynmbcjc";
       libraryHaskellDepends = [
         base deepseq directory filepath process tasty
       ];
       homepage = "https://github.com/jstolarek/tasty-program";
       description = "Use tasty framework to test whether a program executes correctly";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "tasty-quickcheck" = callPackage
    ({ mkDerivation, base, optparse-applicative, pcre-light, QuickCheck
     , random, tagged, tasty, tasty-hunit
     }:
     mkDerivation {
       pname = "tasty-quickcheck";
       version = "0.10";
       sha256 = "0vr6szbbz3s5461i0zr8zpq347zfvidfzv5gf3xwxhm0yk731z8h";
       revision = "1";
       editedCabalFile = "1ndkkywcqgb2wj339vgckjv5915da5kd4ixlkaww9fsba3qsrnwx";
       libraryHaskellDepends = [
         base optparse-applicative QuickCheck random tagged tasty
       ];
       testHaskellDepends = [ base pcre-light tasty tasty-hunit ];
       homepage = "https://github.com/feuerbach/tasty";
       description = "QuickCheck support for the Tasty test framework";
       license = stdenv.lib.licenses.mit;
     }) {};
  "tasty-rerun" = callPackage
    ({ mkDerivation, base, containers, mtl, optparse-applicative
     , reducers, split, stm, tagged, tasty, transformers
     }:
     mkDerivation {
       pname = "tasty-rerun";
       version = "1.1.13";
       sha256 = "1lf7i3ifszvghy0v1ahgif08bb1pgf7hhf147yr43d0r0hb2vrgp";
       libraryHaskellDepends = [
         base containers mtl optparse-applicative reducers split stm tagged
         tasty transformers
       ];
       homepage = "http://github.com/ocharles/tasty-rerun";
       description = "Run tests by filtering the test tree depending on the result of previous test runs";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "tasty-silver" = callPackage
    ({ mkDerivation, ansi-terminal, async, base, bytestring, containers
     , deepseq, directory, filepath, mtl, optparse-applicative, process
     , process-extras, regex-tdfa, semigroups, stm, tagged, tasty
     , tasty-hunit, temporary, text, transformers
     }:
     mkDerivation {
       pname = "tasty-silver";
       version = "3.1.12";
       sha256 = "0s6cz0z8xmhc3gqyb68lkx0j94kagbdgc5gagknmfj6an2i33fly";
       libraryHaskellDepends = [
         ansi-terminal async base bytestring containers deepseq directory
         filepath mtl optparse-applicative process process-extras regex-tdfa
         semigroups stm tagged tasty temporary text
       ];
       testHaskellDepends = [
         base directory filepath process tasty tasty-hunit temporary
         transformers
       ];
       homepage = "https://github.com/phile314/tasty-silver";
       description = "A fancy test runner, including support for golden tests";
       license = stdenv.lib.licenses.mit;
     }) {};
  "tasty-smallcheck" = callPackage
    ({ mkDerivation, async, base, smallcheck, tagged, tasty }:
     mkDerivation {
       pname = "tasty-smallcheck";
       version = "0.8.1";
       sha256 = "1n66ngzllf3xrlqykwszlkwsi96n5nkm7xbpfq7774vpvfnafjri";
       libraryHaskellDepends = [ async base smallcheck tagged tasty ];
       homepage = "http://documentup.com/feuerbach/tasty";
       description = "SmallCheck support for the Tasty test framework";
       license = stdenv.lib.licenses.mit;
     }) {};
  "tasty-stats" = callPackage
    ({ mkDerivation, base, containers, directory, process, stm, tagged
     , tasty, time
     }:
     mkDerivation {
       pname = "tasty-stats";
       version = "0.2.0.4";
       sha256 = "0z244l1yl1m77i4nvs9db2v6a2ydgcpgyc78hzgfyin7as002kd6";
       libraryHaskellDepends = [
         base containers directory process stm tagged tasty time
       ];
       homepage = "https://github.com/minad/tasty-stats#readme";
       description = "Collect statistics of your Tasty testsuite";
       license = stdenv.lib.licenses.mit;
     }) {};
  "tasty-th" = callPackage
    ({ mkDerivation, base, haskell-src-exts, tasty, tasty-hunit
     , template-haskell
     }:
     mkDerivation {
       pname = "tasty-th";
       version = "0.1.7";
       sha256 = "0b2ivrw2257m4cy4rjnkwqlarh83j1y3zywnmaqqqbvy667sqnj3";
       libraryHaskellDepends = [
         base haskell-src-exts tasty template-haskell
       ];
       testHaskellDepends = [ base tasty-hunit ];
       homepage = "http://github.com/bennofs/tasty-th";
       description = "Automatic tasty test case discovery using TH";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "tce-conf" = callPackage
    ({ mkDerivation, base, containers, HUnit }:
     mkDerivation {
       pname = "tce-conf";
       version = "1.3";
       sha256 = "18i6mphwjh61h8p2kzkj2aaq6l61n4lgpz7d89r17va1p4xq8ldh";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [ base containers ];
       executableHaskellDepends = [ base containers ];
       testHaskellDepends = [ base containers HUnit ];
       homepage = "http://hub.darcs.net/dino/tce-conf";
       description = "Very simple config file reading";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "tcp-streams" = callPackage
    ({ mkDerivation, base, bytestring, data-default-class, directory
     , HUnit, io-streams, network, pem, test-framework
     , test-framework-hunit, tls, x509, x509-store, x509-system
     }:
     mkDerivation {
       pname = "tcp-streams";
       version = "1.0.1.0";
       sha256 = "0qa8dvlxg6r7f6qxq46xj1fq5ksbvznjqs624v57ay2nvgji5n3p";
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [
         base bytestring data-default-class io-streams network pem tls x509
         x509-store x509-system
       ];
       testHaskellDepends = [
         base bytestring directory HUnit io-streams network test-framework
         test-framework-hunit
       ];
       doCheck = false;
       homepage = "https://github.com/didi-FP/tcp-streams";
       description = "One stop solution for tcp client and server with tls support";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "tcp-streams-openssl" = callPackage
    ({ mkDerivation, base, bytestring, HsOpenSSL, HsOpenSSL-x509-system
     , HUnit, io-streams, network, tcp-streams, test-framework
     , test-framework-hunit
     }:
     mkDerivation {
       pname = "tcp-streams-openssl";
       version = "1.0.1.0";
       sha256 = "1zka2hmx0659f6w9xnh13i53pfwhky833ifwm63sr3rlly5miry3";
       libraryHaskellDepends = [
         base bytestring HsOpenSSL HsOpenSSL-x509-system io-streams network
         tcp-streams
       ];
       testHaskellDepends = [
         base bytestring HUnit io-streams network tcp-streams test-framework
         test-framework-hunit
       ];
       homepage = "https://github.com/didi-FP/tcp-streams";
       description = "Tcp streams using openssl for tls support";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "tdigest" = callPackage
    ({ mkDerivation, base, base-compat, binary, Cabal, cabal-doctest
     , deepseq, doctest, reducers, semigroupoids, semigroups, tasty
     , tasty-quickcheck, transformers, vector, vector-algorithms
     }:
     mkDerivation {
       pname = "tdigest";
       version = "0.2.1";
       sha256 = "0kmqmzjcs406hv2fv9bkfayxpsd41dbry8bpkhy4y1jdgh33hvnl";
       revision = "1";
       editedCabalFile = "1jrq22j9jbvx31pspwjvyb539gix7vfb8cinqkkb2abmr0jrhibn";
       setupHaskellDepends = [ base Cabal cabal-doctest ];
       libraryHaskellDepends = [
         base base-compat binary deepseq reducers semigroupoids transformers
         vector vector-algorithms
       ];
       testHaskellDepends = [
         base base-compat binary deepseq doctest semigroups tasty
         tasty-quickcheck vector vector-algorithms
       ];
       homepage = "https://github.com/futurice/haskell-tdigest#readme";
       description = "On-line accumulation of rank-based statistics";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "teardown" = callPackage
    ({ mkDerivation, base, gauge, prettyprinter, rio, tasty
     , tasty-hunit, typed-process, unliftio
     }:
     mkDerivation {
       pname = "teardown";
       version = "0.5.0.0";
       sha256 = "0p1rjvl36gl4dqpvcjsb06jyiwsxg2qyha8rfdiddljb4ixw1sjh";
       libraryHaskellDepends = [
         base prettyprinter rio typed-process unliftio
       ];
       testHaskellDepends = [
         base rio tasty tasty-hunit typed-process unliftio
       ];
       benchmarkHaskellDepends = [
         base gauge rio typed-process unliftio
       ];
       homepage = "https://github.com/roman/Haskell-teardown#readme";
       description = "Build safe and composable teardown sub-routines for resources";
       license = stdenv.lib.licenses.mit;
     }) {};
  "telegram-bot-simple" = callPackage
    ({ mkDerivation, aeson, aeson-pretty, base, bytestring, cron
     , hashable, http-api-data, http-client, http-client-tls
     , monad-control, mtl, pretty-show, profunctors, servant
     , servant-client, split, stm, template-haskell, text, time
     , transformers, unordered-containers
     }:
     mkDerivation {
       pname = "telegram-bot-simple";
       version = "0.2.0";
       sha256 = "1aafj27zj69hvzxv58cz7h8pjbc9c74hmg92swg2sy8ai1rcb34a";
       revision = "1";
       editedCabalFile = "1li6b3m9glhfg8agr9h0mrbxpr8zr46l57mzjfdqndm248ddbklv";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         aeson aeson-pretty base bytestring cron hashable http-api-data
         http-client http-client-tls monad-control mtl pretty-show
         profunctors servant servant-client split stm template-haskell text
         time transformers unordered-containers
       ];
       executableHaskellDepends = [
         aeson aeson-pretty base bytestring cron hashable http-api-data
         http-client http-client-tls monad-control mtl pretty-show
         profunctors servant servant-client split stm template-haskell text
         time transformers unordered-containers
       ];
       homepage = "https://github.com/fizruk/telegram-bot-simple#readme";
       description = "Easy to use library for building Telegram bots";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "temporary" = callPackage
    ({ mkDerivation, base, base-compat, directory, exceptions, filepath
     , random, tasty, tasty-hunit, transformers, unix
     }:
     mkDerivation {
       pname = "temporary";
       version = "1.3";
       sha256 = "144qhwfwg37l3k313raf4ssiz16jbgwlm1nf4flgqpsbd69jji4c";
       libraryHaskellDepends = [
         base directory exceptions filepath random transformers unix
       ];
       testHaskellDepends = [
         base base-compat directory filepath tasty tasty-hunit unix
       ];
       homepage = "https://github.com/feuerbach/temporary";
       description = "Portable temporary file and directory support";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "temporary-rc" = callPackage
    ({ mkDerivation, base, directory, exceptions, filepath
     , transformers, unix
     }:
     mkDerivation {
       pname = "temporary-rc";
       version = "1.2.0.3";
       sha256 = "1nqih0qks439k3pr5kmbbc8rjdw730slrxlflqb27fbxbzb8skqs";
       libraryHaskellDepends = [
         base directory exceptions filepath transformers unix
       ];
       homepage = "http://www.github.com/feuerbach/temporary";
       description = "Portable temporary file and directory support for Windows and Unix, based on code from Cabal";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "tensorflow-test" = callPackage
    ({ mkDerivation, base, HUnit, vector }:
     mkDerivation {
       pname = "tensorflow-test";
       version = "0.1.0.0";
       sha256 = "1z2anh5ikjpsb1sjfn290bcf5rcxsmzb0gwdk9czdnlmx3fig0ip";
       libraryHaskellDepends = [ base HUnit vector ];
       homepage = "https://github.com/tensorflow/haskell#readme";
       description = "Some common functions for test suites";
       license = stdenv.lib.licenses.asl20;
     }) {};
  "terminal-size" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "terminal-size";
       version = "0.3.2.1";
       sha256 = "0n4nvj3dbj9gxfnprgish45asn9z4dipv9j98s8i7g2n8yb3xhmm";
       libraryHaskellDepends = [ base ];
       description = "Get terminal window height and width";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "test-framework" = callPackage
    ({ mkDerivation, ansi-terminal, ansi-wl-pprint, base, containers
     , hostname, old-locale, random, regex-posix, time, xml
     }:
     mkDerivation {
       pname = "test-framework";
       version = "0.8.2.0";
       sha256 = "1hhacrzam6b8f10hyldmjw8pb7frdxh04rfg3farxcxwbnhwgbpm";
       revision = "1";
       editedCabalFile = "1af61pnf2vrkvs3hcqla5ddsrd0hd2pylv6l545yn3dcvl665rcc";
       libraryHaskellDepends = [
         ansi-terminal ansi-wl-pprint base containers hostname old-locale
         random regex-posix time xml
       ];
       doCheck = false;
       homepage = "http://haskell.github.io/test-framework/";
       description = "Framework for running and organising tests, with HUnit and QuickCheck support";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "test-framework-hunit" = callPackage
    ({ mkDerivation, base, extensible-exceptions, HUnit, test-framework
     }:
     mkDerivation {
       pname = "test-framework-hunit";
       version = "0.3.0.2";
       sha256 = "1y0b6vg8nfm43v90lxxcydhi6qlxhfy4vpxbzm5ic2w55bh8xjwm";
       revision = "3";
       editedCabalFile = "0i9mlalv7cl1iq43ld5myrnpszq5rxmd79hk495dcb08rglhgl3z";
       libraryHaskellDepends = [
         base extensible-exceptions HUnit test-framework
       ];
       homepage = "https://batterseapower.github.io/test-framework/";
       description = "HUnit support for the test-framework package";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "test-framework-quickcheck2" = callPackage
    ({ mkDerivation, base, extensible-exceptions, QuickCheck, random
     , test-framework
     }:
     mkDerivation {
       pname = "test-framework-quickcheck2";
       version = "0.3.0.5";
       sha256 = "0ngf9vvby4nrdf1i7dxf5m9jn0g2pkq32w48xdr92n9hxka7ixn9";
       libraryHaskellDepends = [
         base extensible-exceptions QuickCheck random test-framework
       ];
       homepage = "http://haskell.github.io/test-framework/";
       description = "QuickCheck-2 support for the test-framework package";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "test-framework-smallcheck" = callPackage
    ({ mkDerivation, base, smallcheck, test-framework, transformers }:
     mkDerivation {
       pname = "test-framework-smallcheck";
       version = "0.2";
       sha256 = "1xpgpk1gp4w7w46b4rhj80fa0bcyz8asj2dcjb5x1c37b7rw90b0";
       libraryHaskellDepends = [
         base smallcheck test-framework transformers
       ];
       homepage = "https://github.com/feuerbach/smallcheck";
       description = "Support for SmallCheck tests in test-framework";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "test-framework-th" = callPackage
    ({ mkDerivation, base, haskell-src-exts, language-haskell-extract
     , regex-posix, template-haskell, test-framework
     }:
     mkDerivation {
       pname = "test-framework-th";
       version = "0.2.4";
       sha256 = "12lw7yj02jb9s0i7rb98jjam43j2h0gzmnbj9zi933fx7sg0sy4b";
       libraryHaskellDepends = [
         base haskell-src-exts language-haskell-extract regex-posix
         template-haskell test-framework
       ];
       homepage = "http://github.com/finnsson/test-generator";
       description = "Automagically generate the HUnit- and Quickcheck-bulk-code using Template Haskell";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "testing-feat" = callPackage
    ({ mkDerivation, base, QuickCheck, size-based
     , testing-type-modifiers
     }:
     mkDerivation {
       pname = "testing-feat";
       version = "1.1.0.0";
       sha256 = "1v2qzzpf1s008g7q6q67glf7vbm1pkpq4rc3ii74f4g6vhfx610r";
       libraryHaskellDepends = [
         base QuickCheck size-based testing-type-modifiers
       ];
       homepage = "https://github.com/JonasDuregard/testing-feat";
       description = "Functional Enumeration of Algebraic Types";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "testing-type-modifiers" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "testing-type-modifiers";
       version = "0.1.0.1";
       sha256 = "1wh2n95n39ivv6kbqn42vbzrj8zagsmk6f2al2qj40bg5kgdl2q5";
       libraryHaskellDepends = [ base ];
       description = "Data type modifiers for property based testing";
       license = stdenv.lib.licenses.publicDomain;
     }) {};
  "texmath" = callPackage
    ({ mkDerivation, base, bytestring, containers, directory, filepath
     , mtl, pandoc-types, parsec, process, split, syb, temporary, text
     , utf8-string, xml
     }:
     mkDerivation {
       pname = "texmath";
       version = "0.11.1.2";
       sha256 = "1wac48qlcwrfm5j1yng27929iqnj2x0zkj7ffrwkj3rchf0i4grp";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         base containers mtl pandoc-types parsec syb xml
       ];
       testHaskellDepends = [
         base bytestring directory filepath process split temporary text
         utf8-string xml
       ];
       homepage = "http://github.com/jgm/texmath";
       description = "Conversion between formats used to represent mathematics";
       license = stdenv.lib.licenses.gpl2;
     }) {};
  "text" = callPackage
    ({ mkDerivation, array, base, binary, bytestring, deepseq, ghc-prim
     , integer-gmp
     }:
     mkDerivation {
       pname = "text";
       version = "1.2.3.1";
       sha256 = "19j725g8xma1811avl3nz2vndwynsmpx3sqf6bd7iwh1bm6n4q43";
       configureFlags = [ "-f-integer-simple" ];
       libraryHaskellDepends = [
         array base binary bytestring deepseq ghc-prim integer-gmp
       ];
       doCheck = false;
       homepage = "https://github.com/haskell/text";
       description = "An efficient packed Unicode text type";
       license = stdenv.lib.licenses.bsd2;
     }) {};
  "text-binary" = callPackage
    ({ mkDerivation, base, binary, text }:
     mkDerivation {
       pname = "text-binary";
       version = "0.2.1.1";
       sha256 = "18gl10pwg3qwsk0za3c70j4n6a9129wwf1b7d3a461h816yv55xn";
       libraryHaskellDepends = [ base binary text ];
       homepage = "https://github.com/kawu/text-binary";
       description = "Binary instances for text types";
       license = stdenv.lib.licenses.bsd2;
     }) {};
  "text-builder" = callPackage
    ({ mkDerivation, base, base-prelude, bytestring, semigroups, text
     }:
     mkDerivation {
       pname = "text-builder";
       version = "0.5.4.3";
       sha256 = "1xcyi3bw44anzah5c4c0wm18vnyqsr3q7ww2kp2psk41ql6gan2h";
       libraryHaskellDepends = [
         base base-prelude bytestring semigroups text
       ];
       doCheck = false;
       homepage = "https://github.com/nikita-volkov/text-builder";
       description = "An efficient strict text builder";
       license = stdenv.lib.licenses.mit;
     }) {};
  "text-conversions" = callPackage
    ({ mkDerivation, base, base16-bytestring, base64-bytestring
     , bytestring, errors, hspec, hspec-discover, text
     }:
     mkDerivation {
       pname = "text-conversions";
       version = "0.3.0";
       sha256 = "089c56vdj9xysqfr1hnvbnrghlg83q6w10xk02gflpsidcpvwmhp";
       libraryHaskellDepends = [
         base base16-bytestring base64-bytestring bytestring errors text
       ];
       testHaskellDepends = [ base bytestring hspec hspec-discover text ];
       testToolDepends = [ hspec-discover ];
       homepage = "https://github.com/cjdev/text-conversions#readme";
       description = "Safe conversions between textual types";
       license = stdenv.lib.licenses.isc;
     }) {};
  "text-icu" = callPackage
    ({ mkDerivation, array, base, bytestring, deepseq, directory
     , ghc-prim, HUnit, icu, QuickCheck, random, test-framework
     , test-framework-hunit, test-framework-quickcheck2, text
     }:
     mkDerivation {
       pname = "text-icu";
       version = "0.7.0.1";
       sha256 = "0y3z5jda7v2iyll2148ivxfd2yhp27d3ryxrspp0cdq394klqxp2";
       libraryHaskellDepends = [ base bytestring deepseq text ];
       librarySystemDepends = [ icu ];
       testHaskellDepends = [
         array base bytestring deepseq directory ghc-prim HUnit QuickCheck
         random test-framework test-framework-hunit
         test-framework-quickcheck2 text
       ];
       doCheck = false;
       homepage = "https://github.com/bos/text-icu";
       description = "Bindings to the ICU library";
       license = stdenv.lib.licenses.bsd3;
     }) {inherit (pkgs) icu;};
  "text-latin1" = callPackage
    ({ mkDerivation, base, bytestring, case-insensitive, data-checked
     , hashable, semigroups, text
     }:
     mkDerivation {
       pname = "text-latin1";
       version = "0.3.1";
       sha256 = "1wxbv6m567n3330baw2k0xxd50nhn2k6w3lgmpk6zq7x1jp84x3c";
       libraryHaskellDepends = [
         base bytestring case-insensitive data-checked hashable semigroups
         text
       ];
       homepage = "https://github.com/mvv/text-latin1";
       description = "Latin-1 (including ASCII) utility functions";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "text-ldap" = callPackage
    ({ mkDerivation, attoparsec, base, bytestring, containers, dlist
     , memory, QuickCheck, quickcheck-simple, random, transformers
     }:
     mkDerivation {
       pname = "text-ldap";
       version = "0.1.1.13";
       sha256 = "0d1a7932999yx98hjvnrap1lpm9jcfg34m2m0hdy4j1m6cq4q5zc";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         attoparsec base bytestring containers dlist memory transformers
       ];
       executableHaskellDepends = [ base bytestring ];
       testHaskellDepends = [
         base bytestring QuickCheck quickcheck-simple random
       ];
       doCheck = false;
       description = "Parser and Printer for LDAP text data stream";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "text-manipulate" = callPackage
    ({ mkDerivation, base, criterion, tasty, tasty-hunit, text }:
     mkDerivation {
       pname = "text-manipulate";
       version = "0.2.0.1";
       sha256 = "0bwxyjj3ll45srxhsp2ihikgqglvjc6m02ixr8xpvyqwkcfwgsg0";
       libraryHaskellDepends = [ base text ];
       testHaskellDepends = [ base tasty tasty-hunit text ];
       benchmarkHaskellDepends = [ base criterion text ];
       homepage = "https://github.com/brendanhay/text-manipulate";
       description = "Case conversion, word boundary manipulation, and textual subjugation";
       license = "unknown";
       hydraPlatforms = stdenv.lib.platforms.none;
     }) {};
  "text-metrics" = callPackage
    ({ mkDerivation, base, containers, criterion, deepseq, hspec
     , QuickCheck, text, vector, weigh
     }:
     mkDerivation {
       pname = "text-metrics";
       version = "0.3.0";
       sha256 = "18mzxwkdvjp31r720ai9bnxr638qq8x3a2v408bz0d8f0rsayx1q";
       revision = "4";
       editedCabalFile = "017drxq9x56b345d8w5m8xdsi1zzs0z16pbdx8j35cd1lsnh3kf1";
       libraryHaskellDepends = [ base containers text vector ];
       testHaskellDepends = [ base hspec QuickCheck text ];
       benchmarkHaskellDepends = [ base criterion deepseq text weigh ];
       homepage = "https://github.com/mrkkrp/text-metrics";
       description = "Calculate various string metrics efficiently";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "text-postgresql" = callPackage
    ({ mkDerivation, base, dlist, QuickCheck, quickcheck-simple
     , transformers, transformers-compat
     }:
     mkDerivation {
       pname = "text-postgresql";
       version = "0.0.3.1";
       sha256 = "1s42a1mq7hz63zfpcv7bl4141vnyrsyd0ir723iph6vmsa46iqn6";
       libraryHaskellDepends = [
         base dlist transformers transformers-compat
       ];
       testHaskellDepends = [ base QuickCheck quickcheck-simple ];
       homepage = "http://khibino.github.io/haskell-relational-record/";
       description = "Parser and Printer of PostgreSQL extended types";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "text-printer" = callPackage
    ({ mkDerivation, base, bytestring, pretty, QuickCheck, semigroups
     , test-framework, test-framework-quickcheck2, text, text-latin1
     }:
     mkDerivation {
       pname = "text-printer";
       version = "0.5";
       sha256 = "02sadjd19dbxzawr1q8z3j7w6vhp5mvz1dbssk118hsvl6k0234g";
       libraryHaskellDepends = [
         base bytestring pretty semigroups text text-latin1
       ];
       testHaskellDepends = [
         base QuickCheck test-framework test-framework-quickcheck2
       ];
       homepage = "https://github.com/mvv/text-printer";
       description = "Abstract interface for text builders/printers";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "text-short" = callPackage
    ({ mkDerivation, base, binary, bytestring, deepseq, ghc-prim
     , hashable, text
     }:
     mkDerivation {
       pname = "text-short";
       version = "0.1.2";
       sha256 = "0rqiwgjkgyfy8596swl0s0x2jqk6ddh2h02qxa32az2cs5kviwmk";
       revision = "1";
       editedCabalFile = "00w77idkh44m88vivkqsys0y1bbxrflh06yq66liq0wgjhhzdppj";
       libraryHaskellDepends = [
         base binary bytestring deepseq ghc-prim hashable text
       ];
       doCheck = false;
       description = "Memory-efficient representation of Unicode text strings";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "text-show" = callPackage
    ({ mkDerivation, array, base, base-compat-batteries, base-orphans
     , bifunctors, bytestring, bytestring-builder, containers
     , contravariant, criterion, deepseq, deriving-compat
     , generic-deriving, ghc-boot-th, ghc-prim, hspec, hspec-discover
     , integer-gmp, nats, QuickCheck, quickcheck-instances, semigroups
     , tagged, template-haskell, text, th-abstraction, th-lift
     , transformers, transformers-compat, void
     }:
     mkDerivation {
       pname = "text-show";
       version = "3.7.4";
       sha256 = "068yp74k4ybhvycivnr7x238dl1qdnkjdzf25pcz127294rn9yry";
       revision = "2";
       editedCabalFile = "10hmmrm5qjc1lhrqgbh7yyyij9v0rpsv9fakynm5myfcc2ayif82";
       libraryHaskellDepends = [
         array base base-compat-batteries bifunctors bytestring
         bytestring-builder containers contravariant generic-deriving
         ghc-boot-th ghc-prim integer-gmp nats semigroups tagged
         template-haskell text th-abstraction th-lift transformers
         transformers-compat void
       ];
       testHaskellDepends = [
         array base base-compat-batteries base-orphans bytestring
         bytestring-builder deriving-compat generic-deriving ghc-prim hspec
         nats QuickCheck quickcheck-instances semigroups tagged
         template-haskell text transformers transformers-compat
       ];
       testToolDepends = [ hspec-discover ];
       benchmarkHaskellDepends = [ base criterion deepseq ghc-prim text ];
       homepage = "https://github.com/RyanGlScott/text-show";
       description = "Efficient conversion of values into Text";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "text-show-instances" = callPackage
    ({ mkDerivation, base, base-compat-batteries, bifunctors, binary
     , containers, directory, generic-deriving, ghc-boot-th, ghc-prim
     , haskeline, hoopl, hpc, hspec, hspec-discover, old-locale
     , old-time, pretty, QuickCheck, quickcheck-instances, random
     , semigroups, tagged, template-haskell, terminfo, text, text-show
     , th-orphans, time, transformers, transformers-compat, unix
     , unordered-containers, vector, xhtml
     }:
     mkDerivation {
       pname = "text-show-instances";
       version = "3.6.5";
       sha256 = "0hljqh31m3199w8ppcihggcya8cj4zmrav5z6fvcn6xn2hzz1cql";
       revision = "2";
       editedCabalFile = "1lqvwm9ciazk13jabyr81rl4hsmwksjmks7ckxrdgz3jk201yr6i";
       libraryHaskellDepends = [
         base base-compat-batteries bifunctors binary containers directory
         ghc-boot-th haskeline hoopl hpc old-locale old-time pretty random
         semigroups tagged template-haskell terminfo text text-show time
         transformers transformers-compat unix unordered-containers vector
         xhtml
       ];
       testHaskellDepends = [
         base base-compat-batteries bifunctors binary containers directory
         generic-deriving ghc-boot-th ghc-prim haskeline hoopl hpc hspec
         old-locale old-time pretty QuickCheck quickcheck-instances random
         tagged template-haskell terminfo text-show th-orphans time
         transformers transformers-compat unix unordered-containers vector
         xhtml
       ];
       testToolDepends = [ hspec-discover ];
       homepage = "https://github.com/RyanGlScott/text-show-instances";
       description = "Additional instances for text-show";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "text-zipper" = callPackage
    ({ mkDerivation, base, deepseq, hspec, QuickCheck, text, vector }:
     mkDerivation {
       pname = "text-zipper";
       version = "0.10.1";
       sha256 = "0jxicjp0ak1fyl1n3yspxq6hv9l90zzy75glsv8bc2svsn9ypyls";
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [ base deepseq text vector ];
       testHaskellDepends = [ base hspec QuickCheck text ];
       homepage = "https://github.com/jtdaugherty/text-zipper/";
       description = "A text editor zipper library";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "textlocal" = callPackage
    ({ mkDerivation, aeson, base, bytestring, http-client
     , http-client-tls, http-conduit, text, unix-time
     }:
     mkDerivation {
       pname = "textlocal";
       version = "0.1.0.5";
       sha256 = "11rhrylv8pzsz35i3908d3fhdskmi4wrysxyj31hz4n9f1igym49";
       libraryHaskellDepends = [
         aeson base bytestring http-client http-client-tls http-conduit text
         unix-time
       ];
       homepage = "https://github.com/just-chow/textlocal";
       description = "Haskell wrapper for textlocal SMS gateway";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "tf-random" = callPackage
    ({ mkDerivation, base, primitive, random, time }:
     mkDerivation {
       pname = "tf-random";
       version = "0.5";
       sha256 = "0445r2nns6009fmq0xbfpyv7jpzwv0snccjdg7hwj4xk4z0cwc1f";
       libraryHaskellDepends = [ base primitive random time ];
       description = "High-quality splittable pseudorandom number generator";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "tfp" = callPackage
    ({ mkDerivation, base, QuickCheck, utility-ht }:
     mkDerivation {
       pname = "tfp";
       version = "1.0.0.2";
       sha256 = "1njccng7gj8za3ywjydphw054nx6grmgnfzwmwj89xwirf8710cs";
       revision = "1";
       editedCabalFile = "062rvn5ba3x5fjhnqs8lid6mra3vqz5ikaixck1mlmafkqmxhvw9";
       libraryHaskellDepends = [ base utility-ht ];
       testHaskellDepends = [ base QuickCheck ];
       homepage = "http://www.haskell.org/haskellwiki/Type_arithmetic";
       description = "Type-level integers, booleans, lists using type families";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "th-abstraction" = callPackage
    ({ mkDerivation, base, containers, ghc-prim, template-haskell }:
     mkDerivation {
       pname = "th-abstraction";
       version = "0.2.10.0";
       sha256 = "1bql46ylr111g0pncdsf5mbhn6cpaw9xlqby89bz417dlk5gzny9";
       libraryHaskellDepends = [
         base containers ghc-prim template-haskell
       ];
       testHaskellDepends = [ base containers template-haskell ];
       homepage = "https://github.com/glguy/th-abstraction";
       description = "Nicer interface for reified information about data types";
       license = stdenv.lib.licenses.isc;
     }) {};
  "th-data-compat" = callPackage
    ({ mkDerivation, base, template-haskell }:
     mkDerivation {
       pname = "th-data-compat";
       version = "0.0.2.7";
       sha256 = "0yjfz9iwz0n2wx2c7wjazhwh23ny43fmnjp7dn7m37p320jgzahk";
       libraryHaskellDepends = [ base template-haskell ];
       description = "Compatibility for data definition template of TH";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "th-desugar" = callPackage
    ({ mkDerivation, base, containers, hspec, HUnit, mtl, syb
     , template-haskell, th-expand-syns, th-lift, th-orphans
     }:
     mkDerivation {
       pname = "th-desugar";
       version = "1.8";
       sha256 = "0nbsgf3lxmjj43f1xdjb1z486h8av47mym6v1y5pzdv39wgiykdv";
       revision = "1";
       editedCabalFile = "13jvl6ijxjwbd7df0cq5pnijs3wrs8x5r9ykyyj180dak66909wd";
       libraryHaskellDepends = [
         base containers mtl syb template-haskell th-expand-syns th-lift
         th-orphans
       ];
       testHaskellDepends = [
         base containers hspec HUnit mtl syb template-haskell th-expand-syns
         th-lift th-orphans
       ];
       homepage = "https://github.com/goldfirere/th-desugar";
       description = "Functions to desugar Template Haskell";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "th-expand-syns" = callPackage
    ({ mkDerivation, base, containers, syb, template-haskell }:
     mkDerivation {
       pname = "th-expand-syns";
       version = "0.4.4.0";
       sha256 = "01prlvh3py5hq5ccjidfyp9ixq2zd88dkbsidyjrpkja6v8m43yc";
       revision = "1";
       editedCabalFile = "1zbdg3hrqv7rzlsrw4a2vjr3g4nzny32wvjcpxamlvx77b1jvsw9";
       libraryHaskellDepends = [ base containers syb template-haskell ];
       testHaskellDepends = [ base template-haskell ];
       homepage = "https://github.com/DanielSchuessler/th-expand-syns";
       description = "Expands type synonyms in Template Haskell ASTs";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "th-extras" = callPackage
    ({ mkDerivation, base, syb, template-haskell }:
     mkDerivation {
       pname = "th-extras";
       version = "0.0.0.4";
       sha256 = "1vgvqgfm2lvx6v5r2mglwyl63647c9n6b9a5ikqc93pjm98g9vwg";
       libraryHaskellDepends = [ base syb template-haskell ];
       homepage = "https://github.com/mokus0/th-extras";
       description = "A grab bag of functions for use with Template Haskell";
       license = stdenv.lib.licenses.publicDomain;
     }) {};
  "th-lift" = callPackage
    ({ mkDerivation, base, ghc-prim, template-haskell, th-abstraction
     }:
     mkDerivation {
       pname = "th-lift";
       version = "0.7.11";
       sha256 = "131360zxb0hazbqwbkk6ab2p77jkxr79bwwm618mrwrwkm3x2g6m";
       libraryHaskellDepends = [
         base ghc-prim template-haskell th-abstraction
       ];
       testHaskellDepends = [ base ghc-prim template-haskell ];
       homepage = "http://github.com/mboes/th-lift";
       description = "Derive Template Haskell's Lift class for datatypes";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "th-lift-instances" = callPackage
    ({ mkDerivation, base, bytestring, containers, QuickCheck
     , template-haskell, text, th-lift, vector
     }:
     mkDerivation {
       pname = "th-lift-instances";
       version = "0.1.11";
       sha256 = "1f56cp6ckcalld5jchv0kxpjkwcsixd7smd0g7r8cg67ppx6m90x";
       libraryHaskellDepends = [
         base bytestring containers template-haskell text th-lift vector
       ];
       testHaskellDepends = [
         base bytestring containers QuickCheck template-haskell text vector
       ];
       homepage = "http://github.com/bennofs/th-lift-instances/";
       description = "Lift instances for template-haskell for common data types";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "th-nowq" = callPackage
    ({ mkDerivation, base, markdown-unlit, template-haskell, time }:
     mkDerivation {
       pname = "th-nowq";
       version = "0.1.0.2";
       sha256 = "1r9qwj3aw5adxzgxb1kgr9s1scrqclf4jfmlhv8nz1dhbqwg84h1";
       libraryHaskellDepends = [ base template-haskell time ];
       testHaskellDepends = [ base markdown-unlit ];
       testToolDepends = [ markdown-unlit ];
       homepage = "https://github.com/dzhus/th-nowq#readme";
       description = "Template Haskell splice that expands to current time";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "th-orphans" = callPackage
    ({ mkDerivation, base, hspec, hspec-discover, mtl, template-haskell
     , th-lift, th-lift-instances, th-reify-many
     }:
     mkDerivation {
       pname = "th-orphans";
       version = "0.13.6";
       sha256 = "0sfl3pn9kq9da3ji3lsgzgzy82vz6yvsg80dmakc1jvk7awycibp";
       libraryHaskellDepends = [
         base mtl template-haskell th-lift th-lift-instances th-reify-many
       ];
       testHaskellDepends = [ base hspec template-haskell ];
       testToolDepends = [ hspec-discover ];
       description = "Orphan instances for TH datatypes";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "th-printf" = callPackage
    ({ mkDerivation, ansi-wl-pprint, attoparsec, base, bytestring
     , charset, containers, criterion, hspec, HUnit, QuickCheck
     , template-haskell, text, transformers, trifecta, utf8-string
     }:
     mkDerivation {
       pname = "th-printf";
       version = "0.5.1";
       sha256 = "0dgi93pb3zci1isxjmnzhn6apm4pyg12ayz8l1gxlilli8q1z4l6";
       libraryHaskellDepends = [
         ansi-wl-pprint attoparsec base charset containers template-haskell
         text transformers trifecta utf8-string
       ];
       testHaskellDepends = [
         base bytestring hspec HUnit QuickCheck template-haskell text
       ];
       benchmarkHaskellDepends = [ base criterion text ];
       homepage = "https://github.com/pikajude/th-printf";
       description = "Compile-time printf";
       license = stdenv.lib.licenses.mit;
     }) {};
  "th-reify-compat" = callPackage
    ({ mkDerivation, base, template-haskell }:
     mkDerivation {
       pname = "th-reify-compat";
       version = "0.0.1.5";
       sha256 = "171m4fibjq4ml33xvbb0qdm625adknsdgz8flb4xhag075z2w6xg";
       libraryHaskellDepends = [ base template-haskell ];
       homepage = "http://github.com/khibino/haskell-th-reify-compat/";
       description = "Compatibility for the result type of TH reify";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "th-reify-many" = callPackage
    ({ mkDerivation, base, containers, mtl, safe, template-haskell
     , th-expand-syns
     }:
     mkDerivation {
       pname = "th-reify-many";
       version = "0.1.8";
       sha256 = "0hzy6hvhvcd6i60vx5cp2b7ggmnnjh9rx4h8bm8xw4grglcaxjnf";
       libraryHaskellDepends = [
         base containers mtl safe template-haskell th-expand-syns
       ];
       testHaskellDepends = [ base template-haskell ];
       homepage = "http://github.com/mgsloan/th-reify-many";
       description = "Recurseively reify template haskell datatype info";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "th-strict-compat" = callPackage
    ({ mkDerivation, base, template-haskell }:
     mkDerivation {
       pname = "th-strict-compat";
       version = "0.1.0.1";
       sha256 = "0jmajcnw832df503jbg2fmrmnskc43i07214vpc4fw359cgd7yn3";
       libraryHaskellDepends = [ base template-haskell ];
       homepage = "https://gitlab.com/igrep/th-strict-compat";
       description = "Compatibility shim for Bang and Strict in Template Haskell";
       license = stdenv.lib.licenses.asl20;
     }) {};
  "th-utilities" = callPackage
    ({ mkDerivation, base, bytestring, containers, directory, filepath
     , hspec, primitive, syb, template-haskell, text, th-orphans, vector
     }:
     mkDerivation {
       pname = "th-utilities";
       version = "0.2.0.1";
       sha256 = "1mki2s821b1zpdn5463qz5vl3kvxxam90iax1n6vznf0d7p4rik5";
       libraryHaskellDepends = [
         base bytestring containers directory filepath primitive syb
         template-haskell text th-orphans
       ];
       testHaskellDepends = [
         base bytestring containers directory filepath hspec primitive syb
         template-haskell text th-orphans vector
       ];
       homepage = "https://github.com/fpco/th-utilities#readme";
       description = "Collection of useful functions for use with Template Haskell";
       license = stdenv.lib.licenses.mit;
     }) {};
  "these" = callPackage
    ({ mkDerivation, aeson, base, bifunctors, binary, containers
     , data-default-class, deepseq, hashable, keys, mtl, profunctors
     , QuickCheck, quickcheck-instances, semigroupoids, tasty
     , tasty-quickcheck, transformers, transformers-compat
     , unordered-containers, vector, vector-instances
     }:
     mkDerivation {
       pname = "these";
       version = "0.7.5";
       sha256 = "1yrmxkpka0b6hzb7h2j603rjvyzhldrsq8h7336jr7b0ml929b6v";
       libraryHaskellDepends = [
         aeson base bifunctors binary containers data-default-class deepseq
         hashable keys mtl profunctors QuickCheck semigroupoids transformers
         transformers-compat unordered-containers vector vector-instances
       ];
       testHaskellDepends = [
         aeson base bifunctors binary containers hashable QuickCheck
         quickcheck-instances tasty tasty-quickcheck transformers
         unordered-containers vector
       ];
       homepage = "https://github.com/isomorphism/these";
       description = "An either-or-both data type & a generalized 'zip with padding' typeclass";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "thread-hierarchy" = callPackage
    ({ mkDerivation, base, containers, hspec, stm }:
     mkDerivation {
       pname = "thread-hierarchy";
       version = "0.3.0.1";
       sha256 = "0d2wbm75f59vj1h18afdhb1wqyclv5gpgj6pyrhbcnf7aa2490c1";
       libraryHaskellDepends = [ base containers stm ];
       testHaskellDepends = [ base containers hspec stm ];
       homepage = "https://github.com/nshimaza/thread-hierarchy#readme";
       description = "Simple Haskel thread management in hierarchical manner";
       license = stdenv.lib.licenses.mit;
     }) {};
  "thread-local-storage" = callPackage
    ({ mkDerivation, atomic-primops, base, containers, criterion }:
     mkDerivation {
       pname = "thread-local-storage";
       version = "0.2";
       sha256 = "152j8r7rfixkjrh1ynv2s0586bl65cpy47frhsikd40q64bf0j6n";
       libraryHaskellDepends = [ base containers ];
       testHaskellDepends = [ atomic-primops base ];
       benchmarkHaskellDepends = [ atomic-primops base criterion ];
       homepage = "https://github.com/rrnewton/thread-local-storage";
       description = "Several options for thread-local-storage (TLS) in Haskell";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "threads" = callPackage
    ({ mkDerivation, base, Cabal, concurrent-extra, HUnit, stm
     , test-framework, test-framework-hunit
     }:
     mkDerivation {
       pname = "threads";
       version = "0.5.1.6";
       sha256 = "0bjnjhnq3km6xqk0fn1fgyz5xdw4h6lylbwwbcmkkfzwcz0c76hk";
       setupHaskellDepends = [ base Cabal ];
       libraryHaskellDepends = [ base stm ];
       testHaskellDepends = [
         base concurrent-extra HUnit stm test-framework test-framework-hunit
       ];
       homepage = "https://github.com/basvandijk/threads";
       description = "Fork threads and wait for their result";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "threads-extras" = callPackage
    ({ mkDerivation, base, stm, threads }:
     mkDerivation {
       pname = "threads-extras";
       version = "0.1.0.2";
       sha256 = "0x95vsgsizkbidpkprbijqbgclryhbk31m8k0icbjrx7p2capvsd";
       libraryHaskellDepends = [ base stm threads ];
       testHaskellDepends = [ base ];
       description = "Extends the threads package with a bounded thread group";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "threepenny-gui" = callPackage
    ({ mkDerivation, aeson, async, base, bytestring, containers
     , data-default, deepseq, exceptions, file-embed, filepath, hashable
     , safe, snap-core, snap-server, stm, template-haskell, text
     , transformers, unordered-containers, vault, vector, websockets
     , websockets-snap
     }:
     mkDerivation {
       pname = "threepenny-gui";
       version = "0.8.3.0";
       sha256 = "173aacscvf2llk6n5nnxvww22673cg2hclkb3s18av3xk03b4qf6";
       isLibrary = true;
       isExecutable = true;
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [
         aeson async base bytestring containers data-default deepseq
         exceptions file-embed filepath hashable safe snap-core snap-server
         stm template-haskell text transformers unordered-containers vault
         vector websockets websockets-snap
       ];
       homepage = "http://wiki.haskell.org/Threepenny-gui";
       description = "GUI framework that uses the web browser as a display";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "throttle-io-stream" = callPackage
    ({ mkDerivation, async, base, bytestring, clock, HUnit, say, stm
     , stm-chans, test-framework, test-framework-hunit, text
     }:
     mkDerivation {
       pname = "throttle-io-stream";
       version = "0.2.0.1";
       sha256 = "13icrx3nrgidnb7j3ixqz93rcsc63qmczkvjyg74pjrb0rlsi5z8";
       libraryHaskellDepends = [ async base clock stm stm-chans ];
       testHaskellDepends = [
         async base bytestring clock HUnit say stm stm-chans test-framework
         test-framework-hunit text
       ];
       homepage = "https://github.com/mtesseract/throttle-io-stream#readme";
       description = "Throttler between arbitrary IO producer and consumer functions";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "through-text" = callPackage
    ({ mkDerivation, base, bytestring, case-insensitive, text }:
     mkDerivation {
       pname = "through-text";
       version = "0.1.0.0";
       sha256 = "1kdl36n98kajaa7v7js2sy8bi09p8rrxmlfcclcfc1l92bd2aclk";
       revision = "3";
       editedCabalFile = "1gia9j7zq3g74kqvkzwp68d690nhddix1kpmj23d5a3zns3rxasn";
       libraryHaskellDepends = [ base bytestring case-insensitive text ];
       homepage = "https://www.github.com/bergmark/through-text";
       description = "Convert textual types through Text without needing O(n^2) instances";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "throwable-exceptions" = callPackage
    ({ mkDerivation, base, doctest, either, safe-exceptions, silently
     , tasty, tasty-discover, tasty-hunit, template-haskell, text
     }:
     mkDerivation {
       pname = "throwable-exceptions";
       version = "0.1.0.9";
       sha256 = "1ab9qx87r0wxrvx9fk77cpimj0pm1qa2pvcv4b8sadj0s8fkrcis";
       libraryHaskellDepends = [ base safe-exceptions template-haskell ];
       testHaskellDepends = [
         base doctest either safe-exceptions silently tasty tasty-discover
         tasty-hunit text
       ];
       testToolDepends = [ tasty-discover ];
       homepage = "https://github.com/aiya000/hs-throwable-exceptions#README.md";
       description = "throwable-exceptions gives the easy way to throw exceptions";
       license = stdenv.lib.licenses.mit;
     }) {};
  "tibetan-utils" = callPackage
    ({ mkDerivation, base, composition-prelude, either, hspec
     , hspec-megaparsec, megaparsec, text, text-show
     }:
     mkDerivation {
       pname = "tibetan-utils";
       version = "0.1.1.5";
       sha256 = "09bqix2a2js98rhp748qx2i0vnxya3c6zvpjizbbnf5fwpspy01q";
       revision = "2";
       editedCabalFile = "17zyhdxwnq85kr60bnxirmyvw3b1679j5mhm3i30ri65896pjdwf";
       libraryHaskellDepends = [
         base composition-prelude either megaparsec text text-show
       ];
       testHaskellDepends = [
         base hspec hspec-megaparsec megaparsec text
       ];
       homepage = "https://github.com/vmchale/tibetan-utils#readme";
       description = "Parse and display tibetan numerals";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "tile" = callPackage
    ({ mkDerivation, base, HUnit }:
     mkDerivation {
       pname = "tile";
       version = "0.3.0.0";
       sha256 = "1w35rhrpjs39xbcg2i635jxdkbp4nhkzrrnl9p3bz85yc1iiiv8m";
       libraryHaskellDepends = [ base ];
       testHaskellDepends = [ base HUnit ];
       homepage = "https://github.com/caneroj1/tile#readme";
       description = "Slippy map tile functionality";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "time-compat" = callPackage
    ({ mkDerivation, base, old-time, time }:
     mkDerivation {
       pname = "time-compat";
       version = "0.1.0.3";
       sha256 = "0zqgzr8yjn36rn6gflwh5s0c92vl44xzxiw0jz8d5h0h8lhi21sr";
       libraryHaskellDepends = [ base old-time time ];
       homepage = "http://hub.darcs.net/dag/time-compat";
       description = "Compatibility with old-time for the time package";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "time-lens" = callPackage
    ({ mkDerivation, base, data-lens-light, time }:
     mkDerivation {
       pname = "time-lens";
       version = "0.4.0.2";
       sha256 = "07nh97x1mx5hc48xqv3gk3cgls6xpb829h3bzsjx8rwqnzybijyq";
       libraryHaskellDepends = [ base data-lens-light time ];
       homepage = "https://github.com/feuerbach/time-lens";
       description = "Lens-based interface to Data.Time data structures";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "time-locale-compat" = callPackage
    ({ mkDerivation, base, time }:
     mkDerivation {
       pname = "time-locale-compat";
       version = "0.1.1.5";
       sha256 = "0b2hmj8wwrfkndwzgm11qr496ca2ahwdxcj3m0ii91bxvrk1bzq7";
       configureFlags = [ "-f-old-locale" ];
       libraryHaskellDepends = [ base time ];
       homepage = "https://github.com/khibino/haskell-time-locale-compat";
       description = "Compatibile module for time-format locale";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "time-locale-vietnamese" = callPackage
    ({ mkDerivation, base, time }:
     mkDerivation {
       pname = "time-locale-vietnamese";
       version = "1.0.0.0";
       sha256 = "0xhbfdzrlhj3096w2dgk2ijpzs4kzym11sz3r0h8r19a3jrjs1ln";
       libraryHaskellDepends = [ base time ];
       homepage = "https://github.com/tungd/time-locale-vietnamese#readme";
       description = "Vietnamese locale for date and time format";
       license = stdenv.lib.licenses.asl20;
     }) {};
  "time-parsers" = callPackage
    ({ mkDerivation, base, parsers, template-haskell, time }:
     mkDerivation {
       pname = "time-parsers";
       version = "0.1.2.0";
       sha256 = "091wpcqj1kjvyjgj1y1invn0g5lhdxc92az2bcbwbrpq2c7x8l2f";
       revision = "3";
       editedCabalFile = "0im963wjcmwf6ii9a00mbi8lhmx5cy7cs6rmp0qi2j2jddba78j2";
       libraryHaskellDepends = [ base parsers template-haskell time ];
       doCheck = false;
       homepage = "https://github.com/phadej/time-parsers#readme";
       description = "Parsers for types in `time`";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "timeit" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "timeit";
       version = "2.0";
       sha256 = "1sliqpvl501rlcj6s0lhmsf5ym24j4h881wzc1f1wdyvg3jz8kd1";
       revision = "1";
       editedCabalFile = "0d4vjg48xyqjmydnjqjxica0zr30vgb91b3vv75cig686ikpjmq7";
       libraryHaskellDepends = [ base ];
       homepage = "https://github.com/merijn/timeit";
       description = "Time monadic computations with an IO base";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "timelens" = callPackage
    ({ mkDerivation, base, lens, time }:
     mkDerivation {
       pname = "timelens";
       version = "0.2.0.2";
       sha256 = "0r57fib5nzvrk8gsn26364l1a14zj9sg3kv2db4pjzy3dq0zmrpl";
       libraryHaskellDepends = [ base lens time ];
       homepage = "http://www.github.com/massysett/timelens";
       description = "Lenses for the time package";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "timerep" = callPackage
    ({ mkDerivation, attoparsec, base, monoid-subclasses, QuickCheck
     , tasty, tasty-hunit, tasty-quickcheck, text, time
     }:
     mkDerivation {
       pname = "timerep";
       version = "2.0.0.2";
       sha256 = "0fakjs6fgva6i035jiyr8hcgnrivw601cy8n3ja232d07izl2khx";
       libraryHaskellDepends = [
         attoparsec base monoid-subclasses text time
       ];
       testHaskellDepends = [
         base QuickCheck tasty tasty-hunit tasty-quickcheck text time
       ];
       homepage = "https://github.com/HugoDaniel/timerep";
       description = "Parse and display time according to some RFCs (RFC3339, RFC2822, RFC822)";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "timezone-olson" = callPackage
    ({ mkDerivation, base, binary, bytestring, extensible-exceptions
     , time, timezone-series
     }:
     mkDerivation {
       pname = "timezone-olson";
       version = "0.1.9";
       sha256 = "05abywx1nrcaz0nqzfy4zw62bc5qd7pdfnjvv4drxkwv084ha8rj";
       libraryHaskellDepends = [
         base binary bytestring extensible-exceptions time timezone-series
       ];
       homepage = "http://projects.haskell.org/time-ng/";
       description = "A pure Haskell parser and renderer for binary Olson timezone files";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "timezone-series" = callPackage
    ({ mkDerivation, base, deepseq, time }:
     mkDerivation {
       pname = "timezone-series";
       version = "0.1.9";
       sha256 = "1blwgnyzqn917rgqkl4dncv9whv3xmk0lav040qq0214vksmvlz5";
       libraryHaskellDepends = [ base deepseq time ];
       homepage = "http://projects.haskell.org/time-ng/";
       description = "Enhanced timezone handling for Data.Time";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "tintin" = callPackage
    ({ mkDerivation, base, clay, containers, data-has, directory
     , frontmatter, inliterate, lucid, optparse-generic, process
     , require, temporary, text, universum, yaml
     }:
     mkDerivation {
       pname = "tintin";
       version = "1.9.2";
       sha256 = "1pid79ar85ajs6gi5d8smqn9ivfr8y50qys1n5zq68kpx2gmf3lq";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         base clay containers data-has directory frontmatter inliterate
         lucid process require temporary text universum yaml
       ];
       libraryToolDepends = [ require ];
       executableHaskellDepends = [
         base optparse-generic require universum
       ];
       executableToolDepends = [ require ];
       testHaskellDepends = [ base require ];
       homepage = "https://github.com/theam/tintin#readme";
       description = "A softer alternative to Haddock";
       license = stdenv.lib.licenses.asl20;
     }) {};
  "tinylog" = callPackage
    ({ mkDerivation, base, bytestring, containers, criterion
     , double-conversion, fast-logger, text, transformers, unix-time
     }:
     mkDerivation {
       pname = "tinylog";
       version = "0.14.1";
       sha256 = "01yz41l45qmc878gzhbchzkvr4ha2cfmvvjv31hwivgwgl8rcgni";
       libraryHaskellDepends = [
         base bytestring containers double-conversion fast-logger text
         transformers unix-time
       ];
       benchmarkHaskellDepends = [ base bytestring criterion ];
       homepage = "https://gitlab.com/twittner/tinylog/";
       description = "Simplistic logging using fast-logger";
       license = stdenv.lib.licenses.mpl20;
     }) {};
  "titlecase" = callPackage
    ({ mkDerivation, base, tasty, tasty-hunit, tasty-quickcheck }:
     mkDerivation {
       pname = "titlecase";
       version = "1.0.1";
       sha256 = "1k29br4ck9hpjq0w8md7i5kbh47svx74i2abv6ql2awxa0liqwz7";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [ base ];
       executableHaskellDepends = [ base ];
       testHaskellDepends = [ base tasty tasty-hunit tasty-quickcheck ];
       homepage = "https://github.com/peti/titlecase#readme";
       description = "Convert English Words to Title Case";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "tls" = callPackage
    ({ mkDerivation, asn1-encoding, asn1-types, async, base, bytestring
     , cereal, criterion, cryptonite, data-default-class, hourglass
     , memory, mtl, network, QuickCheck, tasty, tasty-quickcheck
     , transformers, x509, x509-store, x509-validation
     }:
     mkDerivation {
       pname = "tls";
       version = "1.4.1";
       sha256 = "1y083724mym28n6xfaz7pcc7zqxdhjpaxpbvzxfbs25qq2px3smv";
       libraryHaskellDepends = [
         asn1-encoding asn1-types async base bytestring cereal cryptonite
         data-default-class memory mtl network transformers x509 x509-store
         x509-validation
       ];
       testHaskellDepends = [
         asn1-types base bytestring cereal cryptonite data-default-class
         hourglass mtl QuickCheck tasty tasty-quickcheck x509
         x509-validation
       ];
       benchmarkHaskellDepends = [
         asn1-types base bytestring criterion cryptonite data-default-class
         hourglass mtl QuickCheck tasty-quickcheck x509 x509-validation
       ];
       doCheck = false;
       homepage = "http://github.com/vincenthz/hs-tls";
       description = "TLS/SSL protocol native implementation (Server and Client)";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "tls-debug" = callPackage
    ({ mkDerivation, base, bytestring, cryptonite, data-default-class
     , network, pem, time, tls, x509, x509-store, x509-system
     , x509-validation
     }:
     mkDerivation {
       pname = "tls-debug";
       version = "0.4.5";
       sha256 = "16zb4dray3l6sdckixyd2a5hbf6s0svy5f5bfffq48zr7f3c8id3";
       isLibrary = false;
       isExecutable = true;
       executableHaskellDepends = [
         base bytestring cryptonite data-default-class network pem time tls
         x509 x509-store x509-system x509-validation
       ];
       doHaddock = false;
       homepage = "http://github.com/vincenthz/hs-tls";
       description = "Set of programs for TLS testing and debugging";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "tls-session-manager" = callPackage
    ({ mkDerivation, auto-update, base, clock, psqueues, tls }:
     mkDerivation {
       pname = "tls-session-manager";
       version = "0.0.0.2";
       sha256 = "0rvmln545vghsx8zhxp44f0f6pzma8cylarmfhhysy55ipywr1n5";
       libraryHaskellDepends = [ auto-update base clock psqueues tls ];
       description = "In-memory TLS session manager";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "tmapchan" = callPackage
    ({ mkDerivation, base, containers, hashable, stm
     , unordered-containers
     }:
     mkDerivation {
       pname = "tmapchan";
       version = "0.0.3";
       sha256 = "1q0ia2p8c5ac91n5l3wk6rfmvj93lb9027p9rfq77lydwv1b8vg8";
       libraryHaskellDepends = [
         base containers hashable stm unordered-containers
       ];
       homepage = "https://github.com/athanclark/tmapchan#readme";
       description = "An insert-ordered multimap (indexed FIFO) which consumes values as you lookup";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "tmapmvar" = callPackage
    ({ mkDerivation, async, base, containers, hashable, QuickCheck
     , quickcheck-instances, stm, tasty, tasty-quickcheck
     , unordered-containers
     }:
     mkDerivation {
       pname = "tmapmvar";
       version = "0.0.4";
       sha256 = "1qxl48wcbqvg6fymb8kpr4wz25ixkfvnvli2c7ncjxzdigyqrrd6";
       libraryHaskellDepends = [
         base containers hashable stm unordered-containers
       ];
       testHaskellDepends = [
         async base containers hashable QuickCheck quickcheck-instances stm
         tasty tasty-quickcheck unordered-containers
       ];
       description = "A single-entity stateful Map in STM, similar to tmapchan";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "tmp-postgres" = callPackage
    ({ mkDerivation, base, bytestring, directory, hspec, hspec-discover
     , network, postgresql-simple, process, temporary, unix
     }:
     mkDerivation {
       pname = "tmp-postgres";
       version = "0.1.1.1";
       sha256 = "0qz85flbg2ihkcsjdhambgj07xrz75pgpiz8wpapj0gnady5ap9c";
       libraryHaskellDepends = [
         base bytestring directory network postgresql-simple process
         temporary unix
       ];
       testHaskellDepends = [
         base bytestring directory hspec hspec-discover postgresql-simple
         process temporary
       ];
       testToolDepends = [ hspec-discover ];
       doCheck = false;
       homepage = "https://github.com/jfischoff/tmp-postgres#readme";
       description = "Start and stop a temporary postgres for testing";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "tomland" = callPackage
    ({ mkDerivation, base, hashable, hedgehog, hspec-megaparsec
     , megaparsec, mtl, parser-combinators, tasty, tasty-discover
     , tasty-hedgehog, tasty-hspec, text, time, transformers
     , unordered-containers
     }:
     mkDerivation {
       pname = "tomland";
       version = "0.3.1";
       sha256 = "0kpgcqix32m0nik54rynpphm4mpd8r05mspypjiwj9sidjxn11gw";
       revision = "1";
       editedCabalFile = "0pxc2065zjvsw3qwxhj2iw4d08f4j6y40nr51k6nxkz1px855gyk";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         base hashable megaparsec mtl parser-combinators text time
         transformers unordered-containers
       ];
       executableHaskellDepends = [ base text time unordered-containers ];
       testHaskellDepends = [
         base hedgehog hspec-megaparsec megaparsec tasty tasty-hedgehog
         tasty-hspec text time unordered-containers
       ];
       testToolDepends = [ tasty-discover ];
       homepage = "https://github.com/kowainik/tomland";
       description = "TOML parser";
       license = stdenv.lib.licenses.mpl20;
     }) {};
  "tostring" = callPackage
    ({ mkDerivation, base, case-insensitive, text, utf8-string }:
     mkDerivation {
       pname = "tostring";
       version = "0.2.1.1";
       sha256 = "0c95a1vjnnn3bwdz8v5hv7q2sbzn23ban3hcwqmwhmzc9ba019zg";
       libraryHaskellDepends = [ base case-insensitive text utf8-string ];
       description = "The ToString class";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "transaction" = callPackage
    ({ mkDerivation, base, doctest, Glob, hspec, mono-traversable
     , QuickCheck
     }:
     mkDerivation {
       pname = "transaction";
       version = "0.1.1.3";
       sha256 = "1if04fm2kvkd25ksk1llqqkwaqy8y7pafbywmz70mrr68wrb2r6j";
       libraryHaskellDepends = [ base mono-traversable ];
       testHaskellDepends = [
         base doctest Glob hspec mono-traversable QuickCheck
       ];
       homepage = "https://github.com/arowM/haskell-transaction#readme";
       description = "Monadic representation of transactions";
       license = stdenv.lib.licenses.mit;
     }) {};
  "transformers-base" = callPackage
    ({ mkDerivation, base, base-orphans, stm, transformers
     , transformers-compat
     }:
     mkDerivation {
       pname = "transformers-base";
       version = "0.4.5.2";
       sha256 = "1s256bi0yh0x2hp2gwd30f3mg1cv53zz397dv1yhfsnfzmihrj6h";
       libraryHaskellDepends = [
         base base-orphans stm transformers transformers-compat
       ];
       homepage = "https://github.com/mvv/transformers-base";
       description = "Lift computations from the bottom of a transformer stack";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "transformers-bifunctors" = callPackage
    ({ mkDerivation, base, mmorph, transformers }:
     mkDerivation {
       pname = "transformers-bifunctors";
       version = "0.1";
       sha256 = "01s8516m9cybx5gqxk8g00fnkbwpfi5vrm1pgi62pxk1cgbx699w";
       libraryHaskellDepends = [ base mmorph transformers ];
       homepage = "https://github.com/jystic/transformers-bifunctors";
       description = "Bifunctors over monad transformers";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "transformers-compat" = callPackage
    ({ mkDerivation, base, ghc-prim, transformers }:
     mkDerivation {
       pname = "transformers-compat";
       version = "0.6.2";
       sha256 = "1gp4a8kvniwgm8947ghb4iwv4b7wd6ry4kvv4nfnym4agf5j41nw";
       configureFlags = [ "-ffive-three" ];
       libraryHaskellDepends = [ base ghc-prim transformers ];
       homepage = "http://github.com/ekmett/transformers-compat/";
       description = "A small compatibility shim for the transformers library";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "transformers-fix" = callPackage
    ({ mkDerivation, base, transformers }:
     mkDerivation {
       pname = "transformers-fix";
       version = "1.0";
       sha256 = "02aapq88k81q9r6wmvmg9zjyrmz9qzi4gss75p18lkc4dgrzzlb5";
       revision = "1";
       editedCabalFile = "126gyjr8jp42md6nblx7c0kan97jgsakvsf2vzv2pj828ax1icrs";
       libraryHaskellDepends = [ base transformers ];
       homepage = "https://github.com/thumphries/transformers-fix";
       description = "Monad transformer for evaluating to a fixpoint";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "transformers-lift" = callPackage
    ({ mkDerivation, base, transformers, writer-cps-transformers }:
     mkDerivation {
       pname = "transformers-lift";
       version = "0.2.0.1";
       sha256 = "17g03r5hpnygx0c9ybr9za6208ay0cjvz47rkyplv1r9zcivzn0b";
       revision = "2";
       editedCabalFile = "16gpca2wfa7w2b5kzfvqsjjyd61pkv0wyi2mk5b34367p4chnsc5";
       libraryHaskellDepends = [
         base transformers writer-cps-transformers
       ];
       description = "Ad-hoc type classes for lifting";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "traverse-with-class" = callPackage
    ({ mkDerivation, base, tasty, tasty-hunit, template-haskell
     , transformers
     }:
     mkDerivation {
       pname = "traverse-with-class";
       version = "1.0.0.0";
       sha256 = "1fqz35kaffq79qs7kgdx2bml2a99x6k87hlczsfjcs1bcpqj18k5";
       libraryHaskellDepends = [ base template-haskell transformers ];
       testHaskellDepends = [ base tasty tasty-hunit ];
       description = "Generic applicative traversals";
       license = stdenv.lib.licenses.mit;
     }) {};
  "tree-diff" = callPackage
    ({ mkDerivation, aeson, ansi-terminal, ansi-wl-pprint, base
     , base-compat, bytestring, containers, generics-sop, hashable
     , MemoTrie, parsec, parsers, pretty, QuickCheck, scientific, tagged
     , text, time, unordered-containers, uuid-types, vector
     }:
     mkDerivation {
       pname = "tree-diff";
       version = "0.0.2";
       sha256 = "0zlviaikyk50l577q7h06w5z058v1ngjlhwzfn965xkp978hnsgq";
       libraryHaskellDepends = [
         aeson ansi-terminal ansi-wl-pprint base base-compat bytestring
         containers generics-sop hashable MemoTrie parsec parsers pretty
         QuickCheck scientific tagged text time unordered-containers
         uuid-types vector
       ];
       doCheck = false;
       homepage = "https://github.com/phadej/tree-diff";
       description = "Diffing of (expression) trees";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "tree-fun" = callPackage
    ({ mkDerivation, base, containers, mtl }:
     mkDerivation {
       pname = "tree-fun";
       version = "0.8.1.0";
       sha256 = "07vgsps4kjld75ndnjjaigsk5vvg11vjp740pznhsw79k3qjbs9a";
       libraryHaskellDepends = [ base containers mtl ];
       description = "Library for functions pertaining to tree exploration and manipulation";
       license = stdenv.lib.licenses.gpl3;
     }) {};
  "trifecta" = callPackage
    ({ mkDerivation, ansi-terminal, ansi-wl-pprint, array, base
     , blaze-builder, blaze-html, blaze-markup, bytestring, Cabal
     , cabal-doctest, charset, comonad, containers, deepseq, doctest
     , fingertree, ghc-prim, hashable, lens, mtl, parsers, profunctors
     , QuickCheck, reducers, semigroups, transformers
     , unordered-containers, utf8-string
     }:
     mkDerivation {
       pname = "trifecta";
       version = "2";
       sha256 = "0hznd8i65s81xy13i2qc7cvipw3lfb2yhkv53apbdsh6sbljz5sk";
       setupHaskellDepends = [ base Cabal cabal-doctest ];
       libraryHaskellDepends = [
         ansi-terminal ansi-wl-pprint array base blaze-builder blaze-html
         blaze-markup bytestring charset comonad containers deepseq
         fingertree ghc-prim hashable lens mtl parsers profunctors reducers
         semigroups transformers unordered-containers utf8-string
       ];
       testHaskellDepends = [ base doctest parsers QuickCheck ];
       homepage = "http://github.com/ekmett/trifecta/";
       description = "A modern parser combinator library with convenient diagnostics";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "triplesec" = callPackage
    ({ mkDerivation, base, bytestring, cryptonite, doctest, memory, mtl
     , QuickCheck, tasty, tasty-hunit, tasty-quickcheck, transformers
     }:
     mkDerivation {
       pname = "triplesec";
       version = "0.1.2.0";
       sha256 = "0qvhsn5l35mmm71j5g0kv955hfjyzywvwgnjfjl8illgf2g79f46";
       libraryHaskellDepends = [
         base cryptonite memory mtl transformers
       ];
       testHaskellDepends = [
         base bytestring doctest memory QuickCheck tasty tasty-hunit
         tasty-quickcheck
       ];
       homepage = "https://github.com/SamProtas/hs-triplesec";
       description = "TripleSec is a simple, triple-paranoid, symmetric encryption library";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "tsv2csv" = callPackage
    ({ mkDerivation, base, HUnit, split }:
     mkDerivation {
       pname = "tsv2csv";
       version = "0.1.0.2";
       sha256 = "15rkvmisnk521ym9r48f1lp8w1wg1cyljj1165zd99ckmj5jy21c";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [ base HUnit split ];
       executableHaskellDepends = [ base ];
       description = "Convert tsv to csv";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "ttrie" = callPackage
    ({ mkDerivation, atomic-primops, base, containers, hashable
     , primitive, QuickCheck, stm, test-framework
     , test-framework-quickcheck2
     }:
     mkDerivation {
       pname = "ttrie";
       version = "0.1.2.1";
       sha256 = "0s2a3zr99n0k8l847jcpzpi9vz8z69jjgxqd28b0p6jmi7llyi2h";
       libraryHaskellDepends = [
         atomic-primops base hashable primitive stm
       ];
       testHaskellDepends = [
         base containers hashable QuickCheck stm test-framework
         test-framework-quickcheck2
       ];
       homepage = "http://github.com/mcschroeder/ttrie";
       description = "Contention-free STM hash map";
       license = stdenv.lib.licenses.mit;
     }) {};
  "tuple" = callPackage
    ({ mkDerivation, base, OneTuple }:
     mkDerivation {
       pname = "tuple";
       version = "0.3.0.2";
       sha256 = "094nx29aahyrvbcn7yca9zs2a5rxz1is7510w1q43rpvza7hdjrg";
       libraryHaskellDepends = [ base OneTuple ];
       description = "Various functions on tuples";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "tuple-sop" = callPackage
    ({ mkDerivation, base, generics-sop }:
     mkDerivation {
       pname = "tuple-sop";
       version = "0.3.1.0";
       sha256 = "0hv0fcz5sw93v1niq2r656wpkiwkg6larld7x9cwk4s98h7qvqgn";
       libraryHaskellDepends = [ base generics-sop ];
       testHaskellDepends = [ base generics-sop ];
       homepage = "https://github.com/Ferdinand-vW/tuple-sop#readme";
       description = "functions on n-ary tuples using generics-sop";
       license = stdenv.lib.licenses.gpl3;
     }) {};
  "tuple-th" = callPackage
    ({ mkDerivation, base, containers, template-haskell }:
     mkDerivation {
       pname = "tuple-th";
       version = "0.2.5";
       sha256 = "1mrl4vvxmby7sf1paf7hklzidnr6wq55822i73smqyz0xpf3gsjn";
       libraryHaskellDepends = [ base containers template-haskell ];
       description = "Generate (non-recursive) utility functions for tuples of statically known size";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "tuples-homogenous-h98" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "tuples-homogenous-h98";
       version = "0.1.1.0";
       sha256 = "0fhz246wh6x0s0sjkmd3qcylsx2gfrmgmvgb7js2zjg91y7zqnh2";
       libraryHaskellDepends = [ base ];
       homepage = "https://github.com/ppetr/tuples-homogenous-h98";
       description = "Wrappers for n-ary tuples with Traversable and Applicative/Monad instances";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "turtle" = callPackage
    ({ mkDerivation, ansi-wl-pprint, async, base, bytestring, clock
     , containers, criterion, directory, doctest, exceptions, foldl
     , hostname, managed, optional-args, optparse-applicative, process
     , semigroups, stm, system-fileio, system-filepath, temporary, text
     , time, transformers, unix, unix-compat
     }:
     mkDerivation {
       pname = "turtle";
       version = "1.5.13";
       sha256 = "1124yhw0l8924cwkmap1qn2z0hf4vn3r73h4pmi9icahg8zpc1hg";
       libraryHaskellDepends = [
         ansi-wl-pprint async base bytestring clock containers directory
         exceptions foldl hostname managed optional-args
         optparse-applicative process semigroups stm system-fileio
         system-filepath temporary text time transformers unix unix-compat
       ];
       testHaskellDepends = [ base doctest system-filepath temporary ];
       benchmarkHaskellDepends = [ base criterion text ];
       description = "Shell programming, Haskell-style";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "type-fun" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "type-fun";
       version = "0.1.1";
       sha256 = "18axaln9ahrn6023pk4ig79d2qimmflikf608vgka4hhi91cfpnz";
       libraryHaskellDepends = [ base ];
       testHaskellDepends = [ base ];
       homepage = "https://github.com/s9gf4ult/type-fun";
       description = "Collection of widely reimplemented type families";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "type-hint" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "type-hint";
       version = "0.1";
       sha256 = "1fcrma7m6y7i1y42rzhv7qch8xkk93lkh1767saw4hsb9fzwsq8i";
       libraryHaskellDepends = [ base ];
       homepage = "https://github.com/mvv/type-hint";
       description = "Guide type inference with proxy values";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "type-level-integers" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "type-level-integers";
       version = "0.0.1";
       sha256 = "1fn7zhpmixbp2nd4lryvfzy19g8kj03kh1r264fvnrdbnfjf72qi";
       libraryHaskellDepends = [ base ];
       testHaskellDepends = [ base ];
       homepage = "https://github.com/mtesseract/type-level-integers";
       description = "Provides integers lifted to the type level";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "type-level-kv-list" = callPackage
    ({ mkDerivation, base, doctest, Glob }:
     mkDerivation {
       pname = "type-level-kv-list";
       version = "1.1.0";
       sha256 = "0wvxgxp7rlqbf2crcpb9pbzl3k47i7pc16ih4zfwgv88j7jk5w2g";
       libraryHaskellDepends = [ base ];
       testHaskellDepends = [ base doctest Glob ];
       homepage = "https://github.com/arowM/type-level-kv-list#readme";
       description = "A module for hash map like object with type level keys";
       license = stdenv.lib.licenses.mit;
     }) {};
  "type-level-numbers" = callPackage
    ({ mkDerivation, base, template-haskell }:
     mkDerivation {
       pname = "type-level-numbers";
       version = "0.1.1.1";
       sha256 = "12iiyaqi60fpds7fv1qvphy84rwyj71maq54mfwpcr0bdrgyymjv";
       libraryHaskellDepends = [ base template-haskell ];
       testHaskellDepends = [ base template-haskell ];
       description = "Type level numbers implemented using type families";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "type-of-html" = callPackage
    ({ mkDerivation, base, blaze-html, bytestring, criterion, deepseq
     , double-conversion, ghc, ghc-paths, ghc-prim, hspec, QuickCheck
     , random, temporary, text, weigh
     }:
     mkDerivation {
       pname = "type-of-html";
       version = "1.4.1.0";
       sha256 = "05c9rsbfivw7dsjmci7rnv08i4xmyg59kqghqi0f3dr5hrvas8dv";
       libraryHaskellDepends = [
         base bytestring double-conversion ghc-prim text
       ];
       testHaskellDepends = [ base hspec QuickCheck ];
       benchmarkHaskellDepends = [
         base blaze-html bytestring criterion deepseq ghc ghc-paths random
         temporary text weigh
       ];
       homepage = "https://github.com/knupfer/type-of-html";
       description = "High performance type driven html generation";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "type-of-html-static" = callPackage
    ({ mkDerivation, base, template-haskell, type-of-html }:
     mkDerivation {
       pname = "type-of-html-static";
       version = "0.1.0.2";
       sha256 = "00329zkxlbsjlwnw2pz2w6ahiam5c1k9j9fv2608wjfmxr8xkcr9";
       libraryHaskellDepends = [ base template-haskell type-of-html ];
       testHaskellDepends = [ base type-of-html ];
       homepage = "https://github.com/knupfer/type-of-html-static";
       description = "Optimize static parts of type-of-html";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "type-operators" = callPackage
    ({ mkDerivation, base, ghc-prim }:
     mkDerivation {
       pname = "type-operators";
       version = "0.1.0.4";
       sha256 = "0x0bshb13b7i4imn0pgpljcj109c9z5mgw84mjmlcg62d3ryvg6v";
       libraryHaskellDepends = [ base ghc-prim ];
       homepage = "https://github.com/Shou/type-operators#readme";
       description = "Various type-level operators";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "type-spec" = callPackage
    ({ mkDerivation, base, pretty }:
     mkDerivation {
       pname = "type-spec";
       version = "0.3.0.1";
       sha256 = "0hd2lgfp6vydynr2ip4zy4kg2jzrfkrrqj1vnx1fn4zwkqqimkdf";
       libraryHaskellDepends = [ base pretty ];
       testHaskellDepends = [ base ];
       homepage = "https://github.com/sheyll/type-spec#readme";
       description = "Type Level Specification by Example";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "typed-process" = callPackage
    ({ mkDerivation, async, base, base64-bytestring, bytestring, hspec
     , process, stm, temporary, transformers
     }:
     mkDerivation {
       pname = "typed-process";
       version = "0.2.3.0";
       sha256 = "0j36vrc9w841m5qbwqra1lwiznx31xfnhin1sm8x2c2739csbpn0";
       libraryHaskellDepends = [
         async base bytestring process stm transformers
       ];
       testHaskellDepends = [
         async base base64-bytestring bytestring hspec process stm temporary
         transformers
       ];
       homepage = "https://haskell-lang.org/library/typed-process";
       description = "Run external processes, with strong typing of streams";
       license = stdenv.lib.licenses.mit;
     }) {};
  "typelits-witnesses" = callPackage
    ({ mkDerivation, base, constraints, reflection }:
     mkDerivation {
       pname = "typelits-witnesses";
       version = "0.3.0.3";
       sha256 = "078r9pbkzwzm1q821zqisj0wrx1rdk9w8c3ip0g1m5j97zzlmpaf";
       libraryHaskellDepends = [ base constraints reflection ];
       homepage = "https://github.com/mstksg/typelits-witnesses";
       description = "Existential witnesses, singletons, and classes for operations on GHC TypeLits";
       license = stdenv.lib.licenses.mit;
     }) {};
  "typenums" = callPackage
    ({ mkDerivation, base, hspec, QuickCheck }:
     mkDerivation {
       pname = "typenums";
       version = "0.1.2.1";
       sha256 = "06wrsvbddv2ga7k39954697jnclb5r6g4m95pr0fmv34ws1y1d66";
       libraryHaskellDepends = [ base ];
       testHaskellDepends = [ base hspec QuickCheck ];
       homepage = "https://github.com/adituv/typenums#readme";
       description = "Type level numbers using existing Nat functionality";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "typography-geometry" = callPackage
    ({ mkDerivation, base, containers, parallel, polynomials-bernstein
     , vector
     }:
     mkDerivation {
       pname = "typography-geometry";
       version = "1.0.0.1";
       sha256 = "1mrack0n940idy5rv7mm0gfif8xri6z59npxwkq1kgi606vazbpd";
       libraryHaskellDepends = [
         base containers parallel polynomials-bernstein vector
       ];
       description = "Drawings for printed text documents";
       license = "GPL";
     }) {};
  "tz" = callPackage
    ({ mkDerivation, base, binary, bytestring, containers, data-default
     , deepseq, HUnit, QuickCheck, template-haskell, test-framework
     , test-framework-hunit, test-framework-quickcheck2
     , test-framework-th, time, tzdata, vector
     }:
     mkDerivation {
       pname = "tz";
       version = "0.1.3.2";
       sha256 = "0k35pw27a3hwg5wqjpfqij0y7rkdlmd85n4kj4ckna4z2v86dl7h";
       libraryHaskellDepends = [
         base binary bytestring containers data-default deepseq
         template-haskell time tzdata vector
       ];
       testHaskellDepends = [
         base HUnit QuickCheck test-framework test-framework-hunit
         test-framework-quickcheck2 test-framework-th time tzdata
       ];
       preConfigure = "export TZDIR=${pkgs.tzdata}/share/zoneinfo";
       homepage = "https://github.com/nilcons/haskell-tz";
       description = "Efficient time zone handling";
       license = stdenv.lib.licenses.asl20;
     }) {};
  "tzdata" = callPackage
    ({ mkDerivation, base, bytestring, containers, deepseq, HUnit
     , test-framework, test-framework-hunit, test-framework-th, unix
     , vector
     }:
     mkDerivation {
       pname = "tzdata";
       version = "0.1.20181026.0";
       sha256 = "0b531ydcb63q44zjpcd2l70xp2hgkxqppnfld7n16ifh9vrxm6gf";
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [
         base bytestring containers deepseq vector
       ];
       testHaskellDepends = [
         base bytestring HUnit test-framework test-framework-hunit
         test-framework-th unix
       ];
       homepage = "https://github.com/nilcons/haskell-tzdata";
       description = "Time zone database (as files and as a module)";
       license = stdenv.lib.licenses.asl20;
     }) {};
  "uglymemo" = callPackage
    ({ mkDerivation, base, containers }:
     mkDerivation {
       pname = "uglymemo";
       version = "0.1.0.1";
       sha256 = "0ixqg5d0ly1r18jbgaa89i6kjzgi6c5hanw1b1y8c5fbq14yz2gy";
       libraryHaskellDepends = [ base containers ];
       description = "A simple (but internally ugly) memoization function";
       license = stdenv.lib.licenses.publicDomain;
     }) {};
  "unbound-generics" = callPackage
    ({ mkDerivation, ansi-wl-pprint, base, containers, contravariant
     , criterion, deepseq, exceptions, mtl, profunctors, QuickCheck
     , tasty, tasty-hunit, tasty-quickcheck, template-haskell
     , transformers, transformers-compat
     }:
     mkDerivation {
       pname = "unbound-generics";
       version = "0.3.4";
       sha256 = "01g8zhf9plgl3fcj57fkma3rkdwmh28rla3r1cr0bfmbd03q3fva";
       libraryHaskellDepends = [
         ansi-wl-pprint base containers contravariant deepseq exceptions mtl
         profunctors template-haskell transformers transformers-compat
       ];
       testHaskellDepends = [
         base mtl QuickCheck tasty tasty-hunit tasty-quickcheck
       ];
       benchmarkHaskellDepends = [ base criterion deepseq ];
       homepage = "http://github.com/lambdageek/unbound-generics";
       description = "Support for programming with names and binders using GHC Generics";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "unbounded-delays" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "unbounded-delays";
       version = "0.1.1.0";
       sha256 = "1ir9fghbrc214c97bwafk5ck6cacxz1pdnq4i18p604d1b8zg9wa";
       libraryHaskellDepends = [ base ];
       homepage = "https://github.com/basvandijk/unbounded-delays";
       description = "Unbounded thread delays and timeouts";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "unboxed-ref" = callPackage
    ({ mkDerivation, async, base, ghc-prim, HUnit, primitive }:
     mkDerivation {
       pname = "unboxed-ref";
       version = "0.4.0.0";
       sha256 = "0gvpp35mzx6ydwhwqdv319pl4yw7g4pyayciry83lnh3a3asisv4";
       libraryHaskellDepends = [ base ghc-prim primitive ];
       testHaskellDepends = [ async base HUnit ];
       homepage = "https://github.com/winterland1989/unboxed-ref";
       description = "Fast unboxed references for ST and IO monad";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "uncertain" = callPackage
    ({ mkDerivation, ad, base, base-compat, containers, free
     , mwc-random, primitive, transformers
     }:
     mkDerivation {
       pname = "uncertain";
       version = "0.3.1.0";
       sha256 = "1wkgk6504qyirr2bq3m4pqgwdvrpnrig1bnzcls0r7krsig8arvg";
       libraryHaskellDepends = [
         ad base base-compat containers free mwc-random primitive
         transformers
       ];
       homepage = "https://github.com/mstksg/uncertain";
       description = "Manipulating numbers with inherent experimental/measurement uncertainty";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "unconstrained" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "unconstrained";
       version = "0.1.0.2";
       sha256 = "03811shhcfkcrsai3a1vw99g0pmg8m3cfi8gfiaf8b13l1k7lwfj";
       description = "Null constraint";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "unfoldable" = callPackage
    ({ mkDerivation, base, containers, ghc-prim, one-liner, QuickCheck
     , random, transformers
     }:
     mkDerivation {
       pname = "unfoldable";
       version = "0.9.6";
       sha256 = "18gaay37mjgyd5rfpfs84p4q7vqdnv4lcjabaprgm315pblym46d";
       revision = "2";
       editedCabalFile = "08rx8ci2jpa77q1dl4lghlyhd27if990ic9kaz30hczsazlzi44b";
       libraryHaskellDepends = [
         base containers ghc-prim one-liner QuickCheck random transformers
       ];
       homepage = "https://github.com/sjoerdvisscher/unfoldable";
       description = "Class of data structures that can be unfolded";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "unfoldable-restricted" = callPackage
    ({ mkDerivation, base, constraints, containers, hashable
     , transformers, unfoldable, unit-constraint, unordered-containers
     }:
     mkDerivation {
       pname = "unfoldable-restricted";
       version = "0.0.3";
       sha256 = "0vl3qw6sjprsxadbf70md2njm9jvwwmz6qrqi3rifdj535vjh68b";
       libraryHaskellDepends = [
         base constraints containers hashable transformers unfoldable
         unit-constraint unordered-containers
       ];
       description = "An alternative to the Unfoldable typeclass";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "unicode" = callPackage
    ({ mkDerivation, base, containers, semigroups, utility-ht }:
     mkDerivation {
       pname = "unicode";
       version = "0.0.1.1";
       sha256 = "1hgqnplpgaw0pwz0lfr59vmljcf4l5b4ynrhdcic94g18lpsmnvg";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [ base containers semigroups ];
       testHaskellDepends = [ base containers utility-ht ];
       homepage = "http://hub.darcs.net/thielema/unicode/";
       description = "Construct and transform unicode characters";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "unicode-show" = callPackage
    ({ mkDerivation, base, HUnit, QuickCheck, test-framework
     , test-framework-hunit, test-framework-quickcheck2
     }:
     mkDerivation {
       pname = "unicode-show";
       version = "0.1.0.3";
       sha256 = "08cwfshjj724ydff1zmy1inzi7vrbaa8vmjgckcf7qp6ghkk6biz";
       revision = "1";
       editedCabalFile = "0sw9kn147kbgp0x9823hwiqn1yiyfxqkrchk34lsjfx2lq3igrzv";
       libraryHaskellDepends = [ base ];
       testHaskellDepends = [
         base HUnit QuickCheck test-framework test-framework-hunit
         test-framework-quickcheck2
       ];
       doCheck = false;
       homepage = "http://github.com/haskell-jp/unicode-show#readme";
       description = "print and show in unicode";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "unicode-transforms" = callPackage
    ({ mkDerivation, base, bitarray, bytestring, deepseq
     , getopt-generics, QuickCheck, split, text
     }:
     mkDerivation {
       pname = "unicode-transforms";
       version = "0.3.5";
       sha256 = "0gm0dwbhr666s7xx71qdrha5r3qwfyyv0wsrvq8jxva3mcwd3xy9";
       libraryHaskellDepends = [ base bitarray bytestring text ];
       testHaskellDepends = [
         base deepseq getopt-generics QuickCheck split text
       ];
       doCheck = false;
       homepage = "http://github.com/harendra-kumar/unicode-transforms";
       description = "Unicode normalization";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "unification-fd" = callPackage
    ({ mkDerivation, base, containers, logict, mtl }:
     mkDerivation {
       pname = "unification-fd";
       version = "0.10.0.1";
       sha256 = "15hrnmgr0pqq43fwgxc168r08xjgfhr2nchmz5blq46vwrh6gx2v";
       libraryHaskellDepends = [ base containers logict mtl ];
       homepage = "http://code.haskell.org/~wren/";
       description = "Simple generic unification algorithms";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "union" = callPackage
    ({ mkDerivation, base, criterion, deepseq, hashable, lens
     , profunctors, tagged, vinyl
     }:
     mkDerivation {
       pname = "union";
       version = "0.1.2";
       sha256 = "1i4fvlwkw1wx64a6l8342aqfqsdq7fqa4p24g3i5gn5704lxrsb3";
       revision = "2";
       editedCabalFile = "170dhg4z4jzi50nh4xx75r9k8zz5br7j2iqjjw2r1dx29ajqbcw9";
       libraryHaskellDepends = [
         base deepseq hashable profunctors tagged vinyl
       ];
       benchmarkHaskellDepends = [ base criterion deepseq lens ];
       description = "Extensible type-safe unions";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "union-find" = callPackage
    ({ mkDerivation, base, containers, transformers }:
     mkDerivation {
       pname = "union-find";
       version = "0.2";
       sha256 = "1v7hj42j9w6jlzi56jg8rh4p58gfs1c5dx30wd1qqvn0p0mnihp6";
       revision = "1";
       editedCabalFile = "13cwjh03n82sgshbk4fdlvhc0pb3v979sdcdrpvnpjdqmvcprs92";
       libraryHaskellDepends = [ base containers transformers ];
       homepage = "http://github.com/nominolo/union-find";
       description = "Efficient union and equivalence testing of sets";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "uniplate" = callPackage
    ({ mkDerivation, base, containers, hashable, syb
     , unordered-containers
     }:
     mkDerivation {
       pname = "uniplate";
       version = "1.6.12";
       sha256 = "1dx8f9aw27fz8kw0ad1nm6355w5rdl7bjvb427v2bsgnng30pipw";
       libraryHaskellDepends = [
         base containers hashable syb unordered-containers
       ];
       homepage = "http://community.haskell.org/~ndm/uniplate/";
       description = "Help writing simple, concise and fast generic operations";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "uniprot-kb" = callPackage
    ({ mkDerivation, attoparsec, base, hspec, neat-interpolation
     , QuickCheck, text
     }:
     mkDerivation {
       pname = "uniprot-kb";
       version = "0.1.2.0";
       sha256 = "0hh6fnnmr6i4mgli07hgaagswdipa0p3ckr3jzzfcw4y5x98036l";
       revision = "2";
       editedCabalFile = "1kyqbp32a9wys94rxbm5k022crpnm6fnz8w2d3anb7zch17l80qw";
       libraryHaskellDepends = [ attoparsec base text ];
       testHaskellDepends = [
         attoparsec base hspec neat-interpolation QuickCheck text
       ];
       homepage = "https://github.com/biocad/uniprot-kb#readme";
       description = "UniProt-KB format parser";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "uniq-deep" = callPackage
    ({ mkDerivation, base, bytestring, containers }:
     mkDerivation {
       pname = "uniq-deep";
       version = "1.1.0.0";
       sha256 = "13nkn1yqlyh33c2rsw0iz2gkj2mybliykm4hr9rm037rrf8kz5gq";
       isLibrary = false;
       isExecutable = true;
       executableHaskellDepends = [ base bytestring containers ];
       doHaddock = false;
       homepage = "https://github.com/ncaq/uniq-deep";
       description = "uniq-deep";
       license = stdenv.lib.licenses.publicDomain;
     }) {};
  "unique" = callPackage
    ({ mkDerivation, base, ghc-prim, hashable }:
     mkDerivation {
       pname = "unique";
       version = "0";
       sha256 = "140a9avcxs1fkj1v2awplq6prd1g13yg0kckccw6i1qpgcdigyz3";
       revision = "1";
       editedCabalFile = "0pq3a5y8ddgd37x21vafwxpyi079ir7k9g96y99pygmxwibkg4v8";
       libraryHaskellDepends = [ base ghc-prim hashable ];
       homepage = "http://github.com/ekmett/unique/";
       description = "Fully concurrent unique identifiers";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "unit-constraint" = callPackage
    ({ mkDerivation, base, constraints }:
     mkDerivation {
       pname = "unit-constraint";
       version = "0.0.0";
       sha256 = "0nayhjyprph6bg2hhrvd91nmrzz1bixlfib4cxsxpj8n014fhva4";
       libraryHaskellDepends = [ base constraints ];
       description = "Extremely simple typeclass";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "universe" = callPackage
    ({ mkDerivation, universe-instances-base
     , universe-instances-extended, universe-instances-trans
     , universe-reverse-instances
     }:
     mkDerivation {
       pname = "universe";
       version = "1.0";
       sha256 = "19zr9zcqc5sfp5qfn8slkk2732j1814m3j1jkbim739limwf900z";
       libraryHaskellDepends = [
         universe-instances-base universe-instances-extended
         universe-instances-trans universe-reverse-instances
       ];
       homepage = "https://github.com/dmwit/universe";
       description = "Classes for types where we know all the values";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "universe-base" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "universe-base";
       version = "1.0.2.1";
       sha256 = "0ldvk0bj16hl1v824vvsich3rzx84xm3sbppd5ahpp5cmx887i07";
       libraryHaskellDepends = [ base ];
       homepage = "https://github.com/dmwit/universe";
       description = "A class for finite and recursively enumerable types and some helper functions for enumerating them";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "universe-instances-base" = callPackage
    ({ mkDerivation, base, containers, universe-base }:
     mkDerivation {
       pname = "universe-instances-base";
       version = "1.0";
       sha256 = "04njgl32lk5a0masjdjkm4l2wsyrr29g0fsp599864mp7gp504d2";
       revision = "2";
       editedCabalFile = "0c9zxmifhy2qjvsikgm168n8k8ka8ia88ldy8qjqkz5pqknlr9sj";
       libraryHaskellDepends = [ base containers universe-base ];
       homepage = "https://github.com/dmwit/universe";
       description = "Universe instances for types from the base package";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "universe-instances-extended" = callPackage
    ({ mkDerivation, adjunctions, base, comonad
     , universe-instances-base, void
     }:
     mkDerivation {
       pname = "universe-instances-extended";
       version = "1.0.0.1";
       sha256 = "15y9f0hbxqsksclxrssj4h08y0yb3nm9clqasjw6nsmi04kjfnv6";
       revision = "2";
       editedCabalFile = "1di3jk3ciikjrxzr76i0mqqza26mclnbxxak7ybkk4l06yqanj38";
       libraryHaskellDepends = [
         adjunctions base comonad universe-instances-base void
       ];
       homepage = "https://github.com/dmwit/universe";
       description = "Universe instances for types from select extra packages";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "universe-instances-trans" = callPackage
    ({ mkDerivation, base, mtl, transformers, universe-base
     , universe-instances-base
     }:
     mkDerivation {
       pname = "universe-instances-trans";
       version = "1.0.0.1";
       sha256 = "03iix0bdhfi4qlgwr8sl3gsqck6lsbkqgx245w2z5yaaxgqpq10d";
       revision = "1";
       editedCabalFile = "0dcwgbgmbkjwzbxlncpl1b5hgjrmkl73djknjkhbnh02pysbwv69";
       libraryHaskellDepends = [
         base mtl transformers universe-base universe-instances-base
       ];
       homepage = "https://github.com/dmwit/universe";
       description = "Universe instances for types from the transformers and mtl packages";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "universe-reverse-instances" = callPackage
    ({ mkDerivation, base, containers, universe-instances-base }:
     mkDerivation {
       pname = "universe-reverse-instances";
       version = "1.0";
       sha256 = "0jcd7qyvzq8xxv9d3hfi0f1h48xdsy9r9xnxgxc7ggga4szirm79";
       revision = "2";
       editedCabalFile = "0cpnsip1iakwkgnwnd21gwrc8qbifzpff6agjwm34jgkq9j646k8";
       libraryHaskellDepends = [
         base containers universe-instances-base
       ];
       homepage = "https://github.com/dmwit/universe";
       description = "instances of standard classes that are made possible by enumerations";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "universum" = callPackage
    ({ mkDerivation, base, bytestring, containers, deepseq, doctest
     , ghc-prim, Glob, hashable, hedgehog, microlens, microlens-mtl, mtl
     , safe-exceptions, stm, tasty, tasty-hedgehog, text, transformers
     , type-operators, unordered-containers, utf8-string, vector
     }:
     mkDerivation {
       pname = "universum";
       version = "1.2.0";
       sha256 = "0645gvj1p33d0fnlk09i74l11sv11bidyv44hyb2m0dls22hr89p";
       libraryHaskellDepends = [
         base bytestring containers deepseq ghc-prim hashable microlens
         microlens-mtl mtl safe-exceptions stm text transformers
         type-operators unordered-containers utf8-string vector
       ];
       testHaskellDepends = [
         base bytestring doctest Glob hedgehog tasty tasty-hedgehog text
         utf8-string
       ];
       homepage = "https://github.com/serokell/universum";
       description = "Custom prelude used in Serokell";
       license = stdenv.lib.licenses.mit;
     }) {};
  "unix-bytestring" = callPackage
    ({ mkDerivation, base, bytestring }:
     mkDerivation {
       pname = "unix-bytestring";
       version = "0.3.7.3";
       sha256 = "1340zxy9w8nmmhhwgg9rznvz8iyfhinpycdpkryqp60ilhyjgv53";
       libraryHaskellDepends = [ base bytestring ];
       homepage = "http://code.haskell.org/~wren/";
       description = "Unix/Posix-specific functions for ByteStrings";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "unix-compat" = callPackage
    ({ mkDerivation, base, unix }:
     mkDerivation {
       pname = "unix-compat";
       version = "0.5.1";
       sha256 = "0llwl7rp63fy2ychwdclz1afj45pbin5pfl01dvn6rwhvmwhr7d3";
       libraryHaskellDepends = [ base unix ];
       homepage = "http://github.com/jystic/unix-compat";
       description = "Portable POSIX-compatibility layer";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "unix-time" = callPackage
    ({ mkDerivation, base, binary, bytestring, doctest, hspec
     , old-locale, old-time, QuickCheck, time
     }:
     mkDerivation {
       pname = "unix-time";
       version = "0.3.8";
       sha256 = "051slgpid5cxiaw203ky0ql3823h28fcjs08axkzd4265wrvv8fw";
       libraryHaskellDepends = [ base binary bytestring old-time ];
       testHaskellDepends = [
         base bytestring doctest hspec old-locale old-time QuickCheck time
       ];
       description = "Unix time parser/formatter and utilities";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "unliftio" = callPackage
    ({ mkDerivation, async, base, deepseq, directory, filepath, gauge
     , hspec, process, QuickCheck, stm, time, transformers, unix
     , unliftio-core
     }:
     mkDerivation {
       pname = "unliftio";
       version = "0.2.9.0";
       sha256 = "1f1rrmajnz5j2ljryi9gqx64hjr30yy7pz9rjx02pdfi6alrcrgz";
       libraryHaskellDepends = [
         async base deepseq directory filepath process stm time transformers
         unix unliftio-core
       ];
       testHaskellDepends = [
         async base deepseq directory filepath hspec process QuickCheck stm
         time transformers unix unliftio-core
       ];
       benchmarkHaskellDepends = [
         async base deepseq directory filepath gauge process stm time
         transformers unix unliftio-core
       ];
       homepage = "https://github.com/fpco/unliftio/tree/master/unliftio#readme";
       description = "The MonadUnliftIO typeclass for unlifting monads to IO (batteries included)";
       license = stdenv.lib.licenses.mit;
     }) {};
  "unliftio-core" = callPackage
    ({ mkDerivation, base, transformers }:
     mkDerivation {
       pname = "unliftio-core";
       version = "0.1.2.0";
       sha256 = "0y3siyx3drkw7igs380a87h8qfbbgcyxxlcnshp698hcc4yqphr4";
       revision = "1";
       editedCabalFile = "0s6xfg9d0i3sfil5gjbamlq017wdxa69csk73bcqjkficg43vm29";
       libraryHaskellDepends = [ base transformers ];
       homepage = "https://github.com/fpco/unliftio/tree/master/unliftio-core#readme";
       description = "The MonadUnliftIO typeclass for unlifting monads to IO";
       license = stdenv.lib.licenses.mit;
     }) {};
  "unlit" = callPackage
    ({ mkDerivation, base, directory, text }:
     mkDerivation {
       pname = "unlit";
       version = "0.4.0.0";
       sha256 = "05am6mngvwj3a4mnwf1x3wbb2fvh3lj9jc5cvbmi269zhkjcv7j8";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [ base directory text ];
       executableHaskellDepends = [ base directory text ];
       description = "Tool to convert literate code between styles or to code";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "unordered-containers" = callPackage
    ({ mkDerivation, base, ChasingBottoms, containers, deepseq
     , hashable, HUnit, QuickCheck, test-framework, test-framework-hunit
     , test-framework-quickcheck2
     }:
     mkDerivation {
       pname = "unordered-containers";
       version = "0.2.9.0";
       sha256 = "0l4264p0av12cc6i8gls13q8y27x12z2ar4x34n3x59y99fcnc37";
       libraryHaskellDepends = [ base deepseq hashable ];
       testHaskellDepends = [
         base ChasingBottoms containers hashable HUnit QuickCheck
         test-framework test-framework-hunit test-framework-quickcheck2
       ];
       homepage = "https://github.com/tibbe/unordered-containers";
       description = "Efficient hashing-based container types";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "unordered-intmap" = callPackage
    ({ mkDerivation, base, containers, deepseq, primitive, QuickCheck
     , tasty, tasty-quickcheck
     }:
     mkDerivation {
       pname = "unordered-intmap";
       version = "0.1.1";
       sha256 = "1vvn510v4gy70lk2bkx45bh7hk0kfdn62j3rp913j57d4c6azynq";
       libraryHaskellDepends = [ base deepseq primitive ];
       testHaskellDepends = [
         base containers deepseq primitive QuickCheck tasty tasty-quickcheck
       ];
       homepage = "https://github.com/ethercrow/unordered-intmap";
       description = "A specialization of `HashMap Int v`";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "unsafe" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "unsafe";
       version = "0.0";
       sha256 = "0hc6xr1i3hkz25gdgfx1jqgpsc9mwa05bkfynp0mcfdlyz6782nz";
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [ base ];
       homepage = "http://code.haskell.org/~thielema/unsafe/";
       description = "Unified interface to unsafe functions";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "uri-bytestring" = callPackage
    ({ mkDerivation, attoparsec, base, base-compat, blaze-builder
     , bytestring, containers, criterion, deepseq, deepseq-generics
     , generics-sop, HUnit, network-uri, QuickCheck
     , quickcheck-instances, semigroups, tasty, tasty-hunit
     , tasty-quickcheck, template-haskell, th-lift-instances
     , transformers
     }:
     mkDerivation {
       pname = "uri-bytestring";
       version = "0.3.2.1";
       sha256 = "1z61l4l8sg8vyrf7cri0awj5pnpzly8gp7dw9j26v9pcs6z1dgb4";
       libraryHaskellDepends = [
         attoparsec base blaze-builder bytestring containers
         template-haskell th-lift-instances
       ];
       testHaskellDepends = [
         attoparsec base base-compat blaze-builder bytestring containers
         generics-sop HUnit QuickCheck quickcheck-instances semigroups tasty
         tasty-hunit tasty-quickcheck transformers
       ];
       benchmarkHaskellDepends = [
         base blaze-builder bytestring criterion deepseq deepseq-generics
         network-uri
       ];
       homepage = "https://github.com/Soostone/uri-bytestring";
       description = "Haskell URI parsing as ByteStrings";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "uri-encode" = callPackage
    ({ mkDerivation, base, bytestring, network-uri, text, utf8-string
     }:
     mkDerivation {
       pname = "uri-encode";
       version = "1.5.0.5";
       sha256 = "11miwb5vvnn17m92ykz1pzg9x6s8fbpz3mmsyqs2s4b3mn55haz8";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         base bytestring network-uri text utf8-string
       ];
       description = "Unicode aware uri-encoding";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "uri-templater" = callPackage
    ({ mkDerivation, ansi-wl-pprint, base, bytestring, charset
     , containers, dlist, HTTP, HUnit, mtl, parsers, template-haskell
     , text, time, trifecta, unordered-containers, uuid-types, vector
     }:
     mkDerivation {
       pname = "uri-templater";
       version = "0.3.1.0";
       sha256 = "1hj93jgn8xch9bw9fs76qsfqarb15csfy0ddnr1dxcq04vznbri1";
       revision = "1";
       editedCabalFile = "0vl1nv40yzns9fnaz6h34x72vpfaaws8f0zm8qlr82333pxg2scw";
       libraryHaskellDepends = [
         ansi-wl-pprint base bytestring charset containers dlist HTTP mtl
         parsers template-haskell text time trifecta unordered-containers
         uuid-types vector
       ];
       testHaskellDepends = [
         ansi-wl-pprint base HUnit mtl template-haskell
       ];
       homepage = "https://github.com/iand675/uri-templater";
       description = "Parsing & Quasiquoting for RFC 6570 URI Templates";
       license = stdenv.lib.licenses.mit;
     }) {};
  "urlpath" = callPackage
    ({ mkDerivation, attoparsec-uri, base, exceptions, mmorph
     , monad-control, monad-control-aligned, monad-logger, mtl, path
     , path-extra, resourcet, split, strict, text, transformers
     , transformers-base, vector
     }:
     mkDerivation {
       pname = "urlpath";
       version = "9.0.0";
       sha256 = "1ysjhb42sk34j29xy7hgf9b4qp90p6hrkqcmwdalvsasbwk8kgwh";
       libraryHaskellDepends = [
         attoparsec-uri base exceptions mmorph monad-control
         monad-control-aligned monad-logger mtl path path-extra resourcet
         split strict text transformers transformers-base vector
       ];
       homepage = "https://github.com/athanclark/urlpath#readme";
       description = "Painfully simple URL deployment";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "users" = callPackage
    ({ mkDerivation, aeson, base, bcrypt, path-pieces, text, time }:
     mkDerivation {
       pname = "users";
       version = "0.5.0.0";
       sha256 = "1m2k3vq938whv9577k3jrgx99hwr272s0fc22p2i6k0dgf9sqqb7";
       revision = "1";
       editedCabalFile = "1x26g7k6kmq2vng9y5qkz82z06rs322s2y8bs9y6r4vayvg07q9v";
       libraryHaskellDepends = [
         aeson base bcrypt path-pieces text time
       ];
       homepage = "https://github.com/agrafix/users";
       description = "A library simplifying user management for web applications";
       license = stdenv.lib.licenses.mit;
     }) {};
  "users-postgresql-simple" = callPackage
    ({ mkDerivation, base, bytestring, hspec, mtl, postgresql-simple
     , text, time, users, users-test, uuid
     }:
     mkDerivation {
       pname = "users-postgresql-simple";
       version = "0.5.0.2";
       sha256 = "0061dvlj706rqrfq4wyqx0ylghac13j0x9bicb5smpkckhn5s6q5";
       libraryHaskellDepends = [
         base bytestring mtl postgresql-simple text time users uuid
       ];
       testHaskellDepends = [ base hspec postgresql-simple users-test ];
       doCheck = false;
       homepage = "https://github.com/agrafix/users";
       description = "A PostgreSQL backend for the users package";
       license = stdenv.lib.licenses.mit;
     }) {};
  "users-test" = callPackage
    ({ mkDerivation, base, hspec, text, users }:
     mkDerivation {
       pname = "users-test";
       version = "0.5.0.1";
       sha256 = "0gmcbimbp8sj282c915m9bka4fj238xsf8szqmnv20n01kx4k1gn";
       libraryHaskellDepends = [ base hspec text users ];
       homepage = "https://github.com/agrafix/users";
       description = "Library to test backends for the users library";
       license = stdenv.lib.licenses.mit;
     }) {};
  "utf8-light" = callPackage
    ({ mkDerivation, base, bytestring, ghc-prim }:
     mkDerivation {
       pname = "utf8-light";
       version = "0.4.2";
       sha256 = "0rwyc5z331yfnm4hpx0sph6i1zvkd1z10vvglhnp0vc9wy644k0q";
       libraryHaskellDepends = [ base bytestring ghc-prim ];
       description = "Unicode";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "utf8-string" = callPackage
    ({ mkDerivation, base, bytestring }:
     mkDerivation {
       pname = "utf8-string";
       version = "1.0.1.1";
       sha256 = "0h7imvxkahiy8pzr8cpsimifdfvv18lizrb33k6mnq70rcx9w2zv";
       revision = "3";
       editedCabalFile = "02vhj5gykkqa2dyn7s6gn8is1b5fdn9xcqqvlls268g7cpv6rk38";
       libraryHaskellDepends = [ base bytestring ];
       homepage = "http://github.com/glguy/utf8-string/";
       description = "Support for reading and writing UTF8 Strings";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "util" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "util";
       version = "0.1.11.0";
       sha256 = "16qi0w19hy7y4az4dxnsvn5cjc7lg5zb9vv0jjzifky9dkssbicb";
       libraryHaskellDepends = [ base ];
       description = "Utilities";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "utility-ht" = callPackage
    ({ mkDerivation, base, QuickCheck }:
     mkDerivation {
       pname = "utility-ht";
       version = "0.0.14";
       sha256 = "1a7bgk7wv7sqbxbiv7kankiimr3wij7zdm7s83zwsf886ghyxhk9";
       libraryHaskellDepends = [ base ];
       testHaskellDepends = [ base QuickCheck ];
       description = "Various small helper functions for Lists, Maybes, Tuples, Functions";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "uuid" = callPackage
    ({ mkDerivation, base, binary, bytestring, cryptohash-md5
     , cryptohash-sha1, entropy, network-info, random, text, time
     , uuid-types
     }:
     mkDerivation {
       pname = "uuid";
       version = "1.3.13";
       sha256 = "09xhk42yhxvqmka0iqrv3338asncz8cap3j0ic0ps896f2581b6z";
       revision = "2";
       editedCabalFile = "0m185q62jkfb5jsv358nxbnrkv8y8hd0qqvgvh22wvc5g9ipz0r9";
       libraryHaskellDepends = [
         base binary bytestring cryptohash-md5 cryptohash-sha1 entropy
         network-info random text time uuid-types
       ];
       doCheck = false;
       homepage = "https://github.com/hvr/uuid";
       description = "For creating, comparing, parsing and printing Universally Unique Identifiers";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "uuid-types" = callPackage
    ({ mkDerivation, base, binary, bytestring, deepseq, hashable
     , random, text
     }:
     mkDerivation {
       pname = "uuid-types";
       version = "1.0.3";
       sha256 = "1zdka5jnm1h6k36w3nr647yf3b5lqb336g3fkprhd6san9x52xlj";
       revision = "1";
       editedCabalFile = "0iwwj07gp28g357hv76k4h8pvlzamvchnw003cv3qk778pcpx201";
       libraryHaskellDepends = [
         base binary bytestring deepseq hashable random text
       ];
       doCheck = false;
       homepage = "https://github.com/aslatter/uuid";
       description = "Type definitions for Universally Unique Identifiers";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "validation" = callPackage
    ({ mkDerivation, base, bifunctors, deepseq, lens, semigroupoids
     , semigroups
     }:
     mkDerivation {
       pname = "validation";
       version = "1";
       sha256 = "08drmdvyzg2frbb26icy1mlz52xv0l6gi3v8gb7xp0vrcci5libh";
       revision = "1";
       editedCabalFile = "1x1g4nannz81j1h64l1m3ancc96zc57d1bjhj1wk7bwn1xxbi5h3";
       libraryHaskellDepends = [
         base bifunctors deepseq lens semigroupoids semigroups
       ];
       doCheck = false;
       homepage = "https://github.com/qfpl/validation";
       description = "A data-type like Either but with an accumulating Applicative";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "validity" = callPackage
    ({ mkDerivation, base, hspec }:
     mkDerivation {
       pname = "validity";
       version = "0.7.0.0";
       sha256 = "0xribw98amafihw87ddajk6vlirp7w9b26lrnjgq7jfm4710j95f";
       libraryHaskellDepends = [ base ];
       testHaskellDepends = [ base hspec ];
       homepage = "https://github.com/NorfairKing/validity#readme";
       description = "Validity typeclass";
       license = stdenv.lib.licenses.mit;
     }) {};
  "validity-aeson" = callPackage
    ({ mkDerivation, aeson, base, validity, validity-scientific
     , validity-text, validity-unordered-containers, validity-vector
     }:
     mkDerivation {
       pname = "validity-aeson";
       version = "0.2.0.2";
       sha256 = "010x1sprssj282gv85n63955fmn6ngz6h6qii3174vrxrwlkvh7s";
       libraryHaskellDepends = [
         aeson base validity validity-scientific validity-text
         validity-unordered-containers validity-vector
       ];
       homepage = "https://github.com/NorfairKing/validity#readme";
       description = "Validity instances for aeson";
       license = stdenv.lib.licenses.mit;
     }) {};
  "validity-bytestring" = callPackage
    ({ mkDerivation, base, bytestring, validity }:
     mkDerivation {
       pname = "validity-bytestring";
       version = "0.3.0.2";
       sha256 = "0bwixp9fcblqy6b8kxvzg9l2i9lksn9g71243m2zcan1kh7a1qb2";
       libraryHaskellDepends = [ base bytestring validity ];
       homepage = "https://github.com/NorfairKing/validity#readme";
       description = "Validity instances for bytestring";
       license = stdenv.lib.licenses.mit;
     }) {};
  "validity-containers" = callPackage
    ({ mkDerivation, base, containers, validity }:
     mkDerivation {
       pname = "validity-containers";
       version = "0.3.1.0";
       sha256 = "1ci07x5k9hjpn23pbp4bc0zvml5xbpppsmcxr1qfcg0g4036q29r";
       libraryHaskellDepends = [ base containers validity ];
       homepage = "https://github.com/NorfairKing/validity#readme";
       description = "Validity instances for containers";
       license = stdenv.lib.licenses.mit;
     }) {};
  "validity-path" = callPackage
    ({ mkDerivation, base, filepath, genvalidity-hspec, hspec, path
     , validity
     }:
     mkDerivation {
       pname = "validity-path";
       version = "0.3.0.2";
       sha256 = "0ip1qm6sip1yxbrcx9zn2saipd6bfs88cgn5jd3pw9ffkydxm74p";
       libraryHaskellDepends = [ base filepath path validity ];
       testHaskellDepends = [
         base filepath genvalidity-hspec hspec path validity
       ];
       homepage = "https://github.com/NorfairKing/validity#readme";
       description = "Validity instances for Path";
       license = stdenv.lib.licenses.mit;
     }) {};
  "validity-scientific" = callPackage
    ({ mkDerivation, base, scientific, validity }:
     mkDerivation {
       pname = "validity-scientific";
       version = "0.2.0.2";
       sha256 = "1hcdv8s7qfcrgc8hn335dzxx3q5qqbviwp4bf4lwnzbw611slcl1";
       libraryHaskellDepends = [ base scientific validity ];
       homepage = "https://github.com/NorfairKing/validity#readme";
       description = "Validity instances for scientific";
       license = stdenv.lib.licenses.mit;
     }) {};
  "validity-text" = callPackage
    ({ mkDerivation, base, bytestring, text, validity }:
     mkDerivation {
       pname = "validity-text";
       version = "0.3.1.0";
       sha256 = "0r22pipimzlznkv164n3pw3063v7yxz2l04m74y5j1zajxpg5lzd";
       libraryHaskellDepends = [ base bytestring text validity ];
       homepage = "https://github.com/NorfairKing/validity#readme";
       description = "Validity instances for text";
       license = stdenv.lib.licenses.mit;
     }) {};
  "validity-time" = callPackage
    ({ mkDerivation, base, time, validity }:
     mkDerivation {
       pname = "validity-time";
       version = "0.2.0.2";
       sha256 = "0rg28pgicn8ycdswszbc070587pblbxdzl6mc082l9rgz3g4mcji";
       libraryHaskellDepends = [ base time validity ];
       homepage = "https://github.com/NorfairKing/validity#readme";
       description = "Validity instances for time";
       license = stdenv.lib.licenses.mit;
     }) {};
  "validity-unordered-containers" = callPackage
    ({ mkDerivation, base, hashable, unordered-containers, validity }:
     mkDerivation {
       pname = "validity-unordered-containers";
       version = "0.2.0.2";
       sha256 = "06qq6rdzcb0l145653fdrbyf18fci49v85mq8c0sjhhfr22pwm2h";
       libraryHaskellDepends = [
         base hashable unordered-containers validity
       ];
       homepage = "https://github.com/NorfairKing/validity#readme";
       description = "Validity instances for unordered-containers";
       license = stdenv.lib.licenses.mit;
     }) {};
  "validity-uuid" = callPackage
    ({ mkDerivation, base, uuid, validity }:
     mkDerivation {
       pname = "validity-uuid";
       version = "0.1.0.2";
       sha256 = "0k2nkkc69m2j4aj3fjfd1i0cg4nli1g44nxdf5liv59hhvk33p4m";
       libraryHaskellDepends = [ base uuid validity ];
       homepage = "https://github.com/NorfairKing/validity#readme";
       description = "Validity instances for uuid";
       license = stdenv.lib.licenses.mit;
     }) {};
  "validity-vector" = callPackage
    ({ mkDerivation, base, hashable, validity, vector }:
     mkDerivation {
       pname = "validity-vector";
       version = "0.2.0.2";
       sha256 = "0y6fhcdyd42nynf2lavdx9pnhy8ylqfkq1yickx2ap4w5hc61k57";
       libraryHaskellDepends = [ base hashable validity vector ];
       homepage = "https://github.com/NorfairKing/validity#readme";
       description = "Validity instances for vector";
       license = stdenv.lib.licenses.mit;
     }) {};
  "valor" = callPackage
    ({ mkDerivation, base, hspec, text, transformers }:
     mkDerivation {
       pname = "valor";
       version = "0.1.0.0";
       sha256 = "1rmsss4zffyzf6vf1p2zj07a6a32pyrbdb259gflr5gg817m3kh4";
       libraryHaskellDepends = [ base transformers ];
       testHaskellDepends = [ base hspec text transformers ];
       homepage = "https://github.com/reygoch/valor#readme";
       description = "Simple general structured validation library";
       license = stdenv.lib.licenses.mit;
     }) {};
  "vault" = callPackage
    ({ mkDerivation, base, containers, hashable, semigroups
     , unordered-containers
     }:
     mkDerivation {
       pname = "vault";
       version = "0.3.1.2";
       sha256 = "072mbrihsdsb8c6xvg6lvk0rqjgvxvi8qkg4n6wwym5hq0pfa04y";
       libraryHaskellDepends = [
         base containers hashable semigroups unordered-containers
       ];
       homepage = "https://github.com/HeinrichApfelmus/vault";
       description = "a persistent store for values of arbitrary types";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "vec" = callPackage
    ({ mkDerivation, adjunctions, base, base-compat, criterion, deepseq
     , distributive, fin, hashable, inspection-testing, lens
     , semigroupoids, tagged, vector
     }:
     mkDerivation {
       pname = "vec";
       version = "0.1";
       sha256 = "0m70ld5vy96vca4wdm45q1ixwznl3yfj8jzil2kjfkzzac5fym5y";
       revision = "3";
       editedCabalFile = "093q5qlhlia12ckhvax322lyy3sb554pg46ghabvsvx8znixw2hh";
       libraryHaskellDepends = [
         adjunctions base base-compat deepseq distributive fin hashable lens
         semigroupoids
       ];
       testHaskellDepends = [ base fin inspection-testing tagged ];
       benchmarkHaskellDepends = [ base criterion fin vector ];
       homepage = "https://github.com/phadej/vec";
       description = "Vec: length-indexed (sized) list";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "vector" = callPackage
    ({ mkDerivation, base, deepseq, ghc-prim, primitive }:
     mkDerivation {
       pname = "vector";
       version = "0.12.0.2";
       sha256 = "1wy0pfa3ks6s2dkp1fwrl1s9d3wjmqy9d09icnwfs2zimyn9vs2j";
       libraryHaskellDepends = [ base deepseq ghc-prim primitive ];
       doCheck = false;
       homepage = "https://github.com/haskell/vector";
       description = "Efficient Arrays";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "vector-algorithms" = callPackage
    ({ mkDerivation, base, bytestring, containers, primitive
     , QuickCheck, vector
     }:
     mkDerivation {
       pname = "vector-algorithms";
       version = "0.7.0.4";
       sha256 = "0mfa8ig9v69l41p2vb5jl4qmaln5y1rlzarr2mlgm8g1nvq8qqdg";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [ base bytestring primitive vector ];
       testHaskellDepends = [
         base bytestring containers QuickCheck vector
       ];
       doCheck = false;
       homepage = "https://github.com/erikd/vector-algorithms/";
       description = "Efficient algorithms for vector arrays";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "vector-binary-instances" = callPackage
    ({ mkDerivation, base, binary, bytestring, deepseq, gauge, tasty
     , tasty-quickcheck, vector
     }:
     mkDerivation {
       pname = "vector-binary-instances";
       version = "0.2.5.1";
       sha256 = "04n5cqm1v95pw1bp68l9drjkxqiy2vswxdq0fy1rqcgxisgvji9r";
       libraryHaskellDepends = [ base binary vector ];
       testHaskellDepends = [ base binary tasty tasty-quickcheck vector ];
       benchmarkHaskellDepends = [
         base binary bytestring deepseq gauge vector
       ];
       homepage = "https://github.com/bos/vector-binary-instances";
       description = "Instances of Data.Binary for vector";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "vector-buffer" = callPackage
    ({ mkDerivation, base, deepseq, vector }:
     mkDerivation {
       pname = "vector-buffer";
       version = "0.4.1";
       sha256 = "16zxc2d25qd15nankhc974ax7q3y72mg5a77v5jsfrw291brnnlv";
       libraryHaskellDepends = [ base deepseq vector ];
       description = "A buffer compatible with Data.Vector.*";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "vector-builder" = callPackage
    ({ mkDerivation, base, base-prelude, semigroups, vector }:
     mkDerivation {
       pname = "vector-builder";
       version = "0.3.6";
       sha256 = "06d2pa1fb3ydrl7l6rjazqyxv5i73v65x2f5fp0ypjxfbm6jsmn8";
       libraryHaskellDepends = [ base base-prelude semigroups vector ];
       doCheck = false;
       homepage = "https://github.com/nikita-volkov/vector-builder";
       description = "Vector builder";
       license = stdenv.lib.licenses.mit;
     }) {};
  "vector-bytes-instances" = callPackage
    ({ mkDerivation, base, bytes, tasty, tasty-quickcheck, vector }:
     mkDerivation {
       pname = "vector-bytes-instances";
       version = "0.1.1";
       sha256 = "0i4cxgm984qs5ldp1x7m9blxh8wd5y8acy2ic8kpgaak8pzycrkn";
       libraryHaskellDepends = [ base bytes vector ];
       testHaskellDepends = [ base bytes tasty tasty-quickcheck vector ];
       homepage = "https://github.com/k0001/vector-bytes-instances";
       description = "Serial (from the bytes package) for Vector (from the vector package)";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "vector-instances" = callPackage
    ({ mkDerivation, base, comonad, hashable, keys, pointed
     , semigroupoids, semigroups, vector
     }:
     mkDerivation {
       pname = "vector-instances";
       version = "3.4";
       sha256 = "10akvpa5w9bp0d8hflab63r9laa9gy2hv167smhjsdzq1kplc0hv";
       libraryHaskellDepends = [
         base comonad hashable keys pointed semigroupoids semigroups vector
       ];
       homepage = "http://github.com/ekmett/vector-instances";
       description = "Orphan Instances for 'Data.Vector'";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "vector-mmap" = callPackage
    ({ mkDerivation, base, mmap, primitive, QuickCheck, temporary
     , vector
     }:
     mkDerivation {
       pname = "vector-mmap";
       version = "0.0.3";
       sha256 = "12l6ka6vgl5g193sycn3k6gr2q3k64jaq196p825vawh46qdsfg5";
       libraryHaskellDepends = [ base mmap primitive vector ];
       testHaskellDepends = [ base QuickCheck temporary vector ];
       homepage = "http://github.com/pumpkin/vector-mmap";
       description = "Memory map immutable and mutable vectors";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "vector-sized" = callPackage
    ({ mkDerivation, adjunctions, base, deepseq, distributive
     , finite-typelits, indexed-list-literals, primitive, vector
     }:
     mkDerivation {
       pname = "vector-sized";
       version = "1.0.4.0";
       sha256 = "1rdryc5ykqvdpjgx3a895cx2i14ixg0ryhppn89fjzhann79mgk4";
       libraryHaskellDepends = [
         adjunctions base deepseq distributive finite-typelits
         indexed-list-literals primitive vector
       ];
       homepage = "http://github.com/expipiplus1/vector-sized#readme";
       description = "Size tagged vectors";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "vector-space" = callPackage
    ({ mkDerivation, base, Boolean, MemoTrie, NumInstances }:
     mkDerivation {
       pname = "vector-space";
       version = "0.13";
       sha256 = "05yn93vnhzhpp2i6qb4b3dasvmpk71rab6vhssqvpb3qhdvxb482";
       revision = "2";
       editedCabalFile = "1p9vibym0ggr1rjyak0wphswdl4vik2b2w85afgvyj9zn32w28bw";
       libraryHaskellDepends = [ base Boolean MemoTrie NumInstances ];
       description = "Vector & affine spaces, linear maps, and derivatives";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "vector-split" = callPackage
    ({ mkDerivation, base, QuickCheck, split, tasty, tasty-quickcheck
     , vector
     }:
     mkDerivation {
       pname = "vector-split";
       version = "1.0.0.2";
       sha256 = "05mxkgcg5v2w0vnqq8z5s6aj0aqi7b55mh6knaafalpc1yjyxbml";
       libraryHaskellDepends = [ base vector ];
       testHaskellDepends = [
         base QuickCheck split tasty tasty-quickcheck vector
       ];
       homepage = "https://github.com/fhaust/vector-split";
       description = "Combinator library for splitting vectors";
       license = stdenv.lib.licenses.mit;
     }) {};
  "vector-th-unbox" = callPackage
    ({ mkDerivation, base, data-default, template-haskell, vector }:
     mkDerivation {
       pname = "vector-th-unbox";
       version = "0.2.1.6";
       sha256 = "0d82x55f5vvr1jvaia382m23rs690lg55pvavv8f4ph0y6kd91xy";
       libraryHaskellDepends = [ base template-haskell vector ];
       testHaskellDepends = [ base data-default vector ];
       description = "Deriver for Data.Vector.Unboxed using Template Haskell";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "vectortiles" = callPackage
    ({ mkDerivation, base, bytestring, containers, criterion, deepseq
     , hashable, hex, microlens, microlens-platform, mtl
     , protocol-buffers, protocol-buffers-descriptor, tasty, tasty-hunit
     , text, transformers, unordered-containers, vector
     }:
     mkDerivation {
       pname = "vectortiles";
       version = "1.4.0";
       sha256 = "1h0mx5sl379486panyxpanld8qrlhak9knhz7jzqqv7is3rw8g1r";
       revision = "1";
       editedCabalFile = "1nlkhmfcvlzi96nzq8cpbqw5akrjahnrhl460q07vq6iyhibvf87";
       libraryHaskellDepends = [
         base bytestring containers deepseq hashable mtl protocol-buffers
         protocol-buffers-descriptor text transformers unordered-containers
         vector
       ];
       testHaskellDepends = [
         base bytestring containers hashable hex mtl protocol-buffers
         protocol-buffers-descriptor tasty tasty-hunit text
         unordered-containers vector
       ];
       benchmarkHaskellDepends = [
         base bytestring containers criterion hashable microlens
         microlens-platform mtl protocol-buffers protocol-buffers-descriptor
         text unordered-containers vector
       ];
       homepage = "https://github.com/fosskers/vectortiles";
       description = "GIS Vector Tiles, as defined by Mapbox";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "verbosity" = callPackage
    ({ mkDerivation, base, binary, data-default-class, deepseq }:
     mkDerivation {
       pname = "verbosity";
       version = "0.2.3.0";
       sha256 = "0r7jj2h7xzz3i8ck00z19h4bfr4r4nxfzi6ya9kppcda92myak4b";
       libraryHaskellDepends = [ base binary data-default-class deepseq ];
       homepage = "https://github.com/trskop/verbosity";
       description = "Simple enum that encodes application verbosity";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "versions" = callPackage
    ({ mkDerivation, base, deepseq, hashable, megaparsec, text }:
     mkDerivation {
       pname = "versions";
       version = "3.4.0.1";
       sha256 = "0r7crjnzllip9ya3lgf7cckfgz57daq379sh19z7adlzj8rxhimg";
       libraryHaskellDepends = [ base deepseq hashable megaparsec text ];
       doCheck = false;
       homepage = "https://gitlab.com/fosskers/versions";
       description = "Types and parsers for software version numbers";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "viewprof" = callPackage
    ({ mkDerivation, base, brick, containers, directory, ghc-prof, lens
     , scientific, text, vector, vector-algorithms, vty
     }:
     mkDerivation {
       pname = "viewprof";
       version = "0.0.0.26";
       sha256 = "11nd137135jq19l58g5fkxzznbv2hdrfyy231fy9s8hifm2rz14d";
       isLibrary = false;
       isExecutable = true;
       executableHaskellDepends = [
         base brick containers directory ghc-prof lens scientific text
         vector vector-algorithms vty
       ];
       doHaddock = false;
       homepage = "https://github.com/maoe/viewprof";
       description = "Text-based interactive GHC .prof viewer";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "vinyl" = callPackage
    ({ mkDerivation, array, base, criterion, doctest, ghc-prim, hspec
     , lens, linear, microlens, mwc-random, primitive
     , should-not-typecheck, singletons, tagged, vector
     }:
     mkDerivation {
       pname = "vinyl";
       version = "0.8.1.1";
       sha256 = "0gwgsk7xf64291s6crvzlry1bvcvwaqmvxpl605id4bb099kqfnh";
       revision = "1";
       editedCabalFile = "0mb694y03r185r0p473zh6bl4j0l4na9km0r3x8czjil7x9yb0vr";
       libraryHaskellDepends = [ array base ghc-prim ];
       testHaskellDepends = [
         base doctest hspec lens microlens should-not-typecheck singletons
       ];
       benchmarkHaskellDepends = [
         base criterion linear microlens mwc-random primitive tagged vector
       ];
       description = "Extensible Records";
       license = stdenv.lib.licenses.mit;
     }) {};
  "vivid" = callPackage
    ({ mkDerivation, base, bytestring, containers, directory, filepath
     , hashable, MonadRandom, mtl, network, process, random
     , random-shuffle, split, stm, time, transformers, utf8-string
     , vivid-osc, vivid-supercollider
     }:
     mkDerivation {
       pname = "vivid";
       version = "0.3.0.2";
       sha256 = "16dvg5yq26fkrq01mn3c4byz32xld3alxa8h9m16gi4g04f99q00";
       libraryHaskellDepends = [
         base bytestring containers directory filepath hashable MonadRandom
         mtl network process random random-shuffle split stm time
         transformers utf8-string vivid-osc vivid-supercollider
       ];
       description = "Sound synthesis with SuperCollider";
       license = "GPL";
     }) {};
  "vivid-osc" = callPackage
    ({ mkDerivation, base, binary, bytestring, cereal, microspec, time
     }:
     mkDerivation {
       pname = "vivid-osc";
       version = "0.3.0.0";
       sha256 = "152ai2j75hbjvws9k1ii2h32nnj8ak44agwpdcfkdf7nc1fgha57";
       libraryHaskellDepends = [ base binary bytestring cereal time ];
       testHaskellDepends = [ base bytestring cereal microspec time ];
       description = "Open Sound Control encode/decode";
       license = "GPL";
     }) {};
  "vivid-supercollider" = callPackage
    ({ mkDerivation, base, binary, bytestring, cereal, microspec
     , QuickCheck, split, utf8-string, vivid-osc
     }:
     mkDerivation {
       pname = "vivid-supercollider";
       version = "0.3.0.0";
       sha256 = "15fkqjf3hfhc262slr5znh4f320lw68h318wr4sdprml0sy9xdw3";
       libraryHaskellDepends = [
         base binary bytestring cereal split utf8-string vivid-osc
       ];
       testHaskellDepends = [
         base binary bytestring cereal microspec QuickCheck utf8-string
         vivid-osc
       ];
       description = "Implementation of SuperCollider server specifications";
       license = "GPL";
     }) {};
  "void" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "void";
       version = "0.7.2";
       sha256 = "0aygw0yb1h3yhmfl3bkwh5d3h0l4mmsxz7j53vdm6jryl1kgxzyk";
       libraryHaskellDepends = [ base ];
       homepage = "http://github.com/ekmett/void";
       description = "A Haskell 98 logically uninhabited data type";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "vty" = callPackage
    ({ mkDerivation, base, blaze-builder, bytestring, Cabal, containers
     , deepseq, directory, filepath, hashable, HUnit, microlens
     , microlens-mtl, microlens-th, mtl, parallel, parsec, QuickCheck
     , quickcheck-assertions, random, smallcheck, stm, string-qq
     , terminfo, test-framework, test-framework-hunit
     , test-framework-smallcheck, text, transformers, unix, utf8-string
     , vector
     }:
     mkDerivation {
       pname = "vty";
       version = "5.21";
       sha256 = "0nvsjc5awr6kwrsv02sz64vgza6g8phk9g6g07dx1sm2yfsvhyas";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         base blaze-builder bytestring containers deepseq directory filepath
         hashable microlens microlens-mtl microlens-th mtl parallel parsec
         stm terminfo text transformers unix utf8-string vector
       ];
       executableHaskellDepends = [
         base containers microlens microlens-mtl mtl
       ];
       testHaskellDepends = [
         base blaze-builder bytestring Cabal containers deepseq HUnit
         microlens microlens-mtl mtl QuickCheck quickcheck-assertions random
         smallcheck stm string-qq terminfo test-framework
         test-framework-hunit test-framework-smallcheck text unix
         utf8-string vector
       ];
       homepage = "https://github.com/jtdaugherty/vty";
       description = "A simple terminal UI library";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "wai" = callPackage
    ({ mkDerivation, base, bytestring, hspec, hspec-discover
     , http-types, network, text, transformers, vault
     }:
     mkDerivation {
       pname = "wai";
       version = "3.2.1.2";
       sha256 = "0jr3b2789wa4m6mxkz12ynz4lfsqmgbrcy0am8karyqr3x3528r8";
       libraryHaskellDepends = [
         base bytestring http-types network text transformers vault
       ];
       testHaskellDepends = [ base bytestring hspec ];
       testToolDepends = [ hspec-discover ];
       homepage = "https://github.com/yesodweb/wai";
       description = "Web Application Interface";
       license = stdenv.lib.licenses.mit;
     }) {};
  "wai-app-static" = callPackage
    ({ mkDerivation, base, blaze-html, blaze-markup, bytestring
     , containers, cryptonite, directory, file-embed, filepath, hspec
     , http-date, http-types, memory, mime-types, mockery, network
     , old-locale, optparse-applicative, template-haskell, temporary
     , text, time, transformers, unix-compat, unordered-containers, wai
     , wai-extra, warp, zlib
     }:
     mkDerivation {
       pname = "wai-app-static";
       version = "3.1.6.2";
       sha256 = "0gnwq6ad5m8w8sqq4dzpz23l5rjdphfsf8h9h27lrvv1prkabc6h";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         base blaze-html blaze-markup bytestring containers cryptonite
         directory file-embed filepath http-date http-types memory
         mime-types old-locale optparse-applicative template-haskell text
         time transformers unix-compat unordered-containers wai wai-extra
         warp zlib
       ];
       executableHaskellDepends = [
         base bytestring containers directory mime-types text
       ];
       testHaskellDepends = [
         base bytestring filepath hspec http-date http-types mime-types
         mockery network old-locale temporary text time transformers
         unix-compat wai wai-extra zlib
       ];
       homepage = "http://www.yesodweb.com/book/web-application-interface";
       description = "WAI application for static serving";
       license = stdenv.lib.licenses.mit;
     }) {};
  "wai-cli" = callPackage
    ({ mkDerivation, ansi-terminal, base, http-types, monads-tf
     , network, options, socket-activation, stm, streaming-commons, unix
     , wai, wai-extra, warp, warp-tls
     }:
     mkDerivation {
       pname = "wai-cli";
       version = "0.1.1";
       sha256 = "0qi84p1x5b0hvsdgd03fn80j3ai0s0svcl340z9fvz6lrgcfnhq6";
       libraryHaskellDepends = [
         ansi-terminal base http-types monads-tf network options
         socket-activation stm streaming-commons unix wai wai-extra warp
         warp-tls
       ];
       homepage = "https://github.com/myfreeweb/wai-cli";
       description = "Command line runner for Wai apps (using Warp) with TLS, CGI, socket activation & graceful shutdown";
       license = stdenv.lib.licenses.publicDomain;
     }) {};
  "wai-conduit" = callPackage
    ({ mkDerivation, base, bytestring, conduit, http-types
     , transformers, wai
     }:
     mkDerivation {
       pname = "wai-conduit";
       version = "3.0.0.4";
       sha256 = "07yn41rn2skd5p3wqqa09wa761vj7ibl8l19gh4bi4i8slxhk417";
       libraryHaskellDepends = [
         base bytestring conduit http-types transformers wai
       ];
       homepage = "https://github.com/yesodweb/wai";
       description = "conduit wrappers for WAI";
       license = stdenv.lib.licenses.mit;
     }) {};
  "wai-cors" = callPackage
    ({ mkDerivation, attoparsec, base, base-unicode-symbols, bytestring
     , case-insensitive, directory, filepath, http-types, mtl, network
     , process, tasty, tasty-hunit, text, transformers, wai, wai-extra
     , wai-websockets, warp, websockets
     }:
     mkDerivation {
       pname = "wai-cors";
       version = "0.2.6";
       sha256 = "11m9d8hn9pb9brprz0kglldmcqj83kjkjdwdpxdbl12430ii1ina";
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [
         attoparsec base base-unicode-symbols bytestring case-insensitive
         http-types mtl transformers wai
       ];
       testHaskellDepends = [
         base base-unicode-symbols directory filepath http-types network
         process tasty tasty-hunit text wai wai-extra wai-websockets warp
         websockets
       ];
       doCheck = false;
       homepage = "https://github.com/larskuhtz/wai-cors";
       description = "CORS for WAI";
       license = stdenv.lib.licenses.mit;
     }) {};
  "wai-eventsource" = callPackage
    ({ mkDerivation, wai }:
     mkDerivation {
       pname = "wai-eventsource";
       version = "3.0.0";
       sha256 = "1h5zlqky7ldqbmiaixizhk1s8ghf5i3ha1xfz8flxgzr7gr0al3q";
       libraryHaskellDepends = [ wai ];
       doHaddock = false;
       homepage = "http://www.yesodweb.com/book/web-application-interface";
       description = "WAI support for server-sent events (deprecated)";
       license = stdenv.lib.licenses.mit;
     }) {};
  "wai-extra" = callPackage
    ({ mkDerivation, aeson, ansi-terminal, base, base64-bytestring
     , bytestring, case-insensitive, containers, cookie
     , data-default-class, deepseq, directory, fast-logger, hspec
     , http-types, HUnit, iproute, network, old-locale, resourcet
     , streaming-commons, text, time, transformers, unix, unix-compat
     , vault, void, wai, wai-logger, word8, zlib
     }:
     mkDerivation {
       pname = "wai-extra";
       version = "3.0.24.3";
       sha256 = "0ff4mzxqj3h5zn27q9pq0q89x087dy072z24bczn4irry0zzks21";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         aeson ansi-terminal base base64-bytestring bytestring
         case-insensitive containers cookie data-default-class deepseq
         directory fast-logger http-types iproute network old-locale
         resourcet streaming-commons text time transformers unix unix-compat
         vault void wai wai-logger word8 zlib
       ];
       testHaskellDepends = [
         base bytestring case-insensitive cookie fast-logger hspec
         http-types HUnit resourcet text time transformers wai zlib
       ];
       homepage = "http://github.com/yesodweb/wai";
       description = "Provides some basic WAI handlers and middleware";
       license = stdenv.lib.licenses.mit;
     }) {};
  "wai-handler-launch" = callPackage
    ({ mkDerivation, async, base, bytestring, http-types, process
     , streaming-commons, transformers, wai, warp
     }:
     mkDerivation {
       pname = "wai-handler-launch";
       version = "3.0.2.4";
       sha256 = "0019vz9ha2mvliz3drjbj62v26mwhl9bl1vqr06ki40865hrr78f";
       libraryHaskellDepends = [
         async base bytestring http-types process streaming-commons
         transformers wai warp
       ];
       description = "Launch a web app in the default browser";
       license = stdenv.lib.licenses.mit;
     }) {};
  "wai-logger" = callPackage
    ({ mkDerivation, base, byteorder, bytestring, case-insensitive
     , doctest, fast-logger, http-types, network, unix, unix-time, wai
     }:
     mkDerivation {
       pname = "wai-logger";
       version = "2.3.2";
       sha256 = "0w5ldq4gplc16zzk5ikmbbjw79imaqvw8p6lylaw3hlsbn3zzm4d";
       libraryHaskellDepends = [
         base byteorder bytestring case-insensitive fast-logger http-types
         network unix unix-time wai
       ];
       testHaskellDepends = [ base doctest ];
       doCheck = false;
       description = "A logging system for WAI";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "wai-middleware-caching" = callPackage
    ({ mkDerivation, base, blaze-builder, bytestring, http-types, wai
     }:
     mkDerivation {
       pname = "wai-middleware-caching";
       version = "0.1.0.2";
       sha256 = "13fp08ba46wn7gianfbirag8yj14s2x41fkhdb5mx7arjafgpd8m";
       libraryHaskellDepends = [
         base blaze-builder bytestring http-types wai
       ];
       testHaskellDepends = [ base ];
       homepage = "http://github.com/yogsototh/wai-middleware-caching/tree/master/wai-middleware-caching#readme";
       description = "WAI Middleware to cache things";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "wai-middleware-caching-lru" = callPackage
    ({ mkDerivation, base, blaze-builder, bytestring, http-types
     , lrucache, text, wai, wai-middleware-caching
     }:
     mkDerivation {
       pname = "wai-middleware-caching-lru";
       version = "0.1.0.0";
       sha256 = "1lr8vaail00g72dgdfcgjzdd1kqwi4n0jzl1ia7bjxxdym1chz9p";
       libraryHaskellDepends = [
         base blaze-builder bytestring http-types lrucache text wai
         wai-middleware-caching
       ];
       testHaskellDepends = [ base ];
       homepage = "http://github.com/yogsototh/wai-middleware-caching/tree/master/wai-middleware-caching-lru#readme";
       description = "Initial project template from stack";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "wai-middleware-consul" = callPackage
    ({ mkDerivation, async, base, base-prelude, bytestring, conduit
     , conduit-extra, consul-haskell, enclosed-exceptions, http-client
     , http-types, monad-control, monad-logger, network, process
     , resourcet, text, transformers, void, wai, wai-conduit
     }:
     mkDerivation {
       pname = "wai-middleware-consul";
       version = "0.1.0.2";
       sha256 = "0qq7kilp9a4qjja337saqccn250s6mnf3n80sgyg935hy1dmm7fq";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         async base base-prelude bytestring conduit conduit-extra
         consul-haskell enclosed-exceptions http-client http-types
         monad-control monad-logger network process resourcet text
         transformers void wai wai-conduit
       ];
       homepage = "https://github.com/fpco/wai-middleware-consul";
       description = "Wai Middleware for Consul";
       license = stdenv.lib.licenses.mit;
     }) {};
  "wai-middleware-crowd" = callPackage
    ({ mkDerivation, authenticate, base, base64-bytestring, binary
     , blaze-builder, bytestring, case-insensitive, clientsession
     , containers, cookie, gitrev, http-client, http-client-tls
     , http-reverse-proxy, http-types, optparse-applicative, resourcet
     , template-haskell, text, time, transformers, unix-compat, vault
     , wai, wai-app-static, wai-extra, warp
     }:
     mkDerivation {
       pname = "wai-middleware-crowd";
       version = "0.1.4.2";
       sha256 = "0n5h4s3b2fdn2j0pl32bsdbf6wyyf2ms8qsbcs9r0wp7dhdbcdhi";
       revision = "1";
       editedCabalFile = "0qvh92p9s80kmzg5w7rga54kfqbwcrkkv5p03pd92px04j2h5lbm";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         authenticate base base64-bytestring binary blaze-builder bytestring
         case-insensitive clientsession containers cookie http-client
         http-client-tls http-types resourcet text time unix-compat vault
         wai
       ];
       executableHaskellDepends = [
         base bytestring clientsession gitrev http-client http-client-tls
         http-reverse-proxy http-types optparse-applicative template-haskell
         text transformers wai wai-app-static wai-extra warp
       ];
       description = "Middleware and utilities for using Atlassian Crowd authentication";
       license = stdenv.lib.licenses.mit;
     }) {};
  "wai-middleware-metrics" = callPackage
    ({ mkDerivation, base, bytestring, criterion, ekg-core, http-types
     , QuickCheck, scotty, tasty, tasty-hunit, tasty-quickcheck, text
     , time, transformers, wai, wai-extra
     }:
     mkDerivation {
       pname = "wai-middleware-metrics";
       version = "0.2.4";
       sha256 = "0x7c53lqbf55p3ba6naj9xwjz07k4gf0ql3bjlb6vfph92kqadp7";
       libraryHaskellDepends = [ base ekg-core http-types text time wai ];
       testHaskellDepends = [
         base bytestring ekg-core http-types QuickCheck scotty tasty
         tasty-hunit tasty-quickcheck text time transformers wai wai-extra
       ];
       benchmarkHaskellDepends = [
         base bytestring criterion ekg-core http-types scotty text time wai
         wai-extra
       ];
       homepage = "https://github.com/Helkafen/wai-middleware-metrics";
       description = "A WAI middleware to collect EKG request metrics";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "wai-middleware-static" = callPackage
    ({ mkDerivation, base, bytestring, containers, cryptonite
     , directory, expiring-cache-map, filepath, http-types, memory
     , mime-types, mtl, old-locale, semigroups, text, time, wai
     }:
     mkDerivation {
       pname = "wai-middleware-static";
       version = "0.8.2";
       sha256 = "1z5yapcf8j9w71f2na30snmalsajlyi8an2f9qrjdmajabyykr0b";
       revision = "1";
       editedCabalFile = "0n7i81jrjsrav8bpg31avrd18vh95l5z6bfj4fqkrdj4h1v6armi";
       libraryHaskellDepends = [
         base bytestring containers cryptonite directory expiring-cache-map
         filepath http-types memory mime-types mtl old-locale semigroups
         text time wai
       ];
       homepage = "https://github.com/scotty-web/wai-middleware-static";
       description = "WAI middleware that serves requests to static files";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "wai-middleware-travisci" = callPackage
    ({ mkDerivation, aeson, base, base64-bytestring, bytestring
     , cryptonite, http-types, text, transformers, vault, wai
     }:
     mkDerivation {
       pname = "wai-middleware-travisci";
       version = "0.1.0";
       sha256 = "0a58mlgimr6137aiwcdxjk15zy3y58dds4zxffd3vvn0lkzg5jdv";
       revision = "1";
       editedCabalFile = "0fd99j9lyb562p3rsdb8d7swg31bwahzhgjm6afijc5f6i5awcw3";
       libraryHaskellDepends = [
         aeson base base64-bytestring bytestring cryptonite http-types text
         transformers vault wai
       ];
       homepage = "https://github.com/mitchellwrosen/wai-middleware-travisci";
       description = "WAI middleware for authenticating webhook payloads from Travis CI";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "wai-predicates" = callPackage
    ({ mkDerivation, attoparsec, base, blaze-builder, bytestring
     , bytestring-conversion, case-insensitive, cookie, http-types
     , singletons, tasty, tasty-hunit, tasty-quickcheck, text
     , transformers, vault, vector, wai
     }:
     mkDerivation {
       pname = "wai-predicates";
       version = "0.10.0";
       sha256 = "1hnpzf7zwizx67ql4fwpqj7xlgkn6c2ms8w4kjapmgxv8z8zdcxp";
       libraryHaskellDepends = [
         attoparsec base bytestring bytestring-conversion case-insensitive
         cookie http-types singletons text transformers vault vector wai
       ];
       testHaskellDepends = [
         base blaze-builder bytestring case-insensitive http-types tasty
         tasty-hunit tasty-quickcheck wai
       ];
       homepage = "https://gitlab.com/twittner/wai-predicates/";
       description = "WAI request predicates";
       license = "unknown";
       hydraPlatforms = stdenv.lib.platforms.none;
     }) {};
  "wai-session" = callPackage
    ({ mkDerivation, base, blaze-builder, bytestring
     , bytestring-builder, containers, cookie, entropy, http-types
     , StateVar, time, transformers, vault, wai
     }:
     mkDerivation {
       pname = "wai-session";
       version = "0.3.3";
       sha256 = "0lq0gqndb9simd1zkz355m604dwrpcdwxcl3bgagi6kb8h12fffj";
       libraryHaskellDepends = [
         base blaze-builder bytestring bytestring-builder containers cookie
         entropy http-types StateVar time transformers vault wai
       ];
       homepage = "https://github.com/singpolyma/wai-session";
       description = "Flexible session middleware for WAI";
       license = "unknown";
       hydraPlatforms = stdenv.lib.platforms.none;
     }) {};
  "wai-session-postgresql" = callPackage
    ({ mkDerivation, base, bytestring, cereal, cookie, data-default
     , entropy, postgresql-simple, resource-pool, text, time
     , transformers, wai, wai-session
     }:
     mkDerivation {
       pname = "wai-session-postgresql";
       version = "0.2.1.2";
       sha256 = "10xc34a1l6g2lr8b4grvv17281689gdb8q1vh3kkip5lk7fp1m9r";
       libraryHaskellDepends = [
         base bytestring cereal cookie data-default entropy
         postgresql-simple resource-pool text time transformers wai
         wai-session
       ];
       testHaskellDepends = [
         base bytestring data-default postgresql-simple text wai-session
       ];
       doCheck = false;
       homepage = "https://github.com/hce/postgresql-session#readme";
       description = "PostgreSQL backed Wai session store";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "wai-slack-middleware" = callPackage
    ({ mkDerivation, aeson, base, http-client, http-types, wai }:
     mkDerivation {
       pname = "wai-slack-middleware";
       version = "0.2.0";
       sha256 = "0l2pd61vxnfjdjzkvmwqfgf07a3nir3mnbr8qw2nzqa767s84i6i";
       libraryHaskellDepends = [ aeson base http-client http-types wai ];
       testHaskellDepends = [ base ];
       homepage = "https://github.com/psibi/wai-slack-middleware#readme";
       description = "A Slack middleware for WAI";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "wai-transformers" = callPackage
    ({ mkDerivation, base, exceptions, extractable-singleton
     , monad-control-aligned, transformers, wai, wai-websockets
     , websockets
     }:
     mkDerivation {
       pname = "wai-transformers";
       version = "0.1.0";
       sha256 = "14l5ihyvg2n0kmmkxy0r5mx1jk3p5jhv1vynsnnrb2md1g4318qp";
       libraryHaskellDepends = [
         base exceptions extractable-singleton monad-control-aligned
         transformers wai wai-websockets websockets
       ];
       homepage = "https://github.com/athanclark/wai-transformers#readme";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "wai-websockets" = callPackage
    ({ mkDerivation, base, bytestring, case-insensitive, file-embed
     , http-types, network, text, transformers, wai, wai-app-static
     , warp, websockets
     }:
     mkDerivation {
       pname = "wai-websockets";
       version = "3.0.1.2";
       sha256 = "0b2xmdsrsqpssyib53wbr6r8hf75789ndyyanv37sv99iyqcwz4i";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         base bytestring case-insensitive http-types network transformers
         wai websockets
       ];
       executableHaskellDepends = [
         base bytestring case-insensitive file-embed http-types network text
         transformers wai wai-app-static warp websockets
       ];
       homepage = "http://github.com/yesodweb/wai";
       description = "Provide a bridge between WAI and the websockets package";
       license = stdenv.lib.licenses.mit;
     }) {};
  "warp" = callPackage
    ({ mkDerivation, array, async, auto-update, base, bsb-http-chunked
     , bytestring, case-insensitive, containers, directory, doctest
     , gauge, ghc-prim, hashable, hspec, http-client, http-date
     , http-types, http2, HUnit, iproute, lifted-base, network, process
     , QuickCheck, silently, simple-sendfile, stm, streaming-commons
     , text, time, transformers, unix, unix-compat, vault, wai, word8
     }:
     mkDerivation {
       pname = "warp";
       version = "3.2.25";
       sha256 = "0rl59bs99c3wwwyc1ibq0v11mkc7pxpy28r9hdlmjsqmdwn8y2vy";
       libraryHaskellDepends = [
         array async auto-update base bsb-http-chunked bytestring
         case-insensitive containers ghc-prim hashable http-date http-types
         http2 iproute network simple-sendfile stm streaming-commons text
         unix unix-compat vault wai word8
       ];
       testHaskellDepends = [
         array async auto-update base bsb-http-chunked bytestring
         case-insensitive containers directory doctest ghc-prim hashable
         hspec http-client http-date http-types http2 HUnit iproute
         lifted-base network process QuickCheck silently simple-sendfile stm
         streaming-commons text time transformers unix unix-compat vault wai
         word8
       ];
       benchmarkHaskellDepends = [
         auto-update base bytestring containers gauge hashable http-date
         http-types network unix unix-compat
       ];
       homepage = "http://github.com/yesodweb/wai";
       description = "A fast, light-weight web server for WAI applications";
       license = stdenv.lib.licenses.mit;
     }) {};
  "warp-tls" = callPackage
    ({ mkDerivation, base, bytestring, cryptonite, data-default-class
     , network, streaming-commons, tls, tls-session-manager, wai, warp
     }:
     mkDerivation {
       pname = "warp-tls";
       version = "3.2.4.3";
       sha256 = "17gj295fr98l7mkz2gdz6kahdnmja0sql3kvy2zab6q168g53kc4";
       libraryHaskellDepends = [
         base bytestring cryptonite data-default-class network
         streaming-commons tls tls-session-manager wai warp
       ];
       homepage = "http://github.com/yesodweb/wai";
       description = "HTTP over TLS support for Warp via the TLS package";
       license = stdenv.lib.licenses.mit;
     }) {};
  "warp-tls-uid" = callPackage
    ({ mkDerivation, base, bytestring, network, streaming-commons, unix
     , wai, warp, warp-tls
     }:
     mkDerivation {
       pname = "warp-tls-uid";
       version = "0.2.0.5";
       sha256 = "1b3kxpbai9nxqqv9kww4cr1vgaa0cz4fpkd3pfmj0hin10hr6mmq";
       libraryHaskellDepends = [
         base bytestring network streaming-commons unix wai warp warp-tls
       ];
       testHaskellDepends = [
         base bytestring network streaming-commons unix wai warp warp-tls
       ];
       homepage = "https://github.com/YoshikuniJujo/warp-tls-uid#readme";
       description = "set group and user id before running server";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "wave" = callPackage
    ({ mkDerivation, base, bytestring, cereal, containers
     , data-default-class, hspec, QuickCheck, temporary, transformers
     }:
     mkDerivation {
       pname = "wave";
       version = "0.1.5";
       sha256 = "03zycmwrchhqvi37fdvlzz2d1vl4hy0i8xyys1zznw38qfq0h2i5";
       revision = "2";
       editedCabalFile = "0zs0mw42z9xzs1r935pd5dssf0x10qbkhxlpfknv0x75n2k0azzj";
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [
         base bytestring cereal containers data-default-class transformers
       ];
       testHaskellDepends = [
         base bytestring containers data-default-class hspec QuickCheck
         temporary
       ];
       homepage = "https://github.com/mrkkrp/wave";
       description = "Work with WAVE and RF64 files";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "wcwidth" = callPackage
    ({ mkDerivation, base, containers }:
     mkDerivation {
       pname = "wcwidth";
       version = "0.0.2";
       sha256 = "1n1fq7v64b59ajf5g50iqj9sa34wm7s2j3viay0kxpmvlcv8gipz";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [ base containers ];
       homepage = "http://github.com/solidsnack/wcwidth/";
       description = "Native wcwidth";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "web-plugins" = callPackage
    ({ mkDerivation, base, containers, mtl, stm, text }:
     mkDerivation {
       pname = "web-plugins";
       version = "0.2.9.1";
       sha256 = "13wbfl8v5milx2s4lyiw4b44gk5syqbaaqwdxz5sclpxs2ilxvq2";
       libraryHaskellDepends = [ base containers mtl stm text ];
       homepage = "https://github.com/clckwrks/web-plugins";
       description = "dynamic plugin system for web applications";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "web-routes" = callPackage
    ({ mkDerivation, base, blaze-builder, bytestring, exceptions
     , ghc-prim, hspec, http-types, HUnit, mtl, parsec, QuickCheck
     , split, text, utf8-string
     }:
     mkDerivation {
       pname = "web-routes";
       version = "0.27.14.2";
       sha256 = "0jpps7ay2hw41595hlfrx5k4lh9p2nib02n3rhd1vphpbnf392xg";
       libraryHaskellDepends = [
         base blaze-builder bytestring exceptions ghc-prim http-types mtl
         parsec split text utf8-string
       ];
       testHaskellDepends = [ base hspec HUnit QuickCheck text ];
       homepage = "http://www.happstack.com/docs/crashcourse/index.html#web-routes";
       description = "portable, type-safe URL routing";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "web-routes-hsp" = callPackage
    ({ mkDerivation, base, hsp, text, web-routes }:
     mkDerivation {
       pname = "web-routes-hsp";
       version = "0.24.6.1";
       sha256 = "1arc22l7xk49fp80i1fkvj8xj71lqxrs2g5gnvjzwlkc0azzaz6a";
       libraryHaskellDepends = [ base hsp text web-routes ];
       description = "Adds XMLGenerator instance for RouteT monad";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "web-routes-wai" = callPackage
    ({ mkDerivation, base, bytestring, http-types, text, wai
     , web-routes
     }:
     mkDerivation {
       pname = "web-routes-wai";
       version = "0.24.3.1";
       sha256 = "0j9h22nsj7zf5qpf4i07jdcih00r2fivdilvj8wsylk4d23x27wf";
       libraryHaskellDepends = [
         base bytestring http-types text wai web-routes
       ];
       description = "Library for maintaining correctness of URLs within an application";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "web3" = callPackage
    ({ mkDerivation, aeson, async, base, basement, bytestring, cereal
     , cryptonite, data-default, exceptions, generics-sop, hspec
     , hspec-contrib, hspec-discover, hspec-expectations, http-client
     , machines, memory, mtl, parsec, split, stm, tagged
     , template-haskell, text, time, transformers
     }:
     mkDerivation {
       pname = "web3";
       version = "0.7.3.0";
       sha256 = "1ff52krn6vylz8fjbj6224q48lg6cz4glg6xl9sgrz36ayliv0mg";
       libraryHaskellDepends = [
         aeson async base basement bytestring cereal cryptonite data-default
         exceptions generics-sop http-client machines memory mtl parsec
         tagged template-haskell text transformers
       ];
       testHaskellDepends = [
         async base bytestring data-default generics-sop hspec hspec-contrib
         hspec-discover hspec-expectations memory split stm tagged text time
         transformers
       ];
       testToolDepends = [ hspec-discover ];
       doCheck = false;
       homepage = "https://github.com/airalab/hs-web3#readme";
       description = "Ethereum API for Haskell";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "webdriver" = callPackage
    ({ mkDerivation, aeson, attoparsec, base, base64-bytestring
     , bytestring, data-default-class, directory, directory-tree
     , exceptions, filepath, http-client, http-types, lifted-base
     , monad-control, network, network-uri, scientific, temporary, text
     , time, transformers, transformers-base, unordered-containers
     , vector, zip-archive
     }:
     mkDerivation {
       pname = "webdriver";
       version = "0.8.5";
       sha256 = "1gn168cjwlpv2f4jchj48a9pvk8zqdxsf9qpx0lsj4bl2j5pl5m8";
       libraryHaskellDepends = [
         aeson attoparsec base base64-bytestring bytestring
         data-default-class directory directory-tree exceptions filepath
         http-client http-types lifted-base monad-control network
         network-uri scientific temporary text time transformers
         transformers-base unordered-containers vector zip-archive
       ];
       homepage = "https://github.com/kallisti-dev/hs-webdriver";
       description = "a Haskell client for the Selenium WebDriver protocol";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "webex-teams-api" = callPackage
    ({ mkDerivation, aeson, async, attoparsec, base, bitset-word8
     , bytestring, conduit, data-default, hspec, http-conduit
     , http-types, network-uri, optparse-applicative, text, utf8-string
     , wai, warp
     }:
     mkDerivation {
       pname = "webex-teams-api";
       version = "0.2.0.0";
       sha256 = "02x4g10r0rl1g4fbqkj8zxcbz64g8dck4d77f0gswkadsn5y6mkp";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         aeson attoparsec base bitset-word8 bytestring conduit data-default
         http-conduit network-uri text
       ];
       executableHaskellDepends = [
         aeson base bytestring data-default http-conduit
         optparse-applicative text utf8-string
       ];
       testHaskellDepends = [
         aeson async attoparsec base bytestring data-default hspec
         http-conduit http-types network-uri text wai warp
       ];
       homepage = "https://github.com/nshimaza/webex-teams-api#readme";
       description = "A Haskell bindings for Webex Teams API";
       license = stdenv.lib.licenses.mit;
     }) {};
  "webex-teams-conduit" = callPackage
    ({ mkDerivation, aeson, async, base, bytestring, conduit
     , data-default, hspec, http-client, http-conduit, http-types
     , network-uri, optparse-applicative, text, utf8-string, wai, warp
     , webex-teams-api
     }:
     mkDerivation {
       pname = "webex-teams-conduit";
       version = "0.2.0.0";
       sha256 = "0p9ffj3qm84c7m4w5bfpn53vcs96p7gdlyk87mjmc9h9i6v7sz0d";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [ base conduit webex-teams-api ];
       executableHaskellDepends = [
         base bytestring conduit data-default http-client
         optparse-applicative text utf8-string webex-teams-api
       ];
       testHaskellDepends = [
         aeson async base bytestring conduit data-default hspec http-conduit
         http-types network-uri text wai warp webex-teams-api
       ];
       homepage = "https://github.com/nshimaza/webex-teams-api#readme";
       description = "Conduit wrapper of Webex Teams List API";
       license = stdenv.lib.licenses.mit;
     }) {};
  "webex-teams-pipes" = callPackage
    ({ mkDerivation, aeson, async, base, bytestring, data-default
     , hspec, http-client, http-conduit, http-types, network-uri
     , optparse-applicative, pipes, text, utf8-string, wai, warp
     , webex-teams-api
     }:
     mkDerivation {
       pname = "webex-teams-pipes";
       version = "0.2.0.0";
       sha256 = "001ilf2yj6q8rqcagjlh28rad191jyjjr1cpk6cf84v66isdbykp";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [ base pipes webex-teams-api ];
       executableHaskellDepends = [
         base bytestring data-default http-client optparse-applicative pipes
         text utf8-string webex-teams-api
       ];
       testHaskellDepends = [
         aeson async base bytestring data-default hspec http-conduit
         http-types network-uri pipes text wai warp webex-teams-api
       ];
       homepage = "https://github.com/nshimaza/webex-teams-api#readme";
       description = "Pipes wrapper of Webex Teams List API";
       license = stdenv.lib.licenses.mit;
     }) {};
  "webrtc-vad" = callPackage
    ({ mkDerivation, base, primitive, vector }:
     mkDerivation {
       pname = "webrtc-vad";
       version = "0.1.0.3";
       sha256 = "0lylc3axcamrmjaarx3aacbjc9d0rkhmdgq1g2pc5j0lsf8ndk49";
       libraryHaskellDepends = [ base primitive vector ];
       description = "Easy voice activity detection";
       license = stdenv.lib.licenses.mit;
     }) {};
  "websockets" = callPackage
    ({ mkDerivation, attoparsec, base, base64-bytestring, binary
     , bytestring, bytestring-builder, case-insensitive, containers
     , criterion, entropy, HUnit, network, QuickCheck, random, SHA
     , streaming-commons, test-framework, test-framework-hunit
     , test-framework-quickcheck2, text
     }:
     mkDerivation {
       pname = "websockets";
       version = "0.12.5.2";
       sha256 = "0wacifjbskkfv6xq1sbmc8p60wn767xcjhz8hn8hyijxrrmjabci";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         attoparsec base base64-bytestring binary bytestring
         bytestring-builder case-insensitive containers entropy network
         random SHA streaming-commons text
       ];
       testHaskellDepends = [
         attoparsec base base64-bytestring binary bytestring
         bytestring-builder case-insensitive containers entropy HUnit
         network QuickCheck random SHA streaming-commons test-framework
         test-framework-hunit test-framework-quickcheck2 text
       ];
       benchmarkHaskellDepends = [
         attoparsec base base64-bytestring binary bytestring
         bytestring-builder case-insensitive containers criterion entropy
         network random SHA text
       ];
       doCheck = false;
       homepage = "http://jaspervdj.be/websockets";
       description = "A sensible and clean way to write WebSocket-capable servers in Haskell";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "websockets-snap" = callPackage
    ({ mkDerivation, base, bytestring, bytestring-builder, io-streams
     , mtl, snap-core, snap-server, websockets
     }:
     mkDerivation {
       pname = "websockets-snap";
       version = "0.10.3.0";
       sha256 = "1r1v6ypnaap99vy2gh3lmghqv2y3zaaq0wiv4d2bn49179c40jmk";
       libraryHaskellDepends = [
         base bytestring bytestring-builder io-streams mtl snap-core
         snap-server websockets
       ];
       description = "Snap integration for the websockets library";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "weeder" = callPackage
    ({ mkDerivation, aeson, base, bytestring, cmdargs, deepseq
     , directory, extra, filepath, foundation, hashable, process, text
     , unordered-containers, vector, yaml
     }:
     mkDerivation {
       pname = "weeder";
       version = "1.0.8";
       sha256 = "1ylwq1087x6ppn5y5krvl6q6fxcln58y8fwbah3ygp0cpgm4w816";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         aeson base bytestring cmdargs deepseq directory extra filepath
         foundation hashable process text unordered-containers vector yaml
       ];
       executableHaskellDepends = [ base ];
       homepage = "https://github.com/ndmitchell/weeder#readme";
       description = "Detect dead code";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "weigh" = callPackage
    ({ mkDerivation, base, deepseq, mtl, process, split, temporary }:
     mkDerivation {
       pname = "weigh";
       version = "0.0.12";
       sha256 = "0zw2a997gxgdzqmd7j730kxgynzmjvvlkw84dajmfzf1v9pbij7x";
       libraryHaskellDepends = [
         base deepseq mtl process split temporary
       ];
       testHaskellDepends = [ base deepseq ];
       homepage = "https://github.com/fpco/weigh#readme";
       description = "Measure allocations of a Haskell functions/values";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "wide-word" = callPackage
    ({ mkDerivation, base, bytestring, deepseq, ghc-prim, hedgehog }:
     mkDerivation {
       pname = "wide-word";
       version = "0.1.0.7";
       sha256 = "0qqam1sxssxq43r8i586lrs2zslm2qnw5yhjdqj5zxksk2jrcxrd";
       libraryHaskellDepends = [ base deepseq ghc-prim ];
       testHaskellDepends = [ base bytestring ghc-prim hedgehog ];
       homepage = "https://github.com/erikd/wide-word";
       description = "Data types for large but fixed width signed and unsigned integers";
       license = stdenv.lib.licenses.bsd2;
     }) {};
  "wikicfp-scraper" = callPackage
    ({ mkDerivation, attoparsec, base, bytestring, filepath, hspec
     , scalpel-core, text, time
     }:
     mkDerivation {
       pname = "wikicfp-scraper";
       version = "0.1.0.9";
       sha256 = "1qj28a53shcr4dq8i1fhyjbr4ybiyfb0kz3w0g439736mrnzsg4y";
       libraryHaskellDepends = [
         attoparsec base bytestring scalpel-core text time
       ];
       testHaskellDepends = [ base bytestring filepath hspec time ];
       homepage = "https://github.com/debug-ito/wikicfp-scraper";
       description = "Scrape WikiCFP web site";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "wild-bind" = callPackage
    ({ mkDerivation, base, containers, hspec, microlens, QuickCheck
     , semigroups, stm, text, transformers
     }:
     mkDerivation {
       pname = "wild-bind";
       version = "0.1.2.3";
       sha256 = "1dl3vh4xn6mml2mydapyqwlg872pczgz7lv912skzwnzv55hxg12";
       libraryHaskellDepends = [
         base containers semigroups text transformers
       ];
       testHaskellDepends = [
         base hspec microlens QuickCheck stm transformers
       ];
       homepage = "https://github.com/debug-ito/wild-bind";
       description = "Dynamic key binding framework";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "wild-bind-x11" = callPackage
    ({ mkDerivation, async, base, containers, fold-debounce, hspec, mtl
     , semigroups, stm, text, time, transformers, wild-bind, X11
     }:
     mkDerivation {
       pname = "wild-bind-x11";
       version = "0.2.0.6";
       sha256 = "0dqxcmdx3dinqkpwdnkb5nlc0cvn1gnwril5qmzixzshh03c8va9";
       libraryHaskellDepends = [
         base containers fold-debounce mtl semigroups stm text transformers
         wild-bind X11
       ];
       testHaskellDepends = [
         async base hspec text time transformers wild-bind X11
       ];
       homepage = "https://github.com/debug-ito/wild-bind";
       description = "X11-specific implementation for WildBind";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "wire-streams" = callPackage
    ({ mkDerivation, base, binary, binary-parsers, bytestring, cereal
     , cereal-conduit, conduit, conduit-extra, criterion, io-streams
     , QuickCheck, tasty, tasty-quickcheck, transformers
     }:
     mkDerivation {
       pname = "wire-streams";
       version = "0.1.1.0";
       sha256 = "09zvw9c1h42fwbry0nycnfjy8m8v4yfijvy9h6c5i2ccq1qgppwn";
       revision = "1";
       editedCabalFile = "1j7gpk3k82h0kxnhpv40jmnqxpnr0v0m4lj6bhpga81vlmznr088";
       libraryHaskellDepends = [
         base binary binary-parsers bytestring io-streams
       ];
       testHaskellDepends = [
         base binary bytestring io-streams QuickCheck tasty tasty-quickcheck
       ];
       benchmarkHaskellDepends = [
         base binary bytestring cereal cereal-conduit conduit conduit-extra
         criterion io-streams transformers
       ];
       homepage = "https://github.com/winterland1989/wire-streams";
       description = "Fast binary io-streams adapter";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "with-location" = callPackage
    ({ mkDerivation, base, hspec }:
     mkDerivation {
       pname = "with-location";
       version = "0.1.0";
       sha256 = "1rzxvsyh8x3ql3zh7gyw9hjx9bl4v73h0y5kzgaxcfcdn86dg49c";
       libraryHaskellDepends = [ base ];
       testHaskellDepends = [ base hspec ];
       homepage = "https://github.com/sol/with-location#readme";
       description = "Use ImplicitParams-based source locations in a backward compatible way";
       license = stdenv.lib.licenses.mit;
     }) {};
  "withdependencies" = callPackage
    ({ mkDerivation, base, conduit, containers, hspec, HUnit, mtl
     , profunctors
     }:
     mkDerivation {
       pname = "withdependencies";
       version = "0.2.4.2";
       sha256 = "04pk5giqlnls1p62fz9p0sb1288c9qk3ivsq2kb5207cjifyslgz";
       libraryHaskellDepends = [
         base conduit containers mtl profunctors
       ];
       testHaskellDepends = [ base conduit hspec HUnit mtl ];
       homepage = "https://github.com/bartavelle/withdependencies";
       description = "Run computations that depend on one or more elements in a stream";
       license = stdenv.lib.licenses.gpl3;
     }) {};
  "witherable" = callPackage
    ({ mkDerivation, base, base-orphans, containers, hashable
     , transformers, unordered-containers, vector
     }:
     mkDerivation {
       pname = "witherable";
       version = "0.2";
       sha256 = "0bga2vx3bkg1m6pwdvnxbqjbljpwr6mxyq94fi87j3zy08mmmnwx";
       libraryHaskellDepends = [
         base base-orphans containers hashable transformers
         unordered-containers vector
       ];
       homepage = "https://github.com/fumieval/witherable";
       description = "filterable traversable";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "witness" = callPackage
    ({ mkDerivation, base, constraints, semigroupoids, transformers }:
     mkDerivation {
       pname = "witness";
       version = "0.4";
       sha256 = "180yy0dyvmn9jsl1gjbryxli3qkl2h6pvh297vsr9ax3h4vciilk";
       libraryHaskellDepends = [
         base constraints semigroupoids transformers
       ];
       homepage = "https://github.com/AshleyYakeley/witness";
       description = "values that witness types";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "wizards" = callPackage
    ({ mkDerivation, base, containers, control-monad-free, haskeline
     , mtl, transformers
     }:
     mkDerivation {
       pname = "wizards";
       version = "1.0.3";
       sha256 = "1clvbd1ckhvy29qrbmpkn7bya7300fq6znnps23nn3nxyrxhsr85";
       libraryHaskellDepends = [
         base containers control-monad-free haskeline mtl transformers
       ];
       description = "High level, generic library for interrogative user interfaces";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "wl-pprint-annotated" = callPackage
    ({ mkDerivation, base, containers, deepseq, tasty, tasty-hunit
     , text
     }:
     mkDerivation {
       pname = "wl-pprint-annotated";
       version = "0.1.0.1";
       sha256 = "1br7qyf27iza213inwhf9bm2k6in0zbmfw6w4clqlc9f9cj2nrkb";
       libraryHaskellDepends = [ base containers deepseq text ];
       testHaskellDepends = [
         base containers deepseq tasty tasty-hunit text
       ];
       homepage = "https://github.com/minad/wl-pprint-annotated#readme";
       description = "Pretty printer with annotation support";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "wl-pprint-console" = callPackage
    ({ mkDerivation, base, bytestring, colorful-monoids, text
     , wl-pprint-annotated
     }:
     mkDerivation {
       pname = "wl-pprint-console";
       version = "0.1.0.2";
       sha256 = "05dq90zh2ywmaz0z9vr7114f4c6gacp7b7hlbl3sx31km92v8xnb";
       libraryHaskellDepends = [
         base bytestring colorful-monoids text wl-pprint-annotated
       ];
       homepage = "https://github.com/minad/wl-pprint-console#readme";
       description = "Wadler/Leijen pretty printer supporting colorful console output";
       license = stdenv.lib.licenses.mit;
     }) {};
  "wl-pprint-extras" = callPackage
    ({ mkDerivation, base, containers, HUnit, nats, semigroupoids
     , semigroups, test-framework, test-framework-hunit, text
     , utf8-string
     }:
     mkDerivation {
       pname = "wl-pprint-extras";
       version = "3.5.0.5";
       sha256 = "13wdx7l236yyv9wqsgcjlbrm5gk1bmw1z2lk4b21y699ly2imhm9";
       libraryHaskellDepends = [
         base containers nats semigroupoids semigroups text utf8-string
       ];
       testHaskellDepends = [
         base HUnit test-framework test-framework-hunit
       ];
       homepage = "http://github.com/ekmett/wl-pprint-extras/";
       description = "A free monad based on the Wadler/Leijen pretty printer";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "wl-pprint-terminfo" = callPackage
    ({ mkDerivation, base, bytestring, containers, nats, semigroups
     , terminfo, text, transformers, wl-pprint-extras
     }:
     mkDerivation {
       pname = "wl-pprint-terminfo";
       version = "3.7.1.4";
       sha256 = "084d70plp3d9629aznrk5nxkg0hg7yr76iyi74gcby633xbvmniw";
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [
         base bytestring containers nats semigroups terminfo text
         transformers wl-pprint-extras
       ];
       homepage = "http://github.com/ekmett/wl-pprint-terminfo/";
       description = "A color pretty printer with terminfo support";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "wl-pprint-text" = callPackage
    ({ mkDerivation, base, base-compat, text }:
     mkDerivation {
       pname = "wl-pprint-text";
       version = "1.2.0.0";
       sha256 = "0g3w92rad6x5appfb22rbzcas2ix2h0hy91sdxhq8a4a5cnlrpa0";
       libraryHaskellDepends = [ base base-compat text ];
       doCheck = false;
       description = "A Wadler/Leijen Pretty Printer for Text values";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "word-trie" = callPackage
    ({ mkDerivation, base, binary, containers, hspec, QuickCheck }:
     mkDerivation {
       pname = "word-trie";
       version = "0.3.0";
       sha256 = "10ljyb1hl4awg2c3wq5shdqj2s53q5fklf7p6np1jhn6i30c5wx3";
       revision = "1";
       editedCabalFile = "01aanzslm69z94lqy43hgyxj1ys7sqfqwn72l0snw3h2n3pjwn45";
       libraryHaskellDepends = [ base binary containers ];
       testHaskellDepends = [ base binary containers hspec QuickCheck ];
       homepage = "https://github.com/yi-editor/word-trie";
       description = "Implementation of a finite trie over words";
       license = stdenv.lib.licenses.gpl2;
     }) {};
  "word-wrap" = callPackage
    ({ mkDerivation, base, criterion, hspec, text }:
     mkDerivation {
       pname = "word-wrap";
       version = "0.4.1";
       sha256 = "15rcqhg9vb7qisk9ryjnyhhfgigxksnkrczycaw2rin08wczjwpb";
       revision = "1";
       editedCabalFile = "1k4w4g053vhmpp08542hrqaw81p3p35i567xgdarqmpghfrk68pp";
       libraryHaskellDepends = [ base text ];
       testHaskellDepends = [ base hspec ];
       benchmarkHaskellDepends = [ base criterion text ];
       homepage = "https://github.com/jtdaugherty/word-wrap/";
       description = "A library for word-wrapping";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "word24" = callPackage
    ({ mkDerivation, base, criterion, deepseq, QuickCheck
     , test-framework, test-framework-quickcheck2
     }:
     mkDerivation {
       pname = "word24";
       version = "2.0.1";
       sha256 = "11m0qffpjngylmci73v7y3ap7v8244cylzgj3qai9wwdr1ya2jy3";
       libraryHaskellDepends = [ base deepseq ];
       testHaskellDepends = [
         base deepseq QuickCheck test-framework test-framework-quickcheck2
       ];
       benchmarkHaskellDepends = [ base criterion deepseq ];
       homepage = "https://github.com/winterland1989/word24";
       description = "24-bit word and int types for GHC";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "word8" = callPackage
    ({ mkDerivation, base, bytestring, criterion, hspec }:
     mkDerivation {
       pname = "word8";
       version = "0.1.3";
       sha256 = "12jx7f13d2h1djq4fh4dyrab61sm49mj1w61j3rzp2vjfm696c16";
       libraryHaskellDepends = [ base ];
       testHaskellDepends = [ base hspec ];
       benchmarkHaskellDepends = [ base bytestring criterion ];
       description = "Word8 library";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "world-peace" = callPackage
    ({ mkDerivation, aeson, base, deepseq, doctest, Glob, profunctors
     , tagged
     }:
     mkDerivation {
       pname = "world-peace";
       version = "0.1.0.0";
       sha256 = "19anwyh9n9agpcdhzfbh0l28nm0mdn8616klihbw55yxkiwqaxkk";
       libraryHaskellDepends = [ aeson base deepseq profunctors tagged ];
       testHaskellDepends = [ base doctest Glob ];
       homepage = "https://github.com/cdepillabout/world-peace";
       description = "Open Union and Open Product Types";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "wrap" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "wrap";
       version = "0.0.0";
       sha256 = "03pmfwwx2ykjglzrc4k09q2lv8piq107j32dg0r1aadj2ysc9fzq";
       libraryHaskellDepends = [ base ];
       description = "Wrap a function's return value with another function";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "wreq" = callPackage
    ({ mkDerivation, aeson, aeson-pretty, attoparsec
     , authenticate-oauth, base, base16-bytestring, base64-bytestring
     , bytestring, Cabal, cabal-doctest, case-insensitive, containers
     , cryptonite, directory, doctest, exceptions, filepath, ghc-prim
     , hashable, http-client, http-client-tls, http-types, HUnit, lens
     , lens-aeson, memory, mime-types, network-info, psqueues
     , QuickCheck, snap-core, snap-server, template-haskell, temporary
     , test-framework, test-framework-hunit, test-framework-quickcheck2
     , text, time, time-locale-compat, transformers, unix-compat
     , unordered-containers, uuid, vector
     }:
     mkDerivation {
       pname = "wreq";
       version = "0.5.3.1";
       sha256 = "1i2f2bxx84l8qzkz9v3qhx5sbl78ysc3vqadfhrxk3h0ljklwfz3";
       revision = "1";
       editedCabalFile = "016sf02sm58fjsa7nmj12y8m2rwg34md8cnn533kdxm831jc9zyb";
       isLibrary = true;
       isExecutable = true;
       setupHaskellDepends = [ base Cabal cabal-doctest ];
       libraryHaskellDepends = [
         aeson attoparsec authenticate-oauth base base16-bytestring
         bytestring case-insensitive containers cryptonite exceptions
         ghc-prim hashable http-client http-client-tls http-types lens
         lens-aeson memory mime-types psqueues template-haskell text time
         time-locale-compat unordered-containers
       ];
       testHaskellDepends = [
         aeson aeson-pretty base base64-bytestring bytestring
         case-insensitive containers directory doctest filepath hashable
         http-client http-types HUnit lens lens-aeson network-info
         QuickCheck snap-core snap-server temporary test-framework
         test-framework-hunit test-framework-quickcheck2 text time
         transformers unix-compat unordered-containers uuid vector
       ];
       doCheck = false;
       homepage = "http://www.serpentine.com/wreq";
       description = "An easy-to-use HTTP client library";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "wreq-stringless" = callPackage
    ({ mkDerivation, base, bytestring, text, utf8-string, wreq }:
     mkDerivation {
       pname = "wreq-stringless";
       version = "0.5.9.1";
       sha256 = "0dgjjybbc4nza1a0af2j8jxscyhlcwdspmvy8zsmcczzcdhx2b2h";
       libraryHaskellDepends = [ base bytestring text utf8-string wreq ];
       homepage = "https://github.com/j-keck/wreq-stringless#readme";
       description = "Simple wrapper to use wreq without Strings";
       license = stdenv.lib.licenses.mit;
     }) {};
  "writer-cps-full" = callPackage
    ({ mkDerivation, base, writer-cps-lens, writer-cps-morph
     , writer-cps-mtl, writer-cps-transformers
     }:
     mkDerivation {
       pname = "writer-cps-full";
       version = "0.1.0.0";
       sha256 = "15ay19hmfzx994aqylk379584c5f9jpz4yfi1zbyc2s7958xylds";
       libraryHaskellDepends = [
         base writer-cps-lens writer-cps-morph writer-cps-mtl
         writer-cps-transformers
       ];
       homepage = "https://github.com/minad/writer-cps-full#readme";
       description = "WriteT and RWST monad transformers (Reexport with all dependencies)";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "writer-cps-lens" = callPackage
    ({ mkDerivation, base, lens, profunctors, transformers
     , writer-cps-mtl, writer-cps-transformers
     }:
     mkDerivation {
       pname = "writer-cps-lens";
       version = "0.1.0.1";
       sha256 = "1vq6sfq7c58py9p3lgq2b4l9rl46n555vlmxfp6b7p469xpqnsrd";
       libraryHaskellDepends = [
         base lens profunctors transformers writer-cps-mtl
         writer-cps-transformers
       ];
       homepage = "https://github.com/louispan/writer-cps-lens#readme";
       description = "Lens instances for the stricter CPS WriterT and RWST";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "writer-cps-morph" = callPackage
    ({ mkDerivation, base, mmorph, writer-cps-transformers }:
     mkDerivation {
       pname = "writer-cps-morph";
       version = "0.1.0.2";
       sha256 = "1n6m7wpxvvnxgkjz8qfiqz9jn2d83qb9wj4gmp476fg8vjvhf7g9";
       revision = "1";
       editedCabalFile = "0dqpbpaidwa7ahk0n7pv397mv7ncr26p3vcrjh1xzl6vk26bdah5";
       libraryHaskellDepends = [ base mmorph writer-cps-transformers ];
       homepage = "https://github.com/louispan/writer-cps-morph#readme";
       description = "MFunctor instance for CPS style WriterT and RWST";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "writer-cps-mtl" = callPackage
    ({ mkDerivation, base, mtl, transformers, writer-cps-transformers
     }:
     mkDerivation {
       pname = "writer-cps-mtl";
       version = "0.1.1.5";
       sha256 = "09snvqwwhp39vmiiz3jpnfyjfhvpcj8ykbnhmii0yclxxsjgamqm";
       libraryHaskellDepends = [
         base mtl transformers writer-cps-transformers
       ];
       homepage = "https://github.com/minad/writer-cps-mtl#readme";
       description = "MonadWriter orphan instances for writer-cps-transformers";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "writer-cps-transformers" = callPackage
    ({ mkDerivation, base, transformers }:
     mkDerivation {
       pname = "writer-cps-transformers";
       version = "0.1.1.4";
       sha256 = "1zc5048spzf52gvski34ffvapw5s5yfdj7znv29yr71r4178pw6n";
       libraryHaskellDepends = [ base transformers ];
       homepage = "https://github.com/minad/writer-cps-transformers#readme";
       description = "WriteT and RWST monad transformers";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "ws" = callPackage
    ({ mkDerivation, async, attoparsec, attoparsec-uri, base
     , bytestring, exceptions, haskeline, mtl, network
     , optparse-applicative, strict, text, vector, websockets, wuss
     }:
     mkDerivation {
       pname = "ws";
       version = "0.0.4";
       sha256 = "00jz7a7x260ix2rg46bmp6c3rjnra9c7j4p0in7cpk2iap28106q";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         async attoparsec-uri base bytestring exceptions haskeline mtl
         network text websockets wuss
       ];
       executableHaskellDepends = [
         async attoparsec attoparsec-uri base bytestring exceptions
         haskeline mtl network optparse-applicative strict text vector
         websockets wuss
       ];
       homepage = "https://github.com/athanclark/ws#readme";
       description = "A simple CLI utility for interacting with a websocket";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "wuss" = callPackage
    ({ mkDerivation, base, bytestring, connection, network, websockets
     }:
     mkDerivation {
       pname = "wuss";
       version = "1.1.11";
       sha256 = "1mlqgi80r5db0j58r0laiwp1044n4insq89bv1v3y26j726yjvp0";
       libraryHaskellDepends = [
         base bytestring connection network websockets
       ];
       homepage = "https://github.com/tfausak/wuss#readme";
       description = "Secure WebSocket (WSS) clients";
       license = stdenv.lib.licenses.mit;
     }) {};
  "x11-xim" = callPackage
    ({ mkDerivation, base, utf8-string, X11 }:
     mkDerivation {
       pname = "x11-xim";
       version = "0.0.9.0";
       sha256 = "0sn789j0kz891l9p0srx6537yq44b5jlyph9vc3xdb3ygy20bjrw";
       revision = "1";
       editedCabalFile = "1c561z9xvfcd7ddbiw3r0frhjvsrklachd38s66fzwjdgw1sl124";
       libraryHaskellDepends = [ base utf8-string X11 ];
       homepage = "https://github.com/YoshikuniJujo/x11-xim_haskell/wiki/";
       description = "A binding to the xim of X11 graphics library";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "x509" = callPackage
    ({ mkDerivation, asn1-encoding, asn1-parse, asn1-types, base
     , bytestring, containers, cryptonite, hourglass, memory, mtl, pem
     , tasty, tasty-quickcheck
     }:
     mkDerivation {
       pname = "x509";
       version = "1.7.5";
       sha256 = "1j67c35g8334jx7x32hh6awhr43dplp0qwal5gnlkmx09axzrc5i";
       revision = "1";
       editedCabalFile = "1z98llpggldy4yb7afcsn3r3q4vklvx2pqyrhy9fir5y2yd5l601";
       libraryHaskellDepends = [
         asn1-encoding asn1-parse asn1-types base bytestring containers
         cryptonite hourglass memory mtl pem
       ];
       testHaskellDepends = [
         asn1-types base bytestring cryptonite hourglass mtl tasty
         tasty-quickcheck
       ];
       homepage = "http://github.com/vincenthz/hs-certificate";
       description = "X509 reader and writer";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "x509-store" = callPackage
    ({ mkDerivation, asn1-encoding, asn1-types, base, bytestring
     , containers, cryptonite, directory, filepath, mtl, pem, tasty
     , tasty-hunit, x509
     }:
     mkDerivation {
       pname = "x509-store";
       version = "1.6.7";
       sha256 = "1y8yyr1i95jkllg8k0z54k5v4vachp848clc07m33xpxidn3b1lp";
       revision = "1";
       editedCabalFile = "04h2h8kdzhd2fp3w4a834xc1n88b1jgrxlgcsynfn0iwpbsb41x7";
       libraryHaskellDepends = [
         asn1-encoding asn1-types base bytestring containers cryptonite
         directory filepath mtl pem x509
       ];
       testHaskellDepends = [ base bytestring tasty tasty-hunit x509 ];
       homepage = "http://github.com/vincenthz/hs-certificate";
       description = "X.509 collection accessing and storing methods";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "x509-system" = callPackage
    ({ mkDerivation, base, bytestring, containers, directory, filepath
     , mtl, pem, process, x509, x509-store
     }:
     mkDerivation {
       pname = "x509-system";
       version = "1.6.6";
       sha256 = "06a4m9c7vlr9nhp9gmqbb46arf0yj1dkdm4nip03hzy67spdmp20";
       libraryHaskellDepends = [
         base bytestring containers directory filepath mtl pem process x509
         x509-store
       ];
       homepage = "http://github.com/vincenthz/hs-certificate";
       description = "Handle per-operating-system X.509 accessors and storage";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "x509-validation" = callPackage
    ({ mkDerivation, asn1-encoding, asn1-types, base, bytestring
     , containers, cryptonite, data-default-class, hourglass, memory
     , mtl, pem, tasty, tasty-hunit, x509, x509-store
     }:
     mkDerivation {
       pname = "x509-validation";
       version = "1.6.11";
       sha256 = "16yihzljql3z8w5rgdl95fv3hgk7yd86kbl9b3glllsark5j2hzr";
       libraryHaskellDepends = [
         asn1-encoding asn1-types base bytestring containers cryptonite
         data-default-class hourglass memory mtl pem x509 x509-store
       ];
       testHaskellDepends = [
         asn1-encoding asn1-types base bytestring cryptonite
         data-default-class hourglass memory tasty tasty-hunit x509
         x509-store
       ];
       homepage = "http://github.com/vincenthz/hs-certificate";
       description = "X.509 Certificate and CRL validation";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "xdg-basedir" = callPackage
    ({ mkDerivation, base, directory, filepath }:
     mkDerivation {
       pname = "xdg-basedir";
       version = "0.2.2";
       sha256 = "0azlzaxp2dn4l1nr7shsxah2magk1szf6fx0mv75az00qsjw6qg4";
       libraryHaskellDepends = [ base directory filepath ];
       homepage = "http://github.com/willdonnelly/xdg-basedir";
       description = "A basic implementation of the XDG Base Directory specification";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "xeno" = callPackage
    ({ mkDerivation, array, base, bytestring, criterion, deepseq
     , ghc-prim, hexml, hexpat, hspec, mtl, mutable-containers, vector
     , weigh, xml
     }:
     mkDerivation {
       pname = "xeno";
       version = "0.3.5.1";
       sha256 = "1bdvj5ql0q9i8vb3429d8kl3hyk45r37s23rm76mhwhazhqxcm60";
       libraryHaskellDepends = [
         array base bytestring deepseq hspec mtl mutable-containers vector
       ];
       testHaskellDepends = [ base bytestring hexml hspec ];
       benchmarkHaskellDepends = [
         base bytestring criterion deepseq ghc-prim hexml hexpat weigh xml
       ];
       homepage = "https://github.com/ocramz/xeno";
       description = "A fast event-based XML parser in pure Haskell";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "xenstore" = callPackage
    ({ mkDerivation, base, bytestring, cereal, mtl, network }:
     mkDerivation {
       pname = "xenstore";
       version = "0.1.1";
       sha256 = "0x788lpkkxg7ds1bgnw0kvkf6pkfbknn7jy0njhz85k7rv4kidf2";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [ base bytestring cereal mtl network ];
       description = "Xenstore client access";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "xhtml" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "xhtml";
       version = "3000.2.2.1";
       sha256 = "0939kwpinq6l4n3nyvd1gzyl7f83gymw0wzqndlgy1yc7q0nkj2w";
       libraryHaskellDepends = [ base ];
       homepage = "https://github.com/haskell/xhtml";
       description = "An XHTML combinator library";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "xls" = callPackage
    ({ mkDerivation, base, conduit, filepath, getopt-generics
     , resourcet, transformers
     }:
     mkDerivation {
       pname = "xls";
       version = "0.1.1";
       sha256 = "0a09zw90xiaklr68w932md38s95jzwid914lw7frnf3qd8j12xq9";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         base conduit filepath resourcet transformers
       ];
       executableHaskellDepends = [
         base conduit getopt-generics resourcet transformers
       ];
       testHaskellDepends = [ base ];
       homepage = "http://github.com/harendra-kumar/xls";
       description = "Parse Microsoft Excel xls files (BIFF/Excel 97-2004)";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "xlsx" = callPackage
    ({ mkDerivation, attoparsec, base, base64-bytestring, binary-search
     , bytestring, conduit, containers, criterion, data-default, deepseq
     , Diff, errors, extra, filepath, groom, lens, mtl, network-uri
     , old-locale, raw-strings-qq, safe, smallcheck, tasty, tasty-hunit
     , tasty-smallcheck, text, time, transformers, vector, xeno
     , xml-conduit, zip-archive, zlib
     }:
     mkDerivation {
       pname = "xlsx";
       version = "0.7.2";
       sha256 = "00qigyz4nc23abawapxhw0sgmj9c5qplkkvyv6xxffanx9kh8mmj";
       libraryHaskellDepends = [
         attoparsec base base64-bytestring binary-search bytestring conduit
         containers data-default deepseq errors extra filepath lens mtl
         network-uri old-locale safe text time transformers vector xeno
         xml-conduit zip-archive zlib
       ];
       testHaskellDepends = [
         base bytestring containers Diff groom lens mtl raw-strings-qq
         smallcheck tasty tasty-hunit tasty-smallcheck text time vector
         xml-conduit
       ];
       benchmarkHaskellDepends = [ base bytestring criterion ];
       homepage = "https://github.com/qrilka/xlsx";
       description = "Simple and incomplete Excel file parser/writer";
       license = stdenv.lib.licenses.mit;
     }) {};
  "xml" = callPackage
    ({ mkDerivation, base, bytestring, text }:
     mkDerivation {
       pname = "xml";
       version = "1.3.14";
       sha256 = "0g814lj7vaxvib2g3r734221k80k7ap9czv9hinifn8syals3l9j";
       libraryHaskellDepends = [ base bytestring text ];
       homepage = "http://code.galois.com";
       description = "A simple XML library";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "xml-basic" = callPackage
    ({ mkDerivation, base, containers, data-accessor
     , explicit-exception, semigroups, utility-ht
     }:
     mkDerivation {
       pname = "xml-basic";
       version = "0.1.3.1";
       sha256 = "1qm3g00zavdal1f1yj2jrg7lb6b845fbf63b4pym5p49wkw3yx4d";
       libraryHaskellDepends = [
         base containers data-accessor explicit-exception semigroups
         utility-ht
       ];
       description = "Basics for XML/HTML representation and processing";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "xml-conduit" = callPackage
    ({ mkDerivation, attoparsec, base, blaze-html, blaze-markup
     , bytestring, conduit, conduit-extra, containers
     , data-default-class, deepseq, doctest, hspec, HUnit, resourcet
     , text, transformers, xml-types
     }:
     mkDerivation {
       pname = "xml-conduit";
       version = "1.8.0.1";
       sha256 = "177gmyigxql1pn3ncz0r8annwv5cbxnihbgrrg1dhm4gmc9jy2wq";
       libraryHaskellDepends = [
         attoparsec base blaze-html blaze-markup bytestring conduit
         conduit-extra containers data-default-class deepseq resourcet text
         transformers xml-types
       ];
       testHaskellDepends = [
         base blaze-markup bytestring conduit containers doctest hspec HUnit
         resourcet text transformers xml-types
       ];
       homepage = "http://github.com/snoyberg/xml";
       description = "Pure-Haskell utilities for dealing with XML with the conduit package";
       license = stdenv.lib.licenses.mit;
     }) {};
  "xml-conduit-parse" = callPackage
    ({ mkDerivation, base, conduit, conduit-parse, containers
     , data-default, exceptions, parsers, resourcet, tasty, tasty-hunit
     , text, xml-conduit, xml-types
     }:
     mkDerivation {
       pname = "xml-conduit-parse";
       version = "0.3.1.2";
       sha256 = "0233jcpv7lzan2hh6siw2rrjkjp4f5i1kkpjpdfija01f8by3an1";
       revision = "1";
       editedCabalFile = "0jnnr4z3c6rq2dz0ldiic5zwkrp36igf6gip11qrm9ss2pk9khbl";
       libraryHaskellDepends = [
         base conduit conduit-parse containers exceptions parsers text
         xml-conduit xml-types
       ];
       testHaskellDepends = [
         base conduit conduit-parse data-default parsers resourcet tasty
         tasty-hunit
       ];
       homepage = "https://github.com/k0ral/xml-conduit-parse";
       description = "Streaming XML parser based on conduits";
       license = "unknown";
       hydraPlatforms = stdenv.lib.platforms.none;
     }) {};
  "xml-conduit-writer" = callPackage
    ({ mkDerivation, base, containers, data-default, dlist, mtl, text
     , xml-conduit, xml-types
     }:
     mkDerivation {
       pname = "xml-conduit-writer";
       version = "0.1.1.2";
       sha256 = "0n5fk6sj5grcfz51psbf8h4z40hd4dk8zpk870c6ipm2s9dc1488";
       libraryHaskellDepends = [
         base containers data-default dlist mtl text xml-conduit xml-types
       ];
       testHaskellDepends = [ base text ];
       homepage = "https://bitbucket.org/dpwiz/xml-conduit-writer";
       description = "Warm and fuzzy creation of XML documents";
       license = stdenv.lib.licenses.mit;
     }) {};
  "xml-hamlet" = callPackage
    ({ mkDerivation, base, containers, hspec, HUnit, parsec
     , shakespeare, template-haskell, text, xml-conduit
     }:
     mkDerivation {
       pname = "xml-hamlet";
       version = "0.5.0";
       sha256 = "18qmj14jzh379fni477h5hrzcy1x7dajfczx1s3w4wiyv2mc1kkv";
       libraryHaskellDepends = [
         base containers parsec shakespeare template-haskell text
         xml-conduit
       ];
       testHaskellDepends = [
         base containers hspec HUnit parsec shakespeare template-haskell
         text xml-conduit
       ];
       homepage = "http://www.yesodweb.com/";
       description = "Hamlet-style quasiquoter for XML content";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "xml-html-qq" = callPackage
    ({ mkDerivation, base, blaze-markup, conduit, data-default, doctest
     , from-sum, Glob, heterocephalus, html-conduit, resourcet, tasty
     , tasty-hunit, template-haskell, text, th-lift, th-lift-instances
     , xml-conduit
     }:
     mkDerivation {
       pname = "xml-html-qq";
       version = "0.1.0.1";
       sha256 = "0ni354ihiaax7dlghq0qsili0sqy4z9vc3a75i24z2m59hgvnbhs";
       libraryHaskellDepends = [
         base blaze-markup conduit data-default from-sum heterocephalus
         html-conduit resourcet template-haskell text th-lift
         th-lift-instances xml-conduit
       ];
       testHaskellDepends = [
         base doctest Glob tasty tasty-hunit text xml-conduit
       ];
       homepage = "https://github.com/cdepillabout/xml-html-qq";
       description = "Quasi-quoters for XML and HTML Documents";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "xml-indexed-cursor" = callPackage
    ({ mkDerivation, base, bytestring, containers, data-default
     , doctest, Glob, tasty, tasty-hunit, text, xml-conduit
     }:
     mkDerivation {
       pname = "xml-indexed-cursor";
       version = "0.1.1.0";
       sha256 = "0x6slq1av9id5ph7ysg0g467knkcbvp0g0jr7x8w334ffgy25mj6";
       libraryHaskellDepends = [
         base bytestring containers data-default text xml-conduit
       ];
       testHaskellDepends = [
         base bytestring data-default doctest Glob tasty tasty-hunit text
         xml-conduit
       ];
       homepage = "https://github.com/cdepillabout/xml-indexed-cursor";
       description = "Indexed XML cursors similar to 'Text.XML.Cursor' from xml-conduit";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "xml-isogen" = callPackage
    ({ mkDerivation, base, data-default, deepseq, dom-parser
     , generic-arbitrary, hspec, lens, mtl, QuickCheck
     , quickcheck-instances, semigroups, template-haskell, text
     , xml-conduit, xml-conduit-writer
     }:
     mkDerivation {
       pname = "xml-isogen";
       version = "0.3.0";
       sha256 = "05qa83jzmfqa5yhzgp3n3bxi0dvyy9xdfgq1ymi0wa6xnmxjv0cz";
       libraryHaskellDepends = [
         base deepseq dom-parser lens mtl QuickCheck semigroups
         template-haskell text xml-conduit xml-conduit-writer
       ];
       testHaskellDepends = [
         base data-default deepseq dom-parser generic-arbitrary hspec
         QuickCheck quickcheck-instances semigroups xml-conduit
         xml-conduit-writer
       ];
       homepage = "https://github.com/typeable/xml-isogen";
       description = "Generate XML-isomorphic types";
       license = stdenv.lib.licenses.mit;
     }) {};
  "xml-lens" = callPackage
    ({ mkDerivation, base, case-insensitive, containers, lens, text
     , xml-conduit
     }:
     mkDerivation {
       pname = "xml-lens";
       version = "0.1.6.3";
       sha256 = "1s5ivi3caz56g5yyg3pharshs3wcygcssjx1sm9aw4mv3ylz3msd";
       revision = "1";
       editedCabalFile = "1fbk4wv7zr10wsh8a0svd799im64fybnlb09rjpfl2pvb6i6h1qs";
       libraryHaskellDepends = [
         base case-insensitive containers lens text xml-conduit
       ];
       homepage = "https://github.com/fumieval/xml-lens";
       description = "Lenses, traversals, and prisms for xml-conduit";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "xml-picklers" = callPackage
    ({ mkDerivation, base, Cabal, containers, QuickCheck, tasty
     , tasty-hunit, tasty-quickcheck, text, xml-types
     }:
     mkDerivation {
       pname = "xml-picklers";
       version = "0.3.6";
       sha256 = "196iy4z58x58bjk5jy4fpmn8zhiramlyca4rd732i8j3jp6h5f6i";
       libraryHaskellDepends = [ base containers text xml-types ];
       testHaskellDepends = [
         base Cabal QuickCheck tasty tasty-hunit tasty-quickcheck text
         xml-types
       ];
       doCheck = false;
       description = "XML picklers based on xml-types, ported from hexpat-pickle";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "xml-to-json" = callPackage
    ({ mkDerivation, aeson, base, bytestring, containers, curl
     , hashable, hxt, hxt-curl, hxt-expat, hxt-tagsoup, regex-posix
     , tagsoup, text, unordered-containers, vector
     }:
     mkDerivation {
       pname = "xml-to-json";
       version = "2.0.1";
       sha256 = "0brfdlarr4yyfsfawkfjdbk4z3lvi9ihkhvqh5ws2ll0h80ja6md";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         aeson base bytestring containers curl hashable hxt hxt-curl
         hxt-expat hxt-tagsoup regex-posix tagsoup text unordered-containers
         vector
       ];
       executableHaskellDepends = [ base ];
       homepage = "https://github.com/sinelaw/xml-to-json";
       description = "Library and command line tool for converting XML files to json";
       license = stdenv.lib.licenses.mit;
     }) {};
  "xml-to-json-fast" = callPackage
    ({ mkDerivation, base, directory, process, tagsoup, text }:
     mkDerivation {
       pname = "xml-to-json-fast";
       version = "2.0.0";
       sha256 = "0gsn8wdiwmvr7nvxbfj9vpzlxwdh8m9lprx2hxnkrnslmbhjz1fx";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [ base tagsoup text ];
       executableHaskellDepends = [ base directory process ];
       homepage = "https://github.com/sinelaw/xml-to-json-fast";
       description = "Fast, light converter of xml to json capable of handling huge xml files";
       license = stdenv.lib.licenses.mit;
     }) {};
  "xml-types" = callPackage
    ({ mkDerivation, base, deepseq, text }:
     mkDerivation {
       pname = "xml-types";
       version = "0.3.6";
       sha256 = "1jgqxsa9p2q3h6nymbfmvhldqrqlwrhrzmwadlyc0li50x0d8dwr";
       libraryHaskellDepends = [ base deepseq text ];
       homepage = "https://john-millikin.com/software/haskell-xml/";
       description = "Basic types for representing XML";
       license = stdenv.lib.licenses.mit;
     }) {};
  "xmlbf" = callPackage
    ({ mkDerivation, base, bytestring, containers, QuickCheck
     , quickcheck-instances, tasty, tasty-hunit, tasty-quickcheck, text
     , transformers, unordered-containers
     }:
     mkDerivation {
       pname = "xmlbf";
       version = "0.4.1";
       sha256 = "0xfw9z1l3ja4qq0lj9i2n81fdh43ggprsy8rm71pcdacnpl056hq";
       libraryHaskellDepends = [
         base bytestring containers text transformers unordered-containers
       ];
       testHaskellDepends = [
         base bytestring QuickCheck quickcheck-instances tasty tasty-hunit
         tasty-quickcheck text transformers unordered-containers
       ];
       homepage = "https://gitlab.com/k0001/xmlbf";
       description = "XML back and forth! Parser, renderer, ToXml, FromXml, fixpoints";
       license = stdenv.lib.licenses.asl20;
     }) {};
  "xmlbf-xeno" = callPackage
    ({ mkDerivation, base, bytestring, html-entities, QuickCheck
     , quickcheck-instances, tasty, tasty-hunit, tasty-quickcheck, text
     , unordered-containers, xeno, xmlbf
     }:
     mkDerivation {
       pname = "xmlbf-xeno";
       version = "0.1.1";
       sha256 = "0cnxcw1sh92ljcpla2j7pg0md8yj7j48jgjlsn0f9ha0j90lw73c";
       libraryHaskellDepends = [
         base bytestring html-entities text unordered-containers xeno xmlbf
       ];
       testHaskellDepends = [
         base bytestring QuickCheck quickcheck-instances tasty tasty-hunit
         tasty-quickcheck text unordered-containers xmlbf
       ];
       homepage = "https://gitlab.com/k0001/xmlbf";
       description = "xeno backend support for the xmlbf library";
       license = stdenv.lib.licenses.asl20;
     }) {};
  "xmlgen" = callPackage
    ({ mkDerivation, base, blaze-builder, bytestring, containers
     , criterion, filepath, HUnit, hxt, mtl, process, QuickCheck, text
     , unix
     }:
     mkDerivation {
       pname = "xmlgen";
       version = "0.6.2.2";
       sha256 = "1milbbr2iqwckqbq6i9sypinvs4hs7mzqn274x350psjfy6ajvwj";
       libraryHaskellDepends = [
         base blaze-builder bytestring containers mtl text
       ];
       testHaskellDepends = [
         base bytestring containers filepath HUnit hxt process QuickCheck
         text unix
       ];
       benchmarkHaskellDepends = [ base bytestring criterion text ];
       doCheck = false;
       description = "Fast XML generation library";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "xss-sanitize" = callPackage
    ({ mkDerivation, attoparsec, base, containers, css-text, hspec
     , HUnit, network-uri, tagsoup, text, utf8-string
     }:
     mkDerivation {
       pname = "xss-sanitize";
       version = "0.3.6";
       sha256 = "1d72s3a6520iwwc1wbn9v2znqgbw6a5wwzb23iq8ny9ccnjyx1dk";
       libraryHaskellDepends = [
         attoparsec base containers css-text network-uri tagsoup text
         utf8-string
       ];
       testHaskellDepends = [
         attoparsec base containers css-text hspec HUnit network-uri tagsoup
         text utf8-string
       ];
       homepage = "https://github.com/yesodweb/haskell-xss-sanitize#readme";
       description = "sanitize untrusted HTML to prevent XSS attacks";
       license = stdenv.lib.licenses.bsd2;
     }) {};
  "xxhash-ffi" = callPackage
    ({ mkDerivation, base, bytestring, hspec, QuickCheck }:
     mkDerivation {
       pname = "xxhash-ffi";
       version = "0.2.0.0";
       sha256 = "0srfz65dhn8lkxp1b4hiw385zg8kn5n83mnxm642h7jkakm66bpw";
       libraryHaskellDepends = [ base bytestring ];
       testHaskellDepends = [ base bytestring hspec QuickCheck ];
       homepage = "https://github.com/haskell-haskey/xxhash-ffi#readme";
       description = "Bindings to the C implementation the xxHash algorithm";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "yaml" = callPackage
    ({ mkDerivation, aeson, attoparsec, base, base-compat, bytestring
     , conduit, containers, directory, filepath, hspec, HUnit, mockery
     , resourcet, scientific, semigroups, template-haskell, temporary
     , text, transformers, unordered-containers, vector
     }:
     mkDerivation {
       pname = "yaml";
       version = "0.8.32";
       sha256 = "0cbsyh4ilvjzq1q7pxls43k6pdqxg1l85xzibcwpbvmlvrizh86w";
       configureFlags = [ "-f-system-libyaml" ];
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         aeson attoparsec base bytestring conduit containers directory
         filepath resourcet scientific semigroups template-haskell text
         transformers unordered-containers vector
       ];
       testHaskellDepends = [
         aeson attoparsec base base-compat bytestring conduit containers
         directory filepath hspec HUnit mockery resourcet scientific
         semigroups template-haskell temporary text transformers
         unordered-containers vector
       ];
       homepage = "https://github.com/snoyberg/yaml#readme";
       description = "Support for parsing and rendering YAML documents";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "yes-precure5-command" = callPackage
    ({ mkDerivation, base, Cabal, containers, hspec, mtl, parsec
     , QuickCheck, random
     }:
     mkDerivation {
       pname = "yes-precure5-command";
       version = "5.5.3";
       sha256 = "0zmgl3qdpdvwcs842l6ymy3kh3axb0qim8nda22a28qrv3fg5wi7";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         base Cabal containers mtl parsec random
       ];
       executableHaskellDepends = [
         base Cabal containers mtl parsec random
       ];
       testHaskellDepends = [ base containers hspec QuickCheck ];
       homepage = "https://github.com/igrep/yes-precure5-command/";
       description = "Extended yes command to reproduce phrases in Yes! Precure 5";
       license = stdenv.lib.licenses.mit;
     }) {};
  "yeshql" = callPackage
    ({ mkDerivation, base, yeshql-core, yeshql-hdbc }:
     mkDerivation {
       pname = "yeshql";
       version = "4.1.0.1";
       sha256 = "1dlxq8vp18fagfymlzqa4j0ns174s31d7p1vi54wz0b55ml91if4";
       libraryHaskellDepends = [ base yeshql-core yeshql-hdbc ];
       doCheck = false;
       homepage = "https://github.com/tdammers/yeshql";
       description = "YesQL-style SQL database abstraction (legacy compatibility wrapper)";
       license = stdenv.lib.licenses.mit;
     }) {};
  "yeshql-core" = callPackage
    ({ mkDerivation, base, containers, convertible, filepath, parsec
     , stm, tasty, tasty-hunit, tasty-quickcheck, template-haskell
     }:
     mkDerivation {
       pname = "yeshql-core";
       version = "4.1.0.2";
       sha256 = "1zhpccdqy8y5ynyn2ax7p9l2lvz573f559iqkip26ijq84pjmny0";
       libraryHaskellDepends = [
         base containers convertible filepath parsec template-haskell
       ];
       testHaskellDepends = [
         base containers stm tasty tasty-hunit tasty-quickcheck
       ];
       doCheck = false;
       homepage = "https://github.com/tdammers/yeshql";
       description = "YesQL-style SQL database abstraction (core)";
       license = stdenv.lib.licenses.mit;
     }) {};
  "yeshql-hdbc" = callPackage
    ({ mkDerivation, base, containers, convertible, filepath, HDBC
     , parsec, stm, tasty, tasty-hunit, tasty-quickcheck
     , template-haskell, yeshql-core
     }:
     mkDerivation {
       pname = "yeshql-hdbc";
       version = "4.1.0.2";
       sha256 = "1p2j0fys7kdgb9882hiifnc1r4768c8jp7qy69ns1nbhd4f55b7l";
       libraryHaskellDepends = [
         base containers convertible filepath HDBC parsec template-haskell
         yeshql-core
       ];
       testHaskellDepends = [
         base containers HDBC stm tasty tasty-hunit tasty-quickcheck
       ];
       doCheck = false;
       homepage = "https://github.com/tdammers/yeshql";
       description = "YesQL-style SQL database abstraction (HDBC backend)";
       license = stdenv.lib.licenses.mit;
     }) {};
  "yesod" = callPackage
    ({ mkDerivation, aeson, base, blaze-html, blaze-markup, bytestring
     , conduit, data-default-class, directory, fast-logger, monad-logger
     , resourcet, semigroups, shakespeare, streaming-commons
     , template-haskell, text, transformers, unix, unordered-containers
     , wai, wai-extra, wai-logger, warp, yaml, yesod-core, yesod-form
     , yesod-persistent
     }:
     mkDerivation {
       pname = "yesod";
       version = "1.6.0";
       sha256 = "0wx77nbpzdh40p1bm527kimfj48vs9d2avpvvz2w42zi3pz2y94a";
       libraryHaskellDepends = [
         aeson base blaze-html blaze-markup bytestring conduit
         data-default-class directory fast-logger monad-logger resourcet
         semigroups shakespeare streaming-commons template-haskell text
         transformers unix unordered-containers wai wai-extra wai-logger
         warp yaml yesod-core yesod-form yesod-persistent
       ];
       homepage = "http://www.yesodweb.com/";
       description = "Creation of type-safe, RESTful web applications";
       license = stdenv.lib.licenses.mit;
     }) {};
  "yesod-alerts" = callPackage
    ({ mkDerivation, alerts, base, blaze-html, blaze-markup, safe, text
     , yesod-core
     }:
     mkDerivation {
       pname = "yesod-alerts";
       version = "0.1.2.0";
       sha256 = "0vqlkcb2q3wz6hp6ay6gj41vwlmq4x7flfbgq36ygnwwxjkwhllf";
       libraryHaskellDepends = [
         alerts base blaze-html blaze-markup safe text yesod-core
       ];
       homepage = "https://github.com/alx741/yesod-alerts#readme";
       description = "Alert messages for the Yesod framework";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "yesod-auth" = callPackage
    ({ mkDerivation, aeson, authenticate, base, base16-bytestring
     , base64-bytestring, binary, blaze-builder, blaze-html
     , blaze-markup, bytestring, conduit, conduit-extra, containers
     , cryptonite, data-default, email-validate, file-embed, http-client
     , http-client-tls, http-conduit, http-types, memory, network-uri
     , nonce, persistent, random, safe, shakespeare, template-haskell
     , text, time, transformers, unliftio, unliftio-core
     , unordered-containers, wai, yesod-core, yesod-form
     , yesod-persistent
     }:
     mkDerivation {
       pname = "yesod-auth";
       version = "1.6.5";
       sha256 = "1crpqcx8zynwmas4ja5yv1jg4xvcv0hw7h11d5m8vld4fcs9dpdr";
       libraryHaskellDepends = [
         aeson authenticate base base16-bytestring base64-bytestring binary
         blaze-builder blaze-html blaze-markup bytestring conduit
         conduit-extra containers cryptonite data-default email-validate
         file-embed http-client http-client-tls http-conduit http-types
         memory network-uri nonce persistent random safe shakespeare
         template-haskell text time transformers unliftio unliftio-core
         unordered-containers wai yesod-core yesod-form yesod-persistent
       ];
       homepage = "http://www.yesodweb.com/";
       description = "Authentication for Yesod";
       license = stdenv.lib.licenses.mit;
     }) {};
  "yesod-auth-fb" = callPackage
    ({ mkDerivation, aeson, base, bytestring, conduit, fb, http-conduit
     , resourcet, shakespeare, text, time, transformers, unliftio, wai
     , yesod-auth, yesod-core, yesod-fb
     }:
     mkDerivation {
       pname = "yesod-auth-fb";
       version = "1.9.1";
       sha256 = "1368hxic51vnilwp6dygc98yfclqi0vn1vwkxpvdd9vzy73kdj0i";
       libraryHaskellDepends = [
         aeson base bytestring conduit fb http-conduit resourcet shakespeare
         text time transformers unliftio wai yesod-auth yesod-core yesod-fb
       ];
       homepage = "https://github.com/psibi/yesod-auth-fb";
       description = "Authentication backend for Yesod using Facebook";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "yesod-auth-hashdb" = callPackage
    ({ mkDerivation, aeson, base, basic-prelude, bytestring, containers
     , hspec, http-conduit, http-types, monad-logger, network-uri
     , persistent, persistent-sqlite, resourcet, text
     , unordered-containers, wai-extra, yesod, yesod-auth, yesod-core
     , yesod-form, yesod-persistent, yesod-test
     }:
     mkDerivation {
       pname = "yesod-auth-hashdb";
       version = "1.7.1";
       sha256 = "1rfz2xanm6d70fx8ywh8j8py8003akzgi10s9n7syqm8kaj2fvqd";
       libraryHaskellDepends = [
         aeson base bytestring persistent text yesod-auth yesod-core
         yesod-form yesod-persistent
       ];
       testHaskellDepends = [
         aeson base basic-prelude bytestring containers hspec http-conduit
         http-types monad-logger network-uri persistent-sqlite resourcet
         text unordered-containers wai-extra yesod yesod-auth yesod-core
         yesod-test
       ];
       homepage = "https://github.com/paul-rouse/yesod-auth-hashdb";
       description = "Authentication plugin for Yesod";
       license = stdenv.lib.licenses.mit;
     }) {};
  "yesod-bin" = callPackage
    ({ mkDerivation, attoparsec, base, base64-bytestring, blaze-builder
     , bytestring, Cabal, conduit, conduit-extra, containers
     , data-default-class, directory, file-embed, filepath, fsnotify
     , http-client, http-client-tls, http-reverse-proxy, http-types
     , network, optparse-applicative, parsec, process, project-template
     , resourcet, say, shakespeare, split, stm, streaming-commons, tar
     , template-haskell, text, time, transformers, transformers-compat
     , unix-compat, unliftio, unordered-containers, wai, wai-extra, warp
     , warp-tls, yaml, zlib
     }:
     mkDerivation {
       pname = "yesod-bin";
       version = "1.6.0.3";
       sha256 = "1p5f6bl4gynm47m1xg1x1xh9nz913i83iprh2xd207359idjknz4";
       revision = "4";
       editedCabalFile = "1iw9m3z6m4n9dlwamf1kwr7pp2wpk6awf1m63zjkgw5j4vwxlcpg";
       isLibrary = false;
       isExecutable = true;
       executableHaskellDepends = [
         attoparsec base base64-bytestring blaze-builder bytestring Cabal
         conduit conduit-extra containers data-default-class directory
         file-embed filepath fsnotify http-client http-client-tls
         http-reverse-proxy http-types network optparse-applicative parsec
         process project-template resourcet say shakespeare split stm
         streaming-commons tar template-haskell text time transformers
         transformers-compat unix-compat unliftio unordered-containers wai
         wai-extra warp warp-tls yaml zlib
       ];
       doHaddock = false;
       homepage = "http://www.yesodweb.com/";
       description = "The yesod helper executable";
       license = stdenv.lib.licenses.mit;
     }) {};
  "yesod-core" = callPackage
    ({ mkDerivation, aeson, async, auto-update, base, blaze-html
     , blaze-markup, byteable, bytestring, case-insensitive, cereal
     , clientsession, conduit, conduit-extra, containers, cookie
     , deepseq, fast-logger, gauge, hspec, hspec-expectations
     , http-types, HUnit, monad-logger, mtl, network, parsec
     , path-pieces, primitive, random, resourcet, rio, shakespeare
     , streaming-commons, template-haskell, text, time, transformers
     , unix-compat, unliftio, unordered-containers, vector, wai
     , wai-extra, wai-logger, warp, word8
     }:
     mkDerivation {
       pname = "yesod-core";
       version = "1.6.9";
       sha256 = "0jwfxcp0hdp1lw63gcqpqbvdrzifyds3x42wk0m5wxy7hj0x0r6a";
       libraryHaskellDepends = [
         aeson auto-update base blaze-html blaze-markup byteable bytestring
         case-insensitive cereal clientsession conduit conduit-extra
         containers cookie deepseq fast-logger http-types monad-logger mtl
         parsec path-pieces primitive random resourcet rio shakespeare
         template-haskell text time transformers unix-compat unliftio
         unordered-containers vector wai wai-extra wai-logger warp word8
       ];
       testHaskellDepends = [
         async base bytestring clientsession conduit conduit-extra
         containers cookie hspec hspec-expectations http-types HUnit network
         path-pieces random resourcet shakespeare streaming-commons
         template-haskell text transformers unliftio wai wai-extra warp
       ];
       benchmarkHaskellDepends = [
         base blaze-html bytestring gauge shakespeare text
       ];
       doCheck = false;
       homepage = "http://www.yesodweb.com/";
       description = "Creation of type-safe, RESTful web applications";
       license = stdenv.lib.licenses.mit;
     }) {};
  "yesod-csp" = callPackage
    ({ mkDerivation, attoparsec, base, case-insensitive, hspec
     , mono-traversable, network-uri, semigroups, syb, template-haskell
     , text, wai, yesod, yesod-core, yesod-test
     }:
     mkDerivation {
       pname = "yesod-csp";
       version = "0.2.4.0";
       sha256 = "19cjmjg2byyswdcxa9llqarclzi6jslbd0yxxkn8l3kdgn2k2pg0";
       libraryHaskellDepends = [
         attoparsec base case-insensitive mono-traversable network-uri
         semigroups syb template-haskell text wai yesod yesod-core
       ];
       testHaskellDepends = [
         attoparsec base hspec network-uri semigroups template-haskell yesod
         yesod-test
       ];
       description = "Add CSP headers to Yesod apps";
       license = stdenv.lib.licenses.mit;
     }) {};
  "yesod-eventsource" = callPackage
    ({ mkDerivation, base, blaze-builder, conduit, transformers, wai
     , wai-eventsource, wai-extra, yesod-core
     }:
     mkDerivation {
       pname = "yesod-eventsource";
       version = "1.6.0";
       sha256 = "12s11q6zga37xyynll7b30gpv02k7jmmzfassshci02y9niyrkkg";
       libraryHaskellDepends = [
         base blaze-builder conduit transformers wai wai-eventsource
         wai-extra yesod-core
       ];
       homepage = "http://www.yesodweb.com/";
       description = "Server-sent events support for Yesod apps";
       license = stdenv.lib.licenses.mit;
     }) {};
  "yesod-fb" = callPackage
    ({ mkDerivation, aeson, base, bytestring, conduit, crypto-api, fb
     , http-client-tls, http-conduit, text, wai, yesod-core
     }:
     mkDerivation {
       pname = "yesod-fb";
       version = "0.5.0";
       sha256 = "1ns113f2ylim1b3r2dgwgc65yfy6qxjh9miqfz2fx29fq4250dyy";
       libraryHaskellDepends = [
         aeson base bytestring conduit crypto-api fb http-client-tls
         http-conduit text wai yesod-core
       ];
       homepage = "https://github.com/psibi/yesod-fb";
       description = "Useful glue functions between the fb library and Yesod";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "yesod-form" = callPackage
    ({ mkDerivation, aeson, attoparsec, base, blaze-builder, blaze-html
     , blaze-markup, byteable, bytestring, containers, data-default
     , email-validate, hspec, network-uri, persistent, resourcet
     , semigroups, shakespeare, text, time, transformers, wai
     , xss-sanitize, yesod-core, yesod-persistent
     }:
     mkDerivation {
       pname = "yesod-form";
       version = "1.6.3";
       sha256 = "15wvgrkqp57wrh8xv1ix86navy6llvagwp393w4b6azv758dims0";
       libraryHaskellDepends = [
         aeson attoparsec base blaze-builder blaze-html blaze-markup
         byteable bytestring containers data-default email-validate
         network-uri persistent resourcet semigroups shakespeare text time
         transformers wai xss-sanitize yesod-core yesod-persistent
       ];
       testHaskellDepends = [ base hspec text time ];
       homepage = "http://www.yesodweb.com/";
       description = "Form handling support for Yesod Web Framework";
       license = stdenv.lib.licenses.mit;
     }) {};
  "yesod-form-bootstrap4" = callPackage
    ({ mkDerivation, base, text, yesod-core, yesod-form }:
     mkDerivation {
       pname = "yesod-form-bootstrap4";
       version = "1.0.2";
       sha256 = "0y68k6xnb8i7wa2c1c0msc3p69azs4z0iwjdgkr0kaqzahw56scq";
       libraryHaskellDepends = [ base text yesod-core yesod-form ];
       homepage = "https://github.com/ncaq/yesod-form-bootstrap4#readme";
       description = "renderBootstrap4";
       license = stdenv.lib.licenses.mit;
     }) {};
  "yesod-gitrepo" = callPackage
    ({ mkDerivation, base, directory, http-types, process, temporary
     , text, unliftio, wai, yesod-core
     }:
     mkDerivation {
       pname = "yesod-gitrepo";
       version = "0.3.0";
       sha256 = "07lqhih9jcb5rdjdkjsrg7s9l5f3y9lrsxa1rc1c8gxw0v2nfg5h";
       libraryHaskellDepends = [
         base directory http-types process temporary text unliftio wai
         yesod-core
       ];
       homepage = "https://github.com/snoyberg/yesod-gitrepo#readme";
       description = "Host content provided by a Git repo";
       license = stdenv.lib.licenses.mit;
     }) {};
  "yesod-gitrev" = callPackage
    ({ mkDerivation, aeson, base, gitrev, template-haskell, yesod-core
     }:
     mkDerivation {
       pname = "yesod-gitrev";
       version = "0.2.0.0";
       sha256 = "0lp0zraj6015bl8pcgi9b9w4d1yf0lb4awy25jv5xrcrc173g7yz";
       revision = "1";
       editedCabalFile = "1b0df34lz569gnwbbz0p20dml6bi2nbva9wfdsxyvva0dhvxjaz5";
       libraryHaskellDepends = [
         aeson base gitrev template-haskell yesod-core
       ];
       homepage = "https://github.com/DanBurton/yesod-gitrev";
       description = "A subsite for displaying git information";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "yesod-newsfeed" = callPackage
    ({ mkDerivation, base, blaze-html, blaze-markup, bytestring
     , containers, shakespeare, text, time, xml-conduit, yesod-core
     }:
     mkDerivation {
       pname = "yesod-newsfeed";
       version = "1.6.1.0";
       sha256 = "05cnyz9g76hnfmhqfav16mghr0x42fqnz1zi0ki4bjkl5mcrf2vd";
       libraryHaskellDepends = [
         base blaze-html blaze-markup bytestring containers shakespeare text
         time xml-conduit yesod-core
       ];
       homepage = "http://www.yesodweb.com/";
       description = "Helper functions and data types for producing News feeds";
       license = stdenv.lib.licenses.mit;
     }) {};
  "yesod-paginator" = callPackage
    ({ mkDerivation, base, blaze-markup, doctest, hspec, path-pieces
     , persistent, safe, text, transformers, uri-encode, yesod-core
     , yesod-test
     }:
     mkDerivation {
       pname = "yesod-paginator";
       version = "1.1.0.1";
       sha256 = "140b4cikshl5f229awnp5jcbnyln0bmzlqjfcwxzxssxwnviy93f";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         base blaze-markup path-pieces persistent safe text transformers
         uri-encode yesod-core
       ];
       testHaskellDepends = [ base doctest hspec yesod-core yesod-test ];
       homepage = "http://github.com/pbrisbin/yesod-paginator";
       description = "A pagination approach for yesod";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "yesod-persistent" = callPackage
    ({ mkDerivation, base, blaze-builder, conduit, hspec, persistent
     , persistent-sqlite, persistent-template, resource-pool, resourcet
     , text, transformers, wai-extra, yesod-core
     }:
     mkDerivation {
       pname = "yesod-persistent";
       version = "1.6.0.1";
       sha256 = "0kxxm43d64lp4p7kmmpc9c0rany9nblf5dd1424m8wg3105cr2kl";
       libraryHaskellDepends = [
         base blaze-builder conduit persistent persistent-template
         resource-pool resourcet transformers yesod-core
       ];
       testHaskellDepends = [
         base blaze-builder conduit hspec persistent persistent-sqlite text
         wai-extra yesod-core
       ];
       homepage = "http://www.yesodweb.com/";
       description = "Some helpers for using Persistent from Yesod";
       license = stdenv.lib.licenses.mit;
     }) {};
  "yesod-recaptcha2" = callPackage
    ({ mkDerivation, base, classy-prelude-yesod, http-conduit
     , yesod-auth
     }:
     mkDerivation {
       pname = "yesod-recaptcha2";
       version = "0.2.4";
       sha256 = "1aw104i2v9m6dc5z5iqzihjfybfxg90l0rj0pazb672qzp9yqj18";
       libraryHaskellDepends = [
         base classy-prelude-yesod http-conduit yesod-auth
       ];
       homepage = "https://github.com/ncaq/yesod-recaptcha2#readme";
       description = "yesod recaptcha2";
       license = stdenv.lib.licenses.mit;
     }) {};
  "yesod-sitemap" = callPackage
    ({ mkDerivation, base, conduit, containers, data-default, text
     , time, xml-conduit, xml-types, yesod-core
     }:
     mkDerivation {
       pname = "yesod-sitemap";
       version = "1.6.0";
       sha256 = "1mnv658z36ja1avig0g4pirb2i9vqriycykhfky74xymvjmhdyp5";
       libraryHaskellDepends = [
         base conduit containers data-default text time xml-conduit
         xml-types yesod-core
       ];
       homepage = "http://www.yesodweb.com/";
       description = "Generate XML sitemaps";
       license = stdenv.lib.licenses.mit;
     }) {};
  "yesod-static" = callPackage
    ({ mkDerivation, async, attoparsec, base, base64-bytestring
     , blaze-builder, bytestring, conduit, containers, cryptonite
     , cryptonite-conduit, css-text, data-default, directory, file-embed
     , filepath, hashable, hjsmin, hspec, http-types, HUnit, memory
     , mime-types, process, template-haskell, text, transformers
     , unix-compat, unordered-containers, wai, wai-app-static, wai-extra
     , yesod-core, yesod-test
     }:
     mkDerivation {
       pname = "yesod-static";
       version = "1.6.0.1";
       sha256 = "1jd0ryfr2vyrwasyvbqmc6j4ngv1lgz78w427f169l7gyl1firxb";
       libraryHaskellDepends = [
         async attoparsec base base64-bytestring blaze-builder bytestring
         conduit containers cryptonite cryptonite-conduit css-text
         data-default directory file-embed filepath hashable hjsmin
         http-types memory mime-types process template-haskell text
         transformers unix-compat unordered-containers wai wai-app-static
         yesod-core
       ];
       testHaskellDepends = [
         async base base64-bytestring bytestring conduit containers
         cryptonite cryptonite-conduit data-default directory file-embed
         filepath hjsmin hspec http-types HUnit memory mime-types process
         template-haskell text transformers unix-compat unordered-containers
         wai wai-app-static wai-extra yesod-core yesod-test
       ];
       homepage = "http://www.yesodweb.com/";
       description = "Static file serving subsite for Yesod Web Framework";
       license = stdenv.lib.licenses.mit;
     }) {};
  "yesod-test" = callPackage
    ({ mkDerivation, attoparsec, base, blaze-builder, blaze-html
     , bytestring, case-insensitive, conduit, containers, cookie, hspec
     , hspec-core, html-conduit, http-types, HUnit, network, pretty-show
     , semigroups, text, time, transformers, unliftio, wai, wai-extra
     , xml-conduit, xml-types, yesod-core, yesod-form
     }:
     mkDerivation {
       pname = "yesod-test";
       version = "1.6.5.1";
       sha256 = "080m46nbjblna2b9gq8j4ngqsv0r5ww06p1v8cj3ia1qiqgjygsj";
       libraryHaskellDepends = [
         attoparsec base blaze-builder blaze-html bytestring
         case-insensitive conduit containers cookie hspec-core html-conduit
         http-types HUnit network pretty-show semigroups text time
         transformers wai wai-extra xml-conduit xml-types yesod-core
       ];
       testHaskellDepends = [
         base bytestring containers hspec html-conduit http-types HUnit text
         unliftio wai wai-extra xml-conduit yesod-core yesod-form
       ];
       homepage = "http://www.yesodweb.com";
       description = "integration testing for WAI/Yesod Applications";
       license = stdenv.lib.licenses.mit;
     }) {};
  "yesod-text-markdown" = callPackage
    ({ mkDerivation, aeson, base, markdown, persistent, shakespeare
     , text, yesod-core, yesod-form, yesod-persistent
     }:
     mkDerivation {
       pname = "yesod-text-markdown";
       version = "0.1.10";
       sha256 = "1p3xcghlazxdqwgs4d1gsbmpjpmhmx8dcxjhha5hxww4ilyqpviw";
       libraryHaskellDepends = [
         aeson base markdown persistent shakespeare text yesod-core
         yesod-form yesod-persistent
       ];
       description = "Yesod support for Text.Markdown.";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "yesod-websockets" = callPackage
    ({ mkDerivation, base, conduit, mtl, transformers, unliftio
     , wai-websockets, websockets, yesod-core
     }:
     mkDerivation {
       pname = "yesod-websockets";
       version = "0.3.0.1";
       sha256 = "1k41qglb5fdzykyfpml4w74cg2m95ggm2jrnqy7bkj2l0fm4gjc6";
       libraryHaskellDepends = [
         base conduit mtl transformers unliftio wai-websockets websockets
         yesod-core
       ];
       homepage = "https://github.com/yesodweb/yesod";
       description = "WebSockets support for Yesod";
       license = stdenv.lib.licenses.mit;
     }) {};
  "yi-language" = callPackage
    ({ mkDerivation, alex, array, base, binary, containers
     , data-default, hashable, microlens-platform, oo-prototypes
     , pointedlist, regex-base, regex-tdfa, tasty, tasty-hspec
     , tasty-quickcheck, template-haskell, transformers-base
     , unordered-containers
     }:
     mkDerivation {
       pname = "yi-language";
       version = "0.17.1";
       sha256 = "17mnjfhxr6vhpfx7l4zg606f2vffjr39ga4j5qmnp7cf4y5n5vja";
       libraryHaskellDepends = [
         array base binary containers data-default hashable
         microlens-platform oo-prototypes pointedlist regex-base regex-tdfa
         template-haskell transformers-base unordered-containers
       ];
       libraryToolDepends = [ alex ];
       testHaskellDepends = [
         array base binary containers data-default hashable
         microlens-platform pointedlist regex-base regex-tdfa tasty
         tasty-hspec tasty-quickcheck template-haskell transformers-base
         unordered-containers
       ];
       homepage = "https://github.com/yi-editor/yi#readme";
       description = "Collection of language-related Yi libraries";
       license = stdenv.lib.licenses.gpl2;
     }) {};
  "yi-rope" = callPackage
    ({ mkDerivation, base, binary, bytestring, criterion, deepseq
     , fingertree, hspec, QuickCheck, quickcheck-instances, text
     }:
     mkDerivation {
       pname = "yi-rope";
       version = "0.11";
       sha256 = "020hnyhl2g313ch6dng9lq3xdjy3ssnb069wiwzbpg816mlii4ws";
       libraryHaskellDepends = [
         base binary bytestring deepseq fingertree text
       ];
       testHaskellDepends = [
         base hspec QuickCheck quickcheck-instances text
       ];
       benchmarkHaskellDepends = [ base criterion deepseq text ];
       description = "A rope data structure used by Yi";
       license = stdenv.lib.licenses.gpl2;
     }) {};
  "yjtools" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "yjtools";
       version = "0.9.18";
       sha256 = "13zbq37p2prbyxq1wply7qqpc2wwsic78wzcgbc430nfrrpiq4lv";
       libraryHaskellDepends = [ base ];
       homepage = "http://homepage3.nifty.com/salamander/second/projects/yjtools/index.xhtml";
       description = "some tools for Monad, List, Tuple and so on";
       license = "LGPL";
     }) {};
  "yoga" = callPackage
    ({ mkDerivation, base, bindings-DSL, ieee754 }:
     mkDerivation {
       pname = "yoga";
       version = "0.0.0.5";
       sha256 = "14az05jh60ncsyw859b9v9m7lb5xcgsv2478pa3if93vxy1h40ih";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [ base bindings-DSL ieee754 ];
       description = "Bindings to Facebook's Yoga layout library";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "youtube" = callPackage
    ({ mkDerivation, base, bytestring, process, utility-ht }:
     mkDerivation {
       pname = "youtube";
       version = "0.2.1.1";
       sha256 = "098fhkyw70sxb58bj9hbshg12j57s23qrv9r1r7m13rxbxw6lf9f";
       isLibrary = false;
       isExecutable = true;
       enableSeparateDataOutput = true;
       executableHaskellDepends = [ base bytestring process utility-ht ];
       doHaddock = false;
       description = "Upload video to YouTube via YouTube API";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "zero" = callPackage
    ({ mkDerivation, base, semigroups }:
     mkDerivation {
       pname = "zero";
       version = "0.1.4";
       sha256 = "1mfmc7na5q2lrlz168hwzdjpmaqdqqpdlsfyk44v9f3kjqnwdk9q";
       libraryHaskellDepends = [ base semigroups ];
       homepage = "https://github.com/phaazon/zero";
       description = "Semigroups with absorption";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "zeromq4-haskell" = callPackage
    ({ mkDerivation, async, base, bytestring, containers, exceptions
     , monad-control, QuickCheck, semigroups, tasty, tasty-hunit
     , tasty-quickcheck, transformers, transformers-base, zeromq
     }:
     mkDerivation {
       pname = "zeromq4-haskell";
       version = "0.7.0";
       sha256 = "17q756mldxx9b8a2nx9lvjrgvbmgjbnp896sqcgnijq7wr751m2q";
       libraryHaskellDepends = [
         async base bytestring containers exceptions monad-control
         semigroups transformers transformers-base
       ];
       libraryPkgconfigDepends = [ zeromq ];
       testHaskellDepends = [
         async base bytestring QuickCheck tasty tasty-hunit tasty-quickcheck
       ];
       homepage = "https://gitlab.com/twittner/zeromq-haskell/";
       description = "Bindings to ZeroMQ 4.x";
       license = stdenv.lib.licenses.mit;
     }) {inherit (pkgs) zeromq;};
  "zeromq4-patterns" = callPackage
    ({ mkDerivation, async, base, binary, bytestring, exceptions
     , QuickCheck, stm, test-framework, test-framework-quickcheck2
     , zeromq4-haskell
     }:
     mkDerivation {
       pname = "zeromq4-patterns";
       version = "0.3.1.0";
       sha256 = "1n9yndiw0z2asslkx2nlx56w3qhb55p7ih03j52889m2f8maiwvl";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         async base binary bytestring exceptions stm zeromq4-haskell
       ];
       executableHaskellDepends = [ base ];
       testHaskellDepends = [
         async base binary bytestring QuickCheck test-framework
         test-framework-quickcheck2
       ];
       doCheck = false;
       homepage = "https://github.com/hverr/zeromq4-patterns#readme";
       description = "Haskell implementation of several ZeroMQ patterns";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "zim-parser" = callPackage
    ({ mkDerivation, array, base, base-compat, binary, binary-conduit
     , bytestring, conduit, conduit-extra, hspec, lzma
     }:
     mkDerivation {
       pname = "zim-parser";
       version = "0.2.1.0";
       sha256 = "12apl53kj1lzfkw566z3j5fir8iab25s2pkajb3dmq2lbhwnlzxj";
       libraryHaskellDepends = [
         array base base-compat binary binary-conduit bytestring conduit
         conduit-extra lzma
       ];
       testHaskellDepends = [
         array base base-compat binary binary-conduit bytestring conduit
         conduit-extra hspec lzma
       ];
       homepage = "https://github.com/robbinch/zim-parser#readme";
       description = "Read and parse ZIM files";
       license = stdenv.lib.licenses.gpl3;
     }) {};
  "zip" = callPackage
    ({ mkDerivation, base, bytestring, bzlib-conduit, case-insensitive
     , cereal, conduit, conduit-extra, containers, digest, directory
     , dlist, exceptions, filepath, hspec, monad-control, mtl
     , QuickCheck, resourcet, temporary, text, time, transformers
     , transformers-base
     }:
     mkDerivation {
       pname = "zip";
       version = "1.1.0";
       sha256 = "1p6r4rmagq2x44wizpxk3844vh5nv2k51wl3h6vx5xnf5im2v535";
       libraryHaskellDepends = [
         base bytestring bzlib-conduit case-insensitive cereal conduit
         conduit-extra containers digest directory dlist exceptions filepath
         monad-control mtl resourcet text time transformers
         transformers-base
       ];
       testHaskellDepends = [
         base bytestring conduit containers directory dlist exceptions
         filepath hspec QuickCheck temporary text time transformers
       ];
       doCheck = false;
       homepage = "https://github.com/mrkkrp/zip";
       description = "Operations on zip archives";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "zip-archive" = callPackage
    ({ mkDerivation, array, base, binary, bytestring, Cabal, containers
     , digest, directory, filepath, HUnit, mtl, pretty, process
     , temporary, text, time, unix, unzip, zlib
     }:
     mkDerivation {
       pname = "zip-archive";
       version = "0.3.3";
       sha256 = "0kf8xyac168bng8a0za2jwrbss7a4ralvci9g54hnvl0gkkxx2lq";
       isLibrary = true;
       isExecutable = true;
       setupHaskellDepends = [ base Cabal ];
       libraryHaskellDepends = [
         array base binary bytestring containers digest directory filepath
         mtl pretty text time unix zlib
       ];
       testHaskellDepends = [
         base bytestring directory filepath HUnit process temporary time
         unix
       ];
       testToolDepends = [ unzip ];
       homepage = "http://github.com/jgm/zip-archive";
       description = "Library for creating and modifying zip archives";
       license = stdenv.lib.licenses.bsd3;
     }) {inherit (pkgs) unzip;};
  "zip-stream" = callPackage
    ({ mkDerivation, base, binary, binary-conduit, bytestring, conduit
     , conduit-extra, digest, directory, exceptions, filepath, mtl
     , primitive, resourcet, time, transformers, transformers-base, zlib
     }:
     mkDerivation {
       pname = "zip-stream";
       version = "0.1.1";
       sha256 = "1wnjj1sp5y24iqd1ffmz6lmsvh0527v05zhzygqaf65j8sny535q";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         base binary binary-conduit bytestring conduit conduit-extra digest
         exceptions mtl primitive resourcet time transformers-base zlib
       ];
       executableHaskellDepends = [
         base bytestring conduit conduit-extra directory filepath resourcet
         time transformers
       ];
       description = "ZIP archive streaming using conduits";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "zippers" = callPackage
    ({ mkDerivation, base, Cabal, cabal-doctest, criterion, doctest
     , lens, profunctors, semigroupoids, semigroups
     }:
     mkDerivation {
       pname = "zippers";
       version = "0.2.5";
       sha256 = "11f0jx0dbm2y9y5hnpakdvk9fmsm3awr2lcxp46dyma6arr7f4id";
       revision = "3";
       editedCabalFile = "0y0klc2jaj611cjvmqi95dyj9yvribf9xhibn1andrz5rs6ysz3p";
       setupHaskellDepends = [ base Cabal cabal-doctest ];
       libraryHaskellDepends = [
         base lens profunctors semigroupoids semigroups
       ];
       testHaskellDepends = [ base doctest ];
       benchmarkHaskellDepends = [ base criterion lens ];
       homepage = "http://github.com/ekmett/zippers/";
       description = "Traversal based zippers";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "zlib" = callPackage
    ({ mkDerivation, base, bytestring, zlib }:
     mkDerivation {
       pname = "zlib";
       version = "0.6.2";
       sha256 = "1vbzf0awb6zb456xf48za1kl22018646cfzq4frvxgb9ay97vk0d";
       libraryHaskellDepends = [ base bytestring ];
       librarySystemDepends = [ zlib ];
       doCheck = false;
       description = "Compression and decompression in the gzip and zlib formats";
       license = stdenv.lib.licenses.bsd3;
     }) {inherit (pkgs) zlib;};
  "zlib-bindings" = callPackage
    ({ mkDerivation, base, bytestring, hspec, QuickCheck, zlib }:
     mkDerivation {
       pname = "zlib-bindings";
       version = "0.1.1.5";
       sha256 = "02ciywlz4wdlymgc3jsnicz9kzvymjw1www2163gxidnz4wb8fy8";
       revision = "2";
       editedCabalFile = "0fq49694gqkab8m0vq4i879blswczwd66n7xh4r4gwiahf0ryvqc";
       libraryHaskellDepends = [ base bytestring zlib ];
       testHaskellDepends = [ base bytestring hspec QuickCheck zlib ];
       homepage = "http://github.com/snapframework/zlib-bindings";
       description = "Low-level bindings to the zlib package";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "zlib-lens" = callPackage
    ({ mkDerivation, base, bytestring, profunctors, zlib }:
     mkDerivation {
       pname = "zlib-lens";
       version = "0.1.2.1";
       sha256 = "1sv6yx7p06zk653d3rmcj0lh2rzwzfi25v9sz9n8kq4r712n79g5";
       libraryHaskellDepends = [ base bytestring profunctors zlib ];
       homepage = "http://lens.github.io/";
       description = "Lenses for zlib";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "zot" = callPackage
    ({ mkDerivation, base, monads-tf }:
     mkDerivation {
       pname = "zot";
       version = "0.0.3";
       sha256 = "0cibi8zm9v8vi4i2xdm4kpk1v2kc0sh0fc5ylsn78gwyjcdhkaf8";
       revision = "1";
       editedCabalFile = "04gsbs6fvwpjjg1f6g1j17dxlfzsci9vmirk7mwqwmm9ha0a4hxm";
       isLibrary = false;
       isExecutable = true;
       enableSeparateDataOutput = true;
       executableHaskellDepends = [ base monads-tf ];
       doHaddock = false;
       description = "Zot language";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "zstd" = callPackage
    ({ mkDerivation, base, bytestring, criterion, deepseq, ghc-prim
     , QuickCheck, test-framework, test-framework-quickcheck2, zlib
     }:
     mkDerivation {
       pname = "zstd";
       version = "0.1.0.0";
       sha256 = "1zsb8wgmd23gdzk26wf0i0q4n23qd5lagq6min7wz1yrk43q8x88";
       libraryHaskellDepends = [ base bytestring deepseq ghc-prim ];
       testHaskellDepends = [
         base bytestring QuickCheck test-framework
         test-framework-quickcheck2
       ];
       benchmarkHaskellDepends = [
         base bytestring criterion ghc-prim zlib
       ];
       doCheck = false;
       homepage = "https://github.com/facebookexperimental/hs-zstd";
       description = "Haskell bindings to the Zstandard compression algorithm";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "ztail" = callPackage
    ({ mkDerivation, array, base, bytestring, filepath, hinotify
     , process, regex-posix, time, unix, unordered-containers
     }:
     mkDerivation {
       pname = "ztail";
       version = "1.2.0.2";
       sha256 = "05vpq3kiv1xrby2k1qn41s42cxxxblcgxpnw1sgyznx63pal2hx1";
       revision = "1";
       editedCabalFile = "0d0cpgb0v849zxl12c2gkm3x4nmyfycka1pcfix43lawx62rky8s";
       isLibrary = false;
       isExecutable = true;
       executableHaskellDepends = [
         array base bytestring filepath hinotify process regex-posix time
         unix unordered-containers
       ];
       doHaddock = false;
       description = "Multi-file, colored, filtered log tailer";
       license = stdenv.lib.licenses.bsd3;
     }) {};

}
